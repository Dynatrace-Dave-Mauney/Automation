{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Dynatrace Environment API",
    "description" : "Documentation of the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/xc03k3c).\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "https://xxxxxxxx.live.dynatrace.com/api/v1",
    "variables" : { }
  } ],
  "tags" : [ {
    "name" : "Cluster version",
    "description" : "View the version of the Dynatrace server"
  }, {
    "name" : "Anonymization",
    "description" : "Remove sensitive user data from your sessions"
  }, {
    "name" : "RUM - User sessions",
    "description" : "Obtain user sessions data"
  }, {
    "name" : "Synthetic - Monitors",
    "description" : "Manage synthetic monitors"
  }, {
    "name" : "Synthetic - Locations, nodes, and configuration",
    "description" : "Manage synthetic locations and nodes"
  }, {
    "name" : "Synthetic - Third party",
    "description" : "Push third-party synthetic data to Dynatrace"
  }, {
    "name" : "Maintenance window",
    "description" : "Deprecated. Use the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:alerting.maintenance-window`."
  }, {
    "name" : "Topology & Smartscape - Application",
    "description" : "Manage applications"
  }, {
    "name" : "Topology & Smartscape - Custom device",
    "description" : "Create a custom device and push data to it"
  }, {
    "name" : "Topology & Smartscape - Host",
    "description" : "Manage hosts"
  }, {
    "name" : "Topology & Smartscape - Process",
    "description" : "Manage processes"
  }, {
    "name" : "Topology & Smartscape - Process group",
    "description" : "Manage process groups"
  }, {
    "name" : "Topology & Smartscape - Service",
    "description" : "Manage services"
  }, {
    "name" : "Problem",
    "description" : "Deprecated. Use [Problems API v2](index.jsp?urls.primaryName=Environment%20API%20v2#/Problems) instead."
  }, {
    "name" : "Threshold",
    "description" : "Deprecated. Use the new endpoint in [Configuration API](index.jsp?urls.primaryName=Configuration%20API#/Anomaly%20detection%20-%20Metric%20events)."
  }, {
    "name" : "Timeseries",
    "description" : "Manage metrics"
  }, {
    "name" : "Cluster time",
    "description" : "View the time of the Dynatrace server"
  }, {
    "name" : "Log monitoring - Hosts",
    "description" : "Manage the analysis of operating system logs"
  }, {
    "name" : "Log monitoring - Process groups",
    "description" : "Manage the analysis of process group logs"
  }, {
    "name" : "Events",
    "description" : "Deprecated. Use [Events API v2](index.jsp?urls.primaryName=Environment%20API%20v2#/Events) instead."
  }, {
    "name" : "Deployment",
    "description" : "Download OneAgent and ActiveGate installers"
  }, {
    "name" : "OneAgent on a host",
    "description" : "View OneAgent deployment information per host"
  }, {
    "name" : "Tokens",
    "description" : "Deprecated. Use the new endpoint in [Environment API v2](index.jsp?urls.primaryName=Environment%20API%20v2#/Access%20Tokens%20-%20API%20tokens)."
  }, {
    "name" : "Log monitoring - Custom devices",
    "description" : "Manage the analysis of custom device logs"
  }, {
    "name" : "RUM - JavaScript tag management",
    "description" : "Download the RUM JavaScript tag"
  } ],
  "paths" : {
    "/config/clusterversion" : {
      "get" : {
        "tags" : [ "Cluster version" ],
        "summary" : "Gets the current version of the Dynatrace server",
        "operationId" : "getVersion",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterVersion"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/deployment/installer/agent/{osType}/{installerType}/version/{version}" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Downloads OneAgent installer of the specified version",
        "description" : "For the `paas` or `paas-sh` installer types you can get a configuring installer, by passing additional parameters.",
        "operationId" : "downloadAgentInstallerWithVersion",
        "parameters" : [ {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "osType",
          "in" : "path",
          "description" : "The operating system of the installer.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "windows", "unix", "aix", "solaris", "zos" ]
          }
        }, {
          "name" : "installerType",
          "in" : "path",
          "description" : "The type of the installer: \n\n* `default`: Self-extracting installer for manual installation. Downloads an `.exe` file for Windows or an `.sh` file for Unix. \n* `default-unattended`: Self-extracting installer for unattended installation. Windows only. Downloads a `.zip` archive, containing the `.msi` installer and the batch file. This option is deprecated with OneAgent version 1.173 \n* `paas`: Code modules installer. Downloads a `*.zip` archive, containing the `manifest.json` file with meta information or a `.jar` file for z/OS. \n* `paas-sh`: Code modules installer. Downloads a self-extracting shell script with the embedded `tar.gz` archive.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default", "default-unattended", "paas", "paas-sh" ]
          }
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "The required version of the OneAgent in `1.155.275.20181112-084458` format. \n\nYou can retrieve the list of available versions with the [**GET available versions of OneAgent**](https://dt-url.net/fo23rb5) call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "flavor",
          "in" : "query",
          "description" : "The flavor of your Linux distribution: \n\n* `musl` for Linux distributions, which are using the musl C standard library, for example Alpine Linux. \n* 'multidistro` for all Linux distributions which are using musl C and glibc standard library. \n\nOnly applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "default", "multidistro", "musl" ],
            "default" : "default"
          }
        }, {
          "name" : "arch",
          "in" : "query",
          "description" : "The architecture of your OS: \n\n* `all`: Use this value for AIX and z/OS. Defaults to `x86` for other OS types. \n* `x86`: x86 architecture.\n* `ppc`: PowerPC architecture, only supported for AIX and Linux.\n* `ppcle`: PowerPC Little Endian architecture, only supported for Linux.\n* `sparc`: Sparc architecture, only supported for Solaris. \n\n* `arm`: ARM architecture, only supported for Linux. \n\n* `s390`: S/390 architecture, only supported for Linux. \n\nOnly applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "arm", "ppc", "ppcle", "s390", "sparc", "x86" ],
            "default" : "all"
          }
        }, {
          "name" : "bitness",
          "in" : "query",
          "description" : "The bitness of your OS. Must be supported by the OS. \n\n Only applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "32", "64", "all" ],
            "default" : "all"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "The code modules to be included to the installer. You can specify several modules in the following format: `include=java&include=dotnet`. \n\nOnly applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "all", "java", "apache", "nginx", "nodejs", "dotnet", "php", "go", "sdk" ],
              "default" : "All"
            }
          }
        }, {
          "name" : "skipMetadata",
          "in" : "query",
          "description" : "Set `true` to omit the OneAgent connectivity information from the installer. \n\n Only applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "networkZone",
          "in" : "query",
          "description" : "The network zone you want the result to be configured with.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The payload contains the installer file."
          },
          "304" : {
            "description" : "Not modified. You already have the latest version of the installer. The response does not contain a payload."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/orchestration/agent/{orchestrationType}/version/{version}/signature" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Downloads the requested version matching OneAgent deployment orchestration tarball's signature",
        "description" : "Downloading the requested version matching deployment orchestration tarball's signature matching the requested Orchestration Type (ansible, puppet).",
        "operationId" : "downloadAgentOrchestrationSignatureWithVersion",
        "parameters" : [ {
          "name" : "orchestrationType",
          "in" : "path",
          "description" : "The Orchestration Type of the orchestration deployment script.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ansible", "puppet" ]
          }
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "The requested version of the OneAgent deployment orchestration tarball in `0.1.0.20200925-120822` format.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The payload contains the installer file."
          },
          "304" : {
            "description" : "Not modified. You already have the latest version of the installer. The response does not contain a payload."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/orchestration/agent/{orchestrationType}/version/{version}" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Downloads the requested version matching OneAgent deployment orchestration tarball",
        "description" : "Downloading the requested version matching deployment orchestration tarball matching the requested Orchestration Type (ansible, puppet).",
        "operationId" : "downloadAgentOrchestrationWithVersion",
        "parameters" : [ {
          "name" : "orchestrationType",
          "in" : "path",
          "description" : "The Orchestration Type of the orchestration deployment script.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ansible", "puppet" ]
          }
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "The requested version of the OneAgent orchestration deployment tarball in `0.1.0.20200925-120822` format.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The payload contains the installer file."
          },
          "304" : {
            "description" : "Not modified. You already have the latest version of the installer. The response does not contain a payload."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/boshrelease/agent/{osType}/version/{version}" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Downloads BOSH release tarballs of the specified version, OneAgent included",
        "description" : "For SaaS, the call is executed on an Environment ActiveGate. Be sure to use the base of an ActiveGate, **not** the environment.",
        "operationId" : "downloadBoshReleaseWithVersion",
        "parameters" : [ {
          "name" : "osType",
          "in" : "path",
          "description" : "The operating system of the installer.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "windows", "unix" ]
          }
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "The required version of the OneAgent in the `1.155.275.20181112-084458` format. \n\nYou can retrieve the list of available versions with the [**GET available versions of BOSH tarballs**](https://dt-url.net/j703kdn) call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipMetadata",
          "in" : "query",
          "description" : "Set `true` to omit the OneAgent connectivity information from the installer. \n\n If not set, `false` is used.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "networkZone",
          "in" : "query",
          "description" : "The network zone you want the result to be configured with.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The payload contains the BOSH release tarball file."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/installer/gateway/{osType}/version/{version}" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Downloads the ActiveGate installer of the specified version",
        "operationId" : "downloadGatewayInstallerWithVersion",
        "parameters" : [ {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "osType",
          "in" : "path",
          "description" : "The operating system of the installer.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "windows", "unix" ]
          }
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "The required version of the ActiveGate installer, in `1.155.275.20181112-084458` format. \n\nYou can retrieve the list of available versions with the [**GET available versions of ActiveGate**](https://dt-url.net/kh43rha) call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "arch",
          "in" : "query",
          "description" : "The architecture of your OS: \n\n* `all`: Defaults to `amd64`. \n* `amd64`: amd64 architecture.\n* `s390`: S/390 architecture, only supported for Linux. \n\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "amd64", "s390" ],
            "default" : "all"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The payload contains the installer file."
          },
          "304" : {
            "description" : "Not modified. You already have the latest version of the installer. The response does not contain a payload."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/installer/agent/{osType}/{installerType}/latest" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Downloads the latest OneAgent installer",
        "description" : "For the `paas` or `paas-sh` installer types you can get a configuring installer, by passing additional parameters.",
        "operationId" : "downloadLatestAgentInstaller",
        "parameters" : [ {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "osType",
          "in" : "path",
          "description" : "The operating system of the installer.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "windows", "unix", "aix", "solaris", "zos" ]
          }
        }, {
          "name" : "installerType",
          "in" : "path",
          "description" : "The type of the installer: \n\n* `default`: Self-extracting installer for manual installation. Downloads an `.exe` file for Windows or an `.sh` file for Unix. \n* `default-unattended`: Self-extracting installer for unattended installation. Windows only. Downloads a `.zip` archive, containing the `.msi` installer and the batch file. This option is deprecated with OneAgent version 1.173 \n* `paas`: Code modules installer. Downloads a `*.zip` archive, containing the `manifest.json` file with meta information or a `.jar` file for z/OS. \n* `paas-sh`: Code modules installer. Downloads a self-extracting shell script with the embedded `tar.gz` archive.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default", "default-unattended", "paas", "paas-sh" ]
          }
        }, {
          "name" : "flavor",
          "in" : "query",
          "description" : "The flavor of your Linux distribution: \n\n* `musl` for Linux distributions, which are using the musl C standard library, for example Alpine Linux. \n* 'multidistro` for all Linux distributions which are using musl C and glibc standard library. \n\nOnly applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "default", "multidistro", "musl" ],
            "default" : "default"
          }
        }, {
          "name" : "arch",
          "in" : "query",
          "description" : "The architecture of your OS: \n\n* `all`: Use this value for AIX and z/OS. Defaults to `x86` for other OS types. \n* `x86`: x86 architecture.\n* `ppc`: PowerPC architecture, only supported for AIX and Linux.\n* `ppcle`: PowerPC Little Endian architecture, only supported for Linux.\n* `sparc`: Sparc architecture, only supported for Solaris. \n\n* `arm`: ARM architecture, only supported for Linux. \n\n* `s390`: S/390 architecture, only supported for Linux. \n\nOnly applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "arm", "ppc", "ppcle", "s390", "sparc", "x86" ],
            "default" : "all"
          }
        }, {
          "name" : "bitness",
          "in" : "query",
          "description" : "The bitness of your OS. Must be supported by the OS. \n\n Only applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "32", "64", "all" ],
            "default" : "all"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "The code modules to be included to the installer. You can specify several modules in the following format: `include=java&include=dotnet`. \n\nOnly applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "all", "java", "apache", "nginx", "nodejs", "dotnet", "php", "go", "sdk" ],
              "default" : "All"
            }
          }
        }, {
          "name" : "skipMetadata",
          "in" : "query",
          "description" : "Set `true` to omit the OneAgent connectivity information from the installer. \n\n Only applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "networkZone",
          "in" : "query",
          "description" : "The network zone you want the result to be configured with.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The payload contains the installer file."
          },
          "304" : {
            "description" : "Not modified. You already have the latest version of the installer. The response does not contain a payload."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/orchestration/agent/{orchestrationType}/latest" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Downloads the latest OneAgent deployment orchestration tarball",
        "description" : "Downloading the latest available deployment orchestration script tarball matching the requested Orchestration Type (ansible, puppet).",
        "operationId" : "downloadLatestAgentOrchestration",
        "parameters" : [ {
          "name" : "orchestrationType",
          "in" : "path",
          "description" : "The Orchestration Type of the orchestration deployment script.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ansible", "puppet" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The payload contains the installer file."
          },
          "304" : {
            "description" : "Not modified. You already have the latest version of the installer. The response does not contain a payload."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/orchestration/agent/{orchestrationType}/latest/signature" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Downloads the latest OneAgent deployment orchestration tarball's signature",
        "description" : "Downloading the latest available deployment orchestration tarball's sigature matching the requested Orchestration Type (ansible, puppet).",
        "operationId" : "downloadLatestAgentOrchestrationSignature",
        "parameters" : [ {
          "name" : "orchestrationType",
          "in" : "path",
          "description" : "The Orchestration Type of the orchestration deployment script.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ansible", "puppet" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The payload contains the installer file."
          },
          "304" : {
            "description" : "Not modified. You already have the latest version of the installer. The response does not contain a payload."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/installer/gateway/{osType}/latest" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Downloads the configured standard ActiveGate installer of the latest version for the specified OS",
        "operationId" : "downloadLatestGatewayInstaller",
        "parameters" : [ {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "osType",
          "in" : "path",
          "description" : "The operating system of the installer.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "windows", "unix" ]
          }
        }, {
          "name" : "arch",
          "in" : "query",
          "description" : "The architecture of your OS: \n\n* `all`: Defaults to `amd64`. \n* `amd64`: amd64 architecture.\n* `s390`: S/390 architecture, only supported for Linux. \n\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "amd64", "s390" ],
            "default" : "all"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The payload contains the installer file."
          },
          "304" : {
            "description" : "Not modified. You already have the latest version of the installer. The response does not contain a payload."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/installer/gateway/versions/{osType}" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Lists all available versions of ActiveGate installer",
        "operationId" : "getActiveGateInstallerAvailableVersions",
        "parameters" : [ {
          "name" : "osType",
          "in" : "path",
          "description" : "The operating system of the installer.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "windows", "unix" ]
          }
        }, {
          "name" : "arch",
          "in" : "query",
          "description" : "The architecture of your OS: \n\n* `all`: Defaults to `amd64`. \n* `amd64`: amd64 architecture.\n* `s390`: S/390 architecture, only supported for Linux. \n\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "amd64", "s390" ],
            "default" : "all"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The payload contains the available versions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateInstallerVersions"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. See the response body for details."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/installer/gateway/connectioninfo" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Gets the connectivity information for Environment ActiveGate",
        "operationId" : "getActiveGateInstallerConnectionInfo",
        "parameters" : [ {
          "name" : "networkZone",
          "in" : "query",
          "description" : "The network zone you want the result to be configured with.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateConnectionInfo"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/installer/agent/versions/{osType}/{installerType}" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Lists all available versions of OneAgent installer",
        "operationId" : "getAgentInstallerAvailableVersions",
        "parameters" : [ {
          "name" : "osType",
          "in" : "path",
          "description" : "The operating system of the installer.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "windows", "unix", "aix", "solaris", "zos" ]
          }
        }, {
          "name" : "installerType",
          "in" : "path",
          "description" : "The type of the installer: \n\n* `default`: Self-extracting installer for manual installation. Downloads an `.exe` file for Windows or an `.sh` file for Unix. \n* `default-unattended`: Self-extracting installer for unattended installation. Windows only. Downloads a `.zip` archive, containing the `.msi` installer and the batch file. This option is deprecated with OneAgent version 1.173 \n* `paas`: Code modules installer. Downloads a `*.zip` archive, containing the `manifest.json` file with meta information or a `.jar` file for z/OS. \n* `paas-sh`: Code modules installer. Downloads a self-extracting shell script with the embedded `tar.gz` archive.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default", "default-unattended", "paas", "paas-sh" ]
          }
        }, {
          "name" : "flavor",
          "in" : "query",
          "description" : "The flavor of your Linux distribution: \n\n* `musl` for Linux distributions, which are using the musl C standard library, for example Alpine Linux. \n* 'multidistro` for all Linux distributions which are using musl C and glibc standard library. \n\nOnly applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "default", "multidistro", "musl" ],
            "default" : "default"
          }
        }, {
          "name" : "arch",
          "in" : "query",
          "description" : "The architecture of your OS: \n\n* `all`: Use this value for AIX and z/OS. Defaults to `x86` for other OS types. \n* `x86`: x86 architecture.\n* `ppc`: PowerPC architecture, only supported for AIX and Linux.\n* `ppcle`: PowerPC Little Endian architecture, only supported for Linux.\n* `sparc`: Sparc architecture, only supported for Solaris. \n\n* `arm`: ARM architecture, only supported for Linux. \n\n* `s390`: S/390 architecture, only supported for Linux. \n\nOnly applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "arm", "ppc", "ppcle", "s390", "sparc", "x86" ],
            "default" : "all"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The payload contains the available versions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentInstallerVersions"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/installer/agent/connectioninfo" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Gets the connectivity information for OneAgent",
        "operationId" : "getAgentInstallerConnectionInfo",
        "parameters" : [ {
          "name" : "networkZone",
          "in" : "query",
          "description" : "The network zone you want the result to be configured with.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "The version of the OneAgent for which you're requesting connectivity information, in the `1.221` format. \n\nSet this parameter to get the best format of endpoint list for optimal performance.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionInfo"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/installer/agent/connectioninfo/endpoints" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Gets the list of the ActiveGate-Endpoints to be used for Agents ordered by networkzone-priorities.",
        "description" : "Highest priority first, separated by a semicolon.If no network zone provided the default zone is used. Responds with 404 if network zone is not known.",
        "operationId" : "getAgentInstallerConnectionInfoEndpoints",
        "parameters" : [ {
          "name" : "networkZone",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/installer/agent/{osType}/{installerType}/latest/metainfo" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Gets the latest available version of a OneAgent installer",
        "description" : "If a [standard version](https://dt-url.net/ml03yye) is configured, then this is the downloaded version. \n\nNon-required parameters are only applicable to the `paas` and `paas-sh` installer types.",
        "operationId" : "getAgentInstallerMetaInfo",
        "parameters" : [ {
          "name" : "osType",
          "in" : "path",
          "description" : "The operating system of the installer.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "windows", "unix", "aix", "solaris", "zos" ]
          }
        }, {
          "name" : "installerType",
          "in" : "path",
          "description" : "The type of the installer: \n\n* `default`: Self-extracting installer for manual installation. Downloads an `.exe` file for Windows or an `.sh` file for Unix. \n* `default-unattended`: Self-extracting installer for unattended installation. Windows only. Downloads a `.zip` archive, containing the `.msi` installer and the batch file. This option is deprecated with OneAgent version 1.173 \n* `paas`: Code modules installer. Downloads a `*.zip` archive, containing the `manifest.json` file with meta information or a `.jar` file for z/OS. \n* `paas-sh`: Code modules installer. Downloads a self-extracting shell script with the embedded `tar.gz` archive.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default", "default-unattended", "paas", "paas-sh" ]
          }
        }, {
          "name" : "flavor",
          "in" : "query",
          "description" : "The flavor of your Linux distribution: \n\n* `musl` for Linux distributions, which are using the musl C standard library, for example Alpine Linux. \n* 'multidistro` for all Linux distributions which are using musl C and glibc standard library. \n\nOnly applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "default", "multidistro", "musl" ],
            "default" : "default"
          }
        }, {
          "name" : "arch",
          "in" : "query",
          "description" : "The architecture of your OS: \n\n* `all`: Use this value for AIX and z/OS. Defaults to `x86` for other OS types. \n* `x86`: x86 architecture.\n* `ppc`: PowerPC architecture, only supported for AIX and Linux.\n* `ppcle`: PowerPC Little Endian architecture, only supported for Linux.\n* `sparc`: Sparc architecture, only supported for Solaris. \n\n* `arm`: ARM architecture, only supported for Linux. \n\n* `s390`: S/390 architecture, only supported for Linux. \n\nOnly applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "arm", "ppc", "ppcle", "s390", "sparc", "x86" ],
            "default" : "all"
          }
        }, {
          "name" : "bitness",
          "in" : "query",
          "description" : "The bitness of your OS. Must be supported by the OS. \n\n Only applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "32", "64", "all" ],
            "default" : "all"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstallerMetaInfoDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/installer/agent/{osType}/{installerType}/version/{version}/checksum" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Gets the checksum of the specified OneAgent installer",
        "description" : "The checksum is the sha256 hash of the installer file.",
        "operationId" : "getAgentInstallerWithVersionChecksum",
        "parameters" : [ {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "osType",
          "in" : "path",
          "description" : "The operating system of the installer.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "windows", "unix", "aix", "solaris", "zos" ]
          }
        }, {
          "name" : "installerType",
          "in" : "path",
          "description" : "The type of the installer.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "paas" ]
          }
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "The required version of the OneAgent in `1.155.275.20181112-084458` format. \n\nYou can retrieve the list of available versions with the [**GET available versions of OneAgent**](https://dt-url.net/fo23rb5) call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "flavor",
          "in" : "query",
          "description" : "The flavor of your Linux distribution: \n\n* `musl` for Linux distributions, which are using the musl C standard library, for example Alpine Linux. \n* 'multidistro` for all Linux distributions which are using musl C and glibc standard library. \n\nOnly applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "default", "multidistro", "musl" ],
            "default" : "default"
          }
        }, {
          "name" : "arch",
          "in" : "query",
          "description" : "The architecture of your OS: \n\n* `all`: Use this value for AIX and z/OS. Defaults to `x86` for other OS types. \n* `x86`: x86 architecture.\n* `ppc`: PowerPC architecture, only supported for AIX and Linux.\n* `ppcle`: PowerPC Little Endian architecture, only supported for Linux.\n* `sparc`: Sparc architecture, only supported for Solaris. \n\n* `arm`: ARM architecture, only supported for Linux. \n\n* `s390`: S/390 architecture, only supported for Linux. \n\nOnly applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "arm", "ppc", "ppcle", "s390", "sparc", "x86" ],
            "default" : "all"
          }
        }, {
          "name" : "bitness",
          "in" : "query",
          "description" : "The bitness of your OS. Must be supported by the OS. \n\n Only applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "string",
            "enum" : [ "32", "64", "all" ],
            "default" : "all"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "The code modules to be included to the installer. You can specify several modules in the following format: `include=java&include=dotnet`. \n\nOnly applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "all", "java", "apache", "nginx", "nodejs", "dotnet", "php", "go", "sdk" ],
              "default" : "All"
            }
          }
        }, {
          "name" : "skipMetadata",
          "in" : "query",
          "description" : "Set `true` to omit the OneAgent connectivity information from the installer. \n\n Only applicable to the `paas` and `paas-sh` installer types.",
          "schema" : {
            "type" : "boolean",
            "enum" : [ true ],
            "default" : false
          }
        }, {
          "name" : "networkZone",
          "in" : "query",
          "description" : "The network zone you want the result to be configured with.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The payload contains the installer file.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OneAgentInstallerChecksum"
                }
              }
            }
          },
          "304" : {
            "description" : "Not modified. You already have the latest OneAgent installed."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/installer/agent/processmoduleconfig" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Gets the latest process module config | maturity=EARLY_ADOPTER",
        "description" : "Returns the latest process module config. Passing a previously gotten revision will first do a revision check, and return a 304 response if no changes were detected.",
        "operationId" : "getAgentProcessModuleConfig",
        "parameters" : [ {
          "name" : "revision",
          "in" : "query",
          "description" : "The previously received revision to compare against.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentProcessModuleConfigResponse"
                }
              }
            }
          },
          "304" : {
            "description" : "Not modified."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/boshrelease/versions/{osType}" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Gets the list of available OneAgent versions for BOSH release tarballs",
        "operationId" : "getBoshReleaseAvailableVersions",
        "parameters" : [ {
          "name" : "osType",
          "in" : "path",
          "description" : "The operating system of the installer.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "windows", "unix" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BoshReleaseAvailableVersions"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/boshrelease/agent/{osType}/version/{version}/checksum" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Gets the checksum of the specified BOSH release tarball",
        "description" : "The checksum is the sha256 hash of the installer file. \n\nResult is not stable if **skipMetadata** is set to `false`.\n\nFor SaaS only works on environment ActiveGates version 1.176 or higher",
        "operationId" : "getBoshReleaseChecksum",
        "parameters" : [ {
          "name" : "osType",
          "in" : "path",
          "description" : "The operating system of the installer.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "windows", "unix" ]
          }
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "The required version of the OneAgent in the `1.155.275.20181112-084458` format. \n\nYou can retrieve the list of available versions with the [**GET available versions of BOSH tarballs**](https://dt-url.net/j703kdn) call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipMetadata",
          "in" : "query",
          "description" : "Set `true` to omit the OneAgent connectivity information from the installer. \n\n If not set, `false` is used.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "networkZone",
          "in" : "query",
          "description" : "The network zone you want the result to be configured with.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BoshReleaseChecksum"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/deployment/lambda/agent/latest" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Get the latest version names of the OneAgent for AWS Lambda",
        "description" : "Get the latest version names of the OneAgent for the Java, Node.js, and Python AWS Lambda runtime.",
        "operationId" : "getLatestLambdaBuildUnits",
        "responses" : {
          "200" : {
            "description" : "Success. The payload contains the available versions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LatestLambdaLayerNames"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`InstallerDownload` (PaaS integration - Installer download)" ]
      }
    },
    "/anonymize/anonymizationJobs" : {
      "put" : {
        "tags" : [ "Anonymization" ],
        "summary" : "Creates user session anonymization job",
        "description" : "The job anonymizes all user sessions in the specified timeframe by masking the specified fields. \n\nTo identify user sessions to be anonymized you can specify either userID, or IP address, or both. If you specify both the **OR** logic applies. \n\nYou can't undo the anonymization.",
        "operationId" : "anonymize",
        "parameters" : [ {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the user session to anonymize, in UTC milliseconds.\n\n If not set the earliest available time is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "default" : 0
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the user session to anonymize, in UTC milliseconds.\n\n If not set the current time is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "default" : 0
          }
        }, {
          "name" : "userIds",
          "in" : "query",
          "description" : "The UserID of the user to anonymize. \n\n You can specify several IDs, in the following format: `userIds=user1&userIds=user2`.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "ips",
          "in" : "query",
          "description" : "The IP address of the user to anonymize. All user sessions from this IP will be anonymized. \n\nYou can specify several IPs, in the following format: `ips=ip1&ips=ip2`.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "additionalField",
          "in" : "query",
          "description" : "A list of fields to be anonymized. \n\nYou can specify several fields, in the following format: `additionalField=field1&additionalField=field2`.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ip", "content", "country", "region", "city", "userId", "isp", "stringProperties", "longProperties", "doubleProperties", "dateProperties", "carrier", "userActions.name", "userActions.domain", "userActions.targetUrl", "userActions.syntheticEvent", "userActions.stringProperties", "userActions.longProperties", "userActions.doubleProperties", "userActions.dateProperties", "events.name", "events.domain", "events.page", "events.pageGroup", "events.pageReferrer", "events.pageReferrerGroup" ]
            },
            "enum" : [ "ip", "content", "country", "region", "city", "userId", "isp", "stringProperties", "longProperties", "doubleProperties", "dateProperties", "carrier", "userActions.name", "userActions.domain", "userActions.targetUrl", "userActions.syntheticEvent", "userActions.stringProperties", "userActions.longProperties", "userActions.doubleProperties", "userActions.dateProperties", "events.name", "events.domain", "events.page", "events.pageGroup", "events.pageReferrer", "events.pageReferrerGroup" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response body contains the ID of the anonymization job. You can use the ID to check the job status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnonymizationIdResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid. See the response body for details."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`UserSessionAnonymization` (Anonymize user session data for data privacy reasons)" ]
      }
    },
    "/anonymize/anonymizationJobs/{requestId}" : {
      "get" : {
        "tags" : [ "Anonymization" ],
        "summary" : "Shows the progress of the specified anonymization job",
        "operationId" : "getStatus",
        "parameters" : [ {
          "name" : "requestId",
          "in" : "path",
          "description" : "The ID of the required anonymization job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response body contains the status of the anonymization job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnonymizationProgressResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid. See the response body for details."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`UserSessionAnonymization` (Anonymize user session data for data privacy reasons)" ]
      }
    },
    "/userSessionQueryLanguage/table" : {
      "get" : {
        "tags" : [ "RUM - User sessions" ],
        "summary" : "Returns the result of the query as a table structure",
        "description" : "The result is a flat list of rows containing the requested columns.",
        "operationId" : "getDTAQLResultAsTable",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "The user session query to be executed. See [USQL documentation page](https://dt-url.net/dtusql) for syntax details. \n\n You can find the available columns of the **usersession** table in the `UserSession` object. \n\n Here is an example of the query: `SELECT country, city, COUNT(*) FROM usersession GROUP BY country, city`.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the query, in UTC milliseconds. \n\nIf not set or set as `0`, 2 hours behind the current time is used.\n\n If the exact times are important, set the timeframe in the query itself (**query** parameter).",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the query, in UTC milliseconds. \n\nIf not set or set as `0`, the current timestamp is used.\n\n If the exact times are important, set the timeframe in the query itself (**query** parameter).",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offsetUTC",
          "in" : "query",
          "description" : "Optional offset of local time to UTC time in minutes. Offset will be applied to Date fields encountered in the query. \n\nCan be positive or negative. E.g. if the local time is UTC+02:00, the timeOffset is 120. If it is UTC-05:00, timeOffset is -300.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Optional limit on how many of the actual query results should be returned in the tabular result.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageOffset",
          "in" : "query",
          "description" : "Optional offset of the requested results from the start of tabular results. Relates to pageSize. \n\nE.g. on a query that might return 500 results, you might want to receive results in chunks of 50 rows. \n\nthis can be achieved by using pageSize=50, and setting pageOffset in subsequent calls.In the example adding pageOffset=50 returns result rows 51-100.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "addDeepLinkFields",
          "in" : "query",
          "description" : "Add (`true`) to enable deep linking of additional fields in the query. \n\nIf not set, then `false` is used",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "explain",
          "in" : "query",
          "description" : "Add (`true`) or don't add (`false`) some additional information about the result to the response. \n\nIt helps to understand the query and how the result was calculated. \n\nIf not set, then `false` is used",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the result of the query.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DtaqlResultAsTable"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The query is missing."
          },
          "404" : {
            "description" : "Failed. The query is invalid. See the response body for more information."
          },
          "199" : {
            "description" : "The data structure of the user session. This response code is never returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserSession"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DTAQLAccess` (User sessions)" ]
      }
    },
    "/userSessionQueryLanguage/tree" : {
      "get" : {
        "tags" : [ "RUM - User sessions" ],
        "summary" : "Returns the result of the query as a tree structure",
        "description" : "To get a proper tree structure, you need to specify grouping in the query.",
        "operationId" : "getDTAQLResultAsTree",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "The user session query to be executed. See [USQL documentation page](https://dt-url.net/dtusql) for syntax details. \n\n You can find the available columns of the **usersession** table in the `UserSession` object. \n\n Here is an example of the query: `SELECT country, city, COUNT(*) FROM usersession GROUP BY country, city`.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the query, in UTC milliseconds. \n\nIf not set or set as `0`, 2 hours behind the current time is used.\n\n If the exact times are important, set the timeframe in the query itself (**query** parameter).",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the query, in UTC milliseconds. \n\nIf not set or set as `0`, the current timestamp is used.\n\n If the exact times are important, set the timeframe in the query itself (**query** parameter).",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offsetUTC",
          "in" : "query",
          "description" : "Optional offset of local time to UTC time in minutes. Offset will be applied to Date fields encountered in the query. \n\nCan be positive or negative. E.g. if the local time is UTC+02:00, the timeOffset is 120. If it is UTC-05:00, timeOffset is -300.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "addDeepLinkFields",
          "in" : "query",
          "description" : "Add (`true`) to enable deep linking of additional fields in the query. \n\nIf not set, then `false` is used",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "explain",
          "in" : "query",
          "description" : "Add (`true`) or don't add (`false`) some additional information about the result to the response. \n\nIt helps to understand the query and how the result was calculated. \n\nIf not set, then `false` is used",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the result of the query.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DtaqlResultAsTree"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The query is missing."
          },
          "404" : {
            "description" : "Failed. The query is invalid. See the response body for more information."
          },
          "199" : {
            "description" : "The data structure of the user session. This response code is never returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserSession"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DTAQLAccess` (User sessions)" ]
      }
    },
    "/events/{eventId}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Gets the parameters of the specified event",
        "operationId" : "getEventById",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "The ID of the required event.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventRestEntry"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/events" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Lists all the events of your environment, along with their parameters",
        "description" : "Because the possible number of events can be huge, the response is limited to 150 events. You can focus the output by specifying filtering parameters for the request.\n\nAn event is included in the response, if either start or end timestamp of the event is within the defined timeframe.",
        "operationId" : "queryEvents",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "Start timestamp of the query, in UTC milliseconds. \n\n If not set, 30 days ago from now is used, unless **relativeTime** is set.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "End timestamp of the query, in UTC milliseconds. \n\n If not set, the current timestamp is used, unless **relativeTime** is set. \n\nThe timeframe must not exceed 2 years.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "relativeTime",
          "in" : "query",
          "description" : "Relative timeframe, back from the current time.",
          "schema" : {
            "type" : "string",
            "enum" : [ "10mins", "15mins", "2hours", "30mins", "3days", "5mins", "6hours", "day", "hour", "min", "month", "week" ]
          }
        }, {
          "name" : "eventType",
          "in" : "query",
          "description" : "Filters the resulting set of events by the event type.",
          "schema" : {
            "type" : "string",
            "enum" : [ "APPLICATION_JS_FRAMEWORK_DETECTED", "APPLICATION_OVERLOAD_PREVENTION", "AVAILABILITY_EVENT", "CONNECTION_LOST", "CPU_SATURATED", "CUSTOM_ALERT", "CUSTOM_ANNOTATION", "CUSTOM_APPLICATION_OVERLOAD_PREVENTION", "CUSTOM_APP_CRASH_RATE_INCREASED", "CUSTOM_CONFIGURATION", "CUSTOM_DEPLOYMENT", "CUSTOM_INFO", "DATABASE_CONNECTION_FAILURE", "DEPLOYMENT_CHANGED_CHANGE", "DEPLOYMENT_CHANGED_NEW", "DEPLOYMENT_CHANGED_REMOVED", "DYNATRACE_INTERNAL", "EBS_VOLUME_HIGH_LATENCY", "ELASTIC_LOAD_BALANCER_HIGH_BACKEND_FAILURE_RATE", "ELASTIC_LOAD_BALANCER_HIGH_FAILURE_RATE", "ELASTIC_LOAD_BALANCER_HIGH_UNHEALTHY_HOST_RATE", "ERROR_EVENT", "ESXI_HOST_VM_MOTION_ARRIVED", "ESXI_HOST_VM_MOTION_LEFT", "ESXI_HOST_VM_STARTED", "ESXI_START", "ESXI_VM_DISCONNECTED", "ESXI_VM_MOTION", "ESXI_VM_POWER_OFF", "ESXI_VM_START", "FAILURE_RATE_INCREASED", "HIGH_CONNECTIVITY_FAILURES", "HIGH_DROPPED_PACKETS_RATE", "HIGH_GC_ACTIVITY", "HIGH_LATENCY", "HIGH_NETWORK_ERROR_RATE", "HIGH_NETWORK_LOSS_RATE", "HIGH_NETWORK_UTILIZATION", "HOST_CONNECTION_FAILED", "HOST_CONNECTION_LOST", "HOST_DATASTORE_LOW_DISK_SPACE", "HOST_DISK_LOW_INODES", "HOST_GRACEFULLY_SHUTDOWN", "HOST_LOG_AVAILABILITY", "HOST_LOG_ERROR", "HOST_LOG_MATCHED", "HOST_LOG_PERFORMANCE", "HOST_MAINTENANCE", "HOST_NO_CONNECTION", "HOST_OF_SERVICE_UNAVAILABLE", "HOST_SHUTDOWN", "HOST_TIMEOUT", "HTTP_CHECK_GLOBAL_OUTAGE", "HTTP_CHECK_LOCAL_OUTAGE", "HTTP_CHECK_TEST_LOCATION_SLOWDOWN", "INSUFFICIENT_DISK_QUEUE_DEPTH", "JAVASCRIPT_ERROR_RATE_INCREASED", "LAMBDA_FUNCTION_HIGH_ERROR_RATE", "LOG_AVAILABILITY", "LOG_ERROR", "LOG_MATCHED", "LOG_PERFORMANCE", "LOW_DISK_SPACE", "LOW_STORAGE_SPACE", "MARKED_FOR_TERMINATION", "MEMORY_RESOURCES_EXHAUSTED", "MEMORY_SATURATED", "MOBILE_APPLICATION_OVERLOAD_PREVENTION", "MOBILE_APP_CRASH_RATE_INCREASED", "MONITORING_UNAVAILABLE", "OPENSTACK_HOST_VM_SHUTDOWN", "OPENSTACK_HOST_VM_STARTED", "OPENSTACK_KEYSTONE_SLOW", "OPENSTACK_KEYSTONE_UNHEALTHY", "OPENSTACK_VM_LAUNCH_FAILED", "OPENSTACK_VM_MOTION", "OSI_DOCKER_DEVICEMAPPER_LOW_DATA_SPACE", "OSI_DOCKER_DEVICEMAPPER_LOW_METADATA_SPACE", "OVERLOADED_STORAGE", "PERFORMANCE_EVENT", "PGI_CRASHED_INFO", "PGI_HAPROXY_QUEUED_REQUESTS_HIGH", "PGI_HAPROXY_SESSION_USAGE_HIGH", "PGI_LOG_MATCHED", "PGI_MEMDUMP", "PGI_MYSQL_SLOW_QUERIES_RATE_HIGH", "PGI_OF_SERVICE_UNAVAILABLE", "PGI_RMQ_HIGH_FILE_DESC_USAGE", "PGI_RMQ_HIGH_MEM_USAGE", "PGI_RMQ_HIGH_PROCESS_USAGE", "PGI_RMQ_HIGH_SOCKETS_USAGE", "PGI_RMQ_LOW_DISK_SPACE", "PROCESS_CRASHED", "PROCESS_CUSTOM_AVAILABILITY", "PROCESS_CUSTOM_ERROR", "PROCESS_CUSTOM_PERFORMANCE", "PROCESS_GROUP_LOW_INSTANCE_COUNT", "PROCESS_LOG_AVAILABILITY", "PROCESS_LOG_ERROR", "PROCESS_LOG_PERFORMANCE", "PROCESS_RESTART", "PROCESS_UNAVAILABLE", "RDS_AZ_FAILOVER_COMPLETED", "RDS_AZ_FAILOVER_STARTED", "RDS_BACKUP_COMPLETED", "RDS_BACKUP_STARTED", "RDS_OF_SERVICE_UNAVAILABLE", "RDS_RESTART", "RDS_RESTART_SEQUENCE", "RESOURCE_CONTENTION", "SERVICE_RESPONSE_TIME_DEGRADED", "SLOW_DISK", "SYNTHETIC_AVAILABILITY", "SYNTHETIC_NODE_OUTAGE", "SYNTHETIC_PRIVATE_LOCATION_OUTAGE", "SYNTHETIC_SLOWDOWN", "THREADS_RESOURCES_EXHAUSTED", "UNEXPECTED_HIGH_LOAD", "UNEXPECTED_LOW_LOAD", "USER_ACTION_DURATION_DEGRADATION", "VIRTUAL_MACHINE_SHUTDOWN", "WEB_CHECK_GLOBAL_OUTAGE", "WEB_CHECK_LOCAL_OUTAGE" ]
          }
        }, {
          "name" : "entityId",
          "in" : "query",
          "description" : "Filters the resulting set of events to the events, related to the specified Dynatrace entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cursor",
          "in" : "query",
          "description" : "The response is limited to 150 events, so if you want to receive more you can use the cursor to get the next 150. This parameter should be empty when querying for the first time.  \n\nThe cursor key can then be found in the **nextCursor** field of the previous response. \n\nWhen using the cursor string, it is not necessary to specify the additional parameters, as that info is already encoded within the cursor.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventQueryResult"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      },
      "post" : {
        "tags" : [ "Events" ],
        "summary" : "Pushes custom events to one or more monitored entities",
        "description" : "You can use this endpoint to: \n\n* Push information-only events from third-party systems such as CI platforms (Jenkins, Bamboo, Electric Cloud, etc.) to provide additional information for Dynatrace automated root cause analysis. The time of event closure is already known and the event IDs are returned instantly. You can report these events for up to **30 days** into the past. The information-only event types are: \n`CUSTOM_ANNOTATION` \n `CUSTOM_CONFIGURATION` \n `CUSTOM_DEPLOYMENT` \n `CUSTOM_INFO` \n `MARKED_FOR_TERMINATION` \n\n* Push problem-opening events (for example, an error rate increase) to trigger the Dynatrace automated root cause analysis engine.  Correlation IDs are returned instead of event IDs. These events stay open until the specified timeout expires. To prevent expiration, you can refresh these events by sending the same payload again. You can report these events for up to **60 minutes** into the past. The problem-opening event types are (sorted by severity level, descending): \n`AVAILABILITY_EVENT` \n `ERROR_EVENT` \n `PERFORMANCE_EVENT` \n `RESOURCE_CONTENTION` \n\nThe actual set of event parameters depends on the type of your event. To find the parameters mapping, see [POST an event](https://dt-url.net/1v63r77) in Dynatrace Documentation.",
        "operationId" : "postEvent",
        "requestBody" : {
          "description" : "The JSON body of the request, containing parameters of the event.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventCreation"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventStoreResult"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/synthetic/ext/events" : {
      "post" : {
        "tags" : [ "Synthetic - Third party" ],
        "summary" : "Pushes third-party synthetic events to Dynatrace",
        "operationId" : "pushEvents",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains third-party synthetic events.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/3rdPartySyntheticEvents"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The information is accepted and stored."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/synthetic/ext/stateModifications" : {
      "post" : {
        "tags" : [ "Synthetic - Third party" ],
        "summary" : "Modifies the operation state of all third-party monitors",
        "operationId" : "pushStateModification",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains new operational status of third-party synthetic monitors.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateModification"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The state of third-party monitors has been changed."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/synthetic/ext/tests" : {
      "post" : {
        "tags" : [ "Synthetic - Third party" ],
        "summary" : "Pushes third-party synthetic monitors, locations, and results to Dynatrace",
        "operationId" : "testResults",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains third-party synthetic monitors, locations, and results.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/3rdPartySyntheticTests"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The information is accepted and stored."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/rum/appRevision/{entity}" : {
      "get" : {
        "tags" : [ "RUM - JavaScript tag management" ],
        "summary" : "Gets the version of the RUM JavaScript code injected into specified application",
        "operationId" : "getAppRevision",
        "parameters" : [ {
          "name" : "entity",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the application. \n\nYou can obtain it from the response of the [GET the list of manually injected applications](https://dt-url.net/dl03sgo) call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "1539600997135"
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`RumJavaScriptTagManagement` (Real user monitoring JavaScript tag management)" ]
      }
    },
    "/rum/asyncCS/{entity}" : {
      "get" : {
        "tags" : [ "RUM - JavaScript tag management" ],
        "summary" : "Downloads the asynchronous code snippet",
        "description" : "This code provides configuration and basic code to be manually inserted into your web application code.\n\n The full functionality of the monitoring code is loaded asynchronously.",
        "operationId" : "getAsyncCodeSnippet",
        "parameters" : [ {
          "name" : "entity",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the application. \n\nYou can obtain it from the response of the [GET the list of manually injected applications](https://dt-url.net/dl03sgo) call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "<script type=\"text/javascript\"> <truncated> </script>"
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`RumJavaScriptTagManagement` (Real user monitoring JavaScript tag management)" ]
      }
    },
    "/rum/jsInlineScript/{entity}" : {
      "get" : {
        "tags" : [ "RUM - JavaScript tag management" ],
        "summary" : "Downloads inline code",
        "description" : "Returns the inline code of the most recent OneAgent JavaScript. This is a complete configuration and monitoring code to be manually inserted into your web application code.",
        "operationId" : "getJsInlineScript",
        "parameters" : [ {
          "name" : "entity",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the application. \n\nYou can obtain it from the response of the [GET the list of manually injected applications](https://dt-url.net/dl03sgo) call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "<script type=\"text/javascript\"> <truncated> </script>"
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`RumJavaScriptTagManagement` (Real user monitoring JavaScript tag management)" ]
      }
    },
    "/rum/jsLatestVersion" : {
      "get" : {
        "tags" : [ "RUM - JavaScript tag management" ],
        "summary" : "Gets the latest version of OneAgent JavaScript library",
        "operationId" : "getJsLatestVersion",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "10156181011154332"
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`RumJavaScriptTagManagement` (Real user monitoring JavaScript tag management)" ]
      }
    },
    "/rum/jsTag/{entity}" : {
      "get" : {
        "tags" : [ "RUM - JavaScript tag management" ],
        "summary" : "Downloads OneAgent JavaScript tag",
        "description" : "Returns the OneAgent JavaScript tag. This is a complete configuration and monitoring code to be manually inserted into your web application code.\n\n The monitoring code is loaded as a separate file from a CDN.",
        "operationId" : "getJsScript",
        "parameters" : [ {
          "name" : "entity",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the application. \n\nYou can obtain it from the response of the [GET the list of manually injected applications](https://dt-url.net/dl03sgo) call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "<script type=\"text/javascript\" src=\"https://mySampleEnv.live.dynatrace.com/jstag/1468ae7109d/ruxitagent_ICA27SVfgqrx_10156181011154332.js\"\ndata-dtconfig=\"app=bbfa55551d507e2b|cors=1|bp2=1|featureHash=ICA27SVfgqrx|reportUrl=https://mySampleEnv.live.dynatrace.com/bf|rdnt=1|bp=2|srms=1,1,,,|dpvc=1|srad=1|lastModification=0|dtVersion=10156181011154332|tp=500,50,0,1\"\ncrossorigin=\"anonymous\"></script>"
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`RumJavaScriptTagManagement` (Real user monitoring JavaScript tag management)" ]
      }
    },
    "/rum/jsTagComplete/{entity}" : {
      "get" : {
        "tags" : [ "RUM - JavaScript tag management" ],
        "summary" : "Downloads JavaScript tag",
        "description" : "Returns a JavaScript tag to be manually inserted into your web application code. The tag references a JavaScript file with full configuration and monitoring code, which causes a lower possible caching duration.",
        "operationId" : "getJsTagComplete",
        "parameters" : [ {
          "name" : "entity",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the application. \n\nYou can obtain it from the response of the [GET the list of manually injected applications](https://dt-url.net/dl03sgo) call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "<script type=\"text/javascript\" src=\"https://mySampleEnv.live.dynatrace.com/jstag/1468ae7109d/bf79563wis/37c3a000d8cbd913_complete.js\" crossorigin=\"anonymous\"></script>"
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`RumJavaScriptTagManagement` (Real user monitoring JavaScript tag management)" ]
      }
    },
    "/rum/manualApps" : {
      "get" : {
        "tags" : [ "RUM - JavaScript tag management" ],
        "summary" : "Lists all manually injected applications",
        "operationId" : "getManualApps",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ManualApplication"
                  }
                },
                "example" : [ {
                  "applicationId" : "APPLICATION-C15B48CBCADC863B",
                  "displayName" : "manually injected application",
                  "monitoringEnabled" : true,
                  "revision" : 1456380804910
                } ]
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`RumJavaScriptTagManagement` (Real user monitoring JavaScript tag management)" ]
      }
    },
    "/rum/syncCS/{entity}" : {
      "get" : {
        "tags" : [ "RUM - JavaScript tag management" ],
        "summary" : "Downloads the synchronous code snippet",
        "description" : "This code provides configuration and basic code to be manually inserted into your web application code.\n\n The full functionality of the monitoring code is loaded synchronously.",
        "operationId" : "getSyncCodeSnippet",
        "parameters" : [ {
          "name" : "entity",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the application. \n\nYou can obtain it from the response of the [GET the list of manually injected applications](https://dt-url.net/dl03sgo) call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                },
                "example" : "<script type=\"text/javascript\"> <truncated> </script>"
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`RumJavaScriptTagManagement` (Real user monitoring JavaScript tag management)" ]
      }
    },
    "/maintenance" : {
      "get" : {
        "tags" : [ "Maintenance window" ],
        "summary" : "Lists all parameters of all maintenance windows available in your Dynatrace environment.",
        "operationId" : "getAllMaintenanceWindowConfigs",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "The start timestamp of the inquiry timeframe, in UTC milliseconds. \n\n If not set, the current time is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "default" : 0
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end timestamp of the inquiry timeframe, in UTC milliseconds. \n\n If not set, all maintenance windows beginning after the `from` timestamp will be returned.",
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "default" : 0
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The type of the maintenance window to return. \n\n If `Unknown` or not set, all maintenance windows are returned.",
          "schema" : {
            "type" : "string",
            "enum" : [ "Planned", "Unknown", "Unplanned" ],
            "default" : "Unknown"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MaintenanceWindow"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`MaintenanceWindows` (Deprecated: Configure maintenance windows)" ]
      },
      "post" : {
        "tags" : [ "Maintenance window" ],
        "summary" : "Creates a new or updates an existing maintenance window",
        "operationId" : "storeMaintenanceWindowConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MaintenanceWindow"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The maintenance window has been updated."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`MaintenanceWindows` (Deprecated: Configure maintenance windows)" ]
      }
    },
    "/maintenance/{uid}" : {
      "get" : {
        "tags" : [ "Maintenance window" ],
        "summary" : "Lists all parameters of the specified maintenance window.",
        "operationId" : "getMaintenanceWindowConfig",
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "description" : "The ID of the required maintenance window.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`MaintenanceWindows` (Deprecated: Configure maintenance windows)" ]
      },
      "delete" : {
        "tags" : [ "Maintenance window" ],
        "summary" : "Deletes the specified maintenance window",
        "description" : "Deletion cannot be undone.",
        "operationId" : "removeMaintenanceWindowConfig",
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "description" : "The ID of the maintenance window to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The maintenance window has been deleted."
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`MaintenanceWindows` (Deprecated: Configure maintenance windows)" ]
      }
    },
    "/entity/applications" : {
      "get" : {
        "tags" : [ "Topology & Smartscape - Application" ],
        "summary" : "Gets the list of all applications in your environment along with their parameters",
        "description" : "You can narrow down the output by specifying filtering parameters for the request. \n\nYou can additionally limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Then use the URL-encoded cursor from the **Next-Page-Key** response header in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "getApplications",
        "parameters" : [ {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then 72 hours behind from now is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then the current timestamp is used. \n\nThe timeframe must not exceed 3 days.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "relativeTime",
          "in" : "query",
          "description" : "The relative timeframe, back from now.",
          "schema" : {
            "type" : "string",
            "enum" : [ "min", "5mins", "10mins", "15mins", "30mins", "hour", "2hours", "6hours", "day", "3days" ]
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Filters the resulting set of applications by the specified tag. You can specify several tags in the following format: `tag=tag1&tag=tag2`. The application has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags, use the following format: `tag=[context]key:value`. For custom key-value tags, omit the context: `tag=key:value`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Filters result to the specified applications only. \n\n To specify several applications use the following format: `entity=ID1&entity=ID2`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "managementZone",
          "in" : "query",
          "description" : "Only return applications that are part of the specified management zone.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "includeDetails",
          "in" : "query",
          "description" : "Includes (`true`) or excludes (`false`) details which are queried from related entities.\n\nExcluding details may make queries faster. \n\nIf not set, then `true` is used.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of applications per result page. \n\n If not set, pagination is not used and the result contains all applications fitting the specified filtering criteria.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **Next-Page-Key** header of the previous response. \n\nIf you're using pagination, the first page is always returned without this cursor. \n\nYou must keep all other query parameters as they were in the first request to obtain subsequent pages.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Total-Count" : {
                "description" : "The estimated number of results.",
                "style" : "simple",
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "Next-Page-Key" : {
                "description" : "The cursor for the next page of results. Without it you'll get the first page again.\n\n The cursor must be URL-encoded.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Page-Size" : {
                "description" : "The maximum number of results per page.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Application"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/entity/applications/{meIdentifier}/baseline" : {
      "get" : {
        "tags" : [ "Topology & Smartscape - Application" ],
        "summary" : "Gets baseline data for the specified application | maturity=EARLY_ADOPTER",
        "operationId" : "getBaselineValuesForSingleApplication",
        "parameters" : [ {
          "name" : "meIdentifier",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationBaselineValues"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/entity/applications/{meIdentifier}" : {
      "get" : {
        "tags" : [ "Topology & Smartscape - Application" ],
        "summary" : "Gets parameters of the specified application",
        "operationId" : "getSingleApplication",
        "parameters" : [ {
          "name" : "meIdentifier",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Application"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      },
      "post" : {
        "tags" : [ "Topology & Smartscape - Application" ],
        "summary" : "Updates parameters of the specified application",
        "operationId" : "updateApplication",
        "parameters" : [ {
          "name" : "meIdentifier",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the application you want to update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateEntity"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The parameters of the application have been updated."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/entity/infrastructure/custom-devices/{customDeviceId}/logs/jobs/{jobId}" : {
      "get" : {
        "tags" : [ "Log monitoring - Custom devices" ],
        "summary" : "Gets status of the specified log analysis job",
        "operationId" : "customDeviceLogJobStatus",
        "parameters" : [ {
          "name" : "customDeviceId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required custom device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/kzi3rb8) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobStatusResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      },
      "delete" : {
        "tags" : [ "Log monitoring - Custom devices" ],
        "summary" : "Deletes or cancels the specified log analysis job",
        "operationId" : "customDeviceLogJobDelete",
        "parameters" : [ {
          "name" : "customDeviceId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required custom device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the log analysis job to be deleted. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/kzi3rb8) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The job has been deleted.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobDeleteResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. See the response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/custom-devices/{customDeviceId}/logs/jobs/{jobId}/records" : {
      "get" : {
        "tags" : [ "Log monitoring - Custom devices" ],
        "summary" : "Gets the content of the analyzed log",
        "description" : "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://dt-url.net/usg3rbv) request. \n\nLong results split into several pages. By default, a page contains 100 results. You can change this value with the **pageSize** query parameter, up to 10,000.",
        "operationId" : "customDeviceLogJobRecords",
        "parameters" : [ {
          "name" : "customDeviceId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required custom device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/kzi3rb8) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scrollToken",
          "in" : "query",
          "description" : "The **scrollToken** value from the previous response. \n\n You can use it to get the next page of results. Without it, the first page is always returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of records per result page. \n\n If not set, each page contains 100 results. \n\n Maximum allowed value is `10000`.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobRecordsResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      },
      "post" : {
        "tags" : [ "Log monitoring - Custom devices" ],
        "summary" : "Gets the filtered content of the analyzed log",
        "description" : "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://dt-url.net/usg3rbv) request. \n\nLong results split into several pages. By default, a page contains 100 results. You can change this value with the **pageSize** query parameter, up to 10,000.",
        "operationId" : "customDeviceLogJobRecordsFiltered",
        "parameters" : [ {
          "name" : "customDeviceId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required custom device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/kzi3rb8) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scrollToken",
          "in" : "query",
          "description" : "The **scrollToken** value from the previous response. \n\n You can use it to get the next page of results. Without it, the first page is always returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of records per result page. \n\n If not set, each page contains 100 results. \n\n Maximum allowed value is `10000`.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Filter the log content by the specified criteria. \n\nSee [Search patterns in log data and parse results](https://dt-url.net/57a3rgv) in Dynatrace Documentation for the syntax definition and examples.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterLogContent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobRecordsResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/custom-devices/{customDeviceId}/logs/jobs/{jobId}/records/top" : {
      "post" : {
        "tags" : [ "Log monitoring - Custom devices" ],
        "summary" : "Gets the top values of fields present in the content of the analyzed log",
        "description" : "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://dt-url.net/usg3rbv) request.",
        "operationId" : "customDeviceLogJobRecordsTop",
        "parameters" : [ {
          "name" : "customDeviceId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required custom device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/kzi3rb8) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Filter the log content by the specified criteria. \n\nSee [Search patterns in log data and parse results](https://dt-url.net/57a3rgv) in Dynatrace Documentation for the syntax definition and examples.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterTopLogRecords"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobRecordsTopValuesRestResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/custom-devices/{customDeviceId}/logs/{logPath}" : {
      "post" : {
        "tags" : [ "Log monitoring - Custom devices" ],
        "summary" : "Starts the analysis job for the specified custom device log",
        "description" : "The response returns the ID of the job.",
        "operationId" : "customDeviceLogJobStart",
        "parameters" : [ {
          "name" : "customDeviceId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required custom device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "logPath",
          "in" : "path",
          "description" : "The full pathname of the log.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Narrows down the scope of the analysis to the entries, matching the specified criteria. \n\nThe criteria must use the [text pattern query syntax](https://dt-url.net/vv83rhp).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the analysis range, in UTC milliseconds. \n\n If not set, then 2 hours behind from current timestamp is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the analysis range, in UTC milliseconds. \n\n If not set, then the current timestamp is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Extract fields from the log content to form custom columns. \n\n See [Search patterns in log data and parse results](https://dt-url.net/vv83rhp) in Dynatrace Documentation for the syntax definition and examples. \n\nThe special characters must be escaped.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtractFields"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "Success. The response body contains the ID of the job.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. See the response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/custom-devices/{customDeviceId}/logs" : {
      "get" : {
        "tags" : [ "Log monitoring - Custom devices" ],
        "summary" : "Lists all the available logs on the specified custom device",
        "operationId" : "customDeviceLogList",
        "parameters" : [ {
          "name" : "customDeviceId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required custom device.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogListForCustomDeviceResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/custom/{customDeviceId}" : {
      "post" : {
        "tags" : [ "Topology & Smartscape - Custom device" ],
        "summary" : "Creates or updates a custom device, or reports metric data points to the custom device.",
        "operationId" : "createCustomDataPoints",
        "parameters" : [ {
          "name" : "customDeviceId",
          "in" : "path",
          "description" : "The ID of the custom device. \n\n If you use the ID of an existing device, the respective parameters will be updated. \n\nDon't use Dynatrace entity ID here.",
          "required" : true,
          "schema" : {
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of a custom device.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomDevicePushMessage"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The custom device has been created or updated.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomDevicePushResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/entity/infrastructure/hosts/{hostId}/logs/jobs/{jobId}" : {
      "get" : {
        "tags" : [ "Log monitoring - Hosts" ],
        "summary" : "Gets status of the specified log analysis job",
        "operationId" : "hostLogJobStatus",
        "parameters" : [ {
          "name" : "hostId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/52k3r7f) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobStatusResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      },
      "delete" : {
        "tags" : [ "Log monitoring - Hosts" ],
        "summary" : "Deletes or cancels the specified log analysis job",
        "operationId" : "hostLogJobDelete",
        "parameters" : [ {
          "name" : "hostId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the log analysis job to be deleted. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/52k3r7f) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The job has been deleted.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobDeleteResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. See the response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/hosts/{hostId}/logs/jobs/{jobId}/records" : {
      "get" : {
        "tags" : [ "Log monitoring - Hosts" ],
        "summary" : "Gets the full content of the analyzed log",
        "description" : "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://dt-url.net/mkc3rss) request. \n\nLong results split into several pages. By default, a page contains 100 results. You can change this value with the **pageSize** query parameter, up to 10,000.",
        "operationId" : "hostLogJobRecords",
        "parameters" : [ {
          "name" : "hostId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/52k3r7f) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scrollToken",
          "in" : "query",
          "description" : "The **scrollToken** value from the previous response. \n\n You can use it to get the next page of results. Without it, the first page is always returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of records per result page. \n\n If not set, each page contains 100 results. \n\n Maximum allowed value is `10000`.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobRecordsResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      },
      "post" : {
        "tags" : [ "Log monitoring - Hosts" ],
        "summary" : "Gets the filtered content of the analyzed log",
        "description" : "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://dt-url.net/mkc3rss) request. \n\nLong results split into several pages. By default, a page contains 100 results. You can change this value with the **pageSize** query parameter, up to 10,000.",
        "operationId" : "hostLogJobRecordsFiltered",
        "parameters" : [ {
          "name" : "hostId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/52k3r7f) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scrollToken",
          "in" : "query",
          "description" : "The **scrollToken** value from the previous response. \n\n You can use it to get the next page of results. Without it, the first page is always returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of records per result page. \n\n If not set, each page contains 100 results. \n\n Maximum allowed value is `10000`.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Filter the log content by the specified criteria. \n\nSee [Search patterns in log data and parse results](https://dt-url.net/57a3rgv) in Dynatrace Documentation for the syntax definition and examples.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterLogContent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobRecordsResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/hosts/{hostId}/logs/jobs/{jobId}/records/top" : {
      "post" : {
        "tags" : [ "Log monitoring - Hosts" ],
        "summary" : "Gets the top values of fields present in the content of the analyzed log",
        "description" : "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://dt-url.net/mkc3rss) request.",
        "operationId" : "hostLogJobRecordsTop",
        "parameters" : [ {
          "name" : "hostId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/52k3r7f) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Filter the log content by the specified criteria. \n\nSee [Search patterns in log data and parse results](https://dt-url.net/57a3rgv) in Dynatrace Documentation for the syntax definition and examples.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterTopLogRecords"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobRecordsTopValuesRestResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/hosts/{hostId}/logs/{logPath}" : {
      "post" : {
        "tags" : [ "Log monitoring - Hosts" ],
        "summary" : "Starts the analysis job for the specified OS log",
        "description" : "The response returns the ID of the job.",
        "operationId" : "hostLogJobStart",
        "parameters" : [ {
          "name" : "hostId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "logPath",
          "in" : "path",
          "description" : "The full pathname of the log.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Narrows down the scope of the analysis to the entries, matching the specified criteria. \n\nThe criteria must use the [text pattern query syntax](https://dt-url.net/vv83rhp).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the analysis range, in UTC milliseconds. \n\n If not set, then 2 hours behind from current timestamp is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the analysis range, in UTC milliseconds. \n\n If not set, then the current timestamp is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Extract fields from the log content to form custom columns. \n\n See [Search patterns in log data and parse results](https://dt-url.net/vv83rhp) in Dynatrace Documentation for the syntax definition and examples. \n\nThe special characters must be escaped.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtractFields"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "Success. The response body contains the ID of the job.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. See the response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/hosts/{hostId}/logs" : {
      "get" : {
        "tags" : [ "Log monitoring - Hosts" ],
        "summary" : "Lists all the available OS logs on the specified host",
        "operationId" : "hostLogList",
        "parameters" : [ {
          "name" : "hostId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogList4hostResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/hosts" : {
      "get" : {
        "tags" : [ "Topology & Smartscape - Host" ],
        "summary" : "Lists all available hosts in your environment",
        "description" : "You can narrow down the output by specifying filtering parameters for the request. \n\nYou can additionally limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Then use the URL-encoded cursor from the **Next-Page-Key** response header in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "getHosts",
        "parameters" : [ {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then 72 hours behind from now is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then the current timestamp is used. \n\nThe timeframe must not exceed 3 days.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "relativeTime",
          "in" : "query",
          "description" : "The relative timeframe, back from now.",
          "schema" : {
            "type" : "string",
            "enum" : [ "min", "5mins", "10mins", "15mins", "30mins", "hour", "2hours", "6hours", "day", "3days" ]
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the specified tag. You can specify several tags in the following format: `tag=tag1&tag=tag2`. The host has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags, use the following format: `tag=[context]key:value`. For custom key-value tags, omit the context: `tag=key:value`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "showMonitoringCandidates",
          "in" : "query",
          "description" : "Includes (`true`) or excludes (`false`) a monitoring candidate in the response. \n\nMonitoring candidates are network entities that are detected but not monitored.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Filters result to the specified hosts only. \n\n To specify several hosts use the following format: `entity=ID1&entity=ID2`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "managementZone",
          "in" : "query",
          "description" : "Only return hosts that are part of the specified management zone.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "hostGroupId",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the specified host group. \n\n Specify the Dynatrace IDs of the host group you're interested in.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostGroupName",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the specified host group. \n\n Specify the name of the host group you're interested in.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeDetails",
          "in" : "query",
          "description" : "Includes (`true`) or excludes (`false`) details which are queried from related entities.\n\nExcluding details may make queries faster. \n\nIf not set, then `true` is used.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of hosts per result page. \n\n If not set, pagination is not used and the result contains all hosts fitting the specified filtering criteria.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **Next-Page-Key** header of the previous response. \n\nIf you're using pagination, the first page is always returned without this cursor. \n\nYou must keep all other query parameters as they were in the first request to obtain subsequent pages.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Total-Count" : {
                "description" : "The estimated number of results.",
                "style" : "simple",
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "Next-Page-Key" : {
                "description" : "The cursor for the next page of results. Without it you'll get the first page again.\n\n The cursor must be URL-encoded.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Page-Size" : {
                "description" : "The maximum number of results per page.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Host"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/entity/infrastructure/hosts/{meIdentifier}" : {
      "get" : {
        "tags" : [ "Topology & Smartscape - Host" ],
        "summary" : "Gets parameters of the specified host",
        "operationId" : "getSingleHost",
        "parameters" : [ {
          "name" : "meIdentifier",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Host"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      },
      "post" : {
        "tags" : [ "Topology & Smartscape - Host" ],
        "summary" : "Updates properties of the specified host",
        "operationId" : "updateHost",
        "parameters" : [ {
          "name" : "meIdentifier",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the host to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateEntity"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The parameters of the host have been updated."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/entity/infrastructure/hosts/{meIdentifier}/tags/{tag}" : {
      "delete" : {
        "tags" : [ "Topology & Smartscape - Host" ],
        "summary" : "Remove tag of the specified host",
        "operationId" : "removeTags",
        "parameters" : [ {
          "name" : "meIdentifier",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tag",
          "in" : "path",
          "description" : "The tag to be removed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The tag of the host has been removed."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failure. The tag could not be found."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/entity/infrastructure/process-groups/{pgId}/logs/jobs/{jobId}" : {
      "get" : {
        "tags" : [ "Log monitoring - Process groups" ],
        "summary" : "Gets status of the specified log analysis job",
        "operationId" : "processGroupLogJobStatus",
        "parameters" : [ {
          "name" : "pgId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required process group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/c2m3rxl) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobStatusResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      },
      "delete" : {
        "tags" : [ "Log monitoring - Process groups" ],
        "summary" : "Deletes or cancels the specified log analysis job",
        "operationId" : "processGroupLogJobDelete",
        "parameters" : [ {
          "name" : "pgId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required process group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the log analysis job to be deleted. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/c2m3rxl) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The job has been deleted.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobDeleteResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. See response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/process-groups/{pgId}/logs/jobs/{jobId}/records" : {
      "get" : {
        "tags" : [ "Log monitoring - Process groups" ],
        "summary" : "Gets the content of the analyzed log",
        "description" : "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://dt-url.net/wve3r83) request. \n\nLong results split into several pages. By default, a page contains 100 results. You can change this value with the **pageSize** query parameter, up to 10,000.",
        "operationId" : "processGroupLogJobRecords",
        "parameters" : [ {
          "name" : "pgId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required process group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/c2m3rxl) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scrollToken",
          "in" : "query",
          "description" : "The **scrollToken** value from the previous response. \n\n You can use it to get the next page of results. Without it, the first page is always returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of records per result page. \n\n If not set, each page contains 100 results. \n\n Maximum allowed value is `10000`.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobRecordsResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      },
      "post" : {
        "tags" : [ "Log monitoring - Process groups" ],
        "summary" : "Gets the content of the analyzed log",
        "description" : "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://dt-url.net/wve3r83) request. \n\nLong results split into several pages. By default, a page contains 100 results. You can change this value with the **pageSize** query parameter, up to 10,000.",
        "operationId" : "processGroupLogJobRecordsFiltered",
        "parameters" : [ {
          "name" : "pgId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required process group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/c2m3rxl) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scrollToken",
          "in" : "query",
          "description" : "The **scrollToken** value from the previous response. \n\n You can use it to get the next page of results. Without it, the first page is always returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of records per result page. \n\n If not set, each page contains 100 results. \n\n Maximum allowed value is `10000`.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Filter the log content by the specified criteria. \n\nSee [Search patterns in log data and parse results](https://dt-url.net/57a3rgv) in Dynatrace Documentation for the syntax definition and examples.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterLogContent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobRecordsResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/process-groups/{pgId}/logs/jobs/{jobId}/records/top" : {
      "post" : {
        "tags" : [ "Log monitoring - Process groups" ],
        "summary" : "Gets the top values of fields present in the content of the analyzed log",
        "description" : "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://dt-url.net/usg3rbv) request.",
        "operationId" : "processGroupLogJobRecordsTop",
        "parameters" : [ {
          "name" : "pgId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required process group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://dt-url.net/c2m3rxl) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Filter the log content by the specified criteria. \n\nSee [Search patterns in log data and parse results](https://dt-url.net/57a3rgv) in Dynatrace Documentation for the syntax definition and examples.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FilterTopLogRecords"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogJobRecordsTopValuesRestResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/process-groups/{pgId}/logs/{logPath}" : {
      "post" : {
        "tags" : [ "Log monitoring - Process groups" ],
        "summary" : "Starts analysis job for the specified process group log",
        "operationId" : "processGroupLogJobStart",
        "parameters" : [ {
          "name" : "pgId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required process group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "logPath",
          "in" : "path",
          "description" : "The full pathname of the log.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostFilter",
          "in" : "query",
          "description" : "Narrows down the scope of the analysis to process groups, running at the specified hosts. \n\nSpecify the entity ID of the required host here. To specify several IDs, separate them with a comma.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Narrows down the scope of the analysis to the entries, matching the specified criteria. \n\nThe criteria must use the [text pattern query syntax](https://dt-url.net/vv83rhp).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the analysis range, in UTC milliseconds. \n\n If not set, then 2 hours behind from current timestamp is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the analysis range, in UTC milliseconds. \n\n If not set, then the current timestamp is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Extract fields from the log content to form custom columns. \n\n See [Search patterns in log data and parse results](https://dt-url.net/vv83rhp) in Dynatrace Documentation for the syntax definition and examples. \n\nThe special characters must be escaped.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtractFields"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "Success. The response body contains the ID of the job.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. See response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/process-groups/{pgId}/logs" : {
      "get" : {
        "tags" : [ "Log monitoring - Process groups" ],
        "summary" : "Lists all the available logs of the specified process group",
        "operationId" : "processGroupLogList",
        "parameters" : [ {
          "name" : "pgId",
          "in" : "path",
          "description" : "The entity ID of the process group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogList4pgResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`LogExport` (Read logs)" ]
      }
    },
    "/entity/infrastructure/process-groups" : {
      "get" : {
        "tags" : [ "Topology & Smartscape - Process group" ],
        "summary" : "Lists all process groups of your environment, along with their parameters",
        "description" : "You can narrow down the output by specifying filtering parameters for the request. \n\nYou can additionally limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Then use the URL-encoded cursor from the **Next-Page-Key** response header in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "getProcessGroups",
        "parameters" : [ {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then 72 hours behind from now is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then the current timestamp is used. \n\nThe timeframe must not exceed 3 days.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "relativeTime",
          "in" : "query",
          "description" : "The relative timeframe, back from now.",
          "schema" : {
            "type" : "string",
            "enum" : [ "min", "5mins", "10mins", "15mins", "30mins", "hour", "2hours", "6hours", "day", "3days" ]
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Filters the resulting set of process groups by the specified tag. You can specify several tags in the following format: `tag=tag1&tag=tag2`. The process group has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags, use the following format: `tag=[context]key:value`. For custom key-value tags, omit the context: `tag=key:value`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Filters result to the specified process groups only. \n\n To specify several process groups use the following format: `entity=ID1&entity=ID2`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "host",
          "in" : "query",
          "description" : "Filters process groups by the host they're running at. \n\n Specify Dynatrace IDs of the host you're interested in. \n\n To specify several hosts use the following format: `host=hostID1&host=hostID2`. \n\n The **OR** logic applies.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "managementZone",
          "in" : "query",
          "description" : "Only return process groups that are part of the specified management zone.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "includeDetails",
          "in" : "query",
          "description" : "Includes (`true`) or excludes (`false`) details which are queried from related entities.\n\nExcluding details may make queries faster. \n\nIf not set, then `true` is used.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of process groups per result page. \n\n If not set, pagination is not used and the result contains all process groups fitting the specified filtering criteria.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **Next-Page-Key** header of the previous response. \n\nIf you're using pagination, the first page is always returned without this cursor. \n\nYou must keep all other query parameters as they were in the first request to obtain subsequent pages.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Total-Count" : {
                "description" : "The estimated number of results.",
                "style" : "simple",
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "Next-Page-Key" : {
                "description" : "The cursor for the next page of results. Without it you'll get the first page again.\n\n The cursor must be URL-encoded.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Page-Size" : {
                "description" : "The maximum number of results per page.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProcessGroup"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/entity/infrastructure/process-groups/{meIdentifier}" : {
      "get" : {
        "tags" : [ "Topology & Smartscape - Process group" ],
        "summary" : "List properties of the specified process group",
        "operationId" : "getSingleProcessGroup",
        "parameters" : [ {
          "name" : "meIdentifier",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required process group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProcessGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      },
      "post" : {
        "tags" : [ "Topology & Smartscape - Process group" ],
        "summary" : "Updates properties of the specified process group",
        "operationId" : "updateProcessGroup",
        "parameters" : [ {
          "name" : "meIdentifier",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the process group to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains tags to be added to the process group.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateEntity"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The parameters of the process group have been updated."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/entity/infrastructure/processes" : {
      "get" : {
        "tags" : [ "Topology & Smartscape - Process" ],
        "summary" : "Lists all monitored processes along with their parameters",
        "description" : "You can narrow down the output by specifying filtering parameters for the request. \n\nYou can additionally limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Then use the URL-encoded cursor from the **Next-Page-Key** response header in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "getProcesses",
        "parameters" : [ {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then 72 hours behind from now is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then the current timestamp is used. \n\nThe timeframe must not exceed 3 days.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "relativeTime",
          "in" : "query",
          "description" : "The relative timeframe, back from now.",
          "schema" : {
            "type" : "string",
            "enum" : [ "min", "5mins", "10mins", "15mins", "30mins", "hour", "2hours", "6hours", "day", "3days" ]
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Filters the resulting set of processes by the specified tag. You can specify several tags in the following format: `tag=tag1&tag=tag2`. The process has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags, use the following format: `tag=[context]key:value`. For custom key-value tags, omit the context: `tag=key:value`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Filters result to the specified processes only. \n\n To specify several processes use the following format: `entity=ID1&entity=ID2`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "hostTag",
          "in" : "query",
          "description" : "Filters processes by the host they're running at. \n\n Specify tags of the host you're interested in.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "host",
          "in" : "query",
          "description" : "Filters processes by the host they're running at. \n\n Specify Dynatrace IDs of the host you're interested in. \n\n To specify several hosts use the following format: `host=hostID1&host=hostID2`. \n\n The **OR** logic applies.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "actualMonitoringState",
          "in" : "query",
          "description" : "Filters processes by the actual monitoring state of the process.",
          "schema" : {
            "type" : "string",
            "enum" : [ "OFF", "ON" ]
          }
        }, {
          "name" : "expectedMonitoringState",
          "in" : "query",
          "description" : "Filters processes by the expected monitoring state of the process.",
          "schema" : {
            "type" : "string",
            "enum" : [ "OFF", "ON" ]
          }
        }, {
          "name" : "managementZone",
          "in" : "query",
          "description" : "Only return processes that are part of the specified management zone.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "includeDetails",
          "in" : "query",
          "description" : "Includes (`true`) or excludes (`false`) details which are queried from related entities.\n\nExcluding details may make queries faster. \n\nIf not set, then `true` is used.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of processes per result page. \n\n If not set, pagination is not used and the result contains all processes fitting the specified filtering criteria.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **Next-Page-Key** header of the previous response. \n\nIf you're using pagination, the first page is always returned without this cursor. \n\nYou must keep all other query parameters as they were in the first request to obtain subsequent pages.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Total-Count" : {
                "description" : "The estimated number of results.",
                "style" : "simple",
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "Next-Page-Key" : {
                "description" : "The cursor for the next page of results. Without it you'll get the first page again.\n\n The cursor must be URL-encoded.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Page-Size" : {
                "description" : "The maximum number of results per page.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProcessGroupInstance"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/entity/infrastructure/processes/{meIdentifier}" : {
      "get" : {
        "tags" : [ "Topology & Smartscape - Process" ],
        "summary" : "List properties of the specified process",
        "operationId" : "getSingleProcess",
        "parameters" : [ {
          "name" : "meIdentifier",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required process.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProcessGroupInstance"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/entity/services/{meIdentifier}/baseline" : {
      "get" : {
        "tags" : [ "Topology & Smartscape - Service" ],
        "summary" : "Gets baseline data for the specified service | maturity=EARLY_ADOPTER",
        "operationId" : "getBaselineValuesForSingleService",
        "parameters" : [ {
          "name" : "meIdentifier",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceBaselineValues"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/entity/services" : {
      "get" : {
        "tags" : [ "Topology & Smartscape - Service" ],
        "summary" : "Lists all available services in your environment",
        "description" : "You can narrow down the output by specifying filtering parameters for the request. \n\nYou can additionally limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Then use the URL-encoded cursor from the **Next-Page-Key** response header in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "getServices",
        "parameters" : [ {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then 72 hours behind from now is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then the current timestamp is used. \n\nThe timeframe must not exceed 3 days.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "relativeTime",
          "in" : "query",
          "description" : "The relative timeframe, back from now.",
          "schema" : {
            "type" : "string",
            "enum" : [ "min", "5mins", "10mins", "15mins", "30mins", "hour", "2hours", "6hours", "day", "3days" ]
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Filters the resulting set of services by the specified tag. You can specify several tags in the following format: `tag=tag1&tag=tag2`. The service has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags, use the following format: `tag=[context]key:value`. For custom key-value tags, omit the context: `tag=key:value`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Filters result to the specified services only. \n\n To specify several services use the following format: `entity=ID1&entity=ID2`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "managementZone",
          "in" : "query",
          "description" : "Only return services that are part of the specified management zone.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "includeDetails",
          "in" : "query",
          "description" : "Includes (`true`) or excludes (`false`) details which are queried from related entities.\n\nExcluding details may make queries faster. \n\nIf not set, then `true` is used.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of services per result page. \n\n If not set, pagination is not used and the result contains all services fitting the specified filtering criteria.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **Next-Page-Key** header of the previous response. \n\nIf you're using pagination, the first page is always returned without this cursor. \n\nYou must keep all other query parameters as they were in the first request to obtain subsequent pages.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Total-Count" : {
                "description" : "The estimated number of results.",
                "style" : "simple",
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "Next-Page-Key" : {
                "description" : "The cursor for the next page of results. Without it you'll get the first page again.\n\n The cursor must be URL-encoded.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "Page-Size" : {
                "description" : "The maximum number of results per page.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Service"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/entity/services/{meIdentifier}" : {
      "get" : {
        "tags" : [ "Topology & Smartscape - Service" ],
        "summary" : "Gets parameters of the specified service",
        "operationId" : "getSingleService",
        "parameters" : [ {
          "name" : "meIdentifier",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Service"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      },
      "post" : {
        "tags" : [ "Topology & Smartscape - Service" ],
        "summary" : "Updates parameters of the specified service",
        "operationId" : "updateService",
        "parameters" : [ {
          "name" : "meIdentifier",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the service you're inquiring.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateEntity"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The parameters of the service have been updated."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/oneagents" : {
      "get" : {
        "tags" : [ "OneAgent on a host" ],
        "summary" : "Gets the list of hosts with OneAgent deployment information for each host",
        "description" : "You can narrow down the output by specifying filtering parameters for the request. \n\nThe response is limited to 500 items. Use the **nextPageKey** cursor to obtain subsequent results.",
        "operationId" : "getHostsWithSpecificAgents",
        "parameters" : [ {
          "name" : "includeDetails",
          "in" : "query",
          "description" : "Includes (`true`) or excludes (`false`) details which are queried from related entities.\n\nExcluding details may make queries faster. \n\nIf not set, then `true` is used.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then 72 hours behind from now is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then the current timestamp is used. \n\nThe timeframe must not exceed 7 months (214 days).",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "relativeTime",
          "in" : "query",
          "description" : "The relative timeframe, back from now.\n\n If you need to specify relative timeframe that is not presented in the list of possible values, specify the **startTimestamp** (up to 214 days back from now) and leave **endTimestamp** and **relativeTime** empty.",
          "schema" : {
            "type" : "string",
            "enum" : [ "10mins", "15mins", "2hours", "30mins", "3days", "5mins", "6hours", "day", "hour", "min", "month", "week" ]
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the specified tag. You can specify several tags in the following format: `tag=tag1&tag=tag2`. The host has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags, use the following format: `tag=[context]key:value`. For custom key-value tags, omit the context: `tag=key:value`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Filters result to the specified hosts only. \n\n To specify several hosts use the following format: `entity=ID1&entity=ID2`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "managementZoneId",
          "in" : "query",
          "description" : "Only return hosts that are part of the specified management zone.\n\n Specify the management zone ID here.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "managementZone",
          "in" : "query",
          "description" : "Only return hosts that are part of the specified management zone.\n\n Specify the management zone name here. \n\nIf the **managementZoneId** parameter is set, this parameter is ignored.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkZoneId",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the specified network zone. \n\n Specify the Dynatrace entity ID of the required network zone. You can fetch the list of available network zones with the [GET all network zones](https://dt-url.net/u4o3r7z) call.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostGroupId",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the specified host group. \n\n Specify the Dynatrace entity ID of the required host group.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostGroupName",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the specified host group. \n\n Specify the name of the required host group.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "osType",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the OS type.",
          "schema" : {
            "type" : "string",
            "enum" : [ "AIX", "DARWIN", "HPUX", "LINUX", "SOLARIS", "WINDOWS", "ZOS" ]
          }
        }, {
          "name" : "cloudType",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the cloud type.",
          "schema" : {
            "type" : "string",
            "enum" : [ "AZURE", "EC2", "GOOGLE_CLOUD_PLATFORM", "OPENSTACK", "ORACLE", "UNRECOGNIZED" ]
          }
        }, {
          "name" : "autoInjection",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the auto-injection status.",
          "schema" : {
            "type" : "string",
            "enum" : [ "DISABLED_MANUALLY", "DISABLED_ON_INSTALLATION", "DISABLED_ON_SANITY_CHECK", "ENABLED", "FAILED_ON_INSTALLATION" ]
          }
        }, {
          "name" : "availabilityState",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the availability state of OneAgent. \n\n* `MONITORED`: Hosts where OneAgent is enabled and active.\n* `UNMONITORED`: Hosts where OneAgent is disabled and inactive.\n* `CRASHED`: Hosts where OneAgent has returned a crash status code.\n* `LOST`: Hosts where it is impossible to establish connection with OneAgent.\n* `PRE_MONITORED`: Hosts where OneAgent is being initialized for monitoring.\n* `SHUTDOWN`: Hosts where OneAgent is shutting down in a controlled process.\n* `UNEXPECTED_SHUTDOWN`: Hosts where OneAgent is shutting down in an uncontrolled process.\n* `UNKNOWN`: Hosts where the state of OneAgent is unknown.",
          "schema" : {
            "type" : "string",
            "enum" : [ "CRASHED", "LOST", "MONITORED", "PRE_MONITORED", "SHUTDOWN", "UNEXPECTED_SHUTDOWN", "UNKNOWN", "UNMONITORED" ]
          }
        }, {
          "name" : "detailedAvailabilityState",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the detailed availability state of OneAgent. \n\n* `UNKNOWN`: Hosts where the state of OneAgent is unknown.\n* `PRE_MONITORED`: Hosts where OneAgent is being initialized for monitoring.\n* `CRASHED_UNKNOWN`: Hosts where OneAgent has crashed for unknown reason.\n* `CRASHED_FAILURE`: Hosts where OneAgent has returned a crash status code.\n* `LOST_UNKNOWN`: Hosts where it is impossible to establish connection with OneAgent for unknown reason.\n* `LOST_CONNECTION`: Hosts where OneAgent has been recognized to be inactive.\n* `LOST_AGENT_UPGRADE_FAILED`: Hosts where OneAgent has a potential update problem due to inactivity after update.\n* `SHUTDOWN_UNKNOWN_UNEXPECTED`: Hosts where OneAgent is shutting down in an uncontrolled process.\n* `SHUTDOWN_UNKNOWN`: Hosts where OneAgent has shutdown for unknown reason.\n* `SHUTDOWN_GRACEFUL`: Hosts where OneAgent has shutdown because of host shutdown.\n* `SHUTDOWN_STOPPED`: Hosts where OneAgent has shutdown because the host has stopped.\n* `SHUTDOWN_AGENT_LOST`: Hosts where PaaS module has been recognized to be inactive.\n* `SHUTDOWN_SPOT_INSTANCE`: Hosts where OneAgent shutdown was triggered by the AWS Spot Instance interruption.\n* `UNMONITORED_UNKNOWN`: Hosts where OneAgent is disabled and inactive for unknown reason.\n* `UNMONITORED_TERMINATED`: Hosts where OneAgent has terminated.\n* `UNMONITORED_DISABLED`: Hosts where OneAgent has been disabled in configuration.\n* `UNMONITORED_AGENT_STOPPED`: Hosts where OneAgent is stopped.\n* `UNMONITORED_AGENT_RESTART_TRIGGERED`: Hosts where OneAgent is being restarted.\n* `UNMONITORED_AGENT_UNINSTALLED`: Hosts where OneAgent is uninstalled.\n* `UNMONITORED_AGENT_DISABLED`: Hosts where OneAgent reported that it was disabled.\n* `UNMONITORED_AGENT_UPGRADE_FAILED`: Hosts where OneAgent has a potential update problem.\n* `UNMONITORED_ID_CHANGED`: Hosts where OneAgent has potentially changed ID during update.\n* `UNMONITORED_AGENT_LOST`: Hosts where OneAgent has been recognized to be unavailable due to server communication issues.\n* `UNMONITORED_AGENT_UNREGISTERED`: Hosts where a code module has been recognized to be unavailable because of shutdown.\n* `UNMONITORED_AGENT_VERSION_REJECTED`: Hosts where OneAgent was rejected because the version does not meet the minimum agent version requirement.\n* `MONITORED`: Hosts where OneAgent is enabled and active.\n* `MONITORED_ENABLED`: Hosts where OneAgent has been enabled in configuration.\n* `MONITORED_AGENT_REGISTERED`: Hosts where the new OneAgent has been recognized.\n* `MONITORED_AGENT_UPGRADE_STARTED`: Hosts where OneAgent has shutdown due to an update.\n* `MONITORED_AGENT_ENABLED`: Hosts where OneAgent reported that it was enabled.\n* `MONITORED_AGENT_VERSION_ACCEPTED`: Hosts where OneAgent was accepted because the version meets the minimum agent version requirement.",
          "schema" : {
            "type" : "string",
            "enum" : [ "CRASHED_FAILURE", "CRASHED_UNKNOWN", "LOST_AGENT_UPGRADE_FAILED", "LOST_CONNECTION", "LOST_UNKNOWN", "MONITORED", "MONITORED_AGENT_ENABLED", "MONITORED_AGENT_REGISTERED", "MONITORED_AGENT_UPGRADE_STARTED", "MONITORED_AGENT_VERSION_ACCEPTED", "MONITORED_ENABLED", "PRE_MONITORED", "SHUTDOWN_AGENT_LOST", "SHUTDOWN_GRACEFUL", "SHUTDOWN_SPOT_INSTANCE", "SHUTDOWN_STOPPED", "SHUTDOWN_UNKNOWN", "SHUTDOWN_UNKNOWN_UNEXPECTED", "UNKNOWN", "UNMONITORED_AGENT_DISABLED", "UNMONITORED_AGENT_LOST", "UNMONITORED_AGENT_RESTART_TRIGGERED", "UNMONITORED_AGENT_STOPPED", "UNMONITORED_AGENT_UNINSTALLED", "UNMONITORED_AGENT_UNREGISTERED", "UNMONITORED_AGENT_UPGRADE_FAILED", "UNMONITORED_AGENT_VERSION_REJECTED", "UNMONITORED_DISABLED", "UNMONITORED_ID_CHANGED", "UNMONITORED_TERMINATED", "UNMONITORED_UNKNOWN" ]
          }
        }, {
          "name" : "monitoringType",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by monitoring mode of OneAgent deployed on the host.",
          "schema" : {
            "type" : "string",
            "enum" : [ "CLOUD_INFRASTRUCTURE", "FULL_STACK", "STANDALONE" ]
          }
        }, {
          "name" : "agentVersionIs",
          "in" : "query",
          "description" : "Filters the resulting set of hosts to those that have a certain OneAgent version deployed on the host. \n\nSpecify the comparison operator here.",
          "schema" : {
            "type" : "string",
            "enum" : [ "EQUAL", "GREATER", "GREATER_EQUAL", "LOWER", "LOWER_EQUAL" ]
          }
        }, {
          "name" : "agentVersionNumber",
          "in" : "query",
          "description" : "Filters the resulting set of hosts to those that have a certain OneAgent version deployed on the host. \n\nSpecify the version in the `<major>.<minor>.<revision>` format, for example `1.182.0`. You can fetch the list of available versions with the [GET available versions](https://dt-url.net/fo23rb5) call.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "autoUpdateSetting",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the actual state of the auto-update setting of deployed OneAgents.",
          "schema" : {
            "type" : "string",
            "enum" : [ "ENABLED", "DISABLED" ]
          }
        }, {
          "name" : "updateStatus",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the update status of OneAgent deployed on the host.",
          "schema" : {
            "type" : "string",
            "enum" : [ "INCOMPATIBLE", "OUTDATED", "SCHEDULED", "SUPPRESSED", "UNKNOWN", "UP2DATE", "UPDATE_IN_PROGRESS", "UPDATE_PENDING", "UPDATE_PROBLEM" ]
          }
        }, {
          "name" : "faultyVersion",
          "in" : "query",
          "description" : "Filters the resulting set of hosts to those that run OneAgent version that is marked as faulty.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "activeGateId",
          "in" : "query",
          "description" : "Filters the resulting set of hosts to those that are currently connected to the ActiveGate with the specified ID. \n\nUse **DIRECT_COMMUNICATION** keyword to find the hosts not connected to any ActiveGate.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "technologyModuleType",
          "in" : "query",
          "description" : "Filters the resulting set of hosts to those that run the specified OneAgent code module.\n\n If several code module filters are specified, the code module has to match **all** the filters.",
          "schema" : {
            "type" : "string",
            "enum" : [ "APACHE", "DOT_NET", "DUMPPROC", "GO", "IBM_INTEGRATION_BUS", "IIS", "JAVA", "LOG_ANALYTICS", "NETTRACER", "NETWORK", "NGINX", "NODE_JS", "OPENTRACINGNATIVE", "PHP", "PROCESS", "PYTHON", "RUBY", "SDK", "UPDATER", "VARNISH", "Z_OS" ]
          }
        }, {
          "name" : "technologyModuleVersionIs",
          "in" : "query",
          "description" : "Filters the resulting set of hosts to those that have a certain code module version deployed on the host. \n\nSpecify the comparison operator here.\n\n If several code module filters are specified, the code module has to match **all** the filters.",
          "schema" : {
            "type" : "string",
            "enum" : [ "EQUAL", "GREATER", "GREATER_EQUAL", "LOWER", "LOWER_EQUAL" ]
          }
        }, {
          "name" : "technologyModuleVersionNumber",
          "in" : "query",
          "description" : "Filters the resulting set of hosts to those that have a certain code module version deployed on the host. \n\nSpecify the version in the `<major>.<minor>.<revision>` format, for example `1.182.0`. You can fetch the list of available versions with the [GET available versions](https://dt-url.net/fo23rb5) call.\n\n If several code module filters are specified, the code module has to match **all** the filters.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "technologyModuleFaultyVersion",
          "in" : "query",
          "description" : "Filters the resulting set of hosts to those that run the code module version that is marked as faulty.\n\n If several code module filters are specified, the code module has to match **all** the filters.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "pluginName",
          "in" : "query",
          "description" : "Filters the resulting set of hosts to those that run the plugin with the specified name. \n\nThe **CONTAINS** operator is applied to the specified value.\n\n If several plugin filters are specified, the plugin has to match **all** the filters.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pluginVersionIs",
          "in" : "query",
          "description" : "Filters the resulting set of hosts to those that have a certain plugin version deployed on the host. \n\nSpecify the comparison operator here.\n\n If several plugin filters are specified, the plugin has to match **all** the filters.",
          "schema" : {
            "type" : "string",
            "enum" : [ "EQUAL", "GREATER", "GREATER_EQUAL", "LOWER", "LOWER_EQUAL" ]
          }
        }, {
          "name" : "pluginVersionNumber",
          "in" : "query",
          "description" : "Filters the resulting set of hosts to those that have a certain plugin version deployed on the host. \n\nSpecify the version in the `<major>.<minor>.<revision>` format, for example `1.182.0`. You can fetch the list of available versions with the [GET available versions](https://dt-url.net/fo23rb5) call.\n\n `<minor>` and `<revision>` parts of the version number are optional.\n\n If several plugin filters are specified, the plugin has to match **all** the filters.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pluginState",
          "in" : "query",
          "description" : "Filters the resulting set of hosts to those that run the plugin with the specified state.",
          "schema" : {
            "type" : "string",
            "enum" : [ "DISABLED", "ERROR_AUTH", "ERROR_COMMUNICATION_FAILURE", "ERROR_CONFIG", "ERROR_TIMEOUT", "ERROR_UNKNOWN", "INCOMPATIBLE", "LIMIT_REACHED", "NOTHING_TO_REPORT", "OK", "STATE_TYPE_UNKNOWN", "UNINITIALIZED", "UNSUPPORTED", "WAITING_FOR_STATE" ]
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results, if results do not fit on one page. You can find the cursor value on the current page of the response, in the **nextPageKey** field. \n\nTo obtain subsequent pages, you must specify this cursor value in your query, and keep all other query parameters as they were in the original request. \n\nIf you don't specify the cursor, the first page will always be returned.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostsListPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/problem/details/{problemId}/close" : {
      "post" : {
        "tags" : [ "Problem" ],
        "summary" : "Closes the specified problem and adds a closing comment to it",
        "operationId" : "closeProblem",
        "parameters" : [ {
          "name" : "problemId",
          "in" : "path",
          "description" : "The ID of the problem to be closed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "content",
          "in" : "query",
          "description" : "The closing comment.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemCloseResult"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/problem/details/{problemId}/comments/{commentId}" : {
      "put" : {
        "tags" : [ "Problem" ],
        "summary" : "Updates an existing comment to the specified problem",
        "operationId" : "updateComment",
        "parameters" : [ {
          "name" : "problemId",
          "in" : "path",
          "description" : "The ID of the problem where you want to edit the comment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commentId",
          "in" : "path",
          "description" : "The ID of the comment you want to edit.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing the updated comment.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/PushProblemComment"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemComment"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      },
      "delete" : {
        "tags" : [ "Problem" ],
        "summary" : "Deletes an existing comment to the specified problem.",
        "operationId" : "deleteComment",
        "parameters" : [ {
          "name" : "problemId",
          "in" : "path",
          "description" : "The ID of the problem where you want to delete the comment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commentId",
          "in" : "path",
          "description" : "The ID of the comment to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json; charset=utf-8" : { }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/problem/details/{problemId}/comments" : {
      "get" : {
        "tags" : [ "Problem" ],
        "summary" : "Gets all the comments to the specified problem",
        "operationId" : "getComment",
        "parameters" : [ {
          "name" : "problemId",
          "in" : "path",
          "description" : "The ID of the problem where you want to read the comments.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemCommentList"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      },
      "post" : {
        "tags" : [ "Problem" ],
        "summary" : "Adds a new comment to the specified problem",
        "operationId" : "pushComment",
        "parameters" : [ {
          "name" : "problemId",
          "in" : "path",
          "description" : "The ID of the problem where you want to add the comment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing the comment.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/PushProblemComment"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemComment"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/problem/details/{problemId}" : {
      "get" : {
        "tags" : [ "Problem" ],
        "summary" : "Gets the properties of the specified problem",
        "operationId" : "getDetails",
        "parameters" : [ {
          "name" : "problemId",
          "in" : "path",
          "description" : "The ID of the problem you're inquiring.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetailsResultWrapper"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/problem/feed" : {
      "get" : {
        "tags" : [ "Problem" ],
        "summary" : "Gets the information about problems within the specified timeframe",
        "description" : "A problem is included in the response, if either start or end timestamp of the problem is within the defined timeframe. \n\nThe output is limited to **5,000** problems. You can narrow it down by specifying query parameters.",
        "operationId" : "getFeed",
        "parameters" : [ {
          "name" : "relativeTime",
          "in" : "query",
          "description" : "The relative timeframe of the inquiry, back from the current time.",
          "schema" : {
            "type" : "string",
            "enum" : [ "10mins", "15mins", "2hours", "30mins", "3days", "5mins", "6hours", "day", "hour", "min", "month", "week" ]
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the requested timeframe, in UTC milliseconds.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the requested timeframe, in UTC milliseconds. \n\nIf `endTimestamp` is later than the current time, the current time is used. \n\nThe timeframe must not exceed 31 days.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Filters the result problems by the status.",
          "schema" : {
            "type" : "string",
            "enum" : [ "CLOSED", "OPEN" ]
          }
        }, {
          "name" : "impactLevel",
          "in" : "query",
          "description" : "Filters the result problems by the impact level.",
          "schema" : {
            "type" : "string",
            "enum" : [ "APPLICATION", "ENVIRONMENT", "INFRASTRUCTURE", "SERVICE" ]
          }
        }, {
          "name" : "severityLevel",
          "in" : "query",
          "description" : "Filters the result problems by the severity level.",
          "schema" : {
            "type" : "string",
            "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "MONITORING_UNAVAILABLE", "PERFORMANCE", "RESOURCE_CONTENTION" ]
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Filters the result problems by the tags of affected entities.You can specify several tags in the following format: `tag=tag1&tag=tag2`. The problem has to match *all* the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags use following format: `[context]key:value`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "expandDetails",
          "in" : "query",
          "description" : "Includes(`true`) or excludes(`false`) related events to the response. \n\n Defaults to `false`, excluding the related events.",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemFeedResultWrapper"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/problem/status" : {
      "get" : {
        "tags" : [ "Problem" ],
        "summary" : "Lists the number of open problems, split by impact level",
        "operationId" : "getProblemStatus",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemStatusResultWrapper"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/synthetic/monitors" : {
      "get" : {
        "tags" : [ "Synthetic - Monitors" ],
        "summary" : "Lists all synthetic monitors in your Dynatrace environment",
        "description" : "The full list can be lengthy, but you can narrow it down by specifying filter query parameters.",
        "operationId" : "getMonitorsCollection",
        "parameters" : [ {
          "name" : "managementZone",
          "in" : "query",
          "description" : "Filters the resulting set of monitors to those which are part of the specified management zone. \n\n Specify the ID of the management zone here.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Filters the resulting set of monitors by specified tags. \n\nYou can specify several tags in the following format: `tag=tag1&tag=tag2`. The monitor has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags use following format: `[context]key:value`.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "location",
          "in" : "query",
          "description" : "Filters the resulting set of monitors to those assigned to a specified Synthetic location.  \n\n Specify the ID of the location here.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assignedApps",
          "in" : "query",
          "description" : "Filters the resulting set of monitors to those assigned to the specified applications. \n\nYou can specify several applications in the following format: `assignedApps=app1&assignedApps=app2`. The monitor has to have **all** the specified applications assigned. \n\nSpecify Dynatrace entity IDs of applications here.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Filters the resulting set of monitors to those of the specified type: `BROWSER` or `HTTP`.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enabled",
          "in" : "query",
          "description" : "Filters the resulting set of monitors to those which are enabled (`true`) or disabled (`false`).",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentialId",
          "in" : "query",
          "description" : "Filters the resulting set of monitors to those using the specified credential set. \n\nSpecify the ID of the credentials set here.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentialOwner",
          "in" : "query",
          "description" : "Filters the resulting set of monitors to those using a credential owned by the specified user.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Monitors"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)", "`DataExport` (Access problem and event feed, metrics, and topology)", "`ReadSyntheticData` (Read synthetic monitors, locations, and nodes)" ]
      },
      "post" : {
        "tags" : [ "Synthetic - Monitors" ],
        "summary" : "Creates a new synthetic monitor",
        "operationId" : "addMonitor",
        "requestBody" : {
          "description" : "The JSON body of the request, containing parameters of the new synthetic monitor.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticMonitorUpdate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The new synthetic monitor has been created. The response contains the Dynatrace entity ID of the new monitor.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/synthetic/monitors/{monitorId}" : {
      "get" : {
        "tags" : [ "Synthetic - Monitors" ],
        "summary" : "Gets parameters of the specified synthetic monitor",
        "operationId" : "getMonitor",
        "parameters" : [ {
          "name" : "monitorId",
          "in" : "path",
          "description" : "The ID of the required synthetic monitor",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticMonitor"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)", "`ReadSyntheticData` (Read synthetic monitors, locations, and nodes)" ]
      },
      "put" : {
        "tags" : [ "Synthetic - Monitors" ],
        "summary" : "Updates parameters of the specified synthetic monitor",
        "operationId" : "replaceMonitor",
        "parameters" : [ {
          "name" : "monitorId",
          "in" : "path",
          "description" : "The ID of the synthetic monitor to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticMonitorUpdate"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The synthetic monitor has been updated. The response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)" ]
      },
      "delete" : {
        "tags" : [ "Synthetic - Monitors" ],
        "summary" : "Deletes the specified synthetic monitor",
        "operationId" : "deleteMonitor",
        "parameters" : [ {
          "name" : "monitorId",
          "in" : "path",
          "description" : "The ID of the synthetic monitor to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The synthetic monitor has been deleted. The response doesn't have a body"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/thresholds/{thresholdId}" : {
      "put" : {
        "tags" : [ "Threshold" ],
        "summary" : "Creates or updates an existing threshold for a plugin or a custom event",
        "operationId" : "createCustomThreshold",
        "parameters" : [ {
          "name" : "thresholdId",
          "in" : "path",
          "description" : "The ID of the threshold to create or update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing threshold parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ThresholdRegistrationMessage"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Threshold"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      },
      "delete" : {
        "tags" : [ "Threshold" ],
        "summary" : "Deletes the specified threshold",
        "operationId" : "deleteCustomThreshold",
        "parameters" : [ {
          "name" : "thresholdId",
          "in" : "path",
          "description" : "The ID of the threshold to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The threshold has been deleted."
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/thresholds" : {
      "get" : {
        "tags" : [ "Threshold" ],
        "summary" : "Gets all configured thresholds for plugins and custom events in your environment",
        "operationId" : "readCustomThresholds",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Filters thresholds by the source.",
          "schema" : {
            "type" : "string",
            "enum" : [ "ALL", "PLUGIN", "REMOTE_PLUGIN", "USER_INTERACTION" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Threshold"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/timeseries/{timeseriesIdentifier}" : {
      "get" : {
        "tags" : [ "Timeseries" ],
        "summary" : "Gets the parameters of the specified metric and, optionally, its data points",
        "description" : "To obtain data points, set **includeData** to `true`. \n\nYou can obtain either data points or the scalar result of the specified timeseries, depending on the **queryMode**. \n\nTo obtain data points, you must specify the timeframe, either as **relativeTime** or as a combination of **startTimestamp** and **endTimestamp**. \n\nYou must also provide the **aggregationType**, supported by the metric.",
        "operationId" : "readTimeseriesData",
        "parameters" : [ {
          "name" : "timeseriesIdentifier",
          "in" : "path",
          "description" : "The case-sensitive ID of the timeseries, from which you want to read parameters and data points.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeData",
          "in" : "query",
          "description" : "The flag to include data points in the response. Set to `true` to obtain data points. You must also specify the timeframe and aggregation type. \n\nDefaults to `false`, meaning data points are not included.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "aggregationType",
          "in" : "query",
          "description" : "The aggregation type for the resulting data points. \n\nIf the requested metric doesn't support the specified aggregation, the request will result in an error.",
          "schema" : {
            "type" : "string",
            "enum" : [ "AVG", "COUNT", "MAX", "MEDIAN", "MIN", "PERCENTILE", "SUM" ]
          }
        }, {
          "name" : "startTimestamp",
          "in" : "query",
          "description" : "The start timestamp of the requested timeframe, in UTC milliseconds.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "endTimestamp",
          "in" : "query",
          "description" : "The end timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf later than the current time, Dynatrace automatically uses the current time instead. \n\nThe timeframe must not exceed 6 months.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "predict",
          "in" : "query",
          "description" : "The flag to predict future data points.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "relativeTime",
          "in" : "query",
          "description" : "The relative timeframe, back from the current time.",
          "schema" : {
            "type" : "string",
            "enum" : [ "10mins", "15mins", "2hours", "30mins", "3days", "5mins", "6hours", "day", "hour", "min", "month", "week" ]
          }
        }, {
          "name" : "queryMode",
          "in" : "query",
          "description" : "The type of result that the call should return. Valid result modes are: \n\n`series`: returns all the data points of the timeseries in specified timeframe. \n`total`: returns one scalar value for the specified timeframe. \n\nBy default, the `series` mode is used.",
          "schema" : {
            "type" : "string",
            "enum" : [ "SERIES", "TOTAL" ]
          }
        }, {
          "name" : "entity",
          "in" : "query",
          "description" : "Filters requested data points by the entity that should deliver them. Allowed values are Dynatrace entity IDs. \n\nYou can specify several entities in the following format: `entity=entity1&entity=entity2`. The entity has to match at least one of the specified IDs. \n\nIf the selected entity doesn't support the requested timeseries, the request will result in an error.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Filters requested data points by entity which should deliver them. Only data from entities with the specified tag is delivered. \n\nYou can specify several tags in the following format: `tag=tag1&tag=tag2`. The entity has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags use the `key:value` format. If there's also a context, use the `[context]key:value` format.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "percentile",
          "in" : "query",
          "description" : "Specifies which percentile of the selected response time metric should be delivered.\n\nApplicable only to the `PERCENTILE` aggregation type. \n\nValid values for percentile are between 1 and 99. \n\nKeep in mind that percentile export is possible only for response-time-based metrics such as application and service response times.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includeParentIds",
          "in" : "query",
          "description" : "If set to true the result exposes dimension mappings between parent entities and their children.\n\nFor instance: SERVICE-0000000000000001, SERVICE_METHOD-0000000000000001",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "considerMaintenanceWindowsForAvailability",
          "in" : "query",
          "description" : "Exclude (`true`) or include (`false`) data points from any [maintenance window](https://dt-url.net/b2123rg0), defined in your environment.",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeseriesQueryResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      },
      "put" : {
        "tags" : [ "Timeseries" ],
        "summary" : "Creates a new custom metric",
        "operationId" : "createCustomTimeseries",
        "parameters" : [ {
          "name" : "timeseriesIdentifier",
          "in" : "path",
          "description" : "The ID for the new metric. It must start with the `custom:` prefix. \n\nYou can use alphanumeric characters and the following punctuation marks: periods (`.`), hyphens (`-`), and commas (`,`). A number cannot follow a punctuation mark. \n\nIf you use the ID of an existing metric the respective parameters will be updated. \n\nThe length of ID is limited to **256 characters**.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new custom metric.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/TimeseriesRegistrationMessage"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The custom metric has been created.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeseriesDefinition"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      },
      "post" : {
        "tags" : [ "Timeseries" ],
        "summary" : "Lists all available metric data points, matching the specified parameters",
        "description" : "Provides advanced filtering possibilities, comparing to the `GET /timeseries/{metricIdentifier}` request.",
        "operationId" : "readTimeseriesComplex",
        "parameters" : [ {
          "name" : "timeseriesIdentifier",
          "in" : "path",
          "description" : "The case-sensitive ID of the timeseries from which you want to read parameters and data points.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request, containing parameters to identify the required data points.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/TimeseriesQueryMessage"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeseriesQueryResultWrapper"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      },
      "delete" : {
        "tags" : [ "Timeseries" ],
        "summary" : "Deletes the specified custom metric",
        "operationId" : "deleteCustomTimeseries",
        "parameters" : [ {
          "name" : "timeseriesIdentifier",
          "in" : "path",
          "description" : "The ID of the metric to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The custom metric has been deleted."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/timeseries" : {
      "get" : {
        "tags" : [ "Timeseries" ],
        "summary" : "Lists all metric definitions, with the parameters of each metric",
        "description" : "You can specify filtering parameters to return only matched metrics. If no parameters are specified, the call will list all the defined metrics.",
        "operationId" : "getAllTimeseriesDefinitions",
        "parameters" : [ {
          "name" : "source",
          "in" : "query",
          "description" : "The type of the metric, such as BUILTIN or CUSTOM.",
          "schema" : {
            "type" : "string",
            "enum" : [ "ALL", "BUILTIN", "CUSTOM", "PLUGIN", "REMOTE_PLUGIN" ]
          }
        }, {
          "name" : "detailedSource",
          "in" : "query",
          "description" : "The feature where metrics originates, such as Synthetic or RUM.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TimeseriesDefinition"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)" ]
      }
    },
    "/time" : {
      "get" : {
        "tags" : [ "Cluster time" ],
        "summary" : "Gets the current time of the Dynatrace server in UTC milliseconds",
        "operationId" : "getCurrentClusterTime",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          }
        }
      }
    },
    "/tokens" : {
      "get" : {
        "tags" : [ "Tokens" ],
        "summary" : "Lists available tokens in your environment",
        "description" : "You can narrow down the output by adding parameters. The token has to match *all* the specified parameters. \n\n You can also specify the limit of returned tokens.\n\n **This list may contain tokens which were created automatically** (e.g. InstallerDownload, Mobile, ...) and are not visible on the `Settings` page. Deleting those might have unintended side-effects as they might still be in use.",
        "operationId" : "listTokens",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Limits the maximum number of returned tokens. \n\n If not set the value of `1000` is used. \n\n Maximum value is 1000000.",
          "schema" : {
            "maximum" : 1000000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 1000
          }
        }, {
          "name" : "user",
          "in" : "query",
          "description" : "Filters the resulting set of tokens by user, who owns the token.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "permissions",
          "in" : "query",
          "description" : "Filters the resulting set of tokens by scopes assigned to the token. \n\n You can specify several permissions in the following format: `permissions=scope1&permissions=scope2`. The token must have *all* the specified scopes.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ActiveGateCertManagement", "AdvancedSyntheticIntegration", "AppMonIntegration", "CaptureRequestData", "DTAQLAccess", "DataExport", "DataImport", "DataPrivacy", "Davis", "DiagnosticExport", "DssFileManagement", "ExternalSyntheticIntegration", "InstallerDownload", "LogExport", "MemoryDump", "Mobile", "PluginUpload", "ReadConfig", "ReadSyntheticData", "RestRequestForwarding", "RumBrowserExtension", "RumJavaScriptTagManagement", "SupportAlert", "TenantTokenManagement", "UserSessionAnonymization", "ViewDashboard", "ViewReport", "WriteConfig", "WriteSyntheticData", "activeGateTokenManagement.create", "activeGateTokenManagement.read", "activeGateTokenManagement.write", "activeGates.read", "activeGates.write", "apiTokens.read", "apiTokens.write", "auditLogs.read", "credentialVault.read", "credentialVault.write", "entities.read", "entities.write", "events.ingest", "events.read", "extensionConfigurations.read", "extensionConfigurations.write", "extensionEnvironment.read", "extensionEnvironment.write", "extensions.read", "extensions.write", "geographicRegions.read", "hub.read", "hub.write", "logs.ingest", "logs.read", "metrics.ingest", "metrics.read", "metrics.write", "networkZones.read", "networkZones.write", "openTelemetryTrace.ingest", "problems.read", "problems.write", "releases.read", "securityProblems.read", "securityProblems.write", "settings.read", "settings.write", "slo.read", "slo.write", "syntheticExecutions.read", "syntheticExecutions.write", "syntheticLocations.read", "syntheticLocations.write", "tenantTokenRotation.write", "traces.lookup" ]
            }
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Last used after this timestamp (UTC milliseconds).",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "Last used before this timestamp (UTC milliseconds).",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`TenantTokenManagement` (Token management)" ]
      },
      "post" : {
        "tags" : [ "Tokens" ],
        "summary" : "Creates a new token",
        "description" : "The newly created token will be owned by the same user who owns the token used for authentication of the call.",
        "operationId" : "createToken",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new token.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateToken"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The token has been created. The response body contains the token itself.",
            "headers" : {
              "Location" : {
                "description" : "Token Id",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              },
              "text/csv; header=present; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              },
              "text/csv; header=absent; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid. Response body provides details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              },
              "text/csv; header=present; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              },
              "text/csv; header=absent; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              },
              "text/plain; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`TenantTokenManagement` (Token management)" ]
      }
    },
    "/tokens/{id}" : {
      "get" : {
        "tags" : [ "Tokens" ],
        "summary" : "Lists token metadata by token ID",
        "description" : "The token itself is **not** exposed.",
        "operationId" : "getTokenMetadata",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required token.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenMetadata"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested token has not been found.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`TenantTokenManagement` (Token management)" ]
      },
      "put" : {
        "tags" : [ "Tokens" ],
        "summary" : "Updates the specified token",
        "operationId" : "updateToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the token to be updated. \n\n You can't update the token you're using for authentication of the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the token.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateToken"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The token has been updated."
          },
          "400" : {
            "description" : "Failed. You can't update the token you're using for authentication of the request.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested token has not been found.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`TenantTokenManagement` (Token management)" ]
      },
      "delete" : {
        "tags" : [ "Tokens" ],
        "summary" : "Deletes the specified token",
        "operationId" : "deleteToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the token to be deleted. Can either be the public identifier or the secret.\n\n You can't delete the token you're using for authentication of the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Failed. You can't delete the token you're using for authentication of the request.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested token has not been found.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`TenantTokenManagement` (Token management)" ]
      }
    },
    "/tokens/lookup" : {
      "post" : {
        "tags" : [ "Tokens" ],
        "summary" : "Lists token metadata by token itself",
        "operationId" : "getTokenMetadataBySecret",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the required token.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Token"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenMetadata"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "Any Api-Token scope" ]
      }
    },
    "/synthetic/locations" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Lists all synthetic locations (both public and private) available for your environment",
        "operationId" : "getLocations",
        "parameters" : [ {
          "name" : "cloudPlatform",
          "in" : "query",
          "description" : "Filters the resulting set of locations to those which are hosted on a specific cloud platform.",
          "schema" : {
            "type" : "string",
            "enum" : [ "AWS", "AZURE", "ALIBABA", "GOOGLE_CLOUD", "OTHER" ]
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Filters the resulting set of locations by a specific type.",
          "schema" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticLocations"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)", "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)", "`ReadSyntheticData` (Read synthetic monitors, locations, and nodes)" ]
      },
      "post" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Creates a new private synthetic location",
        "operationId" : "addLocation",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new private synthetic location.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateSyntheticLocation"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityIdDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/synthetic/locations/{locationId}" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Gets properties of the specified location",
        "operationId" : "getLocation",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required location.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains parameters of the synthetic location.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticLocation"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)", "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)", "`ReadSyntheticData` (Read synthetic monitors, locations, and nodes)" ]
      },
      "put" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Updates the specified synthetic location",
        "operationId" : "updateLocation",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the synthetic location to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the private synthetic location or the status of the location.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticLocationUpdate"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json; charset=utf-8" : { }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)" ]
      },
      "delete" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Deletes the specified private synthetic location",
        "operationId" : "removeLocation",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the private synthetic location to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json; charset=utf-8" : { }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/synthetic/locations/status" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Returns whether public locations are enabled or not | maturity=EARLY_ADOPTER",
        "operationId" : "getLocationsStatus",
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the public locations status.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticPublicLocationsStatus"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)", "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)", "`ReadSyntheticData` (Read synthetic monitors, locations, and nodes)" ]
      },
      "put" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Enable/disable public synthetic locations | maturity=EARLY_ADOPTER",
        "operationId" : "updateLocationsStatus",
        "requestBody" : {
          "description" : "The updated synthetic locations status",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticPublicLocationsStatus"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Locations status was updated successfully."
          },
          "409" : {
            "description" : "Conflict. Public locations could not be disabled since there are monitors assigned to them."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/synthetic/nodes/{nodeId}" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Lists properties of the specified synthetic node",
        "operationId" : "getNode",
        "parameters" : [ {
          "name" : "nodeId",
          "in" : "path",
          "description" : "The ID of the required synthetic node.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Node"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)", "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)", "`ReadSyntheticData` (Read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/synthetic/nodes" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Lists all synthetic nodes available in your environment",
        "operationId" : "getNodes",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Nodes"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)", "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)", "`ReadSyntheticData` (Read synthetic monitors, locations, and nodes)" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ClusterVersion" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "description" : "The version of the Dynatrace server."
          }
        }
      },
      "ActiveGateInstallerVersions" : {
        "type" : "object",
        "properties" : {
          "availableVersions" : {
            "type" : "array",
            "description" : "Available versions.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A list of available versions of ActiveGate installer."
      },
      "ActiveGateConnectionInfo" : {
        "type" : "object",
        "properties" : {
          "tenantUUID" : {
            "type" : "string"
          },
          "tenantToken" : {
            "type" : "string"
          },
          "communicationEndpoints" : {
            "type" : "string"
          }
        },
        "description" : "Connectivity information for an Environment ActiveGate (except ActiveGate tokens)"
      },
      "AgentInstallerVersions" : {
        "type" : "object",
        "properties" : {
          "availableVersions" : {
            "type" : "array",
            "description" : "A list of available versions of OneAgent installer.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A list of available versions of OneAgent installer."
      },
      "ConnectionInfo" : {
        "type" : "object",
        "properties" : {
          "tenantUUID" : {
            "type" : "string",
            "description" : "The ID of your Dynatrace environment."
          },
          "tenantToken" : {
            "type" : "string",
            "description" : "The internal token that is used for authentication when OneAgent connects to the Dynatrace cluster to send data."
          },
          "communicationEndpoints" : {
            "type" : "array",
            "description" : "The list of endpoints to connect to the Dynatrace environment. The list is sorted by endpoint priority, descending.",
            "items" : {
              "type" : "string"
            }
          },
          "formattedCommunicationEndpoints" : {
            "type" : "array",
            "description" : "The formatted list of endpoints to connect to the Dynatrace environment.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "OneAgent connectivity information."
      },
      "InstallerMetaInfoDto" : {
        "type" : "object",
        "properties" : {
          "latestAgentVersion" : {
            "type" : "string"
          }
        }
      },
      "OneAgentInstallerChecksum" : {
        "type" : "object",
        "properties" : {
          "sha256" : {
            "type" : "string",
            "description" : "The checksum of the OneAgent installer.\n\nThis is the sha256 hash of the installer file."
          }
        },
        "description" : "The checksum of the OneAgent installer."
      },
      "AgentProcessModuleConfigResponse" : {
        "type" : "object",
        "properties" : {
          "revision" : {
            "type" : "integer",
            "description" : "The new revision associated with the config.",
            "format" : "int64",
            "example" : 64459404400310540
          },
          "properties" : {
            "type" : "array",
            "description" : "The properties and their sections in this response.",
            "items" : {
              "$ref" : "#/components/schemas/SectionProperty"
            }
          }
        },
        "description" : "The response to a process module config request."
      },
      "SectionProperty" : {
        "type" : "object",
        "properties" : {
          "section" : {
            "type" : "string",
            "description" : "The section this property belongs to.",
            "example" : "general"
          },
          "key" : {
            "type" : "string",
            "description" : "The property key.",
            "example" : "dockerInjection"
          },
          "value" : {
            "type" : "string",
            "description" : "The property value.",
            "example" : "on"
          }
        },
        "description" : "A single agent property with it's associated section."
      },
      "BoshReleaseAvailableVersions" : {
        "type" : "object",
        "properties" : {
          "availableVersions" : {
            "type" : "array",
            "description" : "A list of available OneAgent versions for BOSH release tarballs.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A list of available OneAgent versions for BOSH release tarballs."
      },
      "BoshReleaseChecksum" : {
        "type" : "object",
        "properties" : {
          "sha256" : {
            "type" : "string",
            "description" : "The checksum of the  BOSH release tarball. \n\n This is the sha256 hash of the installer file."
          }
        },
        "description" : "The checksum of the BOSH release tarball."
      },
      "LatestLambdaLayerNames" : {
        "type" : "object",
        "properties" : {
          "java" : {
            "type" : "string"
          },
          "python" : {
            "type" : "string"
          },
          "nodejs" : {
            "type" : "string"
          }
        },
        "description" : "Latest OneAgent lambda version names available",
        "example" : {
          "java" : "string",
          "python" : "string",
          "nodejs" : "string"
        }
      },
      "AnonymizationClusterRequestID" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "dcName" : {
            "type" : "string"
          }
        },
        "description" : "A list of tuples of request ID and cluster name"
      },
      "AnonymizationIdResult" : {
        "type" : "object",
        "properties" : {
          "clusterRequestIds" : {
            "type" : "array",
            "description" : "A list of tuples of request ID and cluster name",
            "items" : {
              "$ref" : "#/components/schemas/AnonymizationClusterRequestID"
            }
          },
          "requestId" : {
            "type" : "string",
            "description" : "The ID of the newly created anonymization job. If multiple datacenters are involved a list separated by \"|\" will be returned",
            "example" : "-4013759873546847071|7354684707140137598"
          }
        }
      },
      "AnonymizationProgressResult" : {
        "type" : "object",
        "properties" : {
          "progress" : {
            "type" : "integer",
            "description" : "The progress of the anonymization job, percent. \n\n-1 if the job is waiting for execution.",
            "format" : "int32",
            "example" : 50
          }
        }
      },
      "DtaqlResultAsTable" : {
        "type" : "object",
        "properties" : {
          "extrapolationLevel" : {
            "type" : "integer",
            "description" : "The extrapolation level of the result. \n\nTo improve performance, some results may be calculated from a subset of actual data. The extrapolation level indicates the share of actual data in the result. \n\nThe number is the denominator of a fraction and indicates the amount of actual data. The value `1` means that the result contains only the actual data. The value `4` means that result is calculated using 1/4 of the actual data. \n\nIf you need the analysis to be based on the actual data, reduce the timeframe of your query. For example, in case of extrapolation level of `4`, try to use 1/4 of the original timeframe.",
            "format" : "int32",
            "example" : 1
          },
          "additionalColumnNames" : {
            "type" : "array",
            "description" : "A list of columns in the additionalValues table. \n\n Only present if the endpoint was called with `deepLinkFields=true` parameter.",
            "items" : {
              "type" : "string"
            }
          },
          "additionalValues" : {
            "type" : "array",
            "description" : "A list of data rows. \n\n Each array element represents a row in the table of additionally linked fields. \n\nThe size of each data row and the order of the elements correspond to the **additionalColumnNames** content.\n\n Only present if the endpoint was called with `deepLinkFields=true` parameter.",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "explanations" : {
            "type" : "array",
            "description" : "Additional information about the query and the result, that helps to understand the query and how the result was calculated. \n\nOnly appears when the **explain** parameter is set to `true`. \n\nExample: The number of results was limited to the default of 50. Use the `LIMIT` clause to increase or decrease this limit.",
            "items" : {
              "type" : "string"
            }
          },
          "columnNames" : {
            "type" : "array",
            "description" : "A list of columns in the result table.",
            "items" : {
              "type" : "string"
            }
          },
          "values" : {
            "type" : "array",
            "description" : "A list of data rows. \n\n Each array element represents a row in the result table. \n\nThe size of each data row and the order of the elements correspond to the **columnNames** content.",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        },
        "description" : "The user session query result as a table.",
        "example" : {
          "extrapolationLevel" : 1,
          "columnNames" : [ "city", "avg(duration)", "max(duration)" ],
          "values" : [ [ "Klagenfurt", "65996.75", "129940" ], [ "Linz", "57360.86", "222912" ], [ "Gdansk", "22482.2", "351263" ] ]
        }
      },
      "DateProperty" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The custom key of the property."
          },
          "value" : {
            "type" : "string",
            "description" : "The date value of the property.",
            "format" : "date-time"
          }
        },
        "description" : "A custom property of the user-action with a date value."
      },
      "DoubleProperty" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The custom key of the property."
          },
          "value" : {
            "type" : "number",
            "description" : "The floating-point numeric value of the property.",
            "format" : "double"
          }
        },
        "description" : "A custom property of the user action with a Double value."
      },
      "LongProperty" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The custom key of the property."
          },
          "value" : {
            "type" : "integer",
            "description" : "The Long value of the property.",
            "format" : "int64"
          }
        },
        "description" : "A custom property of the user action with a Long value."
      },
      "StringProperty" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The custom key of the property."
          },
          "value" : {
            "type" : "string",
            "description" : "The string value of the property."
          }
        },
        "description" : "A custom property of the user action with a string value."
      },
      "UserSession" : {
        "type" : "object",
        "properties" : {
          "tenantId" : {
            "type" : "string",
            "description" : "The ID of the Dynatrace environment that captured the user session. \n\nThis field can not be queried via the User Session Query Language.",
            "example" : "azy123456"
          },
          "userSessionId" : {
            "type" : "string",
            "description" : "The unique ID of the user session."
          },
          "startTime" : {
            "type" : "integer",
            "description" : "The timestamp of the first user action in the user session, in UTC milliseconds.",
            "format" : "int64",
            "example" : 1511363122754
          },
          "endTime" : {
            "type" : "integer",
            "description" : "The timestamp of the last user action in the user session, in UTC milliseconds.",
            "format" : "int64",
            "example" : 1511363122754
          },
          "duration" : {
            "type" : "integer",
            "description" : "The duration of the user session, in milliseconds. \n\n This is calculated as the amount of time between the start of the first user action and the end of the last user action.",
            "format" : "int64",
            "example" : 122300
          },
          "internalUserId" : {
            "type" : "string",
            "description" : "The unique ID of the user that triggered the user session."
          },
          "userType" : {
            "type" : "string",
            "description" : "The type of the user. Indicates either a real human user (`REAL_USER`) or a robot (`ROBOT` or `SYNTHETIC`).",
            "enum" : [ "REAL_USER", "ROBOT", "SYNTHETIC" ]
          },
          "reasonForNoSessionReplay" : {
            "type" : "string",
            "description" : "The reason for absence of Session Replay.",
            "enum" : [ "KILLED_EMERGENCY", "KILLED_ERROR", "KILLED_MIN_JS_AGENT_VERSION", "KILLED_NO_LICENSE", "KILLED_WRONG_CONTENT_TYPE", "MISCONFIGURED_CLUSTER", "MODULE_DISABLED", "NO_ACTIVITY", "OPTED_OUT_SESSION", "OPT_IN_MODE", "ROBOT_DETECTED", "SAMPLED_OUT", "UNABLE_TO_LOAD_WORKER", "UNHANDLED_EXCEPTION", "UNKNOWN", "UNSUPPORTED_BROWSER", "VIEW_EXCLUDED" ]
          },
          "reasonForNoSessionReplayMobile" : {
            "type" : "string",
            "description" : "The reason for absence of Session Replay on mobile.",
            "enum" : [ "DISABLED", "NO_AGENT", "OPTED_OUT", "UNKNOWN" ]
          },
          "applicationType" : {
            "type" : "string",
            "description" : "The type of the application used in the user session.",
            "enum" : [ "AMP_APPLICATION", "CUSTOM_APPLICATION", "MOBILE_APPLICATION", "WEB_APPLICATION" ]
          },
          "bounce" : {
            "type" : "boolean",
            "description" : "The user session has (`true`) or doesn't have (`false`) a bounce. \n\n A bounce means there is only one (or less) user action in the user session."
          },
          "newUser" : {
            "type" : "boolean",
            "description" : "The user is a first-time (`true`) or a returning user (`false`)."
          },
          "userActionCount" : {
            "type" : "integer",
            "description" : "The number of user actions in the user session.",
            "format" : "int32"
          },
          "totalErrorCount" : {
            "type" : "integer",
            "description" : "The number of errors detected in the user session.",
            "format" : "int32"
          },
          "totalLicenseCreditCount" : {
            "type" : "integer",
            "description" : "The amount of [DEM units](https://dt-url.net/ch03s4d) consumed by the session.",
            "format" : "int32"
          },
          "matchingConversionGoalsCount" : {
            "type" : "integer",
            "description" : "The number of conversion goals achieved by the user session.",
            "format" : "int32"
          },
          "matchingConversionGoals" : {
            "type" : "array",
            "description" : "A list of conversion goals achieved by the user session. \n\n Additionally, you can define conversion goals for a single user action.",
            "items" : {
              "type" : "string",
              "description" : "A list of conversion goals achieved by the user session. \n\n Additionally, you can define conversion goals for a single user action."
            }
          },
          "ip" : {
            "type" : "string",
            "description" : "The IP address (IPv4 or IPv6) from which the user session originates."
          },
          "continent" : {
            "type" : "string",
            "description" : "The continent from which the user session originates (based on the IP address)."
          },
          "country" : {
            "type" : "string",
            "description" : "The country from which the user session originates (based on the IP address)."
          },
          "region" : {
            "type" : "string",
            "description" : "The region from which the user session originates (based on the IP address)."
          },
          "city" : {
            "type" : "string",
            "description" : "The city from which the user session originates (based on the IP address)."
          },
          "browserType" : {
            "type" : "string",
            "description" : "The type of browser used for the user session.",
            "example" : "Mobile Browser, Desktop Browser"
          },
          "browserFamily" : {
            "type" : "string",
            "description" : "The family of the browser used for the user session.",
            "example" : "Firefox, Chrome, IE"
          },
          "browserMajorVersion" : {
            "type" : "string",
            "description" : "The version of the browser used for the user session.",
            "example" : "Firefox 57, Chrome 60"
          },
          "osFamily" : {
            "type" : "string",
            "description" : "The type of operating system used for the user session.",
            "example" : "Windows, Linux"
          },
          "osVersion" : {
            "type" : "string",
            "description" : "The version of the operating system used for the user session.",
            "example" : "iOS 9, Windows 10"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "The detected manufacturer of the device used for the user session.",
            "example" : "Samsung, Apple"
          },
          "device" : {
            "type" : "string",
            "description" : "The detected device used for the user session.",
            "example" : "Samsung S5, Apple iPhone X"
          },
          "userId" : {
            "type" : "string",
            "description" : "The user ID provided for the user session by session tagging.",
            "example" : "user@example.org"
          },
          "screenHeight" : {
            "type" : "integer",
            "description" : "The detected screen height of the device used for the user session.",
            "format" : "int32",
            "example" : 768
          },
          "screenWidth" : {
            "type" : "integer",
            "description" : "The detected screen width of the device used for the user session.",
            "format" : "int32",
            "example" : 1024
          },
          "screenOrientation" : {
            "type" : "string",
            "description" : "The detected screen orientation of the device used on the device for the user session.",
            "example" : "LANDSCAPE",
            "enum" : [ "LANDSCAPE", "PORTRAIT", "UNDEFINED" ]
          },
          "displayResolution" : {
            "type" : "string",
            "description" : "The detected screen resolution of the device used for the user session.",
            "example" : "VGA, UHD4K, HUXGA",
            "enum" : [ "CGA", "DCI2K", "DCI4K", "DVGA", "FHD", "FWVGA", "FWXGA", "GHDPlus", "HD", "HQVGA", "HQVGA2", "HSXGA", "HUXGA", "HVGA", "HXGA", "NTSC", "PAL", "QHD", "QQVGA", "QSXGA", "QUXGA", "QVGA", "QWXGA", "QXGA", "SVGA", "SXGA", "SXGAMinus", "SXGAPlus", "UGA", "UHD16K", "UHD4K", "UHD8K", "UHDPlus", "UNKNOWN", "UWQHD", "UXGA", "VGA", "WHSXGA", "WHUXGA", "WHXGA", "WQSXGA", "WQUXGA", "WQVGA", "WQVGA2", "WQVGA3", "WQXGA", "WQXGA2", "WSVGA", "WSVGA2", "WSXGA", "WSXGAPlus", "WUXGA", "WVGA", "WVGA2", "WXGA", "WXGA2", "WXGA3", "WXGAPlus", "XGA", "XGAPLUS", "_1280x854", "nHD", "qHD" ]
          },
          "hasCrash" : {
            "type" : "boolean",
            "description" : "The user session includes (`true`) or doesn't include (`false`) a crash."
          },
          "crashGroupId" : {
            "type" : "string",
            "description" : "If a mobile session crashed, this is the ID of the group to which the crashed session belongs. \n\n If the session did not crash or the session is not a mobile session, it has the `null` value."
          },
          "hasSessionReplay" : {
            "type" : "boolean",
            "description" : "Session Replay is (`true`) or is not (`false`) available for the session."
          },
          "isp" : {
            "type" : "string",
            "description" : "The internet service provider from which the user session originates (based on the IP address)."
          },
          "clientType" : {
            "type" : "string",
            "description" : "Additional information about the client. \n\nThis field can not be queried via the user session query language. Use the **browserType** field instead.",
            "example" : " Desktop Browser, Mobile App, Mobile Browser, Robot, Synthetic Agent, Tablet Browser"
          },
          "browserMonitorId" : {
            "type" : "string",
            "description" : "The ID of the Synthetic browser monitor that created the session."
          },
          "browserMonitorName" : {
            "type" : "string",
            "description" : "The name of the Synthetic browser monitor that created the session."
          },
          "stringProperties" : {
            "type" : "array",
            "description" : "A list of custom properties of the user session with string values.",
            "items" : {
              "$ref" : "#/components/schemas/StringProperty"
            }
          },
          "longProperties" : {
            "type" : "array",
            "description" : "A list of custom properties of the user session with integer (short or long) values.",
            "items" : {
              "$ref" : "#/components/schemas/LongProperty"
            }
          },
          "doubleProperties" : {
            "type" : "array",
            "description" : "A list of custom properties of the user session with floating-point numerical values.",
            "items" : {
              "$ref" : "#/components/schemas/DoubleProperty"
            }
          },
          "dateProperties" : {
            "type" : "array",
            "description" : "A list of custom properties of the user session with date values.",
            "items" : {
              "$ref" : "#/components/schemas/DateProperty"
            }
          },
          "userActions" : {
            "type" : "array",
            "description" : "A list of user actions recorded in the user session.",
            "items" : {
              "$ref" : "#/components/schemas/UserSessionUserAction"
            }
          },
          "events" : {
            "type" : "array",
            "description" : "A list of additional events recorded in the user session.",
            "items" : {
              "$ref" : "#/components/schemas/UserSessionEvents"
            }
          },
          "errors" : {
            "type" : "array",
            "description" : "A list of errors recorded in the user session.",
            "items" : {
              "$ref" : "#/components/schemas/UserSessionErrors"
            }
          },
          "syntheticEvents" : {
            "type" : "array",
            "description" : "A list of synthetic events recorded in the user session.",
            "items" : {
              "$ref" : "#/components/schemas/UserSessionSyntheticEvent"
            }
          },
          "appVersion" : {
            "type" : "string",
            "description" : "The version of the application where the user session has been recorded. \n\n This information is provided by another integration, such as OpenKit."
          },
          "endReason" : {
            "type" : "string",
            "description" : "The reason for the end of the user session.",
            "enum" : [ "DURATION_LIMIT", "END_EVENT", "EXTENDED_TIMEOUT", "TEST_FAILED", "TIMEOUT", "USER_ACTION_LIMIT" ]
          },
          "numberOfRageClicks" : {
            "type" : "integer",
            "description" : "The number of rage clicks detected in the user session.",
            "format" : "int32"
          },
          "numberOfRageTaps" : {
            "type" : "integer",
            "description" : "The number of rage taps detected in the user session.",
            "format" : "int32"
          },
          "userExperienceScore" : {
            "type" : "string",
            "description" : "The user experience score of the user session.",
            "enum" : [ "FRUSTRATED", "SATISFIED", "TOLERATED", "UNDEFINED" ]
          },
          "carrier" : {
            "type" : "string",
            "description" : "The carrier information of the mobile user session."
          },
          "networkTechnology" : {
            "type" : "string",
            "description" : "The network technology information of the mobile user session."
          },
          "connectionType" : {
            "type" : "string",
            "description" : "The serialized connection type of the mobile user session.",
            "enum" : [ "LAN", "MOBILE", "OFFLINE", "UNKNOWN", "WIFI" ]
          },
          "replayStart" : {
            "type" : "integer",
            "description" : "The timestamp of the Session Replay start, in UTC milliseconds.",
            "format" : "int64"
          },
          "replayEnd" : {
            "type" : "integer",
            "description" : "The timestamp of the Session Replay end, in UTC milliseconds.",
            "format" : "int64"
          },
          "clientTimeOffset" : {
            "type" : "integer",
            "description" : "The time offset of the client, in milliseconds",
            "format" : "int32"
          },
          "rootedOrJailbroken" : {
            "type" : "boolean",
            "description" : "The mobile device is rooted/jailbroken (`true`) or genuine (`false`). \n\nHas the value of `null` if the status is unknown or undefined. Custom applications always report unknown/undefined."
          },
          "hasError" : {
            "type" : "boolean",
            "description" : "The user session includes (`true`) or doesn't include (`false`) an error."
          },
          "partNumber" : {
            "type" : "integer",
            "description" : "User sessions can be split into multiple parts for various technical reasons (e.g. after 200 user actions). This `partNumber` represents the number of each part of the overall user session.",
            "format" : "int32"
          }
        },
        "description" : "A [user session](https://dt-url.net/xv183rb8), encompassing multiple user actions and additional information about a user's visit."
      },
      "UserSessionErrors" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of error.",
            "enum" : [ "Behavioral", "Crash", "Error", "PageChange", "RageClick", "RageTap", "UserTag", "UserTagFromMetaData", "VisitTag" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the error."
          },
          "domain" : {
            "type" : "string",
            "description" : "The DNS domain where the error has been recorded."
          },
          "startTime" : {
            "type" : "integer",
            "description" : "The timestamp of the error, in UTC milliseconds.",
            "format" : "int64",
            "example" : 1511363122754
          },
          "application" : {
            "type" : "string",
            "description" : "The name of the application, based on the configured detection rules."
          },
          "internalApplicationId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the application. \n\n This information is useful when calling various REST APIs, for example, as a key for time series queries."
          }
        },
        "description" : "The error of a user session."
      },
      "UserSessionEvents" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of event.",
            "enum" : [ "Behavioral", "Crash", "Error", "PageChange", "RageClick", "RageTap", "UserTag", "UserTagFromMetaData", "VisitTag" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the event."
          },
          "domain" : {
            "type" : "string",
            "description" : "The DNS domain where the event has been recorded."
          },
          "startTime" : {
            "type" : "integer",
            "description" : "The timestamp of the event, in UTC milliseconds.",
            "format" : "int64",
            "example" : 1511363122754
          },
          "application" : {
            "type" : "string",
            "description" : "The name of the application, based on the configured detection rules."
          },
          "internalApplicationId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the application. \n\n This information is useful when calling various REST APIs, for example, as a key for time series queries."
          },
          "metadata" : {
            "type" : "string",
            "description" : "The metadata attached to the event.",
            "example" : "key1:value1;key2:value2"
          },
          "page" : {
            "type" : "string",
            "description" : "The name of the page the user navigated to during a page change event."
          },
          "pageGroup" : {
            "type" : "string",
            "description" : "The page group is automatically derived from the page."
          },
          "pageReferrer" : {
            "type" : "string",
            "description" : "The name of the previous page from which the user navigated from during a page change event."
          },
          "pageReferrerGroup" : {
            "type" : "string",
            "description" : "The page referrer group is automatically derived from the page referrer."
          }
        },
        "description" : "The external event of a user session."
      },
      "UserSessionSyntheticEvent" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the synthetic event."
          },
          "syntheticEventId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID for the synthetic event."
          },
          "sequenceNumber" : {
            "type" : "integer",
            "description" : "The sequence number of the synthetic event in scope of the complete browser monitor.",
            "format" : "int32"
          },
          "timestamp" : {
            "type" : "integer",
            "description" : "The timestamp when the synthetic event was simulated, in UTC milliseconds.",
            "format" : "int64"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the synthetic event. For example click or keystroke."
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "The error code of the error that occurred during this event.",
            "format" : "int32"
          },
          "errorName" : {
            "type" : "string",
            "description" : "Description of the error that occurred during this event."
          }
        },
        "description" : "A synthetic event of a user session."
      },
      "UserSessionUserAction" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the user action. \n\n Typically, this is the name of the page that is loaded as part of a user action or a textual description of the action, such as a mouse click.",
            "example" : "Loading of page /index.html"
          },
          "domain" : {
            "type" : "string",
            "description" : "The DNS domain where the user action has been recorded."
          },
          "targetUrl" : {
            "type" : "string",
            "description" : "The target URL of the user action."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the user action.",
            "example" : "Load",
            "enum" : [ "Custom", "EndVisit", "Error", "Load", "RageClick", "SyntheticHiddenAction", "UserSessionProperties", "VisitTag", "Xhr" ]
          },
          "startTime" : {
            "type" : "integer",
            "description" : "The start timestamp of the user action, in UTC milliseconds.",
            "format" : "int64",
            "example" : 1511363122754
          },
          "endTime" : {
            "type" : "integer",
            "description" : "The end timestamp of the user action, in UTC milliseconds.",
            "format" : "int64",
            "example" : 1511363122754
          },
          "duration" : {
            "type" : "integer",
            "description" : "The duration of the user action, in milliseconds. \n\n This is calculated as the of time between the start and the end timestamps of the user action.",
            "format" : "int64",
            "example" : 122300
          },
          "application" : {
            "type" : "string",
            "description" : "The name of the application where the user action has been recorded."
          },
          "internalApplicationId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the application where the user action has been recorded. \n\n This information is useful when calling various REST APIs, for example as a key for time series queries."
          },
          "internalKeyUserActionId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the key user action."
          },
          "speedIndex" : {
            "type" : "integer",
            "description" : "The [speed index](https://dt-url.net/qk1a3r19) of the user action, in milliseconds. \n\n This is calculated as average time it takes for all visible parts of a page to display.",
            "format" : "int32",
            "example" : 122300
          },
          "apdexCategory" : {
            "type" : "string",
            "description" : "The [user experience index](https://dt-url.net/apdexdoc) of the user action.",
            "example" : "SATISFIED",
            "enum" : [ "FRUSTRATED", "SATISFIED", "TOLERATING", "UNKNOWN" ]
          },
          "matchingConversionGoals" : {
            "type" : "array",
            "description" : "A list of conversion goals achieved by the user action. \n\n Additionally, you can define conversion goals for a user session as a whole.",
            "items" : {
              "type" : "string",
              "description" : "A list of conversion goals achieved by the user action. \n\n Additionally, you can define conversion goals for a user session as a whole."
            }
          },
          "networkTime" : {
            "type" : "integer",
            "description" : "The amount of time spent on the data transfer for the user action, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "serverTime" : {
            "type" : "integer",
            "description" : "The amount of time spent on the server-side processing for the user action, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "frontendTime" : {
            "type" : "integer",
            "description" : "The amount of time spent on the frontend rendering for the user action, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "documentInteractiveTime" : {
            "type" : "integer",
            "description" : "The amount of time spent until the document for the user action became interactive, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "thirdPartyResources" : {
            "type" : "integer",
            "description" : "The number of third party resources loaded for the user action.",
            "format" : "int32"
          },
          "thirdPartyBusyTime" : {
            "type" : "integer",
            "description" : "The time spent waiting for third party resources for the user action, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "cdnResources" : {
            "type" : "integer",
            "description" : "The number of resources fetched from a CDN for the user action.",
            "format" : "int32"
          },
          "cdnBusyTime" : {
            "type" : "integer",
            "description" : "The time spent waiting for CDN resources for the user action, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "firstPartyResources" : {
            "type" : "integer",
            "description" : "The number of resources fetched from the originating server for the user action.",
            "format" : "int32"
          },
          "firstPartyBusyTime" : {
            "type" : "integer",
            "description" : "The time spent waiting for resources from the originating server for the user action, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "hasCrash" : {
            "type" : "boolean",
            "description" : "The user action has (`true`) or doesn't have (`false`) a crash."
          },
          "domCompleteTime" : {
            "type" : "integer",
            "description" : "The amount of time until the DOM tree is completed, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "domContentLoadedTime" : {
            "type" : "integer",
            "description" : "The amount of time until the DOM tree is loaded, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "loadEventStart" : {
            "type" : "integer",
            "description" : "The amount of time until the load event started, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "loadEventEnd" : {
            "type" : "integer",
            "description" : "The amount of time until the load event ended, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "navigationStart" : {
            "type" : "integer",
            "description" : "The timestamp of the navigation start, in UTC milliseconds.",
            "format" : "int64",
            "example" : 122300
          },
          "requestStart" : {
            "type" : "integer",
            "description" : "The amount of time until the request started, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "responseStart" : {
            "type" : "integer",
            "description" : "The amount of time until the response started, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "responseEnd" : {
            "type" : "integer",
            "description" : "The amount of time until the response ended, in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "visuallyCompleteTime" : {
            "type" : "integer",
            "description" : "The amount of time until the page is [visually complete](https://dt-url.net/qk1a3r19), in milliseconds.",
            "format" : "int32",
            "example" : 122300
          },
          "syntheticEvent" : {
            "type" : "string",
            "description" : "The name of the [Synthetic event](https://dt-url.net/dq1e3rmm) that triggered the user action."
          },
          "syntheticEventId" : {
            "type" : "string",
            "description" : "The ID of the [Synthetic event](https://dt-url.net/dq1e3rmm) that triggered the user action."
          },
          "keyUserAction" : {
            "type" : "boolean",
            "description" : "The action is (`true`) or is not (`false`) a key action."
          },
          "stringProperties" : {
            "type" : "array",
            "description" : "A list of custom properties of the user session with string values.",
            "items" : {
              "$ref" : "#/components/schemas/StringProperty"
            }
          },
          "longProperties" : {
            "type" : "array",
            "description" : "A list of custom properties of the user session with integer (short or long) values.",
            "items" : {
              "$ref" : "#/components/schemas/LongProperty"
            }
          },
          "doubleProperties" : {
            "type" : "array",
            "description" : "A list of custom properties of the user session with floating-point numerical values.",
            "items" : {
              "$ref" : "#/components/schemas/DoubleProperty"
            }
          },
          "dateProperties" : {
            "type" : "array",
            "description" : "A list of custom properties of the user session with date values.",
            "items" : {
              "$ref" : "#/components/schemas/DateProperty"
            }
          },
          "userActionPropertyCount" : {
            "type" : "integer",
            "description" : "The total number of properties in the user action.",
            "format" : "int32"
          },
          "customErrorCount" : {
            "type" : "integer",
            "description" : "The total number of custom errors during the user action.",
            "format" : "int32"
          },
          "javascriptErrorCount" : {
            "type" : "integer",
            "description" : "The total number of Javascript errors during the user action.",
            "format" : "int32"
          },
          "requestErrorCount" : {
            "type" : "integer",
            "description" : "The total number of request errors during the user action.",
            "format" : "int32"
          },
          "largestContentfulPaint" : {
            "type" : "integer",
            "description" : "The largest contentful paint (LCP) is the time (in milliseconds) that the largest element on the page took to render. \n\nThe LCP is an important user-centric metric for measuring load speed. It marks the point when the page's main content is likely loaded. A low LCP indicates that the page loads quickly.",
            "format" : "int32"
          },
          "firstInputDelay" : {
            "type" : "integer",
            "description" : "The first input delay (FID) is the time (in milliseconds) that the browser took to respond to the first user input. \n\nThe FID is an important user-centric metric for measuring load responsiveness. It quantifies the user experience when trying to interact with unresponsive pages. A low FID indicates that the page is usable.",
            "format" : "int32"
          },
          "totalBlockingTime" : {
            "type" : "integer",
            "description" : "The total blocking time is the total time (in milliseconds) between the first contentful paint and the time to interactive, during which the browser has been blocked long enough to prevent input responsiveness.",
            "format" : "int32"
          },
          "cumulativeLayoutShift" : {
            "type" : "number",
            "description" : "The cumulative layout shift (CLS) is the total amount of all individual scores for every unexpected layout shift that occurs during the entire lifespan of the page. \n\nThe CLS is an important user-centric metric for measuring visual stability. It quantifies how often users experience unexpected layout shifts. A low CLS indicates that the page is delightful.",
            "format" : "double"
          }
        },
        "description" : "A user action. \n\n A user action is a single action performed by the user as part of a user session, for example a mouse click."
      },
      "DtaqlResultAsTree" : {
        "type" : "object",
        "properties" : {
          "extrapolationLevel" : {
            "type" : "integer",
            "description" : "The extrapolation level of the result. \n\nTo improve performance, some results may be calculated from a subset of actual data. The extrapolation level indicates the share of actual data in the result. \n\nThe number is the denominator of a fraction and indicates the amount of actual data. The value `1` means that the result contains only the actual data. The value `4` means that result is calculated using 1/4 of the actual data. \n\nIf you need the analysis to be based on the actual data, reduce the timeframe of your query. For example, in case of extrapolation level of `4`, try to use 1/4 of the original timeframe.",
            "format" : "int32",
            "example" : 1
          },
          "additionalColumnNames" : {
            "type" : "array",
            "description" : "A list of columns in the additionalValues table. \n\n Only present if the endpoint was called with `deepLinkFields=true` parameter.",
            "items" : {
              "type" : "string"
            }
          },
          "additionalValues" : {
            "type" : "array",
            "description" : "A list of data rows. \n\n Each array element represents a row in the table of additionally linked fields. \n\nThe size of each data row and the order of the elements correspond to the **additionalColumnNames** content.\n\n Only present if the endpoint was called with `deepLinkFields=true` parameter.",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "explanations" : {
            "type" : "array",
            "description" : "Additional information about the query and the result, that helps to understand the query and how the result was calculated. \n\nOnly appears when the **explain** parameter is set to `true`. \n\nExample: The number of results was limited to the default of 50. Use the `LIMIT` clause to increase or decrease this limit.",
            "items" : {
              "type" : "string"
            }
          },
          "branchNames" : {
            "type" : "array",
            "description" : "A list of branches of the tree. \n\n Typically, these are fields from the `SELECT` clause, that have been used in the `GROUP BY` clause.",
            "items" : {
              "type" : "string"
            }
          },
          "leafNames" : {
            "type" : "array",
            "description" : "A list of leaves on each tree branch. \n\n Typically, these are fields from the `SELECT` clause, that have not been used in the `GROUP BY` clause.",
            "items" : {
              "type" : "string"
            }
          },
          "values" : {
            "type" : "object",
            "description" : "The user session query result as a tree."
          }
        },
        "description" : "The user session query result as a tree.",
        "example" : {
          "extrapolationLevel" : 1,
          "branchNames" : [ "country", "city" ],
          "leafNames" : [ "avg(duration)", "max(duration)" ],
          "values" : {
            "Austria" : {
              "Klagenfurt" : [ "65996.75", "129940" ],
              "Linz" : [ "57360.86", "222912" ]
            },
            "Poland" : {
              "Gdansk" : [ "22482.2", "351263" ]
            }
          }
        }
      },
      "EventRestEntry" : {
        "type" : "object",
        "properties" : {
          "startTime" : {
            "type" : "integer",
            "description" : "The timestamp of the event detection, in UTC milliseconds.",
            "format" : "int64"
          },
          "endTime" : {
            "type" : "integer",
            "description" : "The timestamp of the event closure, in UTC milliseconds",
            "format" : "int64"
          },
          "entityId" : {
            "type" : "string",
            "description" : "The ID of the affected Dynatrace entity."
          },
          "entityName" : {
            "type" : "string",
            "description" : "The name of the affected Dynatrace entity."
          },
          "severityLevel" : {
            "type" : "string",
            "description" : "The severity of the event.",
            "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "MONITORING_UNAVAILABLE", "PERFORMANCE", "RESOURCE_CONTENTION" ]
          },
          "impactLevel" : {
            "type" : "string",
            "description" : "The impact level of the event. It shows what is affected by the problem: infrastructure, service, or application.",
            "enum" : [ "APPLICATION", "ENVIRONMENT", "INFRASTRUCTURE", "SERVICE" ]
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "APPLICATION_JS_FRAMEWORK_DETECTED", "APPLICATION_OVERLOAD_PREVENTION", "AVAILABILITY_EVENT", "CONNECTION_LOST", "CPU_SATURATED", "CUSTOM_ALERT", "CUSTOM_ANNOTATION", "CUSTOM_APPLICATION_OVERLOAD_PREVENTION", "CUSTOM_APP_CRASH_RATE_INCREASED", "CUSTOM_CONFIGURATION", "CUSTOM_DEPLOYMENT", "CUSTOM_INFO", "DATABASE_CONNECTION_FAILURE", "DEPLOYMENT_CHANGED_CHANGE", "DEPLOYMENT_CHANGED_NEW", "DEPLOYMENT_CHANGED_REMOVED", "DYNATRACE_INTERNAL", "EBS_VOLUME_HIGH_LATENCY", "ELASTIC_LOAD_BALANCER_HIGH_BACKEND_FAILURE_RATE", "ELASTIC_LOAD_BALANCER_HIGH_FAILURE_RATE", "ELASTIC_LOAD_BALANCER_HIGH_UNHEALTHY_HOST_RATE", "ERROR_EVENT", "ESXI_HOST_VM_MOTION_ARRIVED", "ESXI_HOST_VM_MOTION_LEFT", "ESXI_HOST_VM_STARTED", "ESXI_START", "ESXI_VM_DISCONNECTED", "ESXI_VM_MOTION", "ESXI_VM_POWER_OFF", "ESXI_VM_START", "FAILURE_RATE_INCREASED", "HIGH_CONNECTIVITY_FAILURES", "HIGH_DROPPED_PACKETS_RATE", "HIGH_GC_ACTIVITY", "HIGH_LATENCY", "HIGH_NETWORK_ERROR_RATE", "HIGH_NETWORK_LOSS_RATE", "HIGH_NETWORK_UTILIZATION", "HOST_CONNECTION_FAILED", "HOST_CONNECTION_LOST", "HOST_DATASTORE_LOW_DISK_SPACE", "HOST_DISK_LOW_INODES", "HOST_GRACEFULLY_SHUTDOWN", "HOST_LOG_AVAILABILITY", "HOST_LOG_ERROR", "HOST_LOG_MATCHED", "HOST_LOG_PERFORMANCE", "HOST_MAINTENANCE", "HOST_NO_CONNECTION", "HOST_OF_SERVICE_UNAVAILABLE", "HOST_SHUTDOWN", "HOST_TIMEOUT", "HTTP_CHECK_GLOBAL_OUTAGE", "HTTP_CHECK_LOCAL_OUTAGE", "HTTP_CHECK_TEST_LOCATION_SLOWDOWN", "INSUFFICIENT_DISK_QUEUE_DEPTH", "JAVASCRIPT_ERROR_RATE_INCREASED", "LAMBDA_FUNCTION_HIGH_ERROR_RATE", "LOG_AVAILABILITY", "LOG_ERROR", "LOG_MATCHED", "LOG_PERFORMANCE", "LOW_DISK_SPACE", "LOW_STORAGE_SPACE", "MARKED_FOR_TERMINATION", "MEMORY_RESOURCES_EXHAUSTED", "MEMORY_SATURATED", "MOBILE_APPLICATION_OVERLOAD_PREVENTION", "MOBILE_APP_CRASH_RATE_INCREASED", "MONITORING_UNAVAILABLE", "OPENSTACK_HOST_VM_SHUTDOWN", "OPENSTACK_HOST_VM_STARTED", "OPENSTACK_KEYSTONE_SLOW", "OPENSTACK_KEYSTONE_UNHEALTHY", "OPENSTACK_VM_LAUNCH_FAILED", "OPENSTACK_VM_MOTION", "OSI_DOCKER_DEVICEMAPPER_LOW_DATA_SPACE", "OSI_DOCKER_DEVICEMAPPER_LOW_METADATA_SPACE", "OVERLOADED_STORAGE", "PERFORMANCE_EVENT", "PGI_CRASHED_INFO", "PGI_HAPROXY_QUEUED_REQUESTS_HIGH", "PGI_HAPROXY_SESSION_USAGE_HIGH", "PGI_LOG_MATCHED", "PGI_MEMDUMP", "PGI_MYSQL_SLOW_QUERIES_RATE_HIGH", "PGI_OF_SERVICE_UNAVAILABLE", "PGI_RMQ_HIGH_FILE_DESC_USAGE", "PGI_RMQ_HIGH_MEM_USAGE", "PGI_RMQ_HIGH_PROCESS_USAGE", "PGI_RMQ_HIGH_SOCKETS_USAGE", "PGI_RMQ_LOW_DISK_SPACE", "PROCESS_CRASHED", "PROCESS_CUSTOM_AVAILABILITY", "PROCESS_CUSTOM_ERROR", "PROCESS_CUSTOM_PERFORMANCE", "PROCESS_GROUP_LOW_INSTANCE_COUNT", "PROCESS_LOG_AVAILABILITY", "PROCESS_LOG_ERROR", "PROCESS_LOG_PERFORMANCE", "PROCESS_RESTART", "PROCESS_UNAVAILABLE", "RDS_AZ_FAILOVER_COMPLETED", "RDS_AZ_FAILOVER_STARTED", "RDS_BACKUP_COMPLETED", "RDS_BACKUP_STARTED", "RDS_OF_SERVICE_UNAVAILABLE", "RDS_RESTART", "RDS_RESTART_SEQUENCE", "RESOURCE_CONTENTION", "SERVICE_RESPONSE_TIME_DEGRADED", "SLOW_DISK", "SYNTHETIC_AVAILABILITY", "SYNTHETIC_NODE_OUTAGE", "SYNTHETIC_PRIVATE_LOCATION_OUTAGE", "SYNTHETIC_SLOWDOWN", "THREADS_RESOURCES_EXHAUSTED", "UNEXPECTED_HIGH_LOAD", "UNEXPECTED_LOW_LOAD", "USER_ACTION_DURATION_DEGRADATION", "VIRTUAL_MACHINE_SHUTDOWN", "WEB_CHECK_GLOBAL_OUTAGE", "WEB_CHECK_LOCAL_OUTAGE" ]
          },
          "resourceId" : {
            "type" : "string",
            "description" : "The id of the resource the event occurred on."
          },
          "resourceName" : {
            "type" : "string",
            "description" : "The name of the resource the event occurred on."
          },
          "eventStatus" : {
            "type" : "string",
            "description" : "The state of the event: open or closed.",
            "enum" : [ "CLOSED", "OPEN" ]
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Tags of the Dynatrace entity that raised the event.",
            "items" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The encoded ID of the event. The format is *eventID_startTime*. \n\n You should use the value from this field when you need an event ID. "
          }
        },
        "description" : "Set of parameters of the event. \n\n Apart from the general properties mentioned here, which each event has, an actual event has a set of metadata that varies depending on the event type.",
        "example" : {
          "startTime" : 1521042929000,
          "endTime" : 1521542929000,
          "entityId" : "HOST-0000000000000007",
          "entityName" : "Example Host",
          "severityLevel" : "PERFORMANCE",
          "impactLevel" : "INFRASTRUCTURE",
          "eventType" : "SLOW_DISK",
          "eventStatus" : "OPEN",
          "tags" : [ {
            "context" : "CONTEXTLESS",
            "key" : "exampleTag"
          } ],
          "id" : "5915682011263205071_1521042929000",
          "source" : "builtin"
        }
      },
      "EventRestImpact" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The ID of the affected Dynatrace entity."
          },
          "entityName" : {
            "type" : "string",
            "description" : "The name of the affected Dynatrace entity."
          },
          "severityLevel" : {
            "type" : "string",
            "description" : "The severity of the event.",
            "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "MONITORING_UNAVAILABLE", "PERFORMANCE", "RESOURCE_CONTENTION" ]
          },
          "impactLevel" : {
            "type" : "string",
            "description" : "The impact level of the event. It shows what is affected by the problem: infrastructure, service, or application.",
            "enum" : [ "APPLICATION", "ENVIRONMENT", "INFRASTRUCTURE", "SERVICE" ]
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "APPLICATION_JS_FRAMEWORK_DETECTED", "APPLICATION_OVERLOAD_PREVENTION", "AVAILABILITY_EVENT", "CONNECTION_LOST", "CPU_SATURATED", "CUSTOM_ALERT", "CUSTOM_ANNOTATION", "CUSTOM_APPLICATION_OVERLOAD_PREVENTION", "CUSTOM_APP_CRASH_RATE_INCREASED", "CUSTOM_CONFIGURATION", "CUSTOM_DEPLOYMENT", "CUSTOM_INFO", "DATABASE_CONNECTION_FAILURE", "DEPLOYMENT_CHANGED_CHANGE", "DEPLOYMENT_CHANGED_NEW", "DEPLOYMENT_CHANGED_REMOVED", "DYNATRACE_INTERNAL", "EBS_VOLUME_HIGH_LATENCY", "ELASTIC_LOAD_BALANCER_HIGH_BACKEND_FAILURE_RATE", "ELASTIC_LOAD_BALANCER_HIGH_FAILURE_RATE", "ELASTIC_LOAD_BALANCER_HIGH_UNHEALTHY_HOST_RATE", "ERROR_EVENT", "ESXI_HOST_VM_MOTION_ARRIVED", "ESXI_HOST_VM_MOTION_LEFT", "ESXI_HOST_VM_STARTED", "ESXI_START", "ESXI_VM_DISCONNECTED", "ESXI_VM_MOTION", "ESXI_VM_POWER_OFF", "ESXI_VM_START", "FAILURE_RATE_INCREASED", "HIGH_CONNECTIVITY_FAILURES", "HIGH_DROPPED_PACKETS_RATE", "HIGH_GC_ACTIVITY", "HIGH_LATENCY", "HIGH_NETWORK_ERROR_RATE", "HIGH_NETWORK_LOSS_RATE", "HIGH_NETWORK_UTILIZATION", "HOST_CONNECTION_FAILED", "HOST_CONNECTION_LOST", "HOST_DATASTORE_LOW_DISK_SPACE", "HOST_DISK_LOW_INODES", "HOST_GRACEFULLY_SHUTDOWN", "HOST_LOG_AVAILABILITY", "HOST_LOG_ERROR", "HOST_LOG_MATCHED", "HOST_LOG_PERFORMANCE", "HOST_MAINTENANCE", "HOST_NO_CONNECTION", "HOST_OF_SERVICE_UNAVAILABLE", "HOST_SHUTDOWN", "HOST_TIMEOUT", "HTTP_CHECK_GLOBAL_OUTAGE", "HTTP_CHECK_LOCAL_OUTAGE", "HTTP_CHECK_TEST_LOCATION_SLOWDOWN", "INSUFFICIENT_DISK_QUEUE_DEPTH", "JAVASCRIPT_ERROR_RATE_INCREASED", "LAMBDA_FUNCTION_HIGH_ERROR_RATE", "LOG_AVAILABILITY", "LOG_ERROR", "LOG_MATCHED", "LOG_PERFORMANCE", "LOW_DISK_SPACE", "LOW_STORAGE_SPACE", "MARKED_FOR_TERMINATION", "MEMORY_RESOURCES_EXHAUSTED", "MEMORY_SATURATED", "MOBILE_APPLICATION_OVERLOAD_PREVENTION", "MOBILE_APP_CRASH_RATE_INCREASED", "MONITORING_UNAVAILABLE", "OPENSTACK_HOST_VM_SHUTDOWN", "OPENSTACK_HOST_VM_STARTED", "OPENSTACK_KEYSTONE_SLOW", "OPENSTACK_KEYSTONE_UNHEALTHY", "OPENSTACK_VM_LAUNCH_FAILED", "OPENSTACK_VM_MOTION", "OSI_DOCKER_DEVICEMAPPER_LOW_DATA_SPACE", "OSI_DOCKER_DEVICEMAPPER_LOW_METADATA_SPACE", "OVERLOADED_STORAGE", "PERFORMANCE_EVENT", "PGI_CRASHED_INFO", "PGI_HAPROXY_QUEUED_REQUESTS_HIGH", "PGI_HAPROXY_SESSION_USAGE_HIGH", "PGI_LOG_MATCHED", "PGI_MEMDUMP", "PGI_MYSQL_SLOW_QUERIES_RATE_HIGH", "PGI_OF_SERVICE_UNAVAILABLE", "PGI_RMQ_HIGH_FILE_DESC_USAGE", "PGI_RMQ_HIGH_MEM_USAGE", "PGI_RMQ_HIGH_PROCESS_USAGE", "PGI_RMQ_HIGH_SOCKETS_USAGE", "PGI_RMQ_LOW_DISK_SPACE", "PROCESS_CRASHED", "PROCESS_CUSTOM_AVAILABILITY", "PROCESS_CUSTOM_ERROR", "PROCESS_CUSTOM_PERFORMANCE", "PROCESS_GROUP_LOW_INSTANCE_COUNT", "PROCESS_LOG_AVAILABILITY", "PROCESS_LOG_ERROR", "PROCESS_LOG_PERFORMANCE", "PROCESS_RESTART", "PROCESS_UNAVAILABLE", "RDS_AZ_FAILOVER_COMPLETED", "RDS_AZ_FAILOVER_STARTED", "RDS_BACKUP_COMPLETED", "RDS_BACKUP_STARTED", "RDS_OF_SERVICE_UNAVAILABLE", "RDS_RESTART", "RDS_RESTART_SEQUENCE", "RESOURCE_CONTENTION", "SERVICE_RESPONSE_TIME_DEGRADED", "SLOW_DISK", "SYNTHETIC_AVAILABILITY", "SYNTHETIC_NODE_OUTAGE", "SYNTHETIC_PRIVATE_LOCATION_OUTAGE", "SYNTHETIC_SLOWDOWN", "THREADS_RESOURCES_EXHAUSTED", "UNEXPECTED_HIGH_LOAD", "UNEXPECTED_LOW_LOAD", "USER_ACTION_DURATION_DEGRADATION", "VIRTUAL_MACHINE_SHUTDOWN", "WEB_CHECK_GLOBAL_OUTAGE", "WEB_CHECK_LOCAL_OUTAGE" ]
          },
          "resourceId" : {
            "type" : "string",
            "description" : "The id of the resource the event occurred on."
          },
          "resourceName" : {
            "type" : "string",
            "description" : "The name of the resource the event occurred on."
          }
        },
        "description" : "The information about the event's impact."
      },
      "TagInfo" : {
        "required" : [ "context", "key" ],
        "type" : "object",
        "properties" : {
          "context" : {
            "type" : "string",
            "description" : "The origin of the tag, such as AWS or Cloud Foundry. \n\n Custom tags use the `CONTEXTLESS` value.",
            "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_CLOUD", "KUBERNETES" ]
          },
          "key" : {
            "maxLength" : 2000,
            "minLength" : 1,
            "type" : "string",
            "description" : "The key of the tag. \n\n Custom tags have the tag value here."
          },
          "value" : {
            "maxLength" : 2000,
            "minLength" : 0,
            "type" : "string",
            "description" : "The value of the tag. \n\n Not applicable to custom tags."
          }
        },
        "description" : "Tag of a Dynatrace entity."
      },
      "EventStoreResult" : {
        "type" : "object",
        "properties" : {
          "storedEventIds" : {
            "type" : "array",
            "description" : "List of event IDs for information-only-events. \n\n This field is provided for compatibility reasons. You should use the values from the **storedIds** field instead.",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "storedIds" : {
            "type" : "array",
            "description" : "List of **encoded** event IDs for information-only-events.",
            "items" : {
              "type" : "string"
            }
          },
          "storedCorrelationIds" : {
            "type" : "array",
            "description" : "List of correlation IDs for problem-opening-events.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Contains IDs of all custom events, created by an event push call."
      },
      "EventCreation" : {
        "required" : [ "attachRules", "eventType", "source" ],
        "type" : "object",
        "properties" : {
          "eventType" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "AVAILABILITY_EVENT", "CUSTOM_ALERT", "CUSTOM_ANNOTATION", "CUSTOM_CONFIGURATION", "CUSTOM_DEPLOYMENT", "CUSTOM_INFO", "ERROR_EVENT", "MARKED_FOR_TERMINATION", "PERFORMANCE_EVENT", "RESOURCE_CONTENTION" ]
          },
          "start" : {
            "type" : "integer",
            "description" : "The start timestamp of the event, in UTC milliseconds. \n\nIf not set, the current timestamp is used. \n\nYou can report information-only events up to **30 days** into the past. \n\nYou can report problem-opening events up to **60 minutes** into the past.",
            "format" : "int64"
          },
          "end" : {
            "type" : "integer",
            "description" : "The end timestamp of the event, in UTC milliseconds. \n\nIf not set, the current time is used for information-only events. \n\nNot applicable to problem-opening events. Such an event stays open until it times out depending on the **timeoutMinutes** parameter.",
            "format" : "int64"
          },
          "timeoutMinutes" : {
            "type" : "integer",
            "description" : "The timeout for problem-opening events in minutes. Not applicable to information-only events. \n\nIf not set, 15 minutes is used. The maximum allowed value is 120 minutes. \n\nYou can refresh the event by sending the same payload again.",
            "format" : "int32"
          },
          "attachRules" : {
            "$ref" : "#/components/schemas/PushEventAttachRules"
          },
          "customProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "description" : "The set of any properties related to the event, in the *\"key\" : \"value\"* format."
            },
            "description" : "The set of any properties related to the event, in the *\"key\" : \"value\"* format."
          },
          "source" : {
            "type" : "string",
            "description" : "The name or ID of the external source of the event."
          },
          "annotationType" : {
            "type" : "string",
            "description" : "The type of the custom annotation, for example `DNS route has been changed`."
          },
          "annotationDescription" : {
            "type" : "string",
            "description" : "A detailed description of the custom annotation, for example `DNS route has been changed to x.mydomain.com`."
          },
          "description" : {
            "type" : "string",
            "description" : "The textual description of the configuration change."
          },
          "deploymentName" : {
            "type" : "string",
            "description" : "The ID of the triggered deployment."
          },
          "deploymentVersion" : {
            "type" : "string",
            "description" : "The version of the triggered deployment."
          },
          "timeseriesIds" : {
            "type" : "array",
            "description" : "A list of timeseries IDs, related to the event.",
            "items" : {
              "type" : "string"
            }
          },
          "deploymentProject" : {
            "type" : "string",
            "description" : "The project name of the deployed package."
          },
          "ciBackLink" : {
            "type" : "string",
            "description" : "The link to the deployed artifact within the 3rd party system."
          },
          "remediationAction" : {
            "type" : "string",
            "description" : "The link to the deployment related remediation action within the external tool."
          },
          "original" : {
            "type" : "string",
            "description" : "The previous value of the configuration."
          },
          "changed" : {
            "type" : "string",
            "description" : "The new value of the configuration that has been set by the event."
          },
          "configuration" : {
            "type" : "string",
            "description" : "The ID or the name of the configuration that has been changed by the event."
          },
          "title" : {
            "type" : "string",
            "description" : "The title of the configuration that has been set by the event."
          },
          "allowDavisMerge" : {
            "type" : "boolean",
            "description" : "Allow Davis AI to merge this event into existing problems (true) or force creating a new problem (false).\n\nThis only applies to problem-opening event types."
          }
        },
        "description" : "Configuration of the custom event.",
        "example" : {
          "eventType" : "CUSTOM_ANNOTATION",
          "start" : 1521042929000,
          "end" : 1521542929000,
          "attachRules" : {
            "entityIds" : [ "CUSTOM_DEVICE-0000000000000007" ],
            "tagRule" : [ {
              "meTypes" : [ "HOST" ],
              "tags" : [ {
                "context" : "CONTEXTLESS",
                "key" : "customTag"
              } ]
            } ]
          },
          "source" : "OpsControl",
          "annotationType" : "defect",
          "annotationDescription" : "The coffee machine is broken"
        }
      },
      "PushEventAttachRules" : {
        "type" : "object",
        "properties" : {
          "entityIds" : {
            "type" : "array",
            "description" : "A list of entity IDs to which the event should be attached.",
            "items" : {
              "type" : "string"
            }
          },
          "tagRule" : {
            "type" : "array",
            "description" : "A set of matching rules to dynamically pick up entities based on tags. \n\nOnly entities seen within the last **24 hours** are taken into account for tag-based matching rules.",
            "items" : {
              "$ref" : "#/components/schemas/TagMatchRule"
            }
          }
        },
        "description" : "The set of rules defining Dynatrace entities to be associated with the event.\n\nYou can specify tags to dynamically match Dynatrace entities or IDs of specific entities.\n\nAt least one entity ID or tag is required."
      },
      "TagMatchRule" : {
        "required" : [ "meTypes", "tags" ],
        "type" : "object",
        "properties" : {
          "meTypes" : {
            "type" : "array",
            "description" : "The list of types of the Dynatrace entities (for example hosts or services) you want to pick up by matching.",
            "items" : {
              "type" : "string",
              "enum" : [ "APM_SECURITY_GATEWAY", "APPLICATION", "APPLICATION_METHOD", "APPLICATION_METHOD_GROUP", "APPMON_SERVER", "APPMON_SYSTEM_PROFILE", "AUTO_SCALING_GROUP", "AUXILIARY_SYNTHETIC_TEST", "AWS_APPLICATION_LOAD_BALANCER", "AWS_AVAILABILITY_ZONE", "AWS_CREDENTIALS", "AWS_LAMBDA_FUNCTION", "AWS_NETWORK_LOAD_BALANCER", "AZURE_API_MANAGEMENT_SERVICE", "AZURE_APPLICATION_GATEWAY", "AZURE_COSMOS_DB", "AZURE_CREDENTIALS", "AZURE_EVENT_HUB", "AZURE_EVENT_HUB_NAMESPACE", "AZURE_FUNCTION_APP", "AZURE_IOT_HUB", "AZURE_LOAD_BALANCER", "AZURE_MGMT_GROUP", "AZURE_REDIS_CACHE", "AZURE_REGION", "AZURE_SERVICE_BUS_NAMESPACE", "AZURE_SERVICE_BUS_QUEUE", "AZURE_SERVICE_BUS_TOPIC", "AZURE_SQL_DATABASE", "AZURE_SQL_ELASTIC_POOL", "AZURE_SQL_SERVER", "AZURE_STORAGE_ACCOUNT", "AZURE_SUBSCRIPTION", "AZURE_TENANT", "AZURE_VM", "AZURE_VM_SCALE_SET", "AZURE_WEB_APP", "CF_APPLICATION", "CF_FOUNDATION", "CINDER_VOLUME", "CLOUD_APPLICATION", "CLOUD_APPLICATION_INSTANCE", "CLOUD_APPLICATION_NAMESPACE", "CLOUD_NETWORK_INGRESS", "CLOUD_NETWORK_POLICY", "CONTAINER_GROUP", "CONTAINER_GROUP_INSTANCE", "CUSTOM_APPLICATION", "CUSTOM_DEVICE", "CUSTOM_DEVICE_GROUP", "DCRUM_APPLICATION", "DCRUM_SERVICE", "DCRUM_SERVICE_INSTANCE", "DEVICE_APPLICATION_METHOD", "DISK", "DOCKER_CONTAINER_GROUP", "DOCKER_CONTAINER_GROUP_INSTANCE", "DYNAMO_DB_TABLE", "EBS_VOLUME", "EC2_INSTANCE", "ELASTIC_LOAD_BALANCER", "ENVIRONMENT", "EXTERNAL_SYNTHETIC_TEST_STEP", "GCP_ZONE", "GEOLOCATION", "GEOLOC_SITE", "GOOGLE_COMPUTE_ENGINE", "HOST", "HOST_GROUP", "HTTP_CHECK", "HTTP_CHECK_STEP", "HYPERVISOR", "KUBERNETES_CLUSTER", "KUBERNETES_NODE", "KUBERNETES_SERVICE", "MOBILE_APPLICATION", "NETWORK_INTERFACE", "NEUTRON_SUBNET", "OPENSTACK_PROJECT", "OPENSTACK_REGION", "OPENSTACK_VM", "OS", "PROCESS_GROUP", "PROCESS_GROUP_INSTANCE", "QUEUE", "RELATIONAL_DATABASE_SERVICE", "SERVICE", "SERVICE_INSTANCE", "SERVICE_METHOD", "SERVICE_METHOD_GROUP", "SWIFT_CONTAINER", "SYNTHETIC_LOCATION", "SYNTHETIC_TEST", "SYNTHETIC_TEST_STEP", "VIRTUALMACHINE", "VMWARE_DATACENTER" ]
            }
          },
          "tags" : {
            "type" : "array",
            "description" : "The list of tags you want to use for matching. At least one tag is required. \n\n You can use custom tags from the UI, imported tags, and tags based on environment variables.",
            "items" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          }
        },
        "description" : "The list of tags to be used for matching Dynatrace entities."
      },
      "EventQueryResult" : {
        "type" : "object",
        "properties" : {
          "nextCursor" : {
            "type" : "string",
            "description" : "The cursor for the next 150 events, fitting the specified criteria. \n\n Set this value for the **cursor** query parameter. Without it you'll get the first 150 events again. \n\nYou don't have to specify any additional parameters, because the cursor already contains all of them."
          },
          "from" : {
            "type" : "integer",
            "description" : "Start of the query timeframe.",
            "format" : "int64"
          },
          "to" : {
            "type" : "integer",
            "description" : "End of the query timeframe.",
            "format" : "int64"
          },
          "totalEventCount" : {
            "type" : "integer",
            "description" : "The total amount of events, fitting the specified criteria.",
            "format" : "int64"
          },
          "events" : {
            "type" : "array",
            "description" : "The list of events.",
            "items" : {
              "$ref" : "#/components/schemas/EventRestEntry"
            }
          }
        },
        "description" : "Events of the environment.",
        "example" : {
          "nextCursor" : "AgEBAAFn5IIFrgEAAAFofwDTrgAAAQAcMTY4N2RhYzViZTAtZmUxODEwOWQ5YTA1MTIyNQ%3D%3D",
          "from" : 1521042929000,
          "to" : 1521542929000,
          "totalEventCount" : 2,
          "events" : [ {
            "startTime" : 1521042929000,
            "endTime" : 1521542929000,
            "entityId" : "HOST-0000000000000007",
            "entityName" : "Example Host",
            "severityLevel" : "PERFORMANCE",
            "impactLevel" : "INFRASTRUCTURE",
            "eventType" : "SLOW_DISK",
            "eventStatus" : "OPEN",
            "tags" : [ {
              "context" : "CONTEXTLESS",
              "key" : "exampleTag"
            } ],
            "id" : "5915682011263205071_1521042929000",
            "source" : "builtin"
          }, {
            "startTime" : 1521042929000,
            "endTime" : 1521542929000,
            "entityId" : "HOST-0000000000000007",
            "entityName" : "Example Host",
            "severityLevel" : "PERFORMANCE",
            "impactLevel" : "INFRASTRUCTURE",
            "eventType" : "SLOW_DISK",
            "eventStatus" : "OPEN",
            "tags" : [ {
              "context" : "CONTEXTLESS",
              "key" : "exampleTag"
            } ],
            "id" : "5915682011263205071_1521042929000",
            "source" : "builtin"
          } ]
        }
      },
      "ConstraintViolation" : {
        "type" : "object",
        "properties" : {
          "parameterLocation" : {
            "type" : "string",
            "enum" : [ "PATH", "PAYLOAD_BODY", "QUERY" ]
          },
          "location" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          }
        },
        "description" : "A list of constraint violations"
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "constraintViolations" : {
            "type" : "array",
            "description" : "A list of constraint violations",
            "items" : {
              "$ref" : "#/components/schemas/ConstraintViolation"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "The error message"
          },
          "code" : {
            "type" : "integer",
            "description" : "The HTTP status code",
            "format" : "int32"
          }
        }
      },
      "ErrorEnvelope" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/Error"
          }
        }
      },
      "3rdPartyEventOpenNotification" : {
        "required" : [ "eventId", "eventType", "locationIds", "name", "reason", "startTimestamp", "testId" ],
        "type" : "object",
        "properties" : {
          "testId" : {
            "type" : "string",
            "description" : "The ID of the third-party synthetic monitor."
          },
          "eventId" : {
            "type" : "string",
            "description" : "The unique ID of the event."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the event."
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "testOutage", "testSlowdown" ]
          },
          "reason" : {
            "type" : "string",
            "description" : "The cause of the event."
          },
          "startTimestamp" : {
            "type" : "integer",
            "description" : "The start timestamp of the event, in UTC milliseconds.",
            "format" : "int64"
          },
          "locationIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of IDs of third-party synthetic locations where the event happens.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The open third-party synthetic event."
      },
      "3rdPartyEventResolvedNotification" : {
        "required" : [ "endTimestamp", "eventId", "testId" ],
        "type" : "object",
        "properties" : {
          "testId" : {
            "type" : "string",
            "description" : "The ID of the third-party synthetic monitor."
          },
          "eventId" : {
            "type" : "string",
            "description" : "The unique ID of the event."
          },
          "endTimestamp" : {
            "type" : "integer",
            "description" : "The end timestamp of the event, in UTC milliseconds.",
            "format" : "int64"
          }
        },
        "description" : "The closed third-party synthetic event."
      },
      "3rdPartySyntheticEvents" : {
        "required" : [ "syntheticEngineName" ],
        "type" : "object",
        "properties" : {
          "syntheticEngineName" : {
            "type" : "string",
            "description" : "The type of the third-party synthetic monitor."
          },
          "open" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of open third-party synthetic events.",
            "items" : {
              "$ref" : "#/components/schemas/3rdPartyEventOpenNotification"
            }
          },
          "resolved" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of closed third-party synthetic events.",
            "items" : {
              "$ref" : "#/components/schemas/3rdPartyEventResolvedNotification"
            }
          }
        },
        "description" : "The list of third-party synthetic events."
      },
      "StateModification" : {
        "required" : [ "state" ],
        "type" : "object",
        "properties" : {
          "state" : {
            "type" : "string",
            "description" : "The new operation state for all third-party Synthetic monitors.",
            "enum" : [ "ACTIVE", "HIDDEN", "INACTIVE" ]
          }
        },
        "description" : "Operation state to be set for all third-party Synthetic monitors"
      },
      "3rdPartySyntheticLocation" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the location."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the location, displayed in the UI."
          },
          "ip" : {
            "type" : "string",
            "description" : "The IP address of the location."
          }
        },
        "description" : "The third-party Synthetic location."
      },
      "3rdPartySyntheticLocationTestResult" : {
        "required" : [ "id", "startTimestamp", "stepResults", "success" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the location."
          },
          "startTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of text execution start, in UTC milliseconds.",
            "format" : "int64"
          },
          "successRate" : {
            "type" : "number",
            "description" : "The overall availability of the monitor from this location, percent. \n\n If absent, calculated as the number of successful steps compared to the overall number of steps.",
            "format" : "double"
          },
          "success" : {
            "type" : "boolean",
            "description" : "If the test was successful (`true`) or failed (`false`) - will influence availability timeseries."
          },
          "responseTimeMillis" : {
            "type" : "integer",
            "description" : "The overall response time of the monitor from this location, in milliseconds. \n\n If absent, it is calculated as the sum of response times of all steps.",
            "format" : "int64"
          },
          "stepResults" : {
            "type" : "array",
            "description" : "Results of individual monitor steps.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticMonitorStepResult"
            }
          }
        },
        "description" : "Results of third-party monitor executions per location."
      },
      "3rdPartySyntheticMonitor" : {
        "required" : [ "id", "locations", "scheduleIntervalInSeconds", "title" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the monitor."
          },
          "title" : {
            "type" : "string",
            "description" : "The name of the monitor."
          },
          "description" : {
            "type" : "string",
            "description" : "A description of the monitor."
          },
          "testSetup" : {
            "type" : "string",
            "description" : "The information on monitor setup, for example `browser`."
          },
          "expirationTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the monitor expiration, in UTC milliseconds.",
            "format" : "int64"
          },
          "drilldownLink" : {
            "type" : "string",
            "description" : "The URL to the results of monitor execution."
          },
          "editLink" : {
            "type" : "string",
            "description" : "The URL to edit the monitor in the original UI."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The monitor is enabled (`true`) or disabled (`false`). Default is `true`.\n\n If `true`, set the **deleted** parameter to `false`."
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "The flag of the deleted monitor. Default is `false`. \n\n If `true`, set the **enabled** parameter to `false`."
          },
          "locations" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Locations from which the synthetic monitor runs.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticTestLocation"
            }
          },
          "steps" : {
            "type" : "array",
            "description" : "Steps of the third-party monitor.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticTestStep"
            }
          },
          "scheduleIntervalInSeconds" : {
            "type" : "integer",
            "description" : "The frequency of the monitor, in seconds. The monitor is repeated with the specified interval at the third-party source. \n\nDynatrace expects results of a monitor execution with the specified interval. If you report results to Dynatrace less often, adjust the **noDataTimeout** value accordingly.",
            "format" : "int32"
          },
          "noDataTimeout" : {
            "type" : "integer",
            "description" : "The timeout of the monitor, in seconds. If no result is reported within this time, the availability state switches to unmonitored. Default is doubled frequency of the monitor.",
            "format" : "int32"
          }
        },
        "description" : "The third-party synthetic monitor."
      },
      "3rdPartySyntheticTestResult" : {
        "required" : [ "id", "locationResults" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the third-party synthetic monitor."
          },
          "totalStepCount" : {
            "type" : "integer",
            "description" : "Number of steps in the monitor. Defaults to number of SyntheticTestSteps.",
            "format" : "int32"
          },
          "locationResults" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Results of third-party monitor executions per location.",
            "items" : {
              "$ref" : "#/components/schemas/3rdPartySyntheticLocationTestResult"
            }
          }
        },
        "description" : "The results of third-party synthetic monitor execution."
      },
      "3rdPartySyntheticTests" : {
        "required" : [ "locations", "messageTimestamp", "syntheticEngineName", "tests" ],
        "type" : "object",
        "properties" : {
          "syntheticEngineName" : {
            "type" : "string",
            "description" : "The type of the third-party synthetic monitor."
          },
          "syntheticEngineIconUrl" : {
            "type" : "string",
            "description" : "The URL of the third-party synthetic monitor icon."
          },
          "messageTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the message creation, in UTC milliseconds.",
            "format" : "int64"
          },
          "locations" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of third-party synthetic locations.",
            "items" : {
              "$ref" : "#/components/schemas/3rdPartySyntheticLocation"
            }
          },
          "tests" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of third-party synthetic monitors.",
            "items" : {
              "$ref" : "#/components/schemas/3rdPartySyntheticMonitor"
            }
          },
          "testResults" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of results of third-party synthetic monitor execution.",
            "items" : {
              "$ref" : "#/components/schemas/3rdPartySyntheticTestResult"
            }
          }
        }
      },
      "SyntheticMonitorError" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "The error code.",
            "format" : "int32"
          },
          "message" : {
            "type" : "string",
            "description" : "The error message."
          }
        },
        "description" : "The error message of a synthetic monitor step."
      },
      "SyntheticMonitorStepResult" : {
        "required" : [ "id", "startTimestamp" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "ID of the step. It is unique within the test definition.",
            "format" : "int64"
          },
          "startTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of test step execution, UTC milliseconds.",
            "format" : "int64"
          },
          "responseTimeMillis" : {
            "type" : "integer",
            "description" : "The response time of the step, in milliseconds. \n\n Absent when no meaningful response time is available (as may be the case for certain error conditions such as a misconfigured step script).",
            "format" : "int64"
          },
          "error" : {
            "$ref" : "#/components/schemas/SyntheticMonitorError"
          }
        },
        "description" : "The result of the individual step of a synthetic monitor."
      },
      "SyntheticTestLocation" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the location."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The location is enabled/disabled. Default is `true`, enabling the location."
          }
        },
        "description" : "Synthetic test location."
      },
      "SyntheticTestStep" : {
        "required" : [ "id", "title" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The ID of the step.",
            "format" : "int64"
          },
          "title" : {
            "type" : "string",
            "description" : "The name of the step, displayed in the UI."
          }
        },
        "description" : "The step of a synthetic monitor."
      },
      "ManualApplication" : {
        "type" : "object",
        "properties" : {
          "applicationId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the application."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the application."
          },
          "monitoringEnabled" : {
            "type" : "boolean",
            "description" : "Monitoring is enabled (`true`) or disabled (`false`)."
          },
          "revision" : {
            "type" : "string",
            "description" : "The application settings revision."
          }
        },
        "description" : "Parameters of a manually injected application."
      },
      "MaintenanceWindow" : {
        "required" : [ "schedule", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the maintenance window."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the maintenance: planned or unplanned.",
            "enum" : [ "Planned", "Unplanned" ]
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the maintenance purpose."
          },
          "suppressAlerts" : {
            "type" : "boolean",
            "description" : "Alerting during maintenance is enabled (`false`) or disabled (`true`)."
          },
          "suppressProblems" : {
            "type" : "boolean",
            "description" : "Problem detection during maintenance is enabled (`false`) or disabled (`true`)."
          },
          "scope" : {
            "$ref" : "#/components/schemas/MaintenanceWindowScope"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/MaintenanceWindowSchedule"
          }
        },
        "description" : "Parameters of the maintenance window."
      },
      "MaintenanceWindowRecurrence" : {
        "required" : [ "duration", "start" ],
        "type" : "object",
        "properties" : {
          "day" : {
            "type" : "string",
            "description" : "The day of the week for weekly maintenance. \n\n The format is the full name of the day in upper case, for example `WEDNESDAY`.",
            "enum" : [ "FRIDAY", "MONDAY", "SATURDAY", "SUNDAY", "THURSDAY", "TUESDAY", "WEDNESDAY" ]
          },
          "dayOfMonth" : {
            "type" : "integer",
            "description" : "The day of the month for monthly maintenance.",
            "format" : "int32"
          },
          "start" : {
            "type" : "string",
            "description" : "The start time of the maintenance window. The format is `HH:mm`."
          },
          "duration" : {
            "type" : "integer",
            "description" : "The duration of the maintenance window in minutes.",
            "format" : "int32"
          }
        },
        "description" : "The recurrence of the maintenance window."
      },
      "MaintenanceWindowSchedule" : {
        "required" : [ "maintenanceEnd", "maintenanceStart", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Recurrence of the schedule.",
            "enum" : [ "Day", "Month", "Once", "Week" ]
          },
          "timezoneId" : {
            "type" : "string",
            "description" : "The time zone of the start and end time. Default time zone is UTC. \n\n You can user either UTC offset `UTC+01:00` format or the IANA Time Zone Database format."
          },
          "maintenanceStart" : {
            "type" : "string",
            "description" : "The start date and time of the maintenance window in the `yyyy-MM-dd HH:mm` format."
          },
          "maintenanceEnd" : {
            "type" : "string",
            "description" : "The end date and time of the maintenance window in the `yyyy-MM-dd HH:mm` format."
          },
          "recurrence" : {
            "$ref" : "#/components/schemas/MaintenanceWindowRecurrence"
          }
        },
        "description" : "An object defining date, time, and recurrence of the maintenance window."
      },
      "MaintenanceWindowScope" : {
        "type" : "object",
        "properties" : {
          "entities" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Defines Dynatrace entities to be included in scope, for example hosts, services, process groups. \n\nAllowed values are Dynatrace entity IDs.",
            "items" : {
              "type" : "string"
            }
          },
          "matches" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "An object defining a matching rule for dynamic scope formation. An empty rule matches for all entities.",
            "items" : {
              "$ref" : "#/components/schemas/MonitoredEntityFilter"
            }
          }
        },
        "description" : "An object defining the scope of your maintenance window. \n\nYou can specify particular Dynatrace entities or matching rules for dynamic formation of the scope. \n\n If no scope is specified, the maintenance applies to the entire environment. \n\n To specify the scope at least one entity or matching rule must be specified."
      },
      "MonitoredEntityFilter" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the Dynatrace entities (for example, hosts or services) you want to pick up by matching.",
            "enum" : [ "APM_SECURITY_GATEWAY", "APPLICATION", "APPLICATION_METHOD", "APPLICATION_METHOD_GROUP", "APPMON_SERVER", "APPMON_SYSTEM_PROFILE", "AUTO_SCALING_GROUP", "AUXILIARY_SYNTHETIC_TEST", "AWS_APPLICATION_LOAD_BALANCER", "AWS_AVAILABILITY_ZONE", "AWS_CREDENTIALS", "AWS_LAMBDA_FUNCTION", "AWS_NETWORK_LOAD_BALANCER", "AZURE_API_MANAGEMENT_SERVICE", "AZURE_APPLICATION_GATEWAY", "AZURE_COSMOS_DB", "AZURE_CREDENTIALS", "AZURE_EVENT_HUB", "AZURE_EVENT_HUB_NAMESPACE", "AZURE_FUNCTION_APP", "AZURE_IOT_HUB", "AZURE_LOAD_BALANCER", "AZURE_MGMT_GROUP", "AZURE_REDIS_CACHE", "AZURE_REGION", "AZURE_SERVICE_BUS_NAMESPACE", "AZURE_SERVICE_BUS_QUEUE", "AZURE_SERVICE_BUS_TOPIC", "AZURE_SQL_DATABASE", "AZURE_SQL_ELASTIC_POOL", "AZURE_SQL_SERVER", "AZURE_STORAGE_ACCOUNT", "AZURE_SUBSCRIPTION", "AZURE_TENANT", "AZURE_VM", "AZURE_VM_SCALE_SET", "AZURE_WEB_APP", "CF_APPLICATION", "CF_FOUNDATION", "CINDER_VOLUME", "CLOUD_APPLICATION", "CLOUD_APPLICATION_INSTANCE", "CLOUD_APPLICATION_NAMESPACE", "CLOUD_NETWORK_INGRESS", "CLOUD_NETWORK_POLICY", "CONTAINER_GROUP", "CONTAINER_GROUP_INSTANCE", "CUSTOM_APPLICATION", "CUSTOM_DEVICE", "CUSTOM_DEVICE_GROUP", "DCRUM_APPLICATION", "DCRUM_SERVICE", "DCRUM_SERVICE_INSTANCE", "DEVICE_APPLICATION_METHOD", "DISK", "DOCKER_CONTAINER_GROUP", "DOCKER_CONTAINER_GROUP_INSTANCE", "DYNAMO_DB_TABLE", "EBS_VOLUME", "EC2_INSTANCE", "ELASTIC_LOAD_BALANCER", "ENVIRONMENT", "EXTERNAL_SYNTHETIC_TEST_STEP", "GCP_ZONE", "GEOLOCATION", "GEOLOC_SITE", "GOOGLE_COMPUTE_ENGINE", "HOST", "HOST_GROUP", "HTTP_CHECK", "HTTP_CHECK_STEP", "HYPERVISOR", "KUBERNETES_CLUSTER", "KUBERNETES_NODE", "KUBERNETES_SERVICE", "MOBILE_APPLICATION", "NETWORK_INTERFACE", "NEUTRON_SUBNET", "OPENSTACK_PROJECT", "OPENSTACK_REGION", "OPENSTACK_VM", "OS", "PROCESS_GROUP", "PROCESS_GROUP_INSTANCE", "QUEUE", "RELATIONAL_DATABASE_SERVICE", "SERVICE", "SERVICE_INSTANCE", "SERVICE_METHOD", "SERVICE_METHOD_GROUP", "SWIFT_CONTAINER", "SYNTHETIC_LOCATION", "SYNTHETIC_TEST", "SYNTHETIC_TEST_STEP", "VIRTUALMACHINE", "VMWARE_DATACENTER" ]
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The tag you want to use for matching. \n\nYou can use custom tags from the UI, AWS tags, Cloud Foundry tags, OpenShift/Kubernetes, and tags based on environment variables.",
            "items" : {
              "$ref" : "#/components/schemas/UniversalTag"
            }
          }
        },
        "description" : "Filters monitored entities by their type/tags."
      },
      "UniversalTag" : {
        "required" : [ "key" ],
        "type" : "object",
        "properties" : {
          "tagKey" : {
            "$ref" : "#/components/schemas/UniversalTagKey"
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the tag. Not applicable to custom tags. \n\nIf a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used."
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the tag. For custom tags, put the tag value here.\n\nThe key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags."
          },
          "context" : {
            "type" : "string",
            "description" : "The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. \n\nThe context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set.",
            "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_COMPUTE_ENGINE", "KUBERNETES" ]
          }
        }
      },
      "UniversalTagKey" : {
        "type" : "object",
        "properties" : {
          "context" : {
            "type" : "string",
            "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_COMPUTE_ENGINE", "KUBERNETES" ]
          },
          "key" : {
            "type" : "string"
          }
        }
      },
      "Application" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the required entity."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity as displayed in the UI."
          },
          "customizedName" : {
            "type" : "string",
            "description" : "The customized name of the entity"
          },
          "discoveredName" : {
            "type" : "string",
            "description" : "The discovered name of the entity"
          },
          "firstSeenTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of when the entity was first detected, in UTC milliseconds",
            "format" : "int64"
          },
          "lastSeenTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of when the entity was last detected, in UTC milliseconds",
            "format" : "int64"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of entity tags.",
            "items" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          },
          "fromRelationships" : {
            "type" : "object",
            "properties" : {
              "calls" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "description" : "The list of outgoing calls from the application."
          },
          "toRelationships" : {
            "type" : "object",
            "properties" : {
              "monitors" : {
                "type" : "array",
                "description" : "Represents relationship between a synthetic monitor and an application",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "description" : "The list of incoming calls to the application."
          },
          "applicationType" : {
            "type" : "string",
            "enum" : [ "AGENTLESS_MONITORING", "AMP", "AUTO_INJECTED", "DEFAULT", "SAAS_VENDOR" ]
          },
          "applicationMatchTarget" : {
            "type" : "string",
            "enum" : [ "DOMAIN", "URL" ]
          },
          "ruleAppliedMatchType" : {
            "type" : "string",
            "enum" : [ "ALL_URLS_AND_DOMAINS", "CONTAINS", "ENDS", "EQUALS", "MATCHES", "STARTS" ]
          },
          "ruleAppliedPattern" : {
            "type" : "string"
          },
          "managementZones" : {
            "type" : "array",
            "description" : "The management zones that the entity is part of.",
            "items" : {
              "$ref" : "#/components/schemas/EntityShortRepresentation"
            }
          }
        }
      },
      "EntityShortRepresentation" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the Dynatrace entity."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity.",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the Dynatrace entity.",
            "readOnly" : true
          }
        },
        "description" : "The short representation of a Dynatrace entity.",
        "example" : {
          "id" : "6a98d7bc-abb9-44f8-ae6a-73e68e71812a",
          "name" : "Dynatrace entity",
          "description" : "Dynatrace entity for the REST API example"
        }
      },
      "ApplicationBaselineValues" : {
        "required" : [ "entityId" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the application."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the application as displayed in the UI."
          },
          "applicationDomInteractiveBaselines" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The baseline data for the **DOM interactive** duration metric.",
            "items" : {
              "$ref" : "#/components/schemas/EntityBaselineData"
            }
          },
          "applicationHtmlDownloadedBaselines" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The baseline data for the **HTML downloaded** duration metric.",
            "items" : {
              "$ref" : "#/components/schemas/EntityBaselineData"
            }
          },
          "applicationLoadEventEndBaselines" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The baseline data for the **Load event end** duration metric.",
            "items" : {
              "$ref" : "#/components/schemas/EntityBaselineData"
            }
          },
          "applicationLoadEventStartBaselines" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The baseline data for the **Load event start** duration metric.",
            "items" : {
              "$ref" : "#/components/schemas/EntityBaselineData"
            }
          },
          "applicationResponseTimeBaselines" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The baseline data for the **Response time** duration metric.",
            "items" : {
              "$ref" : "#/components/schemas/EntityBaselineData"
            }
          },
          "applicationSpeedIndexBaselines" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The baseline data for the **Speed index** duration metric.",
            "items" : {
              "$ref" : "#/components/schemas/EntityBaselineData"
            }
          },
          "applicationTimeToFirstByteBaselines" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The baseline data for the **Time to first byte** duration metric.",
            "items" : {
              "$ref" : "#/components/schemas/EntityBaselineData"
            }
          },
          "applicationVisualCompleteBaselines" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The baseline data for the **Visually complete** duration metric.",
            "items" : {
              "$ref" : "#/components/schemas/EntityBaselineData"
            }
          }
        },
        "description" : "The baseline data for an application and its children for each available duration metric. \n\nA duration metric is one of the following: \n* **DOM interactive** \n* **HTML downloaded** \n* **Load event end** \n* **Load event start** \n* **Response time** \n* **Speed index** \n* **Time to first byte** \n* **Visually complete**"
      },
      "EntityBaselineData" : {
        "required" : [ "entityId" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The ID of the Dynatrace entity."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the entity."
          },
          "errorRate" : {
            "type" : "number",
            "description" : "The error rate baseline.",
            "format" : "float"
          },
          "hasLoadBaseline" : {
            "type" : "boolean",
            "description" : "The entity has a load baseline (`true`) or doesn't (`false`)."
          },
          "microsMedian" : {
            "type" : "number",
            "description" : "The median baseline, in microseconds.",
            "format" : "float"
          },
          "micros90thPercentile" : {
            "type" : "number",
            "description" : "The 90th percentile baseline, in microseconds.",
            "format" : "float"
          },
          "childBaselines" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The baseline data for child entities of this entity, for example a `SERVICE_METHOD` of a `SERVICE_METHOD_GROUP`.",
            "items" : {
              "$ref" : "#/components/schemas/EntityBaselineData"
            }
          }
        },
        "description" : "The baseline data for a Dynatrace entity for a specific duration metric."
      },
      "UpdateEntity" : {
        "required" : [ "tags" ],
        "type" : "object",
        "properties" : {
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of tags to be assigned to a Dynatrace entity.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A list of tags to be assigned to a Dynatrace entity.",
        "example" : {
          "tags" : [ "office-linz", "office-klagenfurt" ]
        }
      },
      "LogJobDeleteResult" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          }
        }
      },
      "LogJobRecordsResult" : {
        "type" : "object",
        "properties" : {
          "records" : {
            "type" : "array",
            "description" : "The list of log analysis results. \n\n The last page contains empty list.",
            "items" : {
              "$ref" : "#/components/schemas/LogRecord"
            }
          },
          "scrollToken" : {
            "type" : "string",
            "description" : "The *scroll token* for the next page of results. \n\n Without it you'll get the first page again."
          }
        },
        "description" : "The results of the log analysis job."
      },
      "LogRecord" : {
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the log entry, in UTC milliseconds.",
            "format" : "int64"
          },
          "logLevel" : {
            "type" : "string",
            "description" : "The severity level of the log entry."
          },
          "hostId" : {
            "type" : "string",
            "description" : "The entity ID of the host that produced the log. \n\n Not applicable to OS logs."
          },
          "text" : {
            "type" : "string",
            "description" : "The text of the log entry."
          },
          "customFields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "description" : "The map of the log entry custom fields."
            },
            "description" : "The map of the log entry custom fields."
          }
        },
        "description" : "The analysis result for a single log entry."
      },
      "FilterLogContent" : {
        "type" : "object",
        "properties" : {
          "filterQuery" : {
            "type" : "string",
            "description" : "The query for filtering. \n\nSee [Search patterns in log data and parse results](https://dt-url.net/f403kja) in Dynatrace Documentation for the syntax definition and examples."
          },
          "sortingAttributes" : {
            "$ref" : "#/components/schemas/SortingAttributes"
          }
        },
        "description" : "A query to filter log content.",
        "example" : {
          "filterQuery" : "`testCustomField` = 4624",
          "sortingAttributes" : {
            "sortAscending" : "true",
            "sortFieldName" : "testCustomField"
          }
        }
      },
      "SortingAttributes" : {
        "type" : "object",
        "properties" : {
          "sortAscending" : {
            "type" : "boolean",
            "description" : "Sort ascending (`true`) or descending (`false`)."
          },
          "sortFieldName" : {
            "type" : "string",
            "description" : "The field to sort by."
          }
        },
        "description" : "How to sort the results.",
        "example" : {
          "sortAscending" : "true",
          "sortFieldName" : "testCustomField"
        }
      },
      "LogJobRecordsTopValuesRestResult" : {
        "type" : "object",
        "properties" : {
          "parsingFieldTopValues" : {
            "type" : "array",
            "description" : "Log analysis parsing result top values",
            "items" : {
              "$ref" : "#/components/schemas/ParsingFieldTopValue"
            }
          },
          "valuesCount" : {
            "type" : "integer",
            "description" : "Log analysis parsing result top values count",
            "format" : "int32"
          }
        },
        "description" : "The top values results of the log analysis job."
      },
      "Occurrence" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "Value of top parsing field occurrence"
          },
          "count" : {
            "type" : "integer",
            "description" : "Count of top parsing field occurrences",
            "format" : "int64"
          }
        },
        "example" : {
          "value" : "INFO",
          "count" : "100"
        }
      },
      "ParsingFieldTopValue" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "description" : "Top value parsing field name"
          },
          "occurrences" : {
            "type" : "array",
            "description" : "Top value parsing field occurrences",
            "items" : {
              "$ref" : "#/components/schemas/Occurrence"
            }
          }
        },
        "example" : {
          "fieldName" : ".Level",
          "occurrences" : [ {
            "value" : "INFO",
            "count" : "100"
          } ]
        }
      },
      "FilterTopLogRecords" : {
        "type" : "object",
        "properties" : {
          "filterQuery" : {
            "type" : "string",
            "description" : "The query for filtering. \n\nSee [Search patterns in log data and parse results](https://dt-url.net/hf23k34) in Dynatrace Documentation page for syntax description."
          }
        },
        "description" : "A query to filter top log records.",
        "example" : {
          "filterQuery" : "`testCustomField` = 4624"
        }
      },
      "ExtractFields" : {
        "type" : "object",
        "properties" : {
          "parsingMode" : {
            "type" : "string",
            "description" : "The parsing mode for log analysis entries presentation. Possible values are: `json`, `disabled`, and `all`."
          },
          "customParsingPatterns" : {
            "type" : "string",
            "description" : "The query for content extraction. \n\nSee [Search patterns in log data and parse results](https://dt-url.net/vv83rhp) in Dynatrace Documentation for the syntax definition and examples."
          }
        },
        "description" : "A query to extract log content to a custom column.",
        "example" : {
          "parsingMode" : "json",
          "customParsingPatterns" : "\"user %{STRING:User} logged\", \"job took %{INTEGER:Time} ms\""
        }
      },
      "LogJobStatusResult" : {
        "type" : "object",
        "properties" : {
          "logAnalysisStatus" : {
            "type" : "string",
            "description" : "The status of the log analysis job.",
            "enum" : [ "AGENT_PROCESSING", "CANCELLED", "CANCEL_PENDING", "DOWNLOAD", "FAILED", "PROCESSING", "READY", "TRANSFERRING", "WAITING" ]
          },
          "statusChangeTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the last status change, in UTC milliseconds.",
            "format" : "int64"
          },
          "logHandlingError" : {
            "type" : "string",
            "description" : "The cause of the job failure. \n\n A successful job has the `NONE` value.",
            "enum" : [ "AGENT_VERSION_NOT_SUPPORTING_DOCKER", "CANCELLED", "FILE_ACCESS_DISABLED", "FILE_NOT_FOUND", "INCORRECT_DATE_FORMAT", "INCORRECT_LOG_FILE", "INTERNAL_PROCESSING_ERROR", "INVALID_FILTER_QUERY", "INVALID_SEARCH_QUERY", "NONE", "NO_LOG_AGENT", "PROCESSOR_FILE_PROCESSING_ERROR", "PROCESSOR_INTERNAL_ERROR", "PROCESSOR_INVALID_PARAMETER_ERROR", "PROCESSOR_NO_LOGS_FILE_FOUND_ERROR", "PROCESSOR_STOPPING_INTERRUPTED", "PROCESSOR_TIMED_OUT", "PROCESSOR_UNHANDLED_EXCEPTION", "PROCESSOR_UNZIPPING_ERROR", "REPACK_FAILED_TO_SAVE_LOG_ANALYSIS_IN_STORAGE", "REPACK_FAILED_TO_STORE_ALL_LOG_ANALYSIS", "REPACK_FAILED_TO_STORE_LOG_ANALYSIS", "SOME_LOG_INCORRECT_DATE_FORMAT", "TIMEOUT" ]
          },
          "recordsTotal" : {
            "type" : "integer",
            "description" : "The number of analyzed log entries.",
            "format" : "int32"
          },
          "sortableFields" : {
            "type" : "array",
            "description" : "The map of the log entry sortable fields.",
            "items" : {
              "type" : "string"
            }
          },
          "filterableFields" : {
            "type" : "array",
            "description" : "The map of the log entry filterable fields.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The status the log analysis job."
      },
      "LogForCustomDevice" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "The full path to the log."
          },
          "availableForAnalysis" : {
            "type" : "boolean",
            "description" : "The log is available (`true`) or not available (`false`) for analysis."
          }
        },
        "description" : "The list of available logs."
      },
      "LogListForCustomDeviceResult" : {
        "type" : "object",
        "properties" : {
          "logs" : {
            "type" : "array",
            "description" : "The list of available logs.",
            "items" : {
              "$ref" : "#/components/schemas/LogForCustomDevice"
            }
          }
        },
        "description" : "Logs available on the Custom Device."
      },
      "CustomDevicePushResult" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the custom device."
          },
          "groupId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the custom device group."
          }
        },
        "description" : "The result of a custom device push request. The entity ID is calculated automatically."
      },
      "CustomDevicePushMessage" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name of the custom device that will appear in the user interface."
          },
          "group" : {
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string",
            "description" : "User defined group ID of entity. \n\nThe group ID helps to keep a consistent picture of device-group relations. One of many cases where a proper group is important is service detection: you can define which custom devices should lead to the same service by defining the same group ID for them. \n\nIf you set a group ID, it will be hashed into the Dynatrace entity ID of the custom device. In that case the custom device can only be part of one custom device group. \n\nIf you don't set the group ID, Dynatrace will create it based on the ID or type of the custom device. Also, the group will not be hashed into the device ID which means the device may switch groups."
          },
          "ipAddresses" : {
            "maxItems" : 100,
            "minItems" : 0,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of IP addresses that belong to the custom device. \n\nThese addresses are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape. \n\nIf you send a value (including an empty value), the existing values will be overwritten. \n\nIf you send `null` or omit this field, the existing values will be kept.",
            "items" : {
              "type" : "string"
            }
          },
          "listenPorts" : {
            "maxItems" : 100,
            "minItems" : 0,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of ports the custom devices listens to. \n\nThese ports are used to discover the horizontal communication relationship between this component and all other observed components within Smartscape. \n\nOnce a connection is discovered, it is automatically mapped and shown within Smartscape. \n\nIf ports are specified, you should also add at least one IP address or a host name for the custom device. \n\nIf you send a value, the existing values will be overwritten. \n\nIf you send `null`, or an empty value, or omit this field, the existing values will be kept.",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "type" : {
            "maxLength" : 128,
            "minLength" : 0,
            "type" : "string",
            "description" : "The technology type definition of the custom device. \n\nIt must be the same technology type of the metric you're reporting. \n\nIf you send a value, the existing value will be overwritten. \n\nIf you send `null`, empty or omit this field, the existing value will be kept."
          },
          "favicon" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string",
            "description" : "The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file."
          },
          "configUrl" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string",
            "description" : "The URL of a configuration web page for the custom device, such as a login page for a firewall or router."
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The list of key-value pair properties that will be shown beneath the infographics of your custom device."
            },
            "description" : "The list of key-value pair properties that will be shown beneath the infographics of your custom device."
          },
          "tags" : {
            "maxItems" : 100,
            "minItems" : 0,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "List of custom tags that you want to attach to your custom device.",
            "items" : {
              "type" : "string"
            }
          },
          "series" : {
            "type" : "array",
            "description" : "The list of metric values that are reported for the custom device. \n\nThe metric you're reporting must already exist in Dynatrace. To learn how to create a custom metric, see [Timeseries API v1 - PUT a custom metric](https://dt-url.net/5k143rzb). \n\nDynatrace aggregates all the values you report for a custom device. \n\nIf you send a value (including an empty value), it will be added to the set of existing values. \n\nIf you send `null` or omit this field, the set of existing values won't change.",
            "items" : {
              "$ref" : "#/components/schemas/EntityTimeseriesData"
            }
          },
          "hostNames" : {
            "maxItems" : 20,
            "minItems" : 0,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of host names related to the custom device. \n\nThese names are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape. \n\nIf you send a value, the existing values will be overwritten. \n\nIf you send `null` or an empty value; or omit this field, the existing values will be kept.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Configuration of a custom device.",
        "example" : {
          "displayName" : "coffeeMachine",
          "group" : "myCustomDeviceGroup",
          "ipAddresses" : [ "10.0.0.1" ],
          "listenPorts" : [ 80 ],
          "favicon" : "https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png",
          "configUrl" : "http://coffee-machine.dynatrace.internal.com/coffeemachine/manage",
          "type" : "coffee machine",
          "properties" : { },
          "tags" : [ "office-linz" ],
          "series" : [ {
            "timeseriesId" : "custom:created.coffee.metric",
            "dimensions" : {
              "office" : "Linz"
            },
            "dataPoints" : [ [ 1521542929000, 13.0 ] ]
          } ],
          "hostNames" : [ "coffee-machine.dynatrace.internal.com" ]
        }
      },
      "EntityTimeseriesData" : {
        "required" : [ "dataPoints", "timeseriesId" ],
        "type" : "object",
        "properties" : {
          "timeseriesId" : {
            "type" : "string",
            "description" : "The ID of the metric, where you want to post data points."
          },
          "dimensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Dimensions of the data points you're posting. \n\nThe key of the metric dimension must be defined earlier in the metric definition."
            },
            "description" : "Dimensions of the data points you're posting. \n\nThe key of the metric dimension must be defined earlier in the metric definition."
          },
          "dataPoints" : {
            "type" : "array",
            "description" : "List of data points. \n\nEach data point is an array, containing the timestamp and the value. \n\nTimestamp is UTC milliseconds reported as a number, for example: `1520523365557`. \n\nYou have the guaranteed timeframe of **30 minutes** into the past. \n\nA custom metric must be registered **before** you can report a metric value. Therefore, the timestamp for reporting a value must be after the registration time of the metric.",
            "items" : {
              "type" : "array",
              "description" : "List of data points. \n\nEach data point is an array, containing the timestamp and the value. \n\nTimestamp is UTC milliseconds reported as a number, for example: `1520523365557`. \n\nYou have the guaranteed timeframe of **30 minutes** into the past. \n\nA custom metric must be registered **before** you can report a metric value. Therefore, the timestamp for reporting a value must be after the registration time of the metric.",
              "items" : {
                "type" : "number",
                "description" : "List of data points. \n\nEach data point is an array, containing the timestamp and the value. \n\nTimestamp is UTC milliseconds reported as a number, for example: `1520523365557`. \n\nYou have the guaranteed timeframe of **30 minutes** into the past. \n\nA custom metric must be registered **before** you can report a metric value. Therefore, the timestamp for reporting a value must be after the registration time of the metric.",
                "format" : "float"
              }
            }
          }
        },
        "description" : "Information about a metric and its data points."
      },
      "Log4host" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "The full path to the log."
          },
          "size" : {
            "type" : "integer",
            "description" : "The size of the log, bytes.",
            "format" : "int64"
          },
          "availableForAnalysis" : {
            "type" : "boolean",
            "description" : "The log is available (`true`) or not available (`false`) for analysis."
          }
        },
        "description" : "The list of available OS logs."
      },
      "LogList4hostResult" : {
        "type" : "object",
        "properties" : {
          "contentAccess" : {
            "type" : "boolean",
            "description" : "The access to the log content is granted (`true`) or denied (`false`)."
          },
          "logs" : {
            "type" : "array",
            "description" : "The list of available OS logs.",
            "items" : {
              "$ref" : "#/components/schemas/Log4host"
            }
          }
        },
        "description" : "OS logs available on the host."
      },
      "AgentVersion" : {
        "type" : "object",
        "properties" : {
          "major" : {
            "type" : "integer",
            "description" : "The major version number.",
            "format" : "int32"
          },
          "minor" : {
            "type" : "integer",
            "description" : "The minor version number.",
            "format" : "int32"
          },
          "revision" : {
            "type" : "integer",
            "description" : "The revision number.",
            "format" : "int32"
          },
          "timestamp" : {
            "type" : "string",
            "description" : "A timestamp string: format \"yyyymmdd-hhmmss"
          },
          "sourceRevision" : {
            "type" : "string",
            "description" : "A string representation of the SVN revision number."
          }
        },
        "description" : "Defines the version of the agent currently running on the entity."
      },
      "Host" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the required entity."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity as displayed in the UI."
          },
          "customizedName" : {
            "type" : "string",
            "description" : "The customized name of the entity"
          },
          "discoveredName" : {
            "type" : "string",
            "description" : "The discovered name of the entity"
          },
          "firstSeenTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of when the entity was first detected, in UTC milliseconds",
            "format" : "int64"
          },
          "lastSeenTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of when the entity was last detected, in UTC milliseconds",
            "format" : "int64"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of entity tags.",
            "items" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          },
          "fromRelationships" : {
            "type" : "object",
            "properties" : {
              "isNetworkClientOfHost" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "toRelationships" : {
            "type" : "object",
            "properties" : {
              "isProcessOf" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "isSiteOf" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "isNetworkClientOfHost" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "runsOn" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "azureSiteNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "userLevel" : {
            "type" : "string",
            "enum" : [ "NON_SUPERUSER", "NON_SUPERUSER_STRICT", "SUPERUSER" ]
          },
          "scaleSetName" : {
            "type" : "string"
          },
          "paasMemoryLimit" : {
            "type" : "integer",
            "format" : "int64"
          },
          "azureVmScaleSetName" : {
            "type" : "string"
          },
          "gceInstanceName" : {
            "type" : "string",
            "description" : "The Google Compute Engine instance name."
          },
          "azureResourceGroupName" : {
            "type" : "string"
          },
          "osArchitecture" : {
            "type" : "string",
            "enum" : [ "ARM", "IA64", "PARISC", "PPC", "PPCLE", "S390", "SPARC", "X86", "ZOS" ]
          },
          "hostGroup" : {
            "$ref" : "#/components/schemas/HostGroup"
          },
          "azureZone" : {
            "type" : "string"
          },
          "openstackVmName" : {
            "type" : "string"
          },
          "oneAgentCustomHostName" : {
            "type" : "string",
            "description" : "The custom name defined in OneAgent config."
          },
          "awsInstanceType" : {
            "type" : "string"
          },
          "awsSecurityGroup" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "zosCPUModelNumber" : {
            "type" : "string",
            "description" : "The CPU model number."
          },
          "boshInstanceId" : {
            "type" : "string",
            "description" : "The Cloud Foundry BOSH instance ID."
          },
          "azureHostNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "boshName" : {
            "type" : "string",
            "description" : "The Cloud Foundry BOSH name."
          },
          "cpuCores" : {
            "type" : "integer",
            "format" : "int32"
          },
          "logicalCpus" : {
            "type" : "integer",
            "description" : "The AIX instance logical CPU count.",
            "format" : "int32"
          },
          "boshDeploymentId" : {
            "type" : "string",
            "description" : "The Cloud Foundry BOSH deployment ID."
          },
          "simultaneousMultithreading" : {
            "type" : "integer",
            "description" : "The AIX instance simultaneous threads count.",
            "format" : "int32"
          },
          "amiId" : {
            "type" : "string"
          },
          "paasType" : {
            "type" : "string",
            "enum" : [ "AWS_ECS_EC2", "AWS_ECS_FARGATE", "AWS_LAMBDA", "AZURE_FUNCTIONS", "AZURE_WEBSITES", "CLOUD_FOUNDRY", "GOOGLE_APP_ENGINE", "HEROKU", "KUBERNETES", "OPENSHIFT" ]
          },
          "openstackProjectName" : {
            "type" : "string"
          },
          "isMonitoringCandidate" : {
            "type" : "boolean"
          },
          "cloudType" : {
            "type" : "string",
            "enum" : [ "AZURE", "EC2", "GOOGLE_CLOUD_PLATFORM", "OPENSTACK", "ORACLE", "UNRECOGNIZED" ]
          },
          "consumedHostUnits" : {
            "type" : "string"
          },
          "boshInstanceName" : {
            "type" : "string",
            "description" : "The Cloud Foundry BOSH instance name."
          },
          "awsInstanceId" : {
            "type" : "string"
          },
          "azureResourceId" : {
            "type" : "string"
          },
          "azureComputeModeName" : {
            "type" : "string",
            "enum" : [ "DEDICATED", "SHARED" ]
          },
          "localIp" : {
            "type" : "string"
          },
          "networkZoneId" : {
            "type" : "string",
            "description" : "The ID of network zone the entity is in."
          },
          "openstackAvZone" : {
            "type" : "string"
          },
          "osType" : {
            "type" : "string",
            "enum" : [ "AIX", "DARWIN", "HPUX", "LINUX", "SOLARIS", "WINDOWS", "ZOS" ]
          },
          "paasAgentVersions" : {
            "type" : "array",
            "description" : "The versions of the PaaS agents currently running on the entity.",
            "items" : {
              "$ref" : "#/components/schemas/AgentVersion"
            }
          },
          "localHostName" : {
            "type" : "string"
          },
          "openstackSecurityGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "bitness" : {
            "type" : "string",
            "enum" : [ "32bit", "64bit" ]
          },
          "softwareTechnologies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TechnologyInfo"
            }
          },
          "managementZones" : {
            "type" : "array",
            "description" : "The management zones that the entity is part of.",
            "items" : {
              "$ref" : "#/components/schemas/EntityShortRepresentation"
            }
          },
          "kubernetesCluster" : {
            "type" : "string",
            "description" : "The kubernetes cluster the entity is in."
          },
          "zosLpaName" : {
            "type" : "string",
            "description" : "Name of the LPAR."
          },
          "gceProject" : {
            "type" : "string",
            "description" : "The Google Compute Engine project."
          },
          "zosCPUSerialNumber" : {
            "type" : "string",
            "description" : "The CPU serial number."
          },
          "gcePublicIpAddresses" : {
            "type" : "array",
            "description" : "The public IP addresses of the Google Compute Engine.",
            "items" : {
              "type" : "string"
            }
          },
          "awsNameTag" : {
            "type" : "string",
            "description" : "The name inherited from AWS."
          },
          "zosVirtualization" : {
            "type" : "string",
            "description" : "Type of virtualization on the mainframe."
          },
          "monitoringMode" : {
            "type" : "string",
            "enum" : [ "FULL_STACK", "INFRASTRUCTURE", "OFF" ]
          },
          "kubernetesLabels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "The kubernetes labels defined on the entity."
          },
          "zosTotalZiipProcessors" : {
            "type" : "integer",
            "description" : "Number of assigned support processors for this LPAR.",
            "format" : "int32"
          },
          "gceProjectId" : {
            "type" : "string",
            "description" : "The Google Compute Engine numeric project ID."
          },
          "boshAvailabilityZone" : {
            "type" : "string",
            "description" : "The Cloud Foundry BOSH availability zone."
          },
          "gceMachineType" : {
            "type" : "string",
            "description" : "The Google Compute Engine machine type."
          },
          "cloudPlatformVendorVersion" : {
            "type" : "string",
            "description" : "Defines the cloud platform vendor version."
          },
          "osVersion" : {
            "type" : "string"
          },
          "ipAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hypervisorType" : {
            "type" : "string",
            "enum" : [ "AHV", "HYPERV", "KVM", "LPAR", "QEMU", "UNRECOGNIZED", "VIRTUALBOX", "VMWARE", "WPAR", "XEN" ]
          },
          "publicIp" : {
            "type" : "string"
          },
          "gcpZone" : {
            "type" : "string",
            "description" : "The Google Cloud Platform Zone."
          },
          "zosSystemName" : {
            "type" : "string",
            "description" : "Name of the system."
          },
          "openStackInstaceType" : {
            "type" : "string"
          },
          "logicalCpuCores" : {
            "type" : "integer",
            "format" : "int32"
          },
          "agentVersion" : {
            "$ref" : "#/components/schemas/AgentVersion"
          },
          "azureEnvironment" : {
            "type" : "string"
          },
          "vmwareName" : {
            "type" : "string"
          },
          "boshStemcellVersion" : {
            "type" : "string",
            "description" : "The Cloud Foundry BOSH stemcell version."
          },
          "openstackComputeNodeName" : {
            "type" : "string"
          },
          "virtualCpus" : {
            "type" : "integer",
            "description" : "The AIX instance virtual CPU count.",
            "format" : "int32"
          },
          "gceInstanceId" : {
            "type" : "string",
            "description" : "The Google Compute Engine instance ID."
          },
          "autoInjection" : {
            "type" : "string",
            "description" : "Status of auto-injection",
            "enum" : [ "DISABLED_MANUALLY", "DISABLED_ON_INSTALLATION", "DISABLED_ON_SANITY_CHECK", "ENABLED", "FAILED_ON_INSTALLATION" ]
          },
          "zosTotalGeneralPurposeProcessors" : {
            "type" : "integer",
            "description" : "Number of assigned processors for this LPAR.",
            "format" : "int32"
          },
          "zosTotalPhysicalMemory" : {
            "type" : "integer",
            "description" : "Memory assigned to the host (Terabyte).",
            "format" : "int32"
          },
          "azureVmName" : {
            "type" : "string"
          },
          "publicHostName" : {
            "type" : "string"
          },
          "esxiHostName" : {
            "type" : "string"
          },
          "azureVmSizeLabel" : {
            "type" : "string"
          },
          "beanstalkEnvironmentName" : {
            "type" : "string"
          },
          "kubernetesNode" : {
            "type" : "string",
            "description" : "The kubernetes node the entity is in."
          },
          "autoScalingGroup" : {
            "type" : "string"
          },
          "azureSku" : {
            "type" : "string",
            "enum" : [ "BASIC", "DYNAMIC", "FREE", "PREMIUM", "SHARED", "STANDARD" ]
          }
        },
        "description" : "Information about the host."
      },
      "HostGroup" : {
        "type" : "object",
        "properties" : {
          "meId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the host group."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity, displayed in the UI."
          }
        }
      },
      "TechnologyInfo" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "edition" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "Host4pg" : {
        "type" : "object",
        "properties" : {
          "hostId" : {
            "type" : "string",
            "description" : "The entity ID of the host."
          },
          "logSize" : {
            "type" : "integer",
            "description" : "The size of the PG log for the host, bytes.",
            "format" : "int64"
          },
          "contentAccess" : {
            "type" : "boolean",
            "description" : "The access to the log content is granted (true) or denied (false)."
          },
          "availableForAnalysis" : {
            "type" : "boolean",
            "description" : "The log is available (true) or not available (false) for analysis."
          }
        },
        "description" : "The process group log on the host."
      },
      "LogFile4pg" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "The full path to the log."
          },
          "size" : {
            "type" : "integer",
            "description" : "The size of the log, bytes",
            "format" : "int64"
          },
          "hosts" : {
            "type" : "array",
            "description" : "The distribution of the process group log across hosts.",
            "items" : {
              "$ref" : "#/components/schemas/Host4pg"
            }
          }
        }
      },
      "LogList4pgResult" : {
        "type" : "object",
        "properties" : {
          "logs" : {
            "type" : "array",
            "description" : "The list of available process group logs.",
            "items" : {
              "$ref" : "#/components/schemas/LogFile4pg"
            }
          }
        },
        "description" : "The list of available process group logs."
      },
      "ProcessGroup" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the required entity."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity as displayed in the UI."
          },
          "customizedName" : {
            "type" : "string",
            "description" : "The customized name of the entity"
          },
          "discoveredName" : {
            "type" : "string",
            "description" : "The discovered name of the entity"
          },
          "firstSeenTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of when the entity was first detected, in UTC milliseconds",
            "format" : "int64"
          },
          "lastSeenTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of when the entity was last detected, in UTC milliseconds",
            "format" : "int64"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of entity tags.",
            "items" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          },
          "fromRelationships" : {
            "type" : "object",
            "properties" : {
              "isNetworkClientOfProcessGroup" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "runsOn" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "toRelationships" : {
            "type" : "object",
            "properties" : {
              "isNetworkClientOfProcessGroup" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "isInstanceOf" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "runsOn" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "metadata" : {
            "type" : "object",
            "properties" : {
              "hostGroups" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cloudFoundryAppIds" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dynatraceNodeIds" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "executables" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "googleComputeEngineMetadata" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "phpScripts" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsEcsCluster" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "declarativeId" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "glassfishInstanceNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksEnginePropertyFiles" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "jbossServerNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "catalinaBaseValues" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "mssqlInstanceName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmIntegrationServerName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "varnishInstanceNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "phpWorkingDirectories" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "websphereLibertyServerName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "googleCloudProjects" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dockerContainerImageVersions" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "hybrisConfigDirectories" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "executablePaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsEcrImageRegions" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksAppSpaceName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "springBootStartupClass" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "weblogicDomainNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "elasticSearchNodeNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBWEnginePropertyFilePaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesContainerNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "rubyAppRootPaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmImsMessageProcessingRegions" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "linkage" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cloudfoundryMetadata" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "oracleSid" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsEcsFamily" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "commandLineArgs" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "aspDotNetCoreApplicationPaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsEcrImageAccountIds" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "springBootAppName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "websphereClusterNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "springBootProfileName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesAnnotations" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "websphereServerNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "catalinaHomeValues" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "glassfishDomainNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesBasePodNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "weblogicClusterNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "javaMainModules" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesPodUids" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsEcsContainerName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "coldfusionJvmConfigFiles" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dotnetCommandPath" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksDomainName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "elasticSearchClusterNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "nodejsScriptNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "iisRoleNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "apacheSparkMasterIpAddresses" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "weblogicNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "rubyScriptPaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmImsSoapGwName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "nodejsAppBaseDirectories" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "softwareAgProductPropertyName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsEcsRevision" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmImsControlRegions" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "javaMainClasses" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cassandraClusterNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "softwareAgInstallRoot" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cloudFoundryAppNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cloudFoundrySpaceNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "pluginMetadata" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "ibmIntegrationNodeName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dockerContainerNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmCtgName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksCeAppName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesFullPodNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "apacheConfigPaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksAppNodeName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksCeVersion" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dotNetCommands" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "googleAppEngineServices" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesNamespaces" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "hybrisDataDirectories" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "envVariables" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "javaJarFiles" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "javaJarPaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dockerContainerIds" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cloudFoundrySpaceIds" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ruleResult" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesRuleResult" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "jbossModes" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsLambdaFunctionNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cloudFoundryInstanceIndexes" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "hybrisBinDirectories" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "weblogicHomeValues" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "jbossHomes" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dynatraceClusterIds" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "googleAppEngineInstances" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "websphereNodeNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "agentValueMetadata" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "iisAppPools" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmImsConnectRegions" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dockerContainerImageNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksHome" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmCicsRegion" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "serviceNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "websphereCellNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "nodejsAppNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "equinoxConfigPath" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsRegions" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "azureHostName" : {
            "type" : "string"
          },
          "listenPorts" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "azureSiteName" : {
            "type" : "string"
          },
          "softwareTechnologies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TechnologyInfo"
            }
          },
          "managementZones" : {
            "type" : "array",
            "description" : "The management zones that the entity is part of.",
            "items" : {
              "$ref" : "#/components/schemas/EntityShortRepresentation"
            }
          }
        },
        "description" : "Parameters of a process group."
      },
      "MonitoringState" : {
        "type" : "object",
        "properties" : {
          "actualMonitoringState" : {
            "type" : "string",
            "description" : "The current actual monitoring state on the entity.",
            "enum" : [ "OFF", "ON" ]
          },
          "expectedMonitoringState" : {
            "type" : "string",
            "description" : "The monitoring state that is expected from the configuration",
            "enum" : [ "OFF", "ON" ]
          },
          "restartRequired" : {
            "type" : "boolean",
            "description" : "Defines whether or not the process has to restarted to enable monitoring"
          }
        },
        "description" : "Defines the current monitoring state of an entity."
      },
      "ProcessGroupInstance" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the required entity."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity as displayed in the UI."
          },
          "customizedName" : {
            "type" : "string",
            "description" : "The customized name of the entity"
          },
          "discoveredName" : {
            "type" : "string",
            "description" : "The discovered name of the entity"
          },
          "firstSeenTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of when the entity was first detected, in UTC milliseconds",
            "format" : "int64"
          },
          "lastSeenTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of when the entity was last detected, in UTC milliseconds",
            "format" : "int64"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of entity tags.",
            "items" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          },
          "fromRelationships" : {
            "type" : "object",
            "properties" : {
              "isProcessOf" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "isInstanceOf" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "isNetworkClientOf" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "toRelationships" : {
            "type" : "object",
            "properties" : {
              "runsOnProcessGroupInstance" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "isNetworkClientOf" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "metadata" : {
            "type" : "object",
            "properties" : {
              "hostGroups" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cloudFoundryAppIds" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dynatraceNodeIds" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "executables" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "googleComputeEngineMetadata" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "phpScripts" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsEcsCluster" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "declarativeId" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "glassfishInstanceNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksEnginePropertyFiles" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "jbossServerNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "catalinaBaseValues" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "mssqlInstanceName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmIntegrationServerName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "varnishInstanceNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "phpWorkingDirectories" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "websphereLibertyServerName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "googleCloudProjects" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dockerContainerImageVersions" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "hybrisConfigDirectories" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "executablePaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsEcrImageRegions" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksAppSpaceName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "springBootStartupClass" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "weblogicDomainNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "elasticSearchNodeNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBWEnginePropertyFilePaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesContainerNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "rubyAppRootPaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmImsMessageProcessingRegions" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "linkage" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cloudfoundryMetadata" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "oracleSid" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsEcsFamily" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "commandLineArgs" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "aspDotNetCoreApplicationPaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsEcrImageAccountIds" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "springBootAppName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "websphereClusterNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "springBootProfileName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesAnnotations" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "websphereServerNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "catalinaHomeValues" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "glassfishDomainNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesBasePodNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "weblogicClusterNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "javaMainModules" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesPodUids" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsEcsContainerName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "coldfusionJvmConfigFiles" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dotnetCommandPath" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksDomainName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "elasticSearchClusterNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "nodejsScriptNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "iisRoleNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "apacheSparkMasterIpAddresses" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "weblogicNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "rubyScriptPaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmImsSoapGwName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "nodejsAppBaseDirectories" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "softwareAgProductPropertyName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsEcsRevision" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmImsControlRegions" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "javaMainClasses" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cassandraClusterNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "softwareAgInstallRoot" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cloudFoundryAppNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cloudFoundrySpaceNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "pluginMetadata" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "ibmIntegrationNodeName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dockerContainerNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmCtgName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksCeAppName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesFullPodNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "apacheConfigPaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksAppNodeName" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksCeVersion" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dotNetCommands" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "googleAppEngineServices" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesNamespaces" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "hybrisDataDirectories" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "envVariables" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "javaJarFiles" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "javaJarPaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dockerContainerIds" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cloudFoundrySpaceIds" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ruleResult" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "kubernetesRuleResult" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "jbossModes" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsLambdaFunctionNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "cloudFoundryInstanceIndexes" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "hybrisBinDirectories" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "weblogicHomeValues" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "jbossHomes" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dynatraceClusterIds" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "googleAppEngineInstances" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "websphereNodeNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "agentValueMetadata" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "iisAppPools" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmImsConnectRegions" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "dockerContainerImageNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "tibcoBusinessWorksHome" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "ibmCicsRegion" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "serviceNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "websphereCellNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "nodejsAppNames" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "equinoxConfigPath" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "awsRegions" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "azureHostName" : {
            "type" : "string"
          },
          "listenPorts" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "versionedModules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProcessGroupInstanceModule"
            }
          },
          "agentVersions" : {
            "type" : "array",
            "description" : "Versions of OneAgents currently running on the entity.",
            "items" : {
              "$ref" : "#/components/schemas/AgentVersion"
            }
          },
          "azureSiteName" : {
            "type" : "string"
          },
          "monitoringState" : {
            "$ref" : "#/components/schemas/MonitoringState"
          },
          "bitness" : {
            "type" : "string",
            "enum" : [ "32bit", "64bit" ]
          },
          "softwareTechnologies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TechnologyInfo"
            }
          },
          "modules" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "managementZones" : {
            "type" : "array",
            "description" : "The management zones that the entity is part of.",
            "items" : {
              "$ref" : "#/components/schemas/EntityShortRepresentation"
            }
          }
        },
        "description" : "Parameters of a process."
      },
      "ProcessGroupInstanceModule" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "ServiceBaselineValues" : {
        "required" : [ "entityId" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The ID of the service."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the service."
          },
          "serviceResponseTimeBaselines" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The baseline data for the **Response time** duration metric.",
            "items" : {
              "$ref" : "#/components/schemas/EntityBaselineData"
            }
          }
        },
        "description" : "The baseline data for a service and its children for the **Response time** duration metric."
      },
      "Service" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the required entity."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity as displayed in the UI."
          },
          "customizedName" : {
            "type" : "string",
            "description" : "The customized name of the entity"
          },
          "discoveredName" : {
            "type" : "string",
            "description" : "The discovered name of the entity"
          },
          "firstSeenTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of when the entity was first detected, in UTC milliseconds",
            "format" : "int64"
          },
          "lastSeenTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of when the entity was last detected, in UTC milliseconds",
            "format" : "int64"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of entity tags.",
            "items" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          },
          "fromRelationships" : {
            "type" : "object",
            "properties" : {
              "runsOnProcessGroupInstance" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "calls" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "runsOn" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "toRelationships" : {
            "type" : "object",
            "properties" : {
              "calls" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "databaseVendor" : {
            "type" : "string"
          },
          "remoteServiceName" : {
            "type" : "string",
            "description" : "The name of the remote service."
          },
          "webServiceName" : {
            "type" : "string"
          },
          "className" : {
            "type" : "string"
          },
          "remoteEndpoint" : {
            "type" : "string",
            "description" : "The endpoint of the remote service."
          },
          "ipAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "path" : {
            "type" : "string"
          },
          "databaseName" : {
            "type" : "string"
          },
          "databaseHostNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "iibApplicationName" : {
            "type" : "string",
            "description" : "The IIB application name."
          },
          "isExternalService" : {
            "type" : "boolean"
          },
          "ibmCtgServerName" : {
            "type" : "string",
            "description" : "The IBM CICS Transaction Gateway name."
          },
          "webServerName" : {
            "type" : "string"
          },
          "webApplicationId" : {
            "type" : "string"
          },
          "serviceType" : {
            "type" : "string",
            "enum" : [ "AMP", "Cics", "CicsInteraction", "CustomApplication", "Database", "EnterpriseServiceBus", "External", "Ims", "ImsInteraction", "Messaging", "Method", "Mobile", "Process", "QueueInteraction", "QueueListener", "RemoteCall", "Rmi", "SaasVendor", "Span", "Unknown", "WebRequest", "WebService", "WebSite", "ZosConnect" ]
          },
          "esbApplicationName" : {
            "type" : "string",
            "description" : "The ESB application name."
          },
          "webServiceNamespace" : {
            "type" : "string"
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          },
          "agentTechnologyType" : {
            "type" : "string",
            "enum" : [ "APACHE", "DOTNET", "DUMPPROC", "GO", "IIS", "JAVA", "LOG_ANALYTICS", "N/A", "NET", "NETTRACER", "NGINX", "NODEJS", "OPENTRACINGNATIVE", "OS", "PHP", "PLUGIN", "PROCESS", "PYTHON", "REMOTE_PLUGIN", "RUBY", "SDK", "UPDATER", "VARNISH", "WSMB", "Z" ]
          },
          "akkaActorSystem" : {
            "type" : "string",
            "description" : "The services of the akka actor system."
          },
          "serviceTechnologyTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "contextRoot" : {
            "type" : "string"
          },
          "softwareTechnologies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TechnologyInfo"
            }
          },
          "ibmCtgGatewayUrl" : {
            "type" : "string",
            "description" : "The IBM CTG gateway URL."
          },
          "managementZones" : {
            "type" : "array",
            "description" : "The management zones that the entity is part of.",
            "items" : {
              "$ref" : "#/components/schemas/EntityShortRepresentation"
            }
          }
        }
      },
      "HostAgentInfo" : {
        "type" : "object",
        "properties" : {
          "hostInfo" : {
            "$ref" : "#/components/schemas/Host"
          },
          "faultyVersion" : {
            "type" : "boolean",
            "description" : "OneAgent version is faulty (`true`) or not (`false`)."
          },
          "active" : {
            "type" : "boolean",
            "description" : "OneAgent is active (`true`) or inactive (`false`)."
          },
          "configuredMonitoringMode" : {
            "type" : "string",
            "description" : "Configured monitoring mode of OneAgent.",
            "enum" : [ "CLOUD_INFRASTRUCTURE", "FULL_STACK" ]
          },
          "monitoringType" : {
            "type" : "string",
            "description" : "The monitoring mode of OneAgent.",
            "enum" : [ "CLOUD_INFRASTRUCTURE", "FULL_STACK", "STANDALONE" ]
          },
          "autoUpdateSetting" : {
            "type" : "string",
            "description" : "The effective auto-update setting of OneAgent. For host with inherited configuration it is calculated from its parent's configuration",
            "enum" : [ "ENABLED", "DISABLED" ]
          },
          "updateStatus" : {
            "type" : "string",
            "description" : "The current update status of OneAgent.",
            "enum" : [ "INCOMPATIBLE", "OUTDATED", "SCHEDULED", "SUPPRESSED", "UNKNOWN", "UP2DATE", "UPDATE_IN_PROGRESS", "UPDATE_PENDING", "UPDATE_PROBLEM" ]
          },
          "availableVersions" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of versions OneAgent can be updated to.",
            "items" : {
              "type" : "string"
            }
          },
          "configuredMonitoringEnabled" : {
            "type" : "boolean",
            "description" : "Monitoring is enabled (`true`) or disabled (`false`) in the OneAgent configuration."
          },
          "availabilityState" : {
            "type" : "string",
            "description" : "The availability state of OneAgent.",
            "enum" : [ "CRASHED", "LOST", "MONITORED", "PRE_MONITORED", "SHUTDOWN", "UNEXPECTED_SHUTDOWN", "UNKNOWN", "UNMONITORED" ]
          },
          "detailedAvailabilityState" : {
            "type" : "string",
            "description" : "The detailed availability state of OneAgent.",
            "enum" : [ "CRASHED_FAILURE", "CRASHED_UNKNOWN", "LOST_AGENT_UPGRADE_FAILED", "LOST_CONNECTION", "LOST_UNKNOWN", "MONITORED", "MONITORED_AGENT_ENABLED", "MONITORED_AGENT_REGISTERED", "MONITORED_AGENT_UPGRADE_STARTED", "MONITORED_AGENT_VERSION_ACCEPTED", "MONITORED_ENABLED", "PRE_MONITORED", "SHUTDOWN_AGENT_LOST", "SHUTDOWN_GRACEFUL", "SHUTDOWN_SPOT_INSTANCE", "SHUTDOWN_STOPPED", "SHUTDOWN_UNKNOWN", "SHUTDOWN_UNKNOWN_UNEXPECTED", "UNKNOWN", "UNMONITORED_AGENT_DISABLED", "UNMONITORED_AGENT_LOST", "UNMONITORED_AGENT_RESTART_TRIGGERED", "UNMONITORED_AGENT_STOPPED", "UNMONITORED_AGENT_UNINSTALLED", "UNMONITORED_AGENT_UNREGISTERED", "UNMONITORED_AGENT_UPGRADE_FAILED", "UNMONITORED_AGENT_VERSION_REJECTED", "UNMONITORED_DISABLED", "UNMONITORED_ID_CHANGED", "UNMONITORED_TERMINATED", "UNMONITORED_UNKNOWN" ]
          },
          "currentActiveGateId" : {
            "type" : "integer",
            "description" : "This field is deprecated and provided for backward compatibility. \n\nUse the **currentActiveGateIds** field instead.",
            "format" : "int32",
            "deprecated" : true
          },
          "currentActiveGateIds" : {
            "type" : "array",
            "description" : "The list of ActiveGate IDs of ActiveGates to which OneAgent is currently connected.",
            "items" : {
              "type" : "string"
            }
          },
          "currentNetworkZoneId" : {
            "type" : "string",
            "description" : "The ID of the network zone that OneAgent is using."
          },
          "modules" : {
            "type" : "array",
            "description" : "A list of code modules deployed on the host.",
            "items" : {
              "$ref" : "#/components/schemas/ModuleInfo"
            }
          },
          "plugins" : {
            "type" : "array",
            "description" : "A list of plugins deployed on the host.",
            "items" : {
              "$ref" : "#/components/schemas/PluginInfo"
            }
          }
        },
        "description" : "OneAgent deployment on a host."
      },
      "HostsListPage" : {
        "type" : "object",
        "properties" : {
          "percentageOfEnvironmentSearched" : {
            "type" : "number",
            "description" : "The progress of the environment search, in percent.",
            "format" : "double"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. \n\n Has the value of `null` on the last page. \n\nThere might be another page of results even if the current page is empty."
          },
          "hosts" : {
            "type" : "array",
            "description" : "A list of hosts with OneAgent deployment information for each host.",
            "items" : {
              "$ref" : "#/components/schemas/HostAgentInfo"
            }
          }
        },
        "description" : "A list of hosts with OneAgent deployment information for each host."
      },
      "ModuleInfo" : {
        "type" : "object",
        "properties" : {
          "moduleType" : {
            "type" : "string",
            "description" : "The type of the code module.",
            "enum" : [ "APACHE", "DOT_NET", "DUMPPROC", "GO", "IBM_INTEGRATION_BUS", "IIS", "JAVA", "LOG_ANALYTICS", "NETTRACER", "NETWORK", "NGINX", "NODE_JS", "OPENTRACINGNATIVE", "PHP", "PROCESS", "PYTHON", "RUBY", "SDK", "UPDATER", "VARNISH", "Z_OS" ]
          },
          "instances" : {
            "type" : "array",
            "description" : "A list of instances of the code module.",
            "items" : {
              "$ref" : "#/components/schemas/ModuleInstance"
            }
          }
        },
        "description" : "OneAgent code module."
      },
      "ModuleInstance" : {
        "type" : "object",
        "properties" : {
          "instanceName" : {
            "type" : "string",
            "description" : "The name of the instance."
          },
          "moduleVersion" : {
            "type" : "string",
            "description" : "The version of the code module."
          },
          "faultyVersion" : {
            "type" : "boolean",
            "description" : "The code module version is faulty (`true`) or not (`false`)."
          },
          "active" : {
            "type" : "boolean",
            "description" : "The code module instance is active (`true`) or inactive (`false`)."
          }
        },
        "description" : "An instance of the OneAgent code module."
      },
      "PluginInfo" : {
        "type" : "object",
        "properties" : {
          "pluginName" : {
            "type" : "string",
            "description" : "The name of the plugin."
          },
          "instances" : {
            "type" : "array",
            "description" : "A list of instances of the plugin.",
            "items" : {
              "$ref" : "#/components/schemas/PluginInstance"
            }
          }
        },
        "description" : "OneAgent plugin."
      },
      "PluginInstance" : {
        "type" : "object",
        "properties" : {
          "pluginVersion" : {
            "type" : "string",
            "description" : "The version of the plugin."
          },
          "state" : {
            "type" : "string",
            "description" : "The state of the plugin instance."
          }
        },
        "description" : "An instance of the OneAgent plugin."
      },
      "ProblemCloseResult" : {
        "type" : "object",
        "properties" : {
          "problemId" : {
            "type" : "string",
            "description" : "The ID of the problem."
          },
          "comment" : {
            "$ref" : "#/components/schemas/ProblemComment"
          },
          "closeTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp when the closure was triggered.",
            "format" : "int64"
          },
          "closing" : {
            "type" : "boolean",
            "description" : "The problem is in process of closing (`true`) or closed (`false`)."
          }
        },
        "description" : "The result of closing a problem."
      },
      "ProblemComment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the comment."
          },
          "createdAtTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the comment creation, in UTC milliseconds.",
            "format" : "int64"
          },
          "content" : {
            "type" : "string",
            "description" : "The text of the comment."
          },
          "userName" : {
            "type" : "string",
            "description" : "The author of the comment."
          },
          "context" : {
            "type" : "string",
            "description" : "The context of the comment. \n\nCould be any textual comment. You can only set it via REST API."
          }
        },
        "description" : "The comment to the problem."
      },
      "ProblemCommentList" : {
        "type" : "object",
        "properties" : {
          "comments" : {
            "type" : "array",
            "description" : "The list of comments to the problem.",
            "items" : {
              "$ref" : "#/components/schemas/ProblemComment"
            }
          }
        },
        "description" : "The list of comments to the problem."
      },
      "Event" : {
        "type" : "object",
        "properties" : {
          "startTime" : {
            "type" : "integer",
            "description" : "The timestamp of the event detection, in UTC milliseconds.",
            "format" : "int64"
          },
          "endTime" : {
            "type" : "integer",
            "description" : "The timestamp of the event closure, in UTC milliseconds.\n\n Has the `-1` value if the event is still open.",
            "format" : "int64"
          },
          "entityId" : {
            "type" : "string",
            "description" : "The ID of the affected Dynatrace entity."
          },
          "entityName" : {
            "type" : "string",
            "description" : "The name of the affected Dynatrace entity."
          },
          "severityLevel" : {
            "type" : "string",
            "description" : "The severity of the event.",
            "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "MONITORING_UNAVAILABLE", "PERFORMANCE", "RESOURCE_CONTENTION" ]
          },
          "impactLevel" : {
            "type" : "string",
            "description" : "The impact level of the event. It shows what is affected by the problem: infrastructure, service, or application.",
            "enum" : [ "APPLICATION", "ENVIRONMENT", "INFRASTRUCTURE", "SERVICE" ]
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "APPLICATION_JS_FRAMEWORK_DETECTED", "APPLICATION_OVERLOAD_PREVENTION", "AVAILABILITY_EVENT", "CONNECTION_LOST", "CPU_SATURATED", "CUSTOM_ALERT", "CUSTOM_ANNOTATION", "CUSTOM_APPLICATION_OVERLOAD_PREVENTION", "CUSTOM_APP_CRASH_RATE_INCREASED", "CUSTOM_CONFIGURATION", "CUSTOM_DEPLOYMENT", "CUSTOM_INFO", "DATABASE_CONNECTION_FAILURE", "DEPLOYMENT_CHANGED_CHANGE", "DEPLOYMENT_CHANGED_NEW", "DEPLOYMENT_CHANGED_REMOVED", "DYNATRACE_INTERNAL", "EBS_VOLUME_HIGH_LATENCY", "ELASTIC_LOAD_BALANCER_HIGH_BACKEND_FAILURE_RATE", "ELASTIC_LOAD_BALANCER_HIGH_FAILURE_RATE", "ELASTIC_LOAD_BALANCER_HIGH_UNHEALTHY_HOST_RATE", "ERROR_EVENT", "ESXI_HOST_VM_MOTION_ARRIVED", "ESXI_HOST_VM_MOTION_LEFT", "ESXI_HOST_VM_STARTED", "ESXI_START", "ESXI_VM_DISCONNECTED", "ESXI_VM_MOTION", "ESXI_VM_POWER_OFF", "ESXI_VM_START", "FAILURE_RATE_INCREASED", "HIGH_CONNECTIVITY_FAILURES", "HIGH_DROPPED_PACKETS_RATE", "HIGH_GC_ACTIVITY", "HIGH_LATENCY", "HIGH_NETWORK_ERROR_RATE", "HIGH_NETWORK_LOSS_RATE", "HIGH_NETWORK_UTILIZATION", "HOST_CONNECTION_FAILED", "HOST_CONNECTION_LOST", "HOST_DATASTORE_LOW_DISK_SPACE", "HOST_DISK_LOW_INODES", "HOST_GRACEFULLY_SHUTDOWN", "HOST_LOG_AVAILABILITY", "HOST_LOG_ERROR", "HOST_LOG_MATCHED", "HOST_LOG_PERFORMANCE", "HOST_MAINTENANCE", "HOST_NO_CONNECTION", "HOST_OF_SERVICE_UNAVAILABLE", "HOST_SHUTDOWN", "HOST_TIMEOUT", "HTTP_CHECK_GLOBAL_OUTAGE", "HTTP_CHECK_LOCAL_OUTAGE", "HTTP_CHECK_TEST_LOCATION_SLOWDOWN", "INSUFFICIENT_DISK_QUEUE_DEPTH", "JAVASCRIPT_ERROR_RATE_INCREASED", "LAMBDA_FUNCTION_HIGH_ERROR_RATE", "LOG_AVAILABILITY", "LOG_ERROR", "LOG_MATCHED", "LOG_PERFORMANCE", "LOW_DISK_SPACE", "LOW_STORAGE_SPACE", "MARKED_FOR_TERMINATION", "MEMORY_RESOURCES_EXHAUSTED", "MEMORY_SATURATED", "MOBILE_APPLICATION_OVERLOAD_PREVENTION", "MOBILE_APP_CRASH_RATE_INCREASED", "MONITORING_UNAVAILABLE", "OPENSTACK_HOST_VM_SHUTDOWN", "OPENSTACK_HOST_VM_STARTED", "OPENSTACK_KEYSTONE_SLOW", "OPENSTACK_KEYSTONE_UNHEALTHY", "OPENSTACK_VM_LAUNCH_FAILED", "OPENSTACK_VM_MOTION", "OSI_DOCKER_DEVICEMAPPER_LOW_DATA_SPACE", "OSI_DOCKER_DEVICEMAPPER_LOW_METADATA_SPACE", "OVERLOADED_STORAGE", "PERFORMANCE_EVENT", "PGI_CRASHED_INFO", "PGI_HAPROXY_QUEUED_REQUESTS_HIGH", "PGI_HAPROXY_SESSION_USAGE_HIGH", "PGI_LOG_MATCHED", "PGI_MEMDUMP", "PGI_MYSQL_SLOW_QUERIES_RATE_HIGH", "PGI_OF_SERVICE_UNAVAILABLE", "PGI_RMQ_HIGH_FILE_DESC_USAGE", "PGI_RMQ_HIGH_MEM_USAGE", "PGI_RMQ_HIGH_PROCESS_USAGE", "PGI_RMQ_HIGH_SOCKETS_USAGE", "PGI_RMQ_LOW_DISK_SPACE", "PROCESS_CRASHED", "PROCESS_CUSTOM_AVAILABILITY", "PROCESS_CUSTOM_ERROR", "PROCESS_CUSTOM_PERFORMANCE", "PROCESS_GROUP_LOW_INSTANCE_COUNT", "PROCESS_LOG_AVAILABILITY", "PROCESS_LOG_ERROR", "PROCESS_LOG_PERFORMANCE", "PROCESS_RESTART", "PROCESS_UNAVAILABLE", "RDS_AZ_FAILOVER_COMPLETED", "RDS_AZ_FAILOVER_STARTED", "RDS_BACKUP_COMPLETED", "RDS_BACKUP_STARTED", "RDS_OF_SERVICE_UNAVAILABLE", "RDS_RESTART", "RDS_RESTART_SEQUENCE", "RESOURCE_CONTENTION", "SERVICE_RESPONSE_TIME_DEGRADED", "SLOW_DISK", "SYNTHETIC_AVAILABILITY", "SYNTHETIC_NODE_OUTAGE", "SYNTHETIC_PRIVATE_LOCATION_OUTAGE", "SYNTHETIC_SLOWDOWN", "THREADS_RESOURCES_EXHAUSTED", "UNEXPECTED_HIGH_LOAD", "UNEXPECTED_LOW_LOAD", "USER_ACTION_DURATION_DEGRADATION", "VIRTUAL_MACHINE_SHUTDOWN", "WEB_CHECK_GLOBAL_OUTAGE", "WEB_CHECK_LOCAL_OUTAGE" ]
          },
          "resourceId" : {
            "type" : "string",
            "description" : "The id of the resource the event occurred on."
          },
          "resourceName" : {
            "type" : "string",
            "description" : "The name of the resource the event occurred on."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the event.",
            "enum" : [ "CLOSED", "OPEN" ]
          },
          "severities" : {
            "type" : "array",
            "description" : "Additional data on the event severity.",
            "items" : {
              "$ref" : "#/components/schemas/EventSeverity"
            }
          },
          "isRootCause" : {
            "type" : "boolean",
            "description" : "Indicates if the event is the root cause of a problem."
          },
          "deploymentProject" : {
            "type" : "string"
          },
          "cpuLimitInMHz" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deploymentParamAdded" : {
            "type" : "string"
          },
          "affectedPrivateSyntheticLocations" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "isClusterWide" : {
            "type" : "boolean",
            "description" : "For events with event type `MONITORING_UNAVAILABLE`, it may be that the event is occurring on the entire Dynatrace cluster. If this is true, it could be that there are problems on the Dynatrace side."
          },
          "source" : {
            "type" : "string"
          },
          "effectiveEntity" : {
            "type" : "string"
          },
          "operatingSystem" : {
            "type" : "string"
          },
          "artifact" : {
            "type" : "string"
          },
          "cpuLoad" : {
            "type" : "number",
            "format" : "float"
          },
          "affectedRequestsPerMinute" : {
            "type" : "number",
            "format" : "float"
          },
          "annotationDescription" : {
            "type" : "string"
          },
          "browser" : {
            "type" : "string",
            "enum" : [ "APPLICATION", "ENVIRONMENT", "INFRASTRUCTURE", "SERVICES" ]
          },
          "affectedSyntheticLocations" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "deploymentName" : {
            "type" : "string"
          },
          "deploymentParamRemoved" : {
            "type" : "string"
          },
          "correlationId" : {
            "type" : "string"
          },
          "userDefined50thPercentileThreshold" : {
            "type" : "number",
            "format" : "float"
          },
          "syntheticErrorType" : {
            "type" : "array",
            "description" : "If the event type is one of the synthetic event types then we may have information about the error type. The names of those are returned in this field.",
            "items" : {
              "type" : "string"
            }
          },
          "serviceMethodGroup" : {
            "type" : "string"
          },
          "referenceResponseTime90thPercentile" : {
            "type" : "number",
            "format" : "float"
          },
          "userAction" : {
            "type" : "string"
          },
          "minimumProcessGroupInstanceCountThreshold" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceResponseTime50thPercentile" : {
            "type" : "number",
            "format" : "float"
          },
          "original" : {
            "type" : "string"
          },
          "userDefined90thPercentileThreshold" : {
            "type" : "number",
            "format" : "float"
          },
          "deploymentVersion" : {
            "type" : "string"
          },
          "annotationType" : {
            "type" : "string"
          },
          "affectedSyntheticActions" : {
            "type" : "array",
            "description" : "If the event type is one of the synthetic event types then we may have information on which synthetic actions are affected by the event. The names of those are returned in this field.",
            "items" : {
              "type" : "string"
            }
          },
          "affectedUserActionsPerMinute" : {
            "type" : "number",
            "format" : "float"
          },
          "activeMaintenanceWindows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EntityShortRepresentation"
            }
          },
          "mobileAppVersion" : {
            "type" : "string"
          },
          "userDefinedFailureRateThreshold" : {
            "type" : "number",
            "format" : "float"
          },
          "percentile" : {
            "type" : "string",
            "enum" : [ "50th", "90th" ]
          },
          "customProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "remediationAction" : {
            "type" : "string"
          },
          "service" : {
            "type" : "string"
          },
          "ciBackLink" : {
            "type" : "string"
          },
          "geolocation" : {
            "type" : "string"
          },
          "serviceMethod" : {
            "type" : "string"
          },
          "changed" : {
            "type" : "string"
          }
        },
        "description" : "The properties of an event."
      },
      "EventSeverity" : {
        "type" : "object",
        "properties" : {
          "context" : {
            "type" : "string",
            "description" : "The metric used in the event severity calculation.",
            "enum" : [ "COMMAND_ABORT", "CPU_READY_TIME", "CPU_USAGE", "CRASH_RATE", "FAILURE_RATE", "HYPERVISOR_PACKETS_RECEIVED_DROPPED", "HYPERVISOR_PACKETS_TRANSMITTED_DROPPED", "MEMORY_COMPRESSION_RATE", "MEMORY_DECOMPRESSION_RATE", "MEMORY_SWAP_IN_RATE", "MEMORY_SWAP_OUT_RATE", "MEMORY_USAGE", "NETWORK_HIGH_RECEIVED_UTILIZATION_RATE", "NETWORK_HIGH_TRANSMITTED_UTILIZATION_RATE", "NETWORK_PACKETS_RECEIVED_DROPPED", "NETWORK_PACKETS_TRANSMITTED_DROPPED", "NETWORK_RECEIVED_ERROR_RATE", "NETWORK_TRANSMITTED_ERROR_RATE", "PAGE_FAULTS", "PG_AVAILABLE", "RESPONSE_TIME_50TH_PERCENTILE", "RESPONSE_TIME_90TH_PERCENTILE" ]
          },
          "value" : {
            "type" : "number",
            "description" : "The value of the severity.",
            "format" : "float"
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of the severity value.",
            "enum" : [ "Billion (bilcount)", "Bit (bit)", "BitPerHour (bit/h)", "BitPerMinute (bit/min)", "BitPerSecond (bit/s)", "Byte (B)", "BytePerHour (B/h)", "BytePerMinute (B/min)", "BytePerSecond (B/s)", "Cores", "Count (count)", "Day (ds)", "DecibelMilliWatt (dBm)", "G", "GibiByte (GiB)", "GigaByte (GB)", "Hour (hs)", "KibiByte (KiB)", "KibiBytePerHour (KiB/h)", "KibiBytePerMinute (KiB/min)", "KibiBytePerSecond (KiB/s)", "KiloByte (kB)", "KiloBytePerHour (kB/h)", "KiloBytePerMinute (kB/min)", "KiloBytePerSecond (kB/s)", "M", "MSU", "MebiByte (MiB)", "MebiBytePerHour (MiB/h)", "MebiBytePerMinute (MiB/min)", "MebiBytePerSecond (MiB/s)", "MegaByte (MB)", "MegaBytePerHour (MB/h)", "MegaBytePerMinute (MB/min)", "MegaBytePerSecond (MB/s)", "MicroSecond (µs)", "MilliSecond (ms)", "MilliSecondPerMinute (ms/min)", "Million (milcount)", "Minute (mins)", "Month (mos)", "N/A", "NanoSecond (ns)", "NanoSecondPerMinute (ns/min)", "PerHour (count/h)", "PerMinute (count/min)", "PerSecond (count/s)", "Percent (%)", "Pixel (px)", "Promille (‰)", "Ratio", "Second (s)", "State", "Unspecified", "Week (ws)", "Year (ys)", "k", "km/h", "m/h", "m/s", "mCores" ]
          }
        },
        "description" : "Additional data on the event severity."
      },
      "Problem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the problem."
          },
          "startTime" : {
            "type" : "integer",
            "description" : "The start timestamp of the problem, in UTC milliseconds.",
            "format" : "int64"
          },
          "endTime" : {
            "type" : "integer",
            "description" : "The end timestamp of the problem, in UTC milliseconds. \n\n Has the value `-1` if the problem is still open.",
            "format" : "int64"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the problem, displayed in the UI."
          },
          "impactLevel" : {
            "type" : "string",
            "description" : "The impact level of the problem. It shows what is affected by the problem: infrastructure, service, or application.",
            "enum" : [ "APPLICATION", "ENVIRONMENT", "INFRASTRUCTURE", "SERVICE" ]
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the problem.",
            "enum" : [ "CLOSED", "OPEN" ]
          },
          "severityLevel" : {
            "type" : "string",
            "description" : "The severity of the problem.",
            "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "MONITORING_UNAVAILABLE", "PERFORMANCE", "RESOURCE_CONTENTION" ]
          },
          "commentCount" : {
            "type" : "integer",
            "description" : "The number of comments to the problem.",
            "format" : "int32"
          },
          "tagsOfAffectedEntities" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Tags of entities affected by the problem.",
            "items" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          },
          "rankedEvents" : {
            "type" : "array",
            "description" : "The list of events related to the problem.",
            "items" : {
              "$ref" : "#/components/schemas/Event"
            }
          },
          "rankedImpacts" : {
            "type" : "array",
            "description" : "Provides impact information of the events in an aggregated form. For a more detailed impact analysis, see `rankedEvents`.",
            "items" : {
              "$ref" : "#/components/schemas/EventRestImpact"
            }
          },
          "affectedCounts" : {
            "type" : "object",
            "properties" : {
              "APPLICATION" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `APPLICATION` impact level.",
                "format" : "int32"
              },
              "ENVIRONMENT" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `ENVIRONMENT` impact level.",
                "format" : "int32"
              },
              "INFRASTRUCTURE" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `INFRASTRUCTURE` impact level.",
                "format" : "int32"
              },
              "SERVICE" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `SERVICE` impact level.",
                "format" : "int32"
              }
            },
            "description" : "The number of affected entities per impact level."
          },
          "recoveredCounts" : {
            "type" : "object",
            "properties" : {
              "APPLICATION" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `APPLICATION` impact level.",
                "format" : "int32"
              },
              "ENVIRONMENT" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `ENVIRONMENT` impact level.",
                "format" : "int32"
              },
              "INFRASTRUCTURE" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `INFRASTRUCTURE` impact level.",
                "format" : "int32"
              },
              "SERVICE" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `SERVICE` impact level.",
                "format" : "int32"
              }
            },
            "description" : "The number of entities that were affected, but recovered, per impact level."
          },
          "hasRootCause" : {
            "type" : "boolean",
            "description" : "Indicates whether Dynatrace has found at least one possible root cause for the problem."
          }
        },
        "description" : "The properties of a problem."
      },
      "ProblemDetailsResultWrapper" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/Problem"
          }
        }
      },
      "ProblemFeedQueryResult" : {
        "type" : "object",
        "properties" : {
          "problems" : {
            "type" : "array",
            "description" : "The list of problems and their details. \n\nContains all problems within specified timeframe, open and closed.",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "monitored" : {
            "type" : "object",
            "properties" : {
              "APPLICATION" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `APPLICATION` impact level.",
                "format" : "int32"
              },
              "ENVIRONMENT" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `ENVIRONMENT` impact level.",
                "format" : "int32"
              },
              "INFRASTRUCTURE" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `INFRASTRUCTURE` impact level.",
                "format" : "int32"
              },
              "SERVICE" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `SERVICE` impact level.",
                "format" : "int32"
              }
            },
            "description" : "The number of monitored entities per impact level."
          }
        },
        "description" : "Details on open problems in your environment."
      },
      "ProblemFeedResultWrapper" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ProblemFeedQueryResult"
          }
        }
      },
      "GlobalProblemStatus" : {
        "type" : "object",
        "properties" : {
          "totalOpenProblemsCount" : {
            "type" : "integer",
            "description" : "The total number of open problems in your environment.",
            "format" : "int32"
          },
          "openProblemCounts" : {
            "type" : "object",
            "properties" : {
              "APPLICATION" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `APPLICATION` impact level.",
                "format" : "int32"
              },
              "ENVIRONMENT" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `ENVIRONMENT` impact level.",
                "format" : "int32"
              },
              "INFRASTRUCTURE" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `INFRASTRUCTURE` impact level.",
                "format" : "int32"
              },
              "SERVICE" : {
                "type" : "integer",
                "description" : "The count of impacted entities for the `SERVICE` impact level.",
                "format" : "int32"
              }
            },
            "description" : "Numbers of open problems per impact level."
          }
        },
        "description" : "The count of open problems in your environment."
      },
      "ProblemStatusResultWrapper" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/GlobalProblemStatus"
          }
        }
      },
      "PushProblemComment" : {
        "required" : [ "comment", "user" ],
        "type" : "object",
        "properties" : {
          "comment" : {
            "type" : "string",
            "description" : "A comment on the problem."
          },
          "user" : {
            "type" : "string",
            "description" : "The author of the comment."
          },
          "context" : {
            "type" : "string",
            "description" : "The context of the comment. It can contain any additional information."
          }
        },
        "description" : "A comment of a problem",
        "example" : {
          "comment" : "This is a comment!",
          "user" : "user1",
          "context" : "Slack"
        }
      },
      "EntityIdDto" : {
        "required" : [ "entityId" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "Entity ID to be transferred"
          }
        },
        "description" : "A DTO for entity ID."
      },
      "AnomalyDetection" : {
        "required" : [ "loadingTimeThresholds", "outageHandling" ],
        "type" : "object",
        "properties" : {
          "outageHandling" : {
            "$ref" : "#/components/schemas/OutageHandlingPolicy"
          },
          "loadingTimeThresholds" : {
            "$ref" : "#/components/schemas/LoadingTimeThresholdsPolicyDto"
          }
        },
        "description" : "The anomaly detection configuration."
      },
      "BrowserSyntheticMonitorUpdate" : {
        "required" : [ "enabled", "frequencyMin", "keyPerformanceMetrics", "locations", "manuallyAssignedApps", "name", "script", "tags", "type" ],
        "type" : "object",
        "description" : "Browser synthetic monitor update. Some fields are inherited from base `SyntheticMonitorUpdate` model.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticMonitorUpdate"
        }, {
          "type" : "object",
          "properties" : {
            "keyPerformanceMetrics" : {
              "$ref" : "#/components/schemas/KeyPerformanceMetrics"
            }
          }
        } ]
      },
      "GlobalOutagePolicy" : {
        "required" : [ "consecutiveRuns" ],
        "type" : "object",
        "properties" : {
          "consecutiveRuns" : {
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if all locations are unable to access the web application *X* times consecutively.",
            "format" : "int32"
          }
        },
        "description" : "Global outage handling configuration.",
        "nullable" : true
      },
      "HttpSyntheticMonitorUpdate" : {
        "required" : [ "enabled", "frequencyMin", "locations", "manuallyAssignedApps", "name", "script", "tags", "type" ],
        "type" : "object",
        "description" : "HTTP synthetic monitor update. Some fields are inherited from base `SyntheticMonitorUpdate` model.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticMonitorUpdate"
        } ]
      },
      "KeyPerformanceMetrics" : {
        "required" : [ "loadActionKpm", "xhrActionKpm" ],
        "type" : "object",
        "properties" : {
          "loadActionKpm" : {
            "type" : "string",
            "description" : "Defines the key performance metric for load actions.",
            "enum" : [ "VISUALLY_COMPLETE", "SPEED_INDEX", "USER_ACTION_DURATION", "TIME_TO_FIRST_BYTE", "HTML_DOWNLOADED", "DOM_INTERACTIVE", "LOAD_EVENT_START", "LOAD_EVENT_END" ]
          },
          "xhrActionKpm" : {
            "type" : "string",
            "description" : "Defines the key performance metric for XHR actions.",
            "enum" : [ "VISUALLY_COMPLETE", "USER_ACTION_DURATION", "TIME_TO_FIRST_BYTE", "RESPONSE_END" ]
          }
        },
        "description" : "The key performance metrics configuration."
      },
      "LoadingTimeThreshold" : {
        "required" : [ "type", "valueMs" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the threshold: total loading time or action loading time.",
            "enum" : [ "ACTION", "TOTAL" ]
          },
          "valueMs" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Notify if monitor takes longer than *X* milliseconds to load.",
            "format" : "int32"
          },
          "requestIndex" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Specify the request to which an ACTION threshold applies.",
            "format" : "int32"
          },
          "eventIndex" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Specify the event to which an ACTION threshold applies.",
            "format" : "int32"
          }
        },
        "description" : "The performance threshold rule."
      },
      "LoadingTimeThresholdsPolicyDto" : {
        "required" : [ "enabled", "thresholds" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "Performance threshold is enabled (`true`) or disabled (`false`)."
          },
          "thresholds" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of performance threshold rules.",
            "items" : {
              "$ref" : "#/components/schemas/LoadingTimeThreshold"
            }
          }
        },
        "description" : "Performance thresholds configuration."
      },
      "LocalOutagePolicy" : {
        "required" : [ "affectedLocations", "consecutiveRuns" ],
        "type" : "object",
        "properties" : {
          "affectedLocations" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of affected locations to trigger an alert.",
            "format" : "int32"
          },
          "consecutiveRuns" : {
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of consecutive fails to trigger an alert.",
            "format" : "int32"
          }
        },
        "description" : "Local outage handling configuration. \n\n Alert if **affectedLocations** of locations are unable to access the web application **consecutiveRuns** times consecutively."
      },
      "OutageHandlingPolicy" : {
        "required" : [ "globalOutage", "localOutage", "localOutagePolicy" ],
        "type" : "object",
        "properties" : {
          "globalOutage" : {
            "type" : "boolean",
            "description" : "When enabled (`true`), generate a problem and send an alert when the monitor is unavailable at all configured locations."
          },
          "globalOutagePolicy" : {
            "$ref" : "#/components/schemas/GlobalOutagePolicy"
          },
          "localOutage" : {
            "type" : "boolean",
            "description" : "When enabled (`true`), generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location."
          },
          "localOutagePolicy" : {
            "$ref" : "#/components/schemas/LocalOutagePolicy"
          },
          "retryOnError" : {
            "type" : "boolean",
            "description" : "Schedule retry if browser monitor execution results in a fail. For HTTP monitors this property is ignored.",
            "default" : true
          }
        },
        "description" : "Outage handling configuration."
      },
      "SyntheticMonitorUpdate" : {
        "required" : [ "enabled", "frequencyMin", "locations", "manuallyAssignedApps", "name", "script", "tags", "type" ],
        "type" : "object",
        "properties" : {
          "frequencyMin" : {
            "type" : "integer",
            "description" : "The frequency of the monitor, in minutes. \n\n You can use one of the following values: `5`, `10`, `15`, `30`, and `60`.",
            "format" : "int32"
          },
          "anomalyDetection" : {
            "$ref" : "#/components/schemas/AnomalyDetection"
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `BROWSER` -> BrowserSyntheticMonitorUpdate \n* `HTTP` -> HttpSyntheticMonitorUpdate \n",
            "enum" : [ "BROWSER", "HTTP" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the monitor."
          },
          "locations" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of locations from which the monitor is executed. \n\n To specify a location, use its entity ID.",
            "items" : {
              "type" : "string"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The monitor is enabled (`true`) or disabled (`false`)."
          },
          "script" : {
            "type" : "object",
            "description" : "The script of a [browser](https://dt-url.net/9c103rda) or HTTP monitor."
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A set of tags assigned to the monitor. \n\n You can specify only the value of the tag here and the `CONTEXTLESS` context and source 'USER' will be added automatically. But preferred option is usage of TagWithSourceDto model.",
            "items" : {
              "$ref" : "#/components/schemas/TagWithSourceInfo"
            }
          },
          "manuallyAssignedApps" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A set of manually assigned applications.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The synthetic monitor update. \n\n The actual set of fields depends the type of the monitor. Find the list of actual objects in the description of the **type** field or see [Synthetic monitors API - JSON models](https://dt-url.net/2523se9).",
        "example" : {
          "frequencyMin" : 5,
          "anomalyDetection" : {
            "outageHandling" : {
              "globalOutage" : true,
              "localOutage" : true,
              "localOutagePolicy" : {
                "affectedLocations" : 1,
                "consecutiveRuns" : 3
              }
            },
            "loadingTimeThresholds" : {
              "enabled" : true,
              "thresholds" : [ {
                "type" : "TOTAL",
                "valueMs" : 100,
                "requestIndex" : 1
              } ]
            }
          },
          "type" : "BROWSER",
          "name" : "Browser Monitor Example",
          "locations" : [ "GEOLOCATION-9999453BE4BDB3CD" ],
          "enabled" : true,
          "script" : {
            "type" : "availability",
            "version" : "1.0",
            "configuration" : {
              "device" : {
                "deviceName" : "Desktop",
                "orientation" : "landscape"
              }
            },
            "events" : [ {
              "type" : "navigate",
              "description" : "Loading of \"example.com\"",
              "url" : "http://example.com",
              "wait" : {
                "waitFor" : "page_complete"
              }
            } ]
          },
          "keyPerformanceMetrics" : {
            "loadActionKpm" : "VISUALLY_COMPLETE",
            "xhrActionKpm" : "VISUALLY_COMPLETE"
          },
          "tags" : [ "example" ],
          "manuallyAssignedApps" : [ "APPLICATION-4ADF0EF407C7C545" ],
          "events" : [ ]
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "TagWithSourceInfo" : {
        "required" : [ "context", "key" ],
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string",
            "description" : "The source of the tag, such as USER, RULE_BASED or AUTO",
            "enum" : [ "AUTO", "RULE_BASED", "USER" ]
          },
          "context" : {
            "type" : "string",
            "description" : "The origin of the tag, such as AWS or Cloud Foundry. \n\n Custom tags use the `CONTEXTLESS` value.",
            "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_CLOUD", "KUBERNETES" ]
          },
          "key" : {
            "maxLength" : 2000,
            "minLength" : 1,
            "type" : "string",
            "description" : "The key of the tag. \n\n Custom tags have the tag value here."
          },
          "value" : {
            "maxLength" : 2000,
            "minLength" : 0,
            "type" : "string",
            "description" : "The value of the tag. \n\n Not applicable to custom tags."
          }
        },
        "description" : "Tag with source of a Dynatrace entity."
      },
      "BrowserSyntheticMonitor" : {
        "required" : [ "automaticallyAssignedApps", "createdFrom", "enabled", "entityId", "frequencyMin", "locations", "managementZones", "manuallyAssignedApps", "name", "script", "tags", "type" ],
        "type" : "object",
        "description" : "Browser synthetic monitor. Some fields are inherited from the base `SyntheticMonitor` model.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticMonitor"
        }, {
          "type" : "object",
          "properties" : {
            "keyPerformanceMetrics" : {
              "$ref" : "#/components/schemas/KeyPerformanceMetrics"
            },
            "events" : {
              "type" : "array",
              "description" : "A list of events for this monitor",
              "items" : {
                "$ref" : "#/components/schemas/EventDto"
              }
            }
          }
        } ]
      },
      "EventDto" : {
        "required" : [ "entityId", "name", "sequenceNumber" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "Event identifier"
          },
          "name" : {
            "type" : "string",
            "description" : "Event name"
          },
          "sequenceNumber" : {
            "type" : "integer",
            "description" : "Event sequence number",
            "format" : "int32"
          }
        }
      },
      "HttpSyntheticMonitor" : {
        "required" : [ "automaticallyAssignedApps", "createdFrom", "enabled", "entityId", "frequencyMin", "locations", "managementZones", "manuallyAssignedApps", "name", "script", "tags", "type" ],
        "type" : "object",
        "description" : "HTTP synthetic monitor. Some fields are inherited from base `SyntheticMonitor` model.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticMonitor"
        }, {
          "type" : "object",
          "properties" : {
            "requests" : {
              "type" : "array",
              "description" : "A list of events for this monitor",
              "items" : {
                "$ref" : "#/components/schemas/RequestDto"
              }
            }
          }
        } ]
      },
      "ManagementZone" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the management zone."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the management zone."
          }
        },
        "description" : "The configuration of a management zone."
      },
      "RequestDto" : {
        "required" : [ "entityId", "name", "sequenceNumber" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "Request identifier"
          },
          "name" : {
            "type" : "string",
            "description" : "Request name"
          },
          "sequenceNumber" : {
            "type" : "integer",
            "description" : "Request sequence number",
            "format" : "int32"
          }
        }
      },
      "SyntheticMonitor" : {
        "required" : [ "automaticallyAssignedApps", "createdFrom", "enabled", "entityId", "frequencyMin", "locations", "managementZones", "manuallyAssignedApps", "name", "script", "tags", "type" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The entity ID of the monitor."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the monitor."
          },
          "frequencyMin" : {
            "type" : "integer",
            "description" : "The frequency of the monitor, in minutes. \n\n You can use one of the following values: `5`, `10`, `15`, `30`, and `60`.",
            "format" : "int32"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The monitor is enabled (`true`) or disabled (`false`)."
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `BROWSER` -> BrowserSyntheticMonitor \n* `HTTP` -> HttpSyntheticMonitor \n",
            "enum" : [ "BROWSER", "HTTP" ]
          },
          "createdFrom" : {
            "type" : "string",
            "description" : "The origin of a monitor",
            "enum" : [ "API", "GUI" ]
          },
          "script" : {
            "type" : "object",
            "description" : "The script of a [browser](https://dt-url.net/9c103rda) or HTTP monitor."
          },
          "locations" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of locations from which the monitor is executed. \n\n To specify a location, use its entity ID.",
            "items" : {
              "type" : "string"
            }
          },
          "anomalyDetection" : {
            "$ref" : "#/components/schemas/AnomalyDetection"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A set of tags assigned to the monitor.",
            "items" : {
              "$ref" : "#/components/schemas/TagWithSourceInfo"
            }
          },
          "managementZones" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A set of management zones to which the monitor belongs to.",
            "items" : {
              "$ref" : "#/components/schemas/ManagementZone"
            }
          },
          "automaticallyAssignedApps" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A set of automatically assigned applications.",
            "items" : {
              "type" : "string"
            }
          },
          "manuallyAssignedApps" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A set of manually assigned applications.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The synthetic monitor. \n\n The actual set of fields depends the type of the monitor. Find the list of actual objects in the description of the **type** field or see [Synthetic monitors API - JSON models](https://dt-url.net/2523se9).",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "MonitorCollectionElement" : {
        "required" : [ "enabled", "entityId", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of a synthetic object."
          },
          "entityId" : {
            "type" : "string",
            "description" : "The ID of a synthetic object."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of a synthetic monitor.",
            "enum" : [ "BROWSER", "HTTP" ]
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The state of a synthetic monitor."
          }
        },
        "description" : "The short representation of a synthetic monitor."
      },
      "Monitors" : {
        "required" : [ "monitors" ],
        "type" : "object",
        "properties" : {
          "monitors" : {
            "type" : "array",
            "description" : "The list of synthetic monitors.",
            "items" : {
              "$ref" : "#/components/schemas/MonitorCollectionElement"
            }
          }
        },
        "description" : "A list of synthetic monitors"
      },
      "Threshold" : {
        "type" : "object",
        "properties" : {
          "thresholdId" : {
            "type" : "string",
            "description" : "The ID of the threshold."
          },
          "timeseriesId" : {
            "type" : "string",
            "description" : "The case-sensitive ID of the metric evaluated by threshold. \n\nYou can use it to find the metric via the `timeseries` endpoint of the API."
          },
          "threshold" : {
            "type" : "number",
            "description" : "The value of the threshold.",
            "format" : "double"
          },
          "alertCondition" : {
            "type" : "string",
            "description" : "The condition for the threshold value check: above or below.",
            "enum" : [ "ABOVE", "BELOW" ]
          },
          "samples" : {
            "type" : "integer",
            "description" : "The number of one-minute samples that form sliding evaluation window.",
            "format" : "int32"
          },
          "violatingSamples" : {
            "type" : "integer",
            "description" : "How many one-minute samples within the evaluation window should violate the threshold to trigger an event.",
            "format" : "int32"
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the event to trigger on the threshold violation.",
            "enum" : [ "APPLICATION_JS_FRAMEWORK_DETECTED", "APPLICATION_OVERLOAD_PREVENTION", "AVAILABILITY_EVENT", "CONNECTION_LOST", "CPU_SATURATED", "CUSTOM_ALERT", "CUSTOM_ANNOTATION", "CUSTOM_APPLICATION_OVERLOAD_PREVENTION", "CUSTOM_APP_CRASH_RATE_INCREASED", "CUSTOM_CONFIGURATION", "CUSTOM_DEPLOYMENT", "CUSTOM_INFO", "DATABASE_CONNECTION_FAILURE", "DEPLOYMENT_CHANGED_CHANGE", "DEPLOYMENT_CHANGED_NEW", "DEPLOYMENT_CHANGED_REMOVED", "DYNATRACE_INTERNAL", "EBS_VOLUME_HIGH_LATENCY", "ELASTIC_LOAD_BALANCER_HIGH_BACKEND_FAILURE_RATE", "ELASTIC_LOAD_BALANCER_HIGH_FAILURE_RATE", "ELASTIC_LOAD_BALANCER_HIGH_UNHEALTHY_HOST_RATE", "ERROR_EVENT", "ESXI_HOST_VM_MOTION_ARRIVED", "ESXI_HOST_VM_MOTION_LEFT", "ESXI_HOST_VM_STARTED", "ESXI_START", "ESXI_VM_DISCONNECTED", "ESXI_VM_MOTION", "ESXI_VM_POWER_OFF", "ESXI_VM_START", "FAILURE_RATE_INCREASED", "HIGH_CONNECTIVITY_FAILURES", "HIGH_DROPPED_PACKETS_RATE", "HIGH_GC_ACTIVITY", "HIGH_LATENCY", "HIGH_NETWORK_ERROR_RATE", "HIGH_NETWORK_LOSS_RATE", "HIGH_NETWORK_UTILIZATION", "HOST_CONNECTION_FAILED", "HOST_CONNECTION_LOST", "HOST_DATASTORE_LOW_DISK_SPACE", "HOST_DISK_LOW_INODES", "HOST_GRACEFULLY_SHUTDOWN", "HOST_LOG_AVAILABILITY", "HOST_LOG_ERROR", "HOST_LOG_MATCHED", "HOST_LOG_PERFORMANCE", "HOST_MAINTENANCE", "HOST_NO_CONNECTION", "HOST_OF_SERVICE_UNAVAILABLE", "HOST_SHUTDOWN", "HOST_TIMEOUT", "HTTP_CHECK_GLOBAL_OUTAGE", "HTTP_CHECK_LOCAL_OUTAGE", "HTTP_CHECK_TEST_LOCATION_SLOWDOWN", "INSUFFICIENT_DISK_QUEUE_DEPTH", "JAVASCRIPT_ERROR_RATE_INCREASED", "LAMBDA_FUNCTION_HIGH_ERROR_RATE", "LOG_AVAILABILITY", "LOG_ERROR", "LOG_MATCHED", "LOG_PERFORMANCE", "LOW_DISK_SPACE", "LOW_STORAGE_SPACE", "MARKED_FOR_TERMINATION", "MEMORY_RESOURCES_EXHAUSTED", "MEMORY_SATURATED", "MOBILE_APPLICATION_OVERLOAD_PREVENTION", "MOBILE_APP_CRASH_RATE_INCREASED", "MONITORING_UNAVAILABLE", "OPENSTACK_HOST_VM_SHUTDOWN", "OPENSTACK_HOST_VM_STARTED", "OPENSTACK_KEYSTONE_SLOW", "OPENSTACK_KEYSTONE_UNHEALTHY", "OPENSTACK_VM_LAUNCH_FAILED", "OPENSTACK_VM_MOTION", "OSI_DOCKER_DEVICEMAPPER_LOW_DATA_SPACE", "OSI_DOCKER_DEVICEMAPPER_LOW_METADATA_SPACE", "OVERLOADED_STORAGE", "PERFORMANCE_EVENT", "PGI_CRASHED_INFO", "PGI_HAPROXY_QUEUED_REQUESTS_HIGH", "PGI_HAPROXY_SESSION_USAGE_HIGH", "PGI_LOG_MATCHED", "PGI_MEMDUMP", "PGI_MYSQL_SLOW_QUERIES_RATE_HIGH", "PGI_OF_SERVICE_UNAVAILABLE", "PGI_RMQ_HIGH_FILE_DESC_USAGE", "PGI_RMQ_HIGH_MEM_USAGE", "PGI_RMQ_HIGH_PROCESS_USAGE", "PGI_RMQ_HIGH_SOCKETS_USAGE", "PGI_RMQ_LOW_DISK_SPACE", "PROCESS_CRASHED", "PROCESS_CUSTOM_AVAILABILITY", "PROCESS_CUSTOM_ERROR", "PROCESS_CUSTOM_PERFORMANCE", "PROCESS_GROUP_LOW_INSTANCE_COUNT", "PROCESS_LOG_AVAILABILITY", "PROCESS_LOG_ERROR", "PROCESS_LOG_PERFORMANCE", "PROCESS_RESTART", "PROCESS_UNAVAILABLE", "RDS_AZ_FAILOVER_COMPLETED", "RDS_AZ_FAILOVER_STARTED", "RDS_BACKUP_COMPLETED", "RDS_BACKUP_STARTED", "RDS_OF_SERVICE_UNAVAILABLE", "RDS_RESTART", "RDS_RESTART_SEQUENCE", "RESOURCE_CONTENTION", "SERVICE_RESPONSE_TIME_DEGRADED", "SLOW_DISK", "SYNTHETIC_AVAILABILITY", "SYNTHETIC_NODE_OUTAGE", "SYNTHETIC_PRIVATE_LOCATION_OUTAGE", "SYNTHETIC_SLOWDOWN", "THREADS_RESOURCES_EXHAUSTED", "UNEXPECTED_HIGH_LOAD", "UNEXPECTED_LOW_LOAD", "USER_ACTION_DURATION_DEGRADATION", "VIRTUAL_MACHINE_SHUTDOWN", "WEB_CHECK_GLOBAL_OUTAGE", "WEB_CHECK_LOCAL_OUTAGE" ]
          },
          "eventName" : {
            "type" : "string",
            "description" : "The name of the event to trigger on the threshold violation."
          },
          "filter" : {
            "type" : "string",
            "description" : "The source of the threshold.",
            "enum" : [ "ALL", "PLUGIN", "REMOTE_PLUGIN", "USER_INTERACTION" ]
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The threshold is enabled/disabled."
          },
          "dealertingSamples" : {
            "type" : "integer",
            "description" : "How many one-minute samples within the evaluation window should go back to normal to close the event.",
            "format" : "int32"
          },
          "description" : {
            "type" : "string",
            "description" : "A description of the event, triggered by a threshold violation. \n\n You can use the following placeholders: \n{severity}: the actual metric value,\n {alert_condition}: above or below threshold condition, \n{threshold}: the threshold value,{violating_samples}: the number of samples, violating the threshold, \n{dimensions}: metric's dimension that violated the threshold."
          }
        },
        "description" : "Parameters of a single plugin or custom event threshold."
      },
      "ThresholdRegistrationMessage" : {
        "type" : "object",
        "properties" : {
          "thresholdId" : {
            "type" : "string",
            "description" : "The ID of the threshold."
          },
          "timeseriesId" : {
            "type" : "string",
            "description" : "The case-sensitive ID of the metric evaluated by threshold. \n\n You can find metric IDs, by performing the GET request to the `timeseries` endpoint of the API."
          },
          "threshold" : {
            "type" : "number",
            "description" : "The value of the threshold.",
            "format" : "double"
          },
          "alertCondition" : {
            "type" : "string",
            "description" : "The condition for the threshold value check: above or below.",
            "enum" : [ "ABOVE", "BELOW" ]
          },
          "samples" : {
            "type" : "integer",
            "description" : "The number of one-minute samples to form the sliding evaluation window.",
            "format" : "int32"
          },
          "violatingSamples" : {
            "type" : "integer",
            "description" : "How many one-minute samples within the evaluation window should violate the threshold to trigger an event.",
            "format" : "int32"
          },
          "dealertingSamples" : {
            "type" : "integer",
            "description" : "How many one-minute samples within the evaluation window should go back to normal to close the event.",
            "format" : "int32"
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the event to trigger on the threshold violation.",
            "enum" : [ "AVAILABILITY_EVENT", "ERROR_EVENT", "PERFORMANCE_EVENT" ]
          },
          "eventName" : {
            "type" : "string",
            "description" : "The name of the event, displayed in the UI."
          },
          "description" : {
            "type" : "string",
            "description" : "A description of the event, triggered by a threshold violation. \n\n You can use the following placeholders: \n{severity}: the actual metric value,\n {alert_condition}: above or below threshold condition, \n{threshold}: the threshold value,{violating_samples}: the number of samples, violating the threshold, \n{dimensions}: metric's dimension that violated the threshold."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The threshold is enabled/disabled."
          }
        },
        "description" : "Parameters of a single plugin or custom event threshold.",
        "example" : {
          "thresholdId" : "tooManyCoffeesMade",
          "timeseriesId" : "received.coffees",
          "threshold" : 10000.0,
          "alertCondition" : "ABOVE",
          "samples" : 1,
          "violatingSamples" : 1,
          "dealertingSamples" : 1,
          "eventType" : "AVAILABILITY_EVENT",
          "eventName" : "Too many coffees made",
          "description" : "The coffee machine must not produce a number of coffees {alert_condition} {threshold}.",
          "enabled" : true
        }
      },
      "TimeseriesDefinition" : {
        "type" : "object",
        "properties" : {
          "timeseriesId" : {
            "type" : "string",
            "description" : "The ID of the metric."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the metric in the user interface."
          },
          "dimensions" : {
            "type" : "array",
            "description" : "The fine metric division, for example process group and process ID for some process-related metric.",
            "items" : {
              "type" : "string"
            }
          },
          "aggregationTypes" : {
            "type" : "array",
            "description" : "The list of allowed aggregations for this metric.",
            "items" : {
              "type" : "string",
              "enum" : [ "AVG", "COUNT", "MAX", "MEDIAN", "MIN", "PERCENTILE", "SUM" ]
            }
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of the metric.",
            "enum" : [ "Billion (bilcount)", "Bit (bit)", "BitPerHour (bit/h)", "BitPerMinute (bit/min)", "BitPerSecond (bit/s)", "Byte (B)", "BytePerHour (B/h)", "BytePerMinute (B/min)", "BytePerSecond (B/s)", "Cores", "Count (count)", "Day (ds)", "DecibelMilliWatt (dBm)", "G", "GibiByte (GiB)", "GigaByte (GB)", "Hour (hs)", "KibiByte (KiB)", "KibiBytePerHour (KiB/h)", "KibiBytePerMinute (KiB/min)", "KibiBytePerSecond (KiB/s)", "KiloByte (kB)", "KiloBytePerHour (kB/h)", "KiloBytePerMinute (kB/min)", "KiloBytePerSecond (kB/s)", "M", "MSU", "MebiByte (MiB)", "MebiBytePerHour (MiB/h)", "MebiBytePerMinute (MiB/min)", "MebiBytePerSecond (MiB/s)", "MegaByte (MB)", "MegaBytePerHour (MB/h)", "MegaBytePerMinute (MB/min)", "MegaBytePerSecond (MB/s)", "MicroSecond (µs)", "MilliSecond (ms)", "MilliSecondPerMinute (ms/min)", "Million (milcount)", "Minute (mins)", "Month (mos)", "N/A", "NanoSecond (ns)", "NanoSecondPerMinute (ns/min)", "PerHour (count/h)", "PerMinute (count/min)", "PerSecond (count/s)", "Percent (%)", "Pixel (px)", "Promille (‰)", "Ratio", "Second (s)", "State", "Unspecified", "Week (ws)", "Year (ys)", "k", "km/h", "m/h", "m/s", "mCores" ]
          },
          "filter" : {
            "type" : "string",
            "description" : "The feature, where the metric originates.",
            "enum" : [ "ALL", "BUILTIN", "CUSTOM", "PLUGIN", "REMOTE_PLUGIN" ]
          },
          "detailedSource" : {
            "type" : "string",
            "description" : "The feature, where the metric originates."
          },
          "pluginId" : {
            "type" : "string",
            "description" : "The ID of the plugin, where the metric originates."
          },
          "types" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Technology type definition. Used to group metrics under a logical technology name.",
            "items" : {
              "type" : "string"
            }
          },
          "warnings" : {
            "type" : "array",
            "description" : "The warnings that occurred while creating the metric.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The configuration of a metric with all its parameters.",
        "example" : {
          "timeseriesId" : "com.dynatrace.builting:host.cpu.idle",
          "displayName" : "CPU idle",
          "dimensions" : [ "HOST" ],
          "aggregationTypes" : [ "AVG", "SUM", "MIN", "MAX" ],
          "unit" : "Percent",
          "filter" : "BUILTIN",
          "detailedSource" : "Infrastructure",
          "types" : [ "Test" ],
          "warnings" : [ ]
        }
      },
      "TimeseriesRegistrationMessage" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The name of the metric that will appear in the user interface. It is limited to 256 characters.\n\n To edit the value of that field, you need the **Write configuration** (`WriteConfig`) or the **Write settings** (`settings.write`) permission assigned to your API token."
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit the metric will use. \n\n To edit the value of that field, you need the **Write configuration** (`WriteConfig`) or the **Write settings** (`settings.write`) permission assigned to your API token.",
            "enum" : [ "Billion (bilcount)", "Bit (bit)", "BitPerHour (bit/h)", "BitPerMinute (bit/min)", "BitPerSecond (bit/s)", "Byte (B)", "BytePerHour (B/h)", "BytePerMinute (B/min)", "BytePerSecond (B/s)", "Cores", "Count (count)", "Day (ds)", "DecibelMilliWatt (dBm)", "G", "GibiByte (GiB)", "GigaByte (GB)", "Hour (hs)", "KibiByte (KiB)", "KibiBytePerHour (KiB/h)", "KibiBytePerMinute (KiB/min)", "KibiBytePerSecond (KiB/s)", "KiloByte (kB)", "KiloBytePerHour (kB/h)", "KiloBytePerMinute (kB/min)", "KiloBytePerSecond (kB/s)", "M", "MSU", "MebiByte (MiB)", "MebiBytePerHour (MiB/h)", "MebiBytePerMinute (MiB/min)", "MebiBytePerSecond (MiB/s)", "MegaByte (MB)", "MegaBytePerHour (MB/h)", "MegaBytePerMinute (MB/min)", "MegaBytePerSecond (MB/s)", "MicroSecond (µs)", "MilliSecond (ms)", "MilliSecondPerMinute (ms/min)", "Million (milcount)", "Minute (mins)", "Month (mos)", "N/A", "NanoSecond (ns)", "NanoSecondPerMinute (ns/min)", "PerHour (count/h)", "PerMinute (count/min)", "PerSecond (count/s)", "Percent (%)", "Pixel (px)", "Promille (‰)", "Ratio", "Second (s)", "State", "Unspecified", "Week (ws)", "Year (ys)", "k", "km/h", "m/h", "m/s", "mCores" ]
          },
          "dimensions" : {
            "type" : "array",
            "description" : "The metric dimension key that will be used to report multiple dimensions. For example, a dimension key to report the metric for different network cards for the same firewall. \n\nYou can use alphanumeric characters and the following punctuation marks: periods (`.`), hyphens (`-`), and underscores (`_`). \n\nThe CUSTOM_DEVICE dimension is added to each new custom metric automatically. \n\nThe length of dimension keys and values is limited to **128 characters** each.",
            "items" : {
              "type" : "string"
            }
          },
          "types" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The definition of the technology type. It is used to group metrics under a logical technology name in the UI. \n\nMetrics must be assigned a software technology type that is identical to the technology type of the custom device you are sending the metric to. \n\nFor example, if you define your custom device using type `F5-Firewall` you must also register all related custom metrics as type `F5-Firewall`. \n\nThe field is **required** when creating a new metric.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The definition of a custom metric.",
        "example" : {
          "displayName" : "received.coffees",
          "unit" : "Count",
          "dimensions" : [ "coffee" ],
          "types" : [ "coffee machine" ]
        }
      },
      "TimeseriesDataPointQueryResult" : {
        "type" : "object",
        "properties" : {
          "dataPoints" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Data points of a metric. \n\nA JSON object that maps the ID of the entity that delivered the data points and an array, which consists of arrays of the data point float values.\n\n May contain more than one entity ID per record (for example, a host and its network interface). In such cases, entity IDs are separated by commas.\n\n A datapoint contains a value and a timestamp, at which the value was recorded. \n\n Dynatrace stores data in time slots. The **dataPoints** object shows the *starting* timestamp of the slot. If the **startTimestamp** or **endTimestamp** of your query lies inside of the data time slot, this time slot is included into response. Due to the fact that the timestamp of the first data point lies outside of the specified timeframe, you will see *earlier* timestamp than the specified **startTimestamp** in the first data point of the response.\n\n There are three versions of data points: \n * Numeric datapoint: Contains a numeric value. \n * Enum datapoint: Contains an enum value, currently only for availability timeseries. \n * Prediction datapoint: Similar to the numeric datapoint, but it contains a confidence interval, within which the future values are expected to be.",
              "items" : {
                "type" : "array",
                "description" : "Data points of a metric. \n\nA JSON object that maps the ID of the entity that delivered the data points and an array, which consists of arrays of the data point float values.\n\n May contain more than one entity ID per record (for example, a host and its network interface). In such cases, entity IDs are separated by commas.\n\n A datapoint contains a value and a timestamp, at which the value was recorded. \n\n Dynatrace stores data in time slots. The **dataPoints** object shows the *starting* timestamp of the slot. If the **startTimestamp** or **endTimestamp** of your query lies inside of the data time slot, this time slot is included into response. Due to the fact that the timestamp of the first data point lies outside of the specified timeframe, you will see *earlier* timestamp than the specified **startTimestamp** in the first data point of the response.\n\n There are three versions of data points: \n * Numeric datapoint: Contains a numeric value. \n * Enum datapoint: Contains an enum value, currently only for availability timeseries. \n * Prediction datapoint: Similar to the numeric datapoint, but it contains a confidence interval, within which the future values are expected to be.",
                "items" : {
                  "type" : "number",
                  "description" : "Data points of a metric. \n\nA JSON object that maps the ID of the entity that delivered the data points and an array, which consists of arrays of the data point float values.\n\n May contain more than one entity ID per record (for example, a host and its network interface). In such cases, entity IDs are separated by commas.\n\n A datapoint contains a value and a timestamp, at which the value was recorded. \n\n Dynatrace stores data in time slots. The **dataPoints** object shows the *starting* timestamp of the slot. If the **startTimestamp** or **endTimestamp** of your query lies inside of the data time slot, this time slot is included into response. Due to the fact that the timestamp of the first data point lies outside of the specified timeframe, you will see *earlier* timestamp than the specified **startTimestamp** in the first data point of the response.\n\n There are three versions of data points: \n * Numeric datapoint: Contains a numeric value. \n * Enum datapoint: Contains an enum value, currently only for availability timeseries. \n * Prediction datapoint: Similar to the numeric datapoint, but it contains a confidence interval, within which the future values are expected to be.",
                  "format" : "float"
                }
              }
            },
            "description" : "Data points of a metric. \n\nA JSON object that maps the ID of the entity that delivered the data points and an array, which consists of arrays of the data point float values.\n\n May contain more than one entity ID per record (for example, a host and its network interface). In such cases, entity IDs are separated by commas.\n\n A datapoint contains a value and a timestamp, at which the value was recorded. \n\n Dynatrace stores data in time slots. The **dataPoints** object shows the *starting* timestamp of the slot. If the **startTimestamp** or **endTimestamp** of your query lies inside of the data time slot, this time slot is included into response. Due to the fact that the timestamp of the first data point lies outside of the specified timeframe, you will see *earlier* timestamp than the specified **startTimestamp** in the first data point of the response.\n\n There are three versions of data points: \n * Numeric datapoint: Contains a numeric value. \n * Enum datapoint: Contains an enum value, currently only for availability timeseries. \n * Prediction datapoint: Similar to the numeric datapoint, but it contains a confidence interval, within which the future values are expected to be."
          },
          "timeseriesId" : {
            "type" : "string",
            "description" : "The ID of the metric."
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of data points.",
            "enum" : [ "Billion (bilcount)", "Bit (bit)", "BitPerHour (bit/h)", "BitPerMinute (bit/min)", "BitPerSecond (bit/s)", "Byte (B)", "BytePerHour (B/h)", "BytePerMinute (B/min)", "BytePerSecond (B/s)", "Cores", "Count (count)", "Day (ds)", "DecibelMilliWatt (dBm)", "G", "GibiByte (GiB)", "GigaByte (GB)", "Hour (hs)", "KibiByte (KiB)", "KibiBytePerHour (KiB/h)", "KibiBytePerMinute (KiB/min)", "KibiBytePerSecond (KiB/s)", "KiloByte (kB)", "KiloBytePerHour (kB/h)", "KiloBytePerMinute (kB/min)", "KiloBytePerSecond (kB/s)", "M", "MSU", "MebiByte (MiB)", "MebiBytePerHour (MiB/h)", "MebiBytePerMinute (MiB/min)", "MebiBytePerSecond (MiB/s)", "MegaByte (MB)", "MegaBytePerHour (MB/h)", "MegaBytePerMinute (MB/min)", "MegaBytePerSecond (MB/s)", "MicroSecond (µs)", "MilliSecond (ms)", "MilliSecondPerMinute (ms/min)", "Million (milcount)", "Minute (mins)", "Month (mos)", "N/A", "NanoSecond (ns)", "NanoSecondPerMinute (ns/min)", "PerHour (count/h)", "PerMinute (count/min)", "PerSecond (count/s)", "Percent (%)", "Pixel (px)", "Promille (‰)", "Ratio", "Second (s)", "State", "Unspecified", "Week (ws)", "Year (ys)", "k", "km/h", "m/h", "m/s", "mCores" ]
          },
          "resolutionInMillisUTC" : {
            "type" : "integer",
            "description" : "The resolution of data points.",
            "format" : "int64"
          },
          "aggregationType" : {
            "type" : "string",
            "description" : "The type of data points aggregation.",
            "enum" : [ "AVG", "COUNT", "MAX", "MEDIAN", "MIN", "PERCENTILE", "SUM" ]
          },
          "entities" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The list of entities where the data points originate.\n\nA JSON object that maps the entity ID in Dynatrace and the actual name of the entity."
            },
            "description" : "The list of entities where the data points originate.\n\nA JSON object that maps the entity ID in Dynatrace and the actual name of the entity."
          }
        },
        "description" : "List of metric's datapoints, as well as their parameters.",
        "example" : {
          "dataPoints" : {
            "HOST-0000000000000007" : [ [ 1522220334000, 89.0 ] ]
          },
          "timeseriesId" : "com.dynatrace.builtin:host.cpu.idle",
          "unit" : "Percent",
          "entities" : {
            "HOST-0000000000000007" : "Laptop-8"
          },
          "resolutionInMillisUTC" : 300000,
          "aggregationType" : "AVG"
        }
      },
      "TimeseriesQueryResultWrapper" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TimeseriesDataPointQueryResult"
          }
        }
      },
      "TimeseriesQueryMessage" : {
        "type" : "object",
        "properties" : {
          "timeseriesId" : {
            "type" : "string",
            "description" : "The case-sensitive ID of the metric, where you want to read data points. \n\nYou can execute a GET timeseries request, to obtain the list of available metrics."
          },
          "aggregationType" : {
            "type" : "string",
            "description" : "The aggregation type for the resulting data points. \n\nIf the requested metric doesn't support the specified aggregation, the request will result in an error.",
            "enum" : [ "AVG", "COUNT", "MAX", "MEDIAN", "MIN", "PERCENTILE", "SUM" ]
          },
          "startTimestamp" : {
            "type" : "integer",
            "description" : "The start timestamp of the timeframe, in UTC milliseconds.",
            "format" : "int64"
          },
          "endTimestamp" : {
            "type" : "integer",
            "description" : "The start timestamp of the timeframe, in UTC milliseconds. \n\nIf later than the current time, Dynatrace automatically uses current time instead. \n\nThe timeframe must not exceed 6 months.",
            "format" : "int64"
          },
          "predict" : {
            "type" : "boolean",
            "description" : "The flag to predict future data points."
          },
          "relativeTime" : {
            "type" : "string",
            "description" : "The relative timeframe, back from the current time.",
            "enum" : [ "10mins", "15mins", "2hours", "30mins", "3days", "5mins", "6hours", "day", "hour", "min", "month", "week" ]
          },
          "queryMode" : {
            "type" : "string",
            "description" : "Defines the type of result that the call should return. Valid result modes are:\n\n`series`: returns all the data points of the metric in the specified timeframe.\n `total`: returns one scalar value for the specified timeframe. \n\nBy default, the `series` mode is used.",
            "enum" : [ "SERIES", "TOTAL" ]
          },
          "entities" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Filters requested data points by entities which should deliver them. You can specify several entities at once. \n\nAllowed values are Dynatrace entity IDs. \n\nIf the selected entity doesn't support the requested metric, the request will result in an error.",
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Filters requiested data points by entity which should deliver them. Only data from entities with the specified tag is delivered. \n\nYou can specify several tags in the following format: `tags=tag1&tags=tag2`. The entity has to match *all* the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags use following format: `[context]key:value`.",
            "items" : {
              "type" : "string"
            }
          },
          "filters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "A filter is an object, containing map of filter keys and its values. Valid filter keys are:\n\n `processType`: Filters by process type. See Process types for allowed values.\n`osType`: Filters by operating system. See OS types for allowed values.\n`serviceType`: Filters by service type. See Service types for allowed values.\n`technology`: Filters by technology type. See Technology types for allowed values.\n`webServiceName`: Filters by web service name.\n`webServiceNamespace`: Filters by the web service namespace.\n`host`: Filters by entity ID of the host, for example HOST-007."
            },
            "description" : "A filter is an object, containing map of filter keys and its values. Valid filter keys are:\n\n `processType`: Filters by process type. See Process types for allowed values.\n`osType`: Filters by operating system. See OS types for allowed values.\n`serviceType`: Filters by service type. See Service types for allowed values.\n`technology`: Filters by technology type. See Technology types for allowed values.\n`webServiceName`: Filters by web service name.\n`webServiceNamespace`: Filters by the web service namespace.\n`host`: Filters by entity ID of the host, for example HOST-007."
          },
          "percentile" : {
            "type" : "integer",
            "description" : "Specifies which percentile of the selected response time metric should be delivered.\n\nOnly applicable to the `PERCENTILE` aggregation type. \n\nValid values for percentile are between 1 and 99. \n\nPlease keep in mind that percentile export is only possible for response-time based metrics such as application and service response times.",
            "format" : "int32"
          },
          "includeParentIds" : {
            "type" : "boolean",
            "description" : "Specifies whether the results should exposes dimension mappings between parent entities and their children.\n\nFor instance: SERVICE-0000000000000001, SERVICE_METHOD-0000000000000001"
          },
          "considerMaintenanceWindowsForAvailability" : {
            "type" : "boolean",
            "description" : "Exclude (`true`) or include (`false`) data points from any [maintenance window](https://dt-url.net/b2123rg0), defined in your environment."
          }
        },
        "description" : "Filtering parameters for a timeseries query.",
        "example" : {
          "timeseriesId" : "com.dynatrace.builtin:host.cpu.idle",
          "aggregationType" : "AVG",
          "startTimestamp" : 1521042929000,
          "endTimestamp" : 1521542929000,
          "predict" : true,
          "relativeTime" : "HOUR",
          "queryMode" : "SERIES",
          "includeParentIds" : "false",
          "considerMaintenanceWindowsForAvailability" : "false",
          "entities" : [ "HOST-0000000000000007" ],
          "tags" : [ "office-linz" ]
        }
      },
      "TimeseriesQueryResult" : {
        "type" : "object",
        "properties" : {
          "timeseriesId" : {
            "type" : "string",
            "description" : "The ID of the metric."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the metric in the user interface."
          },
          "dimensions" : {
            "type" : "array",
            "description" : "The fine metric division, for example process group and process ID for some process-related metric.",
            "items" : {
              "type" : "string"
            }
          },
          "aggregationTypes" : {
            "type" : "array",
            "description" : "The list of allowed aggregations for this metric.",
            "items" : {
              "type" : "string",
              "enum" : [ "AVG", "COUNT", "MAX", "MEDIAN", "MIN", "PERCENTILE", "SUM" ]
            }
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of the metric.",
            "enum" : [ "Billion (bilcount)", "Bit (bit)", "BitPerHour (bit/h)", "BitPerMinute (bit/min)", "BitPerSecond (bit/s)", "Byte (B)", "BytePerHour (B/h)", "BytePerMinute (B/min)", "BytePerSecond (B/s)", "Cores", "Count (count)", "Day (ds)", "DecibelMilliWatt (dBm)", "G", "GibiByte (GiB)", "GigaByte (GB)", "Hour (hs)", "KibiByte (KiB)", "KibiBytePerHour (KiB/h)", "KibiBytePerMinute (KiB/min)", "KibiBytePerSecond (KiB/s)", "KiloByte (kB)", "KiloBytePerHour (kB/h)", "KiloBytePerMinute (kB/min)", "KiloBytePerSecond (kB/s)", "M", "MSU", "MebiByte (MiB)", "MebiBytePerHour (MiB/h)", "MebiBytePerMinute (MiB/min)", "MebiBytePerSecond (MiB/s)", "MegaByte (MB)", "MegaBytePerHour (MB/h)", "MegaBytePerMinute (MB/min)", "MegaBytePerSecond (MB/s)", "MicroSecond (µs)", "MilliSecond (ms)", "MilliSecondPerMinute (ms/min)", "Million (milcount)", "Minute (mins)", "Month (mos)", "N/A", "NanoSecond (ns)", "NanoSecondPerMinute (ns/min)", "PerHour (count/h)", "PerMinute (count/min)", "PerSecond (count/s)", "Percent (%)", "Pixel (px)", "Promille (‰)", "Ratio", "Second (s)", "State", "Unspecified", "Week (ws)", "Year (ys)", "k", "km/h", "m/h", "m/s", "mCores" ]
          },
          "filter" : {
            "type" : "string",
            "description" : "The feature, where the metric originates.",
            "enum" : [ "ALL", "BUILTIN", "CUSTOM", "PLUGIN", "REMOTE_PLUGIN" ]
          },
          "detailedSource" : {
            "type" : "string",
            "description" : "The feature, where the metric originates."
          },
          "pluginId" : {
            "type" : "string",
            "description" : "The ID of the plugin, where the metric originates."
          },
          "types" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Technology type definition. Used to group metrics under a logical technology name.",
            "items" : {
              "type" : "string"
            }
          },
          "dataResult" : {
            "$ref" : "#/components/schemas/TimeseriesDataPointQueryResult"
          },
          "warnings" : {
            "type" : "array",
            "description" : "The warnings that occurred while creating the metric.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The configuration of a metric with all its parameters and, optionally, data points.",
        "example" : {
          "timeseriesId" : "com.dynatrace.builtin:host.cpu.idle",
          "displayName" : "CPU idle",
          "dimensions" : [ "HOST" ],
          "aggregationTypes" : [ "AVG", "SUM", "MIN", "MAX" ],
          "unit" : "Percent",
          "filter" : "BUILTIN",
          "detailedSource" : "Infrastructure",
          "types" : [ ],
          "dataResult" : {
            "dataPoints" : {
              "HOST-0000000000000007" : [ [ 1522220334000, 89.0 ] ]
            },
            "timeseriesId" : "com.dynatrace.builtin:host.cpu.idle",
            "unit" : "Percent",
            "entities" : {
              "HOST-0000000000000007" : "Laptop-8"
            },
            "resolutionInMillisUTC" : 300000,
            "aggregationType" : "AVG"
          }
        }
      },
      "Token" : {
        "required" : [ "token" ],
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "Dynatrace API authentication token."
          }
        },
        "example" : {
          "token" : "abcdefjhij1234567890"
        }
      },
      "CreateToken" : {
        "required" : [ "name", "scopes" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the token."
          },
          "expiresIn" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "scopes" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of scopes to be assigned to the token.\n\n* `InstallerDownload`: PaaS integration - Installer download. \n* `DataExport`: Access problem and event feed, metrics, and topology. \n* `PluginUpload`: Upload Extension. \n* `SupportAlert`: PaaS integration - Support alert. \n* `AdvancedSyntheticIntegration`: Dynatrace module integration - Synthetic Classic. \n* `ExternalSyntheticIntegration`: Create and read synthetic monitors, locations, and nodes. \n* `AppMonIntegration`: Dynatrace module integration - AppMon. \n* `RumBrowserExtension`: RUM Browser Extension. \n* `LogExport`: Read logs. \n* `ReadConfig`: Read configuration. \n* `WriteConfig`: Write configuration. \n* `DTAQLAccess`: User sessions. \n* `UserSessionAnonymization`: Anonymize user session data for data privacy reasons. \n* `DataPrivacy`: Change data privacy settings. \n* `CaptureRequestData`: Capture request data. \n* `Davis`: Dynatrace module integration - Davis. \n* `DssFileManagement`: Mobile symbolication file management. \n* `RumJavaScriptTagManagement`: Real user monitoring JavaScript tag management. \n* `TenantTokenManagement`: Token management. \n* `ActiveGateCertManagement`: ActiveGate certificate management. \n* `RestRequestForwarding`: Fetch data from a remote environment. \n* `ReadSyntheticData`: Read synthetic monitors, locations, and nodes. \n* `DataImport`: Data ingest, e.g.: metrics and events. \n* `syntheticExecutions.write`: Write synthetic monitor executions. \n* `syntheticExecutions.read`: Read synthetic monitor execution results. \n* `auditLogs.read`: Read audit logs. \n* `metrics.read`: Read metrics. \n* `metrics.write`: Write metrics. \n* `entities.read`: Read entities. \n* `entities.write`: Write entities. \n* `problems.read`: Read problems. \n* `problems.write`: Write problems. \n* `events.read`: Read events. \n* `events.ingest`: Ingest events. \n* `networkZones.read`: Read network zones. \n* `networkZones.write`: Write network zones. \n* `activeGates.read`: Read ActiveGates. \n* `activeGates.write`: Write ActiveGates. \n* `activeGateTokenManagement.read`: Read ActiveGate tokens. \n* `activeGateTokenManagement.create`: Create ActiveGate tokens. \n* `activeGateTokenManagement.write`: Write ActiveGate tokens. \n* `credentialVault.read`: Read credential vault entries. \n* `credentialVault.write`: Write credential vault entries. \n* `extensions.read`: Read extensions. \n* `extensions.write`: Write extensions. \n* `extensionConfigurations.read`: Read extension monitoring configurations. \n* `extensionConfigurations.write`: Write extension monitoring configurations. \n* `extensionEnvironment.read`: Read extension environment configurations. \n* `extensionEnvironment.write`: Write extension environment configurations. \n* `metrics.ingest`: Ingest metrics. \n* `securityProblems.read`: Read security problems. \n* `securityProblems.write`: Write security problems. \n* `syntheticLocations.read`: Read synthetic locations. \n* `syntheticLocations.write`: Write synthetic locations. \n* `settings.read`: Read settings. \n* `settings.write`: Write settings. \n* `tenantTokenRotation.write`: Tenant token rotation. \n* `slo.read`: Read SLO. \n* `slo.write`: Write SLO. \n* `releases.read`: Read releases. \n* `apiTokens.read`: Read API tokens. \n* `apiTokens.write`: Write API tokens. \n* `openTelemetryTrace.ingest`: Ingest OpenTelemetry traces. \n* `logs.read`: Read logs. \n* `logs.ingest`: Ingest logs. \n* `geographicRegions.read`: Read Geographic regions. \n* `hub.read`: Read HUB. \n* `traces.lookup`: Look up a single trace. \n* `hub.write`: Write HUB related data. \n",
            "items" : {
              "type" : "string",
              "enum" : [ "InstallerDownload", "DataExport", "PluginUpload", "SupportAlert", "AdvancedSyntheticIntegration", "ExternalSyntheticIntegration", "AppMonIntegration", "RumBrowserExtension", "LogExport", "ReadConfig", "WriteConfig", "DTAQLAccess", "UserSessionAnonymization", "DataPrivacy", "CaptureRequestData", "Davis", "DssFileManagement", "RumJavaScriptTagManagement", "TenantTokenManagement", "ActiveGateCertManagement", "RestRequestForwarding", "ReadSyntheticData", "DataImport", "syntheticExecutions.write", "syntheticExecutions.read", "auditLogs.read", "metrics.read", "metrics.write", "entities.read", "entities.write", "problems.read", "problems.write", "events.read", "events.ingest", "networkZones.read", "networkZones.write", "activeGates.read", "activeGates.write", "activeGateTokenManagement.read", "activeGateTokenManagement.create", "activeGateTokenManagement.write", "credentialVault.read", "credentialVault.write", "extensions.read", "extensions.write", "extensionConfigurations.read", "extensionConfigurations.write", "extensionEnvironment.read", "extensionEnvironment.write", "metrics.ingest", "securityProblems.read", "securityProblems.write", "syntheticLocations.read", "syntheticLocations.write", "settings.read", "settings.write", "tenantTokenRotation.write", "slo.read", "slo.write", "releases.read", "apiTokens.read", "apiTokens.write", "openTelemetryTrace.ingest", "logs.read", "logs.ingest", "geographicRegions.read", "hub.read", "traces.lookup", "hub.write" ]
            }
          }
        }
      },
      "Duration" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "integer",
            "description" : "The amount of time.",
            "format" : "int64"
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of time. \n\n If not set, millisecond is used.",
            "enum" : [ "DAYS", "HOURS", "MILLIS", "MINUTES", "SECONDS" ]
          }
        },
        "description" : "Defines a period of time."
      },
      "TokenMetadata" : {
        "required" : [ "scopes" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the token.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the token."
          },
          "userId" : {
            "type" : "string",
            "description" : "The owner of the token.",
            "readOnly" : true
          },
          "revoked" : {
            "type" : "boolean",
            "description" : "Revocation status of the token. Revoked tokens are disabled."
          },
          "created" : {
            "type" : "integer",
            "description" : "The creation time as a unix timestamp in milliseconds.",
            "format" : "int64",
            "readOnly" : true
          },
          "expires" : {
            "type" : "integer",
            "description" : "The expiration time as a unix timestamp in milliseconds.",
            "format" : "int64"
          },
          "lastUse" : {
            "type" : "integer",
            "description" : "The unix timestamp in milliseconds when the token was last used.",
            "format" : "int64",
            "readOnly" : true
          },
          "scopes" : {
            "type" : "array",
            "description" : "A list of scopes assigned to the token.",
            "items" : {
              "type" : "string",
              "enum" : [ "ActiveGateCertManagement", "AdvancedSyntheticIntegration", "AppMonIntegration", "CaptureRequestData", "DTAQLAccess", "DataExport", "DataImport", "DataPrivacy", "Davis", "DiagnosticExport", "DssFileManagement", "ExternalSyntheticIntegration", "InstallerDownload", "LogExport", "MemoryDump", "Mobile", "PluginUpload", "ReadConfig", "ReadSyntheticData", "RestRequestForwarding", "RumBrowserExtension", "RumJavaScriptTagManagement", "SupportAlert", "TenantTokenManagement", "UserSessionAnonymization", "ViewDashboard", "ViewReport", "WriteConfig", "WriteSyntheticData", "activeGateTokenManagement.create", "activeGateTokenManagement.read", "activeGateTokenManagement.write", "activeGates.read", "activeGates.write", "apiTokens.read", "apiTokens.write", "auditLogs.read", "credentialVault.read", "credentialVault.write", "entities.read", "entities.write", "events.ingest", "events.read", "extensionConfigurations.read", "extensionConfigurations.write", "extensionEnvironment.read", "extensionEnvironment.write", "extensions.read", "extensions.write", "geographicRegions.read", "hub.read", "hub.write", "logs.ingest", "logs.read", "metrics.ingest", "metrics.read", "metrics.write", "networkZones.read", "networkZones.write", "openTelemetryTrace.ingest", "problems.read", "problems.write", "releases.read", "securityProblems.read", "securityProblems.write", "settings.read", "settings.write", "slo.read", "slo.write", "syntheticExecutions.read", "syntheticExecutions.write", "syntheticLocations.read", "syntheticLocations.write", "tenantTokenRotation.write", "traces.lookup" ]
            }
          },
          "personalAccessToken" : {
            "type" : "boolean",
            "description" : "The token is a [personal access token](https://dt-url.net/wm03sop) (`true`) or an API token (`false`).",
            "readOnly" : true
          }
        },
        "description" : "Metadata of a token.",
        "example" : {
          "id" : "acbed0c4-4ef1-4303-991f-102510a69322",
          "name" : "myToken",
          "userId" : "john.smith",
          "revoked" : true,
          "created" : 1554076800000,
          "expires" : 1585976400000,
          "lastUse" : 1554354000000,
          "personalAccessToken" : true,
          "scopes" : [ "DataExport", "ReadConfig", "WriteConfig" ]
        }
      },
      "StubList" : {
        "required" : [ "values" ],
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "description" : "An ordered list of short representations of Dynatrace entities.",
            "items" : {
              "$ref" : "#/components/schemas/EntityShortRepresentation"
            }
          }
        },
        "description" : "An ordered list of short representations of Dynatrace entities.",
        "example" : {
          "values" : [ {
            "id" : "6a98d7bc-abb9-44f8-ae6a-73e68e71812a",
            "name" : "Dynatrace entity 1",
            "description" : "Dynatrace entity 1 for the REST API example"
          }, {
            "id" : "ee70f7d3-9a4e-4f5f-94d2-c9d6156f1618",
            "name" : "Dynatrace entity 2"
          }, {
            "id" : "8cdabe77-9e1a-4be8-b3df-269dd6fa9d7f"
          } ]
        }
      },
      "UpdateToken" : {
        "type" : "object",
        "properties" : {
          "revoked" : {
            "type" : "boolean",
            "description" : "The token is revoked (`true`) or active (`false`)."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the token."
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of permissions assigned to the token. \n\nApart from the new permissions, you need to submit the existing permissions you want to keep, too. Any existing permission, missing in the payload, is revoked.\n\n* `InstallerDownload`: PaaS integration - Installer download. \n* `DataExport`: Access problem and event feed, metrics, and topology. \n* `PluginUpload`: Upload Extension. \n* `SupportAlert`: PaaS integration - Support alert. \n* `AdvancedSyntheticIntegration`: Dynatrace module integration - Synthetic Classic. \n* `ExternalSyntheticIntegration`: Create and read synthetic monitors, locations, and nodes. \n* `AppMonIntegration`: Dynatrace module integration - AppMon. \n* `RumBrowserExtension`: RUM Browser Extension. \n* `LogExport`: Read logs. \n* `ReadConfig`: Read configuration. \n* `WriteConfig`: Write configuration. \n* `DTAQLAccess`: User sessions. \n* `UserSessionAnonymization`: Anonymize user session data for data privacy reasons. \n* `DataPrivacy`: Change data privacy settings. \n* `CaptureRequestData`: Capture request data. \n* `Davis`: Dynatrace module integration - Davis. \n* `DssFileManagement`: Mobile symbolication file management. \n* `RumJavaScriptTagManagement`: Real user monitoring JavaScript tag management. \n* `TenantTokenManagement`: Token management. \n* `ActiveGateCertManagement`: ActiveGate certificate management. \n* `RestRequestForwarding`: Fetch data from a remote environment. \n* `ReadSyntheticData`: Read synthetic monitors, locations, and nodes. \n* `DataImport`: Data ingest, e.g.: metrics and events. \n* `syntheticExecutions.write`: Write synthetic monitor executions. \n* `syntheticExecutions.read`: Read synthetic monitor execution results. \n* `auditLogs.read`: Read audit logs. \n* `metrics.read`: Read metrics. \n* `metrics.write`: Write metrics. \n* `entities.read`: Read entities. \n* `entities.write`: Write entities. \n* `problems.read`: Read problems. \n* `problems.write`: Write problems. \n* `events.read`: Read events. \n* `events.ingest`: Ingest events. \n* `networkZones.read`: Read network zones. \n* `networkZones.write`: Write network zones. \n* `activeGates.read`: Read ActiveGates. \n* `activeGates.write`: Write ActiveGates. \n* `activeGateTokenManagement.read`: Read ActiveGate tokens. \n* `activeGateTokenManagement.create`: Create ActiveGate tokens. \n* `activeGateTokenManagement.write`: Write ActiveGate tokens. \n* `credentialVault.read`: Read credential vault entries. \n* `credentialVault.write`: Write credential vault entries. \n* `extensions.read`: Read extensions. \n* `extensions.write`: Write extensions. \n* `extensionConfigurations.read`: Read extension monitoring configurations. \n* `extensionConfigurations.write`: Write extension monitoring configurations. \n* `extensionEnvironment.read`: Read extension environment configurations. \n* `extensionEnvironment.write`: Write extension environment configurations. \n* `metrics.ingest`: Ingest metrics. \n* `securityProblems.read`: Read security problems. \n* `securityProblems.write`: Write security problems. \n* `syntheticLocations.read`: Read synthetic locations. \n* `syntheticLocations.write`: Write synthetic locations. \n* `settings.read`: Read settings. \n* `settings.write`: Write settings. \n* `tenantTokenRotation.write`: Tenant token rotation. \n* `slo.read`: Read SLO. \n* `slo.write`: Write SLO. \n* `releases.read`: Read releases. \n* `apiTokens.read`: Read API tokens. \n* `apiTokens.write`: Write API tokens. \n* `openTelemetryTrace.ingest`: Ingest OpenTelemetry traces. \n* `logs.read`: Read logs. \n* `logs.ingest`: Ingest logs. \n* `geographicRegions.read`: Read Geographic regions. \n* `hub.read`: Read HUB. \n* `traces.lookup`: Look up a single trace. \n* `hub.write`: Write HUB related data. \n",
            "items" : {
              "type" : "string",
              "enum" : [ "InstallerDownload", "DataExport", "PluginUpload", "SupportAlert", "AdvancedSyntheticIntegration", "ExternalSyntheticIntegration", "AppMonIntegration", "RumBrowserExtension", "LogExport", "ReadConfig", "WriteConfig", "DTAQLAccess", "UserSessionAnonymization", "DataPrivacy", "CaptureRequestData", "Davis", "DssFileManagement", "RumJavaScriptTagManagement", "TenantTokenManagement", "ActiveGateCertManagement", "RestRequestForwarding", "ReadSyntheticData", "DataImport", "syntheticExecutions.write", "syntheticExecutions.read", "auditLogs.read", "metrics.read", "metrics.write", "entities.read", "entities.write", "problems.read", "problems.write", "events.read", "events.ingest", "networkZones.read", "networkZones.write", "activeGates.read", "activeGates.write", "activeGateTokenManagement.read", "activeGateTokenManagement.create", "activeGateTokenManagement.write", "credentialVault.read", "credentialVault.write", "extensions.read", "extensions.write", "extensionConfigurations.read", "extensionConfigurations.write", "extensionEnvironment.read", "extensionEnvironment.write", "metrics.ingest", "securityProblems.read", "securityProblems.write", "syntheticLocations.read", "syntheticLocations.write", "settings.read", "settings.write", "tenantTokenRotation.write", "slo.read", "slo.write", "releases.read", "apiTokens.read", "apiTokens.write", "openTelemetryTrace.ingest", "logs.read", "logs.ingest", "geographicRegions.read", "hub.read", "traces.lookup", "hub.write" ]
            }
          }
        }
      },
      "PrivateSyntheticLocation" : {
        "required" : [ "entityId", "latitude", "longitude", "name", "nodes", "type" ],
        "type" : "object",
        "description" : "Configuration of a private synthetic location.\n\n **countryCode**, **regionCode**, **city** parameters are optional as they can be retrieved based on **latitude** and **longitude** of location.",
        "example" : {
          "type" : "PRIVATE",
          "name" : "Linz Location",
          "latitude" : 48.306351,
          "longitude" : 14.287399,
          "nodes" : [ "93302281" ],
          "status" : "ENABLED",
          "availabilityLocationOutage" : false,
          "availabilityNodeOutage" : false,
          "availabilityLocationNodeOutageDelayInMinutes" : 5,
          "availabilityNotificationsEnabled" : true,
          "autoUpdateChromium" : true,
          "deploymentType" : "STANDARD"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticLocation"
        }, {
          "type" : "object",
          "properties" : {
            "nodes" : {
              "type" : "array",
              "description" : "A list of synthetic nodes belonging to the location. \n\n You can retrieve the list of available nodes with the [GET all nodes](https://dt-url.net/miy3rpl) call.",
              "items" : {
                "type" : "string"
              }
            },
            "availabilityLocationOutage" : {
              "type" : "boolean",
              "description" : "The alerting of location outage is enabled (`true`) or disabled (`false`)."
            },
            "availabilityNodeOutage" : {
              "type" : "boolean",
              "description" : "The alerting of node outage is enabled (`true`) or disabled (`false`). \n\n If enabled, the outage of *any* node in the location triggers an alert."
            },
            "locationNodeOutageDelayInMinutes" : {
              "maximum" : 5,
              "minimum" : 1,
              "type" : "integer",
              "description" : "Alert if the location or node outage lasts longer than *X* minutes. \n\n Only applicable when **availabilityLocationOutage** or **availabilityNodeOutage** is set to `true`.",
              "format" : "int32"
            },
            "availabilityNotificationsEnabled" : {
              "type" : "boolean",
              "description" : "The notifications of location and node outage is enabled (`true`) or disabled (`false`)."
            },
            "deploymentType" : {
              "type" : "string",
              "description" : "The deployment type of the location: \n\n* `STANDARD`: The location is deployed on Windows or Linux.\n* `KUBERNETES`: The location is deployed on Kubernetes.",
              "enum" : [ "KUBERNETES", "STANDARD" ]
            },
            "autoUpdateChromium" : {
              "type" : "boolean",
              "description" : "Auto upgrade of Chromium is enabled (`true`) or disabled (`false`)."
            }
          }
        } ]
      },
      "PublicSyntheticLocation" : {
        "required" : [ "browserType", "browserVersion", "cloudPlatform", "entityId", "ips", "latitude", "longitude", "name", "stage", "type" ],
        "type" : "object",
        "description" : "Configuration of a public synthetic location.",
        "example" : {
          "entityId" : "GEOLOCATION-95196F3C9A4F4215",
          "type" : "PUBLIC",
          "name" : "Amazon US East",
          "countryCode" : "US",
          "regionCode" : "VA",
          "city" : "Amazon US East (N. Virginia)",
          "latitude" : 39.0436,
          "longitude" : -77.4875,
          "cloudPlatform" : "AMAZON_EC2",
          "ips" : [ "134.189.153.97", "134.189.153.98" ],
          "stage" : "GA",
          "browserType" : "Chrome",
          "browserVersion" : "69.0.3497.81",
          "status" : "ENABLED",
          "capabilities" : [ "BROWSER", "HTTP" ]
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticLocation"
        }, {
          "type" : "object",
          "properties" : {
            "cloudPlatform" : {
              "type" : "string",
              "description" : "The cloud provider where the location is hosted.",
              "enum" : [ "ALIBABA", "AMAZON_EC2", "AZURE", "DYNATRACE_CLOUD", "GOOGLE_CLOUD", "INTEROUTE", "OTHER", "UNDEFINED" ]
            },
            "ips" : {
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The list of IP addresses assigned to the location.",
              "items" : {
                "type" : "string"
              }
            },
            "stage" : {
              "type" : "string",
              "description" : "The stage of the location.",
              "enum" : [ "BETA", "COMING_SOON", "DELETED", "GA" ]
            },
            "browserType" : {
              "type" : "string",
              "description" : "The type of the browser the location is using to execute browser monitors."
            },
            "browserVersion" : {
              "type" : "string",
              "description" : "The version of the browser the location is using to execute browser monitors."
            },
            "capabilities" : {
              "type" : "array",
              "description" : "A list of location capabilities.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "SyntheticLocation" : {
        "required" : [ "entityId", "latitude", "longitude", "name", "type" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the location."
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `PUBLIC` -> PublicSyntheticLocation \n* `PRIVATE` -> PrivateSyntheticLocation \n* `CLUSTER` -> PrivateSyntheticLocation \n",
            "enum" : [ "CLUSTER", "PRIVATE", "PUBLIC" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the location."
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The country code of the location. \n\n Use the alpha-2 code of the [ISO 3166-2 standard](https://dt-url.net/iso3166-2), (for example, `AT` for Austria or `PL` for Poland)."
          },
          "regionCode" : {
            "type" : "string",
            "description" : "The region code of the location. \n\n For the [USA](https://dt-url.net/iso3166us) or [Canada](https://dt-url.net/iso3166ca) use ISO 3166-2 state codes (without `US-` or `CA-` prefix), for example, `VA` for Virginia or `OR` for Oregon. \n\n For the rest of the world use [FIPS 10-4 codes](https://dt-url.net/fipscodes)."
          },
          "city" : {
            "type" : "string",
            "description" : "The city of the location."
          },
          "latitude" : {
            "type" : "number",
            "description" : "The latitude of the location in `DDD.dddd` format.",
            "format" : "double"
          },
          "longitude" : {
            "type" : "number",
            "description" : "The longitude of the location in `DDD.dddd` format.",
            "format" : "double"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the location: \n\n* `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location. \n* `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location. \n* `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it.",
            "enum" : [ "DISABLED", "ENABLED", "HIDDEN" ]
          }
        },
        "description" : "Configuration of a synthetic location. \n\n **countryCode**, **regionCode**, **city** parameters are optional as they can be retrieved based on **latitude** and **longitude** of location.\n\n The actual set of fields depends on the type of the location. Find the list of actual objects in the description of the **type** field or see [Synthetic locations API v2 - JSON models](https://dt-url.net/3n43szj).",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "LocationCollectionElement" : {
        "required" : [ "entityId", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the location."
          },
          "entityId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the location."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the location.",
            "enum" : [ "CLUSTER", "PRIVATE", "PUBLIC" ]
          },
          "cloudPlatform" : {
            "type" : "string",
            "description" : "The cloud provider where the location is hosted. \n\n Only applicable to `PUBLIC` locations.",
            "enum" : [ "ALIBABA", "AMAZON_EC2", "AZURE", "DYNATRACE_CLOUD", "GOOGLE_CLOUD", "INTEROUTE", "OTHER", "UNDEFINED" ]
          },
          "ips" : {
            "type" : "array",
            "description" : "The list of IP addresses assigned to the location. \n\n Only applicable to `PUBLIC` locations.",
            "items" : {
              "type" : "string"
            }
          },
          "stage" : {
            "type" : "string",
            "description" : "The release stage of the location.",
            "enum" : [ "BETA", "COMING_SOON", "DELETED", "GA" ]
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the location.",
            "enum" : [ "DISABLED", "ENABLED", "HIDDEN" ]
          }
        },
        "description" : "A synthetic location."
      },
      "SyntheticLocations" : {
        "required" : [ "locations" ],
        "type" : "object",
        "properties" : {
          "locations" : {
            "type" : "array",
            "description" : "A list of synthetic locations.",
            "items" : {
              "$ref" : "#/components/schemas/LocationCollectionElement"
            }
          }
        },
        "description" : "A list of synthetic locations.",
        "example" : {
          "locations" : [ {
            "name" : "Gdansk",
            "entityId" : "GEOLOCATION-B8D793BCA914E0AF",
            "type" : "PUBLIC",
            "cloudPlatform" : "AMAZON_EC2",
            "ips" : [ "134.189.153.97", "134.189.153.98" ],
            "stage" : "GA",
            "status" : "ENABLED",
            "capabilities" : [ "BROWSER", "HTTP" ]
          }, {
            "name" : "My private location",
            "entityId" : "SYNTHETIC_LOCATION-53F47ECB33907667",
            "type" : "PRIVATE",
            "status" : "ENABLED"
          } ]
        }
      },
      "SyntheticPublicLocationsStatus" : {
        "required" : [ "publicLocationsEnabled" ],
        "type" : "object",
        "properties" : {
          "publicLocationsEnabled" : {
            "type" : "boolean",
            "description" : "Synthetic monitors can (`true`) or can't (`false`) run on public synthetic locations."
          }
        },
        "description" : "The status of public synthetic locations."
      },
      "PrivateSyntheticLocationUpdate" : {
        "required" : [ "latitude", "longitude", "name", "nodes", "type" ],
        "type" : "object",
        "description" : "The update of a private Synthetic location.",
        "example" : {
          "type" : "PRIVATE",
          "name" : "Linz Location",
          "latitude" : 48.306351,
          "longitude" : 14.287399,
          "nodes" : [ "93302281" ],
          "status" : "ENABLED",
          "availabilityNodeOutage" : false,
          "isAvailabilityNodeOutage" : false,
          "locationNodeOutageDelayInMinutes" : 5,
          "availabilityNotificationsEnabled" : true,
          "autoUpdateChromium" : true,
          "deploymentType" : "STANDARD"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticLocationUpdate"
        }, {
          "type" : "object",
          "properties" : {
            "nodes" : {
              "type" : "array",
              "description" : "A list of synthetic nodes belonging to the location. \n\n You can retrieve the list of available nodes with the [GET all nodes](https://dt-url.net/miy3rpl) call.",
              "items" : {
                "type" : "string"
              }
            },
            "name" : {
              "type" : "string",
              "description" : "The name of the location."
            },
            "countryCode" : {
              "type" : "string",
              "description" : "The country code of the location. \n\n Use the alpha-2 code of the [ISO 3166-2 standard](https://dt-url.net/iso3166-2), (for example, `AT` for Austria or `PL` for Poland)."
            },
            "regionCode" : {
              "type" : "string",
              "description" : "The region code of the location. \n\n For the [USA](https://dt-url.net/iso3166us) or [Canada](https://dt-url.net/iso3166ca) use ISO 3166-2 state codes (without `US-` or `CA-` prefix), for example, `VA` for Virginia or `OR` for Oregon. \n\n For the rest of the world use [FIPS 10-4 codes](https://dt-url.net/fipscodes)."
            },
            "city" : {
              "type" : "string",
              "description" : "The city of the location."
            },
            "latitude" : {
              "type" : "number",
              "description" : "The latitude of the location in `DDD.dddd` format.",
              "format" : "double"
            },
            "longitude" : {
              "type" : "number",
              "description" : "The longitude of the location in `DDD.dddd` format.",
              "format" : "double"
            },
            "status" : {
              "type" : "string",
              "description" : "The status of the location: \n\n* `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location. \n* `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location. \n* `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it.",
              "enum" : [ "DISABLED", "ENABLED", "HIDDEN" ]
            },
            "availabilityLocationOutage" : {
              "type" : "boolean",
              "description" : "The alerting of location outage is enabled (`true`) or disabled (`false`)."
            },
            "availabilityNodeOutage" : {
              "type" : "boolean",
              "description" : "The alerting of node outage is enabled (`true`) or disabled (`false`). \n\n If enabled, the outage of *any* node in the location triggers an alert."
            },
            "locationNodeOutageDelayInMinutes" : {
              "maximum" : 5,
              "minimum" : 1,
              "type" : "integer",
              "description" : "Alert if the location or node outage lasts longer than *X* minutes. \n\n Only applicable when **availabilityLocationOutage** or **availabilityNodeOutage** is set to `true`.",
              "format" : "int32"
            },
            "availabilityNotificationsEnabled" : {
              "type" : "boolean",
              "description" : "The notifications of location and node outage is enabled (`true`) or disabled (`false`)."
            },
            "autoUpdateChromium" : {
              "type" : "boolean",
              "description" : "Auto upgrade of Chromium is enabled (`true`) or disabled (`false`)."
            },
            "deploymentType" : {
              "type" : "string",
              "description" : "The deployment type of the location: \n\n* `STANDARD`: The location is deployed on Windows or Linux.\n* `KUBERNETES`: The location is deployed on Kubernetes.",
              "enum" : [ "KUBERNETES", "STANDARD" ]
            }
          }
        } ]
      },
      "SyntheticLocationUpdate" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `PUBLIC` -> SyntheticPublicLocationUpdate \n* `PRIVATE` -> PrivateSyntheticLocationUpdate \n",
            "enum" : [ "PRIVATE", "PUBLIC" ]
          }
        },
        "description" : "The update of a synthetic location. The actual object depends on the **type** of the location.",
        "example" : {
          "type" : "PRIVATE",
          "name" : "Linz Location",
          "latitude" : 48.306351,
          "longitude" : 14.287399,
          "nodes" : [ "93302281" ],
          "status" : "ENABLED"
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "SyntheticPublicLocationUpdate" : {
        "required" : [ "status", "type" ],
        "type" : "object",
        "description" : "The update of a public Synthetic location.",
        "example" : {
          "type" : "PUBLIC",
          "status" : "ENABLED"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticLocationUpdate"
        }, {
          "type" : "object",
          "properties" : {
            "status" : {
              "type" : "string",
              "description" : "The status of the location: \n\n* `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location. \n* `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location. \n* `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it.",
              "enum" : [ "DISABLED", "ENABLED", "HIDDEN" ]
            }
          }
        } ]
      },
      "Node" : {
        "required" : [ "activeGateVersion", "autoUpdateEnabled", "browserMonitorsEnabled", "browserType", "browserVersion", "entityId", "healthCheckStatus", "hostname", "ips", "oneAgentRoutingEnabled ", "operatingSystem", "playerVersion", "status", "version" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The ID of the synthetic node."
          },
          "hostname" : {
            "type" : "string",
            "description" : "The hostname of the synthetic node."
          },
          "ips" : {
            "type" : "array",
            "description" : "The IP of the synthetic node.",
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the synthetic node."
          },
          "browserMonitorsEnabled" : {
            "type" : "boolean",
            "description" : "The synthetic node is able to execute browser monitors (`true`) or not (`false`)."
          },
          "activeGateVersion" : {
            "type" : "string",
            "description" : "The version of the Active Gate."
          },
          "oneAgentRoutingEnabled " : {
            "type" : "boolean",
            "description" : "The Active Gate has the One Agent routing enabled ('true') or not ('false')."
          },
          "operatingSystem" : {
            "type" : "string",
            "description" : "The Active Gate's host operating system."
          },
          "autoUpdateEnabled" : {
            "type" : "boolean",
            "description" : "The Active Gate has the Auto update option enabled ('true') or not ('false')"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the synthetic node."
          },
          "playerVersion" : {
            "type" : "string",
            "description" : "The version of the synthetic player."
          },
          "healthCheckStatus" : {
            "type" : "string",
            "description" : "The health check status of the synthetic node."
          },
          "browserType" : {
            "type" : "string",
            "description" : "The browser type."
          },
          "browserVersion" : {
            "type" : "string",
            "description" : "The browser version."
          }
        },
        "description" : "Configuration of a synthetic node. \n\n A *synthetic node* is an ActiveGate that is able to execute synthetic monitors.",
        "example" : {
          "entityId" : "3086117876",
          "hostname" : "gdn.dyna.trace",
          "ips" : [ "238.245.160.14" ],
          "version" : "1.161.0.20181210-173639",
          "browserMonitorsEnabled" : true,
          "activeGateVersion" : "1.172.2.20190607-040913",
          "oneAgentRoutingEnabled" : true,
          "operatingSystem" : "Linux",
          "autoUpdateEnabled" : true,
          "status" : "Running",
          "playerVersion" : "1.179.0.20190920-145430",
          "healthCheckStatus" : "Ok",
          "browserType" : "Chrome",
          "browserVersion" : "69.0.3497.81"
        }
      },
      "NodeCollectionElement" : {
        "required" : [ "activeGateVersion", "autoUpdateEnabled", "browserMonitorsEnabled", "entityId", "healthCheckStatus", "hostname", "ips", "oneAgentRoutingEnabled ", "operatingSystem", "playerVersion", "status", "version" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The ID of a node."
          },
          "hostname" : {
            "type" : "string",
            "description" : "The hostname of a node."
          },
          "ips" : {
            "type" : "array",
            "description" : "The IP of a node.",
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "string",
            "description" : "The version of a node"
          },
          "browserMonitorsEnabled" : {
            "type" : "boolean",
            "description" : "Browser check capabilities enabled flag."
          },
          "activeGateVersion" : {
            "type" : "string",
            "description" : "The version of the Active Gate."
          },
          "oneAgentRoutingEnabled " : {
            "type" : "boolean",
            "description" : "The Active Gate has the One Agent routing enabled ('true') or not ('false')."
          },
          "operatingSystem" : {
            "type" : "string",
            "description" : "The Active Gate's host operating system."
          },
          "autoUpdateEnabled" : {
            "type" : "boolean",
            "description" : "The Active Gate has the Auto update option enabled ('true') or not ('false')"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the synthetic node."
          },
          "playerVersion" : {
            "type" : "string",
            "description" : "The version of the synthetic player."
          },
          "healthCheckStatus" : {
            "type" : "string",
            "description" : "The health check status of the synthetic node."
          }
        },
        "description" : "The short representation of a synthetic object. Only contains the ID and the display name."
      },
      "Nodes" : {
        "required" : [ "nodes" ],
        "type" : "object",
        "properties" : {
          "nodes" : {
            "type" : "array",
            "description" : "A list of synthetic nodes",
            "items" : {
              "$ref" : "#/components/schemas/NodeCollectionElement"
            }
          }
        },
        "description" : "A list of synthetic nodes",
        "example" : {
          "nodes" : [ {
            "entityId" : "3086117876",
            "hostname" : "gdn.dyna.trace",
            "ips" : [ "238.245.160.14" ],
            "version" : "1.161.0.20181210-173639",
            "browserMonitorsEnabled" : true,
            "activeGateVersion" : "1.172.2.20190607-040913",
            "oneAgentRoutingEnabled" : true,
            "operatingSystem" : "Linux",
            "autoUpdateEnabled" : true,
            "status" : "Running",
            "playerVersion" : "1.179.0.20190920-145430",
            "healthCheckStatus" : "Ok"
          } ]
        }
      }
    },
    "securitySchemes" : {
      "Api-Token" : {
        "type" : "apiKey",
        "description" : "Dynatrace API Token\n\n The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.",
        "name" : "Authorization",
        "in" : "header"
      }
    }
  }
}