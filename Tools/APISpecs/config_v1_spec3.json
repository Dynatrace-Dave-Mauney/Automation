{
  "openapi" : "3.0.1",
  "info" : {
    "description" : "Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
    "title" : "Dynatrace Configuration API",
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "https://abcd1234.live.dynatrace.com/api/config/v1",
    "variables" : { }
  } ],
  "tags" : [ {
    "description" : "Manage application detection rules",
    "name" : "RUM - Application detection rules"
  }, {
    "description" : "Manage configuration of host detection headers",
    "name" : "RUM - Application detection rules - Host detection"
  }, {
    "description" : "Manage the IP address mapping rules for geographic regions",
    "name" : "RUM - Geographic regions - IP address mapping"
  }, {
    "description" : "Manage the list of custom client IP headers",
    "name" : "RUM - Geographic regions - custom client IP headers"
  }, {
    "description" : "Manage content resource rules",
    "name" : "RUM - Content resources"
  }, {
    "description" : "Manage AWS credentials and monitoring options",
    "name" : "AWS credentials configuration"
  }, {
    "description" : "Manage Azure app-level credentials and monitoring options",
    "name" : "Azure credentials configuration"
  }, {
    "description" : "Manage web applications",
    "name" : "RUM - Web application configuration"
  }, {
    "description" : "Manage allowed beacon origins for CORS requests",
    "name" : "RUM - Allowed beacon origins for CORS"
  }, {
    "description" : "Manage mobile and custom applications",
    "name" : "RUM - Mobile and custom application configuration"
  }, {
    "description" : "Manage request attributes",
    "name" : "Service - Request attributes"
  }, {
    "description" : "Manage global data privacy and security settings",
    "name" : "Data privacy and security"
  }, {
    "description" : "Manage anomaly detection configuration for hosts",
    "name" : "Anomaly detection - Hosts"
  }, {
    "description" : "Manage anomaly detection configuration for services",
    "name" : "Anomaly detection - Services"
  }, {
    "description" : "Manage anomaly detection configuration for database services",
    "name" : "Anomaly detection - Database services"
  }, {
    "description" : "Manage anomaly detection configuration for applications",
    "name" : "Anomaly detection - Applications"
  }, {
    "description" : "Manage anomaly detection configuration for disk events",
    "name" : "Anomaly detection - Disk events"
  }, {
    "description" : "Manage anomaly detection configuration for AWS",
    "name" : "Anomaly detection - AWS"
  }, {
    "description" : "Manage anomaly detection configuration for VMware",
    "name" : "Anomaly detection - VMware"
  }, {
    "description" : "Deprecated. Use the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:anomaly-detection.metric-events`.",
    "name" : "Anomaly detection - Metric events"
  }, {
    "description" : "Manage custom services",
    "name" : "Service - Custom services"
  }, {
    "description" : "Manage anomaly detection configuration for process groups",
    "name" : "Anomaly detection - Process groups"
  }, {
    "description" : "Manage request naming rules",
    "name" : "Service - Request naming"
  }, {
    "description" : "Deprecated. Use the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:tags.auto-tagging`.",
    "name" : "Automatically applied tags"
  }, {
    "description" : "Deprecated. Use the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:management-zones`.",
    "name" : "Management zones"
  }, {
    "description" : "Deprecated. Use the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:alerting.maintenance-window`.",
    "name" : "Maintenance windows"
  }, {
    "description" : "Manage configuration of OneAgent on a host",
    "name" : "OneAgent on a host"
  }, {
    "description" : "Manage configuration of OneAgent in a host group",
    "name" : "OneAgent in a host group"
  }, {
    "description" : "Manage configuration of OneAgents for the environment",
    "name" : "OneAgent - Environment-wide configuration"
  }, {
    "description" : "Manage Cloud Foundry foundation credentials",
    "name" : "Cloud Foundry credentials configuration"
  }, {
    "description" : "Manage metric subscriptions for services",
    "name" : "Calculated metrics - Services"
  }, {
    "description" : "Manage calculated metrics for web applications",
    "name" : "Calculated metrics - Web applications"
  }, {
    "description" : "Manage calculated metrics for synthetic monitors",
    "name" : "Calculated metrics - Synthetic"
  }, {
    "description" : "Manage calculated metrics for mobile & custom apps",
    "name" : "Calculated metrics - Mobile & custom applications"
  }, {
    "description" : "Manage calculated metrics for Log Monitoring",
    "name" : "Calculated metrics - Log monitoring"
  }, {
    "description" : "Manage full web service detection rules",
    "name" : "Service - Detection full web service"
  }, {
    "description" : "Manage full web request service detection rules",
    "name" : "Service - Detection full web request"
  }, {
    "description" : "Manage opaque and external web service detection rules",
    "name" : "Service - Detection opaque and external web service"
  }, {
    "description" : "Manage opaque and external web request service detection rules",
    "name" : "Service - Detection opaque and external web request"
  }, {
    "description" : "Manage reports",
    "name" : "Reports"
  }, {
    "description" : "Manage dashboards",
    "name" : "Dashboards"
  }, {
    "description" : "Manage Kubernetes cluster credentials",
    "name" : "Kubernetes credentials configuration"
  }, {
    "description" : "Manage plugins and their configurations",
    "name" : "Plugins"
  }, {
    "description" : "Manage extensions and their configurations",
    "name" : "Extensions"
  }, {
    "description" : "Deprecated. Use the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:anomaly-detection.frequent-issues`.",
    "name" : "Frequent issue detection"
  }, {
    "description" : "Deprecated. Use the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:problem.notifications`.",
    "name" : "Notifications"
  }, {
    "description" : "Deprecated. Use the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:remote.environment`.",
    "name" : "Remote environments"
  }, {
    "description" : "AWS PrivateLink allowlisting",
    "name" : "AWS PrivateLink"
  }, {
    "description" : "Deprecated. Use the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:alerting.profile`.",
    "name" : "Alerting Profiles"
  }, {
    "description" : "Manage conditional naming rules",
    "name" : "Conditional naming"
  }, {
    "description" : "Deprecated. Manage Credentials vault via the [Credential vault](index.jsp?urls.primaryName=/rest-api-doc/index.jsp?urls.primaryName=Environment%20API%20v2#/Credential%20-%20vault) endpoint  instead",
    "name" : "Credential vault"
  }, {
    "description" : "Manage failure detection parameter sets",
    "name" : "Service - Failure detection parameter sets"
  }, {
    "description" : "Manage failure detection rules",
    "name" : "Service - Failure detection rules"
  }, {
    "description" : "Manage Android mapping files and iOS symbol files for mobile applications",
    "name" : "RUM - Mobile Deobfuscation and Symbolication"
  } ],
  "paths" : {
    "/alertingProfiles" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "getAlertingProfiles",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all alerting profiles available in your environment",
        "tags" : [ "Alerting Profiles" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createAlertingProfile",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertingProfile"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new alerting profile."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new alerting profile has been created. The response contains the ID of the new alerting profile."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new alerting profile",
        "tags" : [ "Alerting Profiles" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/alertingProfiles/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateCreateAlertingProfile",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertingProfile"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the alerting profile to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted alerting profile is valid. Response doesn't have a body"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload the `POST /alertingProfiles` request",
        "tags" : [ "Alerting Profiles" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/alertingProfiles/{id}" : {
      "delete" : {
        "deprecated" : true,
        "description" : "The default alerting profile cannot be deleted.",
        "operationId" : "deleteAlertingProfile",
        "parameters" : [ {
          "description" : "The ID of the alerting profile to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The alerting profile has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified alerting profile",
        "tags" : [ "Alerting Profiles" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "deprecated" : true,
        "operationId" : "getAlertingProfile",
        "parameters" : [ {
          "description" : "The ID of the required alerting profile.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertingProfile"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the properties of the specified alerting profile",
        "tags" : [ "Alerting Profiles" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "If an alerting profile with the specified ID doesn't exist, a new one is created.",
        "operationId" : "createOrUpdateAlertingProfile",
        "parameters" : [ {
          "description" : "The ID of the alerting profile to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertingProfile"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the alerting profile."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new alerting profile has been created. The response contains the ID of the new alerting profile."
          },
          "204" : {
            "description" : "Success. The alerting profile has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing alerting profile",
        "tags" : [ "Alerting Profiles" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/alertingProfiles/{id}/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateCreateOrUpdateAlertingProfile",
        "parameters" : [ {
          "description" : "The ID of the alerting profile to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertingProfile"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the alerting profile to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted alerting profile is valid. Response doesn't have a body"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload the `PUT /alertingProfiles/{id}` request",
        "tags" : [ "Alerting Profiles" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/allowedBeaconOriginsForCors" : {
      "get" : {
        "operationId" : "getAllowedBeaconOriginsConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllowedBeaconOrigins"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of the allowed beacon origins for CORS requests",
        "tags" : [ "RUM - Allowed beacon origins for CORS" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "The request overwrites the existing configuration. Any rules not presented in the payload will be lost.",
        "operationId" : "putAllowedBeaconOriginsConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AllowedBeaconOrigins"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of the allowed beacon origins for CORS requests."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of the allowed beacon origins for CORS requests",
        "tags" : [ "RUM - Allowed beacon origins for CORS" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/allowedBeaconOriginsForCors/validator" : {
      "post" : {
        "operationId" : "validateAllowedBeaconOriginsConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AllowedBeaconOrigins"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of the allowed beacon origins for CORS requests."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /allowedBeaconOriginsForCors` request",
        "tags" : [ "RUM - Allowed beacon origins for CORS" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/applications" : {
      "get" : {
        "operationId" : "getApplicationAnomalyDetectionConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationAnomalyDetectionConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of anomaly detection for applications",
        "tags" : [ "Anomaly detection - Applications" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateApplicationAnomalyDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationAnomalyDetectionConfig"
              }
            }
          },
          "description" : "The JSON body of the request, containing parameters of the application anomaly detection configuration."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of anomaly detection for applications",
        "tags" : [ "Anomaly detection - Applications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/applications/validator" : {
      "post" : {
        "operationId" : "validateApplicationAnomalyDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationAnomalyDetectionConfig"
              }
            }
          },
          "description" : "The JSON body of the request, containing parameters of the application anomaly detection configuration."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the configuration of anomaly detection for applications for the `PUT /anomalyDetection/applications` request",
        "tags" : [ "Anomaly detection - Applications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/aws" : {
      "get" : {
        "operationId" : "getAwsAnomalyDetectionConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsAnomalyDetectionConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of anomaly detection for AWS",
        "tags" : [ "Anomaly detection - AWS" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateAwsAnomalyDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsAnomalyDetectionConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing parameters of the AWS anomaly detection configuration."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of anomaly detection for AWS",
        "tags" : [ "Anomaly detection - AWS" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/aws/validator" : {
      "post" : {
        "operationId" : "validateAwsAnomalyDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsAnomalyDetectionConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing parameters of the AWS anomaly detection configuration."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the configuration of anomaly detection for AWS for the `PUT /anomalyDetection/aws` request",
        "tags" : [ "Anomaly detection - AWS" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/databaseServices" : {
      "get" : {
        "operationId" : "getDatabaseServiceAnomalyDetectionConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatabaseAnomalyDetectionConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of anomaly detection for database services",
        "tags" : [ "Anomaly detection - Database services" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateDatabaseServiceAnomalyDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DatabaseAnomalyDetectionConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the database service anomaly detection configuration."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of anomaly detection for database services",
        "tags" : [ "Anomaly detection - Database services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/databaseServices/validator" : {
      "post" : {
        "operationId" : "validateDatabaseServiceAnomalyDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DatabaseAnomalyDetectionConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the database service anomaly detection configuration."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/databaseServices` request",
        "tags" : [ "Anomaly detection - Database services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/diskEvents" : {
      "get" : {
        "operationId" : "listDiskEventConfigs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all existing disk event rules | maturity=EARLY_ADOPTER",
        "tags" : [ "Anomaly detection - Disk events" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createDiskEventConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiskEventAnomalyDetectionConfig"
              }
            }
          },
          "description" : "JSON body of the request. Contains parameters of the new disk event rule."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new disk event rule has been created. The ID of the new disk event rule is returned."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new disk event rule | maturity=EARLY_ADOPTER",
        "tags" : [ "Anomaly detection - Disk events" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/diskEvents/validator" : {
      "post" : {
        "operationId" : "validateCreateDiskEventConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiskEventAnomalyDetectionConfig"
              }
            }
          },
          "description" : "JSON body of the request. Contains the disk event rule to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted disk event rule is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /anomalyDetection/diskEvents` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Anomaly detection - Disk events" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/diskEvents/{id}" : {
      "delete" : {
        "operationId" : "deleteDiskEventConfig",
        "parameters" : [ {
          "description" : "The ID of the disk event rule to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The disk event rule has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified disk event rule | maturity=EARLY_ADOPTER",
        "tags" : [ "Anomaly detection - Disk events" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getDiskEventConfig",
        "parameters" : [ {
          "description" : "The ID of the required disk event rule.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiskEventAnomalyDetectionConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the properties of the specified disk event rule | maturity=EARLY_ADOPTER",
        "tags" : [ "Anomaly detection - Disk events" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If a disk event rule with the specified ID does not exist, a new rule is created.",
        "operationId" : "updateDiskEventConfig",
        "parameters" : [ {
          "description" : "The ID of the disk event rule to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiskEventAnomalyDetectionConfig"
              }
            }
          },
          "description" : "JSON body of the request. Contains updated disk event rule parameters."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new disk event rule has been created. The ID of the new disk event rule is returned."
          },
          "204" : {
            "description" : "Success. The disk event rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          },
          "403" : {
            "description" : "Failed. The specified ID is reserved for internal use."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates or creates a disk event rule | maturity=EARLY_ADOPTER",
        "tags" : [ "Anomaly detection - Disk events" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/diskEvents/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateDiskEventConfig",
        "parameters" : [ {
          "description" : "The ID of the disk event rule to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiskEventAnomalyDetectionConfig"
              }
            }
          },
          "description" : "JSON body of the request. Contains the disk event rule to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted disk event rule is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          },
          "403" : {
            "description" : "Failed. The specified ID is reserved for internal use."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/diskEvents/{id}` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Anomaly detection - Disk events" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/hosts" : {
      "get" : {
        "operationId" : "getHostEventsConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostsAnomalyDetectionConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of anomaly detection for hosts",
        "tags" : [ "Anomaly detection - Hosts" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateHostEventsConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostsAnomalyDetectionConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the host anomaly detection configuration."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of anomaly detection for hosts",
        "tags" : [ "Anomaly detection - Hosts" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/hosts/validator" : {
      "post" : {
        "operationId" : "validateHostEventsConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostsAnomalyDetectionConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the host anomaly detection configuration."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the configuration of anomaly detection for hosts for the `PUT /anomalyDetection/hosts` request",
        "tags" : [ "Anomaly detection - Hosts" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/metricEvents" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "listMetricEventConfigs",
        "parameters" : [ {
          "description" : "Flag to include metric events with associated entities to the response. \n\n Metric events with **entity** filters aren't compatible across environments. If set to `false`, metric events with entity filters will be removed.",
          "in" : "query",
          "name" : "includeEntityFilterMetricEvents",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all configured metric events",
        "tags" : [ "Anomaly detection - Metric events" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "The response contains the ID of the newly created metric event.",
        "operationId" : "createMetricEvent",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MetricEvent"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new metric event."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The metric event has been created. The response contains the ID and name of the newly created metric event"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new metric event",
        "tags" : [ "Anomaly detection - Metric events" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/metricEvents/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateCreateMetricEvent",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MetricEvent"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the metric event configuration to validate."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /anomalyDetection/metricEvents` request",
        "tags" : [ "Anomaly detection - Metric events" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/metricEvents/{id}" : {
      "delete" : {
        "deprecated" : true,
        "description" : "You can't delete events created by plugins.",
        "operationId" : "deleteMetricEvent",
        "parameters" : [ {
          "description" : "The ID of the metric event to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified metric event",
        "tags" : [ "Anomaly detection - Metric events" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "deprecated" : true,
        "operationId" : "getMetricEventConfig",
        "parameters" : [ {
          "description" : "The ID of the required metric event.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricEvent"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the properties of the specified metric event",
        "tags" : [ "Anomaly detection - Metric events" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "If the metric event with the specified ID does not exist, a new metric event will be created. \n\n You can't update the **type** of the metric event.",
        "operationId" : "updateMetricEvent",
        "parameters" : [ {
          "description" : "The ID of the metric event to be updated.\n\n If you also set the ID in the body, it must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 256,
            "minLength" : 0,
            "pattern" : "^[a-zA-Z0-9\\.\\-_:%]+$"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MetricEvent"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the metric event."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new metric event has been created. The response contains the ID of the newly created metric event"
          },
          "204" : {
            "description" : "Success. The metric event has been updated. The response is empty."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing metric event or creates a new one",
        "tags" : [ "Anomaly detection - Metric events" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/metricEvents/{id}/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateUpdateMetricEvent",
        "parameters" : [ {
          "description" : "The ID of the metric event to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 256,
            "minLength" : 0,
            "pattern" : "^[a-zA-Z0-9\\.\\-_:%]+$"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MetricEvent"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the metric event configuration to validate."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/metricEvents/{id}` request",
        "tags" : [ "Anomaly detection - Metric events" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/processGroups/{id}" : {
      "delete" : {
        "operationId" : "deleteLocalAvailabilityConfig",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required process group.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Process group doesn't exist"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Switches off anomaly detection for the specified process group | maturity=EARLY_ADOPTER",
        "tags" : [ "Anomaly detection - Process groups" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getLocalAvailabilityConfig",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required process group.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnomalyDetectionPG"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Process group doesn't exist"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of anomaly detection for the specified process group | maturity=EARLY_ADOPTER",
        "tags" : [ "Anomaly detection - Process groups" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "setLocalAvailabilityConfig",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required process group.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnomalyDetectionPG"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of anomaly detection for a process group."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of anomaly detection for the specified process group | maturity=EARLY_ADOPTER",
        "tags" : [ "Anomaly detection - Process groups" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/processGroups/{id}/validator" : {
      "post" : {
        "operationId" : "validateLocalPgAvailabilityAlertingEvent",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required process group.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnomalyDetectionPG"
              }
            }
          },
          "description" : "The JSON body of the request. Contains anomaly detection configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/processGroups/{id}` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Anomaly detection - Process groups" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/services" : {
      "get" : {
        "operationId" : "getServiceAnomalyDetectionConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceAnomalyDetectionConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the service anomaly detection configuration",
        "tags" : [ "Anomaly detection - Services" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateServiceAnomalyDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceAnomalyDetectionConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the service anomaly detection configuration."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the service anomaly detection configuration",
        "tags" : [ "Anomaly detection - Services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/services/validator" : {
      "post" : {
        "operationId" : "validateServiceAnomalyDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceAnomalyDetectionConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the service anomaly detection configuration."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/services` request",
        "tags" : [ "Anomaly detection - Services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/vmware" : {
      "get" : {
        "operationId" : "getVMwareAnomalyDetectionConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VMwareAnomalyDetectionConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of anomaly detection for VMware",
        "tags" : [ "Anomaly detection - VMware" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateVMwareAnomalyDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/VMwareAnomalyDetectionConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing parameters of the VMware anomaly detection configuration."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of anomaly detection for VMware",
        "tags" : [ "Anomaly detection - VMware" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/anomalyDetection/vmware/validator" : {
      "post" : {
        "operationId" : "validateVMwareAnomalyDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/VMwareAnomalyDetectionConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing parameters of the VMware anomaly detection configuration."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the configuration of anomaly detection for VMware for the `PUT /anomalyDetection/vmware` request",
        "tags" : [ "Anomaly detection - VMware" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applicationDetectionRules" : {
      "get" : {
        "operationId" : "listApplicationDetectionConfigs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all available application detection rules",
        "tags" : [ "RUM - Application detection rules" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server. \n\nYou can only create detection rules for an existing application. If you need to create a rule for an application that doesn't exist yet, [create an application first](https://dt-url.net/vt03khh) and then configure detection rules for it.",
        "operationId" : "createApplicationDetectionConfig",
        "parameters" : [ {
          "description" : "The position of the new rule: \n\n * `APPEND`: at the bottom of the rule list. \n * `PREPEND`: at the top of the rule list. \n\n If not set, the `APPEND` is used.",
          "in" : "query",
          "name" : "position",
          "schema" : {
            "type" : "string",
            "enum" : [ "APPEND", "PREPEND" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDetectionRuleConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains configuration of the new application detection rule. \n\n You must not specify the ID of the rule. \n\nThe **order** field is ignored in this request. To enforce a particular order use the `PUT /applicationDetectionRules/order` request."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The application detection rule has been created. Response contains the ID of the new rule."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new application detection rule",
        "tags" : [ "RUM - Application detection rules" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applicationDetectionRules/hostDetection" : {
      "get" : {
        "operationId" : "getHostDetectionConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationDetectionRulesHostDetectionSettings"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of host detection headers",
        "tags" : [ "RUM - Application detection rules - Host detection" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "The request overwrites the existing configuration. Any headers not presented in the payload will be lost.",
        "operationId" : "updateHostDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDetectionRulesHostDetectionSettings"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of host detection headers."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of host detection headers",
        "tags" : [ "RUM - Application detection rules - Host detection" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applicationDetectionRules/hostDetection/validator" : {
      "post" : {
        "operationId" : "validateHostDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDetectionRulesHostDetectionSettings"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of host detection headers to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validate the payload for `PUT /applicationDetection/hostDetection` request.",
        "tags" : [ "RUM - Application detection rules - Host detection" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applicationDetectionRules/order" : {
      "put" : {
        "description" : "This request reorders the application detection rules according to the submitted list of IDs. Application detection rules not present in the body of the request will retain their relative ordering but are placed *after* all those present in the request.",
        "operationId" : "orderApplicationDetectionConfigs",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the IDs of the application detection rules in the desired order. Any further properties (**name**, **description**) are ignored."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Application detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Reorders the application detection rules",
        "tags" : [ "RUM - Application detection rules" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applicationDetectionRules/validator" : {
      "post" : {
        "operationId" : "validateCreateApplicationDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDetectionRuleConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the application detection rule to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /applicationDetection` request",
        "tags" : [ "RUM - Application detection rules" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applicationDetectionRules/{id}" : {
      "delete" : {
        "operationId" : "deleteApplicationDetectionConfig",
        "parameters" : [ {
          "description" : "The ID of the application detection rule to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified application detection rule",
        "tags" : [ "RUM - Application detection rules" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getApplicationDetectionConfig",
        "parameters" : [ {
          "description" : "The ID of the required application detection rule.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationDetectionRuleConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the parameters of the specified application detection rule",
        "tags" : [ "RUM - Application detection rules" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If the application detection rule with the specified ID doesn't exist, a new application is created and appended to the end of the rule list. \n\nIf the **order** parameter is set for an existing rule, the request uses this value. Otherwise it keeps the existing order of rules.",
        "operationId" : "updateApplicationDetectionConfig",
        "parameters" : [ {
          "description" : "The ID of the application detection rule to be updated. \n\n If you set the ID in the body as well, it must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDetectionRuleConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the application detection rule. \n\n If the **order** parameter is set, the rule is placed to this position."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. Application detection rule has been created. Response contains the ID of the new rule."
          },
          "204" : {
            "description" : "Success. Application detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified application detection rule",
        "tags" : [ "RUM - Application detection rules" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applicationDetectionRules/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateApplicationDetectionConfig",
        "parameters" : [ {
          "description" : "The ID of the application detection rule to be validated. \n\n If you set the ID in the body as well, it must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDetectionRuleConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the application detection rule to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validate the payload for the `PUT /applicationDetection/{id}` request",
        "tags" : [ "RUM - Application detection rules" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/mobile" : {
      "get" : {
        "operationId" : "listMobileApplicationConfigs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all existing mobile and custom applications",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an identifier. An identifier is assigned automatically by Dynatrace. \n\nYou can, however, provide your own applicationId. If you don't specify an applicationId, it is assigned automatically by Dynatrace.",
        "operationId" : "createMobileApplicationConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewMobileCustomAppConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the parameters of the new mobile or custom application."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The application has been created. The response contains the identifier and name of the new application."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "409" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The applicationId is already used by another application."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new mobile or custom application",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/mobile/validator" : {
      "post" : {
        "operationId" : "validateCreateMobileApplicationConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewMobileCustomAppConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the mobile or custom application configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /applications/mobile` request",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/mobile/{applicationId}/keyUserActions" : {
      "get" : {
        "operationId" : "listMobileKeyUserActions",
        "parameters" : [ {
          "description" : "The ID of the required application.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyUserActionMobileList"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the list of key user actions in the specified application",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/applications/mobile/{applicationId}/keyUserActions/{actionName}" : {
      "delete" : {
        "operationId" : "deleteMobileKeyUserAction",
        "parameters" : [ {
          "description" : "The ID of the required application.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the user action to be removed from the key user actions list.",
          "in" : "path",
          "name" : "actionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The user action has been removed from the list of key user actions. The response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Removes the specified user action from the list of key user actions in the specified application",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "post" : {
        "operationId" : "createMobileKeyUserAction",
        "parameters" : [ {
          "description" : "The ID of the required application.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The name of the user action to be marked as a key user action.",
          "in" : "path",
          "name" : "actionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyUserActionMobile"
                }
              }
            },
            "description" : "Success. The action has been marked as a key user action. The response contains its name."
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          },
          "409" : {
            "description" : "Failed. The max number of key user actions has been reached for the application."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Marks the user action as a key user action in the specified application",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/mobile/{applicationId}/userActionAndSessionProperties" : {
      "get" : {
        "operationId" : "listSessionProperties",
        "parameters" : [ {
          "description" : "The ID of the required application.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileSessionUserActionPropertyList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all mobile session and user action properties for the specified application",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "operationId" : "createSessionProperty",
        "parameters" : [ {
          "description" : "The ID of the required application.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileSessionUserActionProperty"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of the property."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileSessionUserActionPropertyShort"
                }
              }
            },
            "description" : "Success. The property has been created. The response contains the ID of the new property."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new mobile session or user action property for the specified application",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/mobile/{applicationId}/userActionAndSessionProperties/validator" : {
      "post" : {
        "operationId" : "validateCreateSessionProperty",
        "parameters" : [ {
          "description" : "The ID of the required application.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileSessionUserActionProperty"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of the property to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /applications/mobile/{applicationId}/userActionAndSessionProperties` request",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/mobile/{applicationId}/userActionAndSessionProperties/{key}" : {
      "delete" : {
        "operationId" : "deleteSessionProperty",
        "parameters" : [ {
          "description" : "The ID of the required application.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The key of the required mobile session or user action property.",
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The property has been deleted. The response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified mobile session or user action property for an application",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getSessionProperty",
        "parameters" : [ {
          "description" : "The ID of the required application.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The key of the required mobile session or user action property.",
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileSessionUserActionProperty"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the specified mobile session or user action property of an application",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If the property with the specified ID does not exist, a new property is created.",
        "operationId" : "updateSessionProperty",
        "parameters" : [ {
          "description" : "The ID of the required application.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The key of the required mobile session or user action property.",
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileSessionUserActionPropertyUpd"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of the property."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileSessionUserActionPropertyShort"
                }
              }
            },
            "description" : "Success. The property has been created. The response contains the ID of the new property."
          },
          "204" : {
            "description" : "Success. The property has been updated. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified mobile session or user action property for an application",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/mobile/{applicationId}/userActionAndSessionProperties/{key}/validator" : {
      "post" : {
        "operationId" : "validateUpdateSessionProperty",
        "parameters" : [ {
          "description" : "The ID of the required application.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The key of the required mobile session or user action property.",
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileSessionUserActionPropertyUpd"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of the property to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /applications/mobile/{applicationId}/userActionAndSessionProperties/{key}` request",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/mobile/{id}" : {
      "delete" : {
        "operationId" : "deleteMobileApplicationConfig",
        "parameters" : [ {
          "description" : "The ID of the application to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The application has been deleted. The response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified mobile or custom application",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getMobileApplicationConfig",
        "parameters" : [ {
          "description" : "The ID of the required mobile or custom application.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileCustomAppConfig"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of the specified mobile or custom application",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "You can't change applicationId and applicationType with this request.\n\nAll other values must be included in the body, depending on the applicationType.",
        "operationId" : "updateMobileApplicationConfig",
        "parameters" : [ {
          "description" : "The ID of the application to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileCustomAppConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated configuration of the mobile or custom application. \n\nDo not set the identifier in the body."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The application has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of the specified mobile or custom application",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/mobile/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateMobileApplicationConfig",
        "parameters" : [ {
          "description" : "The ID of the mobile or custom application to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileCustomAppConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the mobile or custom application configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /applications/mobile/{id}` request.",
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/web" : {
      "get" : {
        "operationId" : "listWebApplicationConfigs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all existing web applications",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID as that will be automatically assigned by Dynatrace server.",
        "operationId" : "createWebApplicationConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing parameters of the new web application configuraiton."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The response body contains the ID and name of the new web application."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new web application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/web/dataPrivacy" : {
      "get" : {
        "operationId" : "listDataPrivacySettings",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationDataPrivacyList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists data privacy settings of all web applications",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/applications/web/default" : {
      "get" : {
        "description" : "Default application is pre-configured in your Dynatrace environment. By default all traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one.",
        "operationId" : "getDefaultApplication",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebApplicationConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of the default web application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "Default application is pre-configured in your Dynatrace environment. By default all traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one.",
        "operationId" : "createOrUpdateDefaultConfiguration",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing the new parameters of the default web application."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of the default web application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/web/default/dataPrivacy" : {
      "get" : {
        "description" : "Default application is pre-configured in your Dynatrace environment. By default all the traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one.",
        "operationId" : "getDefaultApplicationDataPrivacySettings",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationDataPrivacy"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the data privacy settings of the default web application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "Default application is pre-configured in your Dynatrace environment. By default all traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one.",
        "operationId" : "updateDefaultApplicationDataPrivacySettings",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDataPrivacy"
              }
            }
          },
          "description" : "JSON body of the request, containing new data privacy settings."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Data privacy settings have been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the data privacy settings of the default web application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "DataPrivacy" ]
      }
    },
    "/applications/web/default/dataPrivacy/validator" : {
      "post" : {
        "operationId" : "validateDefaultApplicationDataPrivacySettings",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDataPrivacy"
              }
            }
          },
          "description" : "JSON body of the request, containing the data privacy settings to validate."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates data privacy settings of the default web application for the `PUT /applications/web/default/dataPrivacy` request",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "DataPrivacy" ]
      }
    },
    "/applications/web/default/validator" : {
      "post" : {
        "operationId" : "validateDefaultConfiguration",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing web application configuration to validate."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the configuration of the default web application for the `PUT /applications/web/default` request",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/web/validator" : {
      "post" : {
        "operationId" : "validateCreateWebApplicationConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing the web application configuration to validate."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the configuration of the web application for the `POST /applications/web` request",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/web/{id}" : {
      "delete" : {
        "operationId" : "deleteWebApplicationConfig",
        "parameters" : [ {
          "description" : "The ID of the web application to delete.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The application has been deleted. The response does not have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified web application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getWebApplicationConfig",
        "parameters" : [ {
          "description" : "The ID of the requested web application.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebApplicationConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of the specified web application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If the application with the specified ID does not exist, a new application will be created.",
        "operationId" : "updateWebApplicationConfig",
        "parameters" : [ {
          "description" : "The ID of the web application to update. \n\nIf you set the ID in the body as well, it must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing updated configuration of the web application."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new configuration has been created. The response body contains the ID and name of the new web application."
          },
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of the specified web application or creates a new one",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/web/{id}/dataPrivacy" : {
      "get" : {
        "operationId" : "getDataPrivacySettings",
        "parameters" : [ {
          "description" : "The ID of the web application where you want to check data privacy settings.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationDataPrivacy"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the data privacy settings of the specified web application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateDataPrivacySettings",
        "parameters" : [ {
          "description" : "The ID of the web application, where you want to update data privacy settings.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDataPrivacy"
              }
            }
          },
          "description" : "JSON body of the request, containing new data privacy settings."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Data privacy settings have been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the data privacy settings of the specified web application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "DataPrivacy" ]
      }
    },
    "/applications/web/{id}/dataPrivacy/validator" : {
      "post" : {
        "operationId" : "validateDataPrivacySettings",
        "parameters" : [ {
          "description" : "The ID of the web application, where you want to validate data privacy settings.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDataPrivacy"
              }
            }
          },
          "description" : "JSON body of the request, containing new data privacy settings."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates data privacy settings for the `PUT /applications/web/{id}/dataPrivacy` request",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "DataPrivacy" ]
      }
    },
    "/applications/web/{id}/errorRules" : {
      "get" : {
        "operationId" : "getApplicationErrorConfig",
        "parameters" : [ {
          "description" : "The ID of the required web application.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationErrorRules"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of error rules in the specified application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateApplicationErrorConfig",
        "parameters" : [ {
          "description" : "The ID of the required web application.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationErrorRules"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the updated configuration of error rules."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of error rules in the specified application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/web/{id}/keyUserActions" : {
      "get" : {
        "operationId" : "listKeyUserActions",
        "parameters" : [ {
          "description" : "The ID of the required web application.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyUserActionList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the list of key user actions in the specified web application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "operationId" : "createKeyUserAction",
        "parameters" : [ {
          "description" : "The ID of the required web application.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyUserAction"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the action to be marked as a key user action."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The action has been marked as a key user action. The response contains its ID."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Marks the user action as a key user action in the specified web application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/web/{id}/keyUserActions/{keyUserActionId}" : {
      "delete" : {
        "operationId" : "deleteKeyUserAction",
        "parameters" : [ {
          "description" : "The ID of the required web application.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the user action to be removed from the key user actions list.",
          "in" : "path",
          "name" : "keyUserActionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The user action has been removed from the list of key user actions. The response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Removes the specified user action from the list of key user actions in the specified web application",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/applications/web/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateWebApplicationConfig",
        "parameters" : [ {
          "description" : "The ID of the web application to validate.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing the web application configuration to validate."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the configuration of the web application for the `PUT /applications/web/{id}` request.",
        "tags" : [ "RUM - Web application configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/autoTags" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "listAutoTags",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all configured auto-tags",
        "tags" : [ "Automatically applied tags" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createAutoTag",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AutoTag"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new auto-tag."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The auto-tag has been created. The response body contains the ID of the new auto-tag."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new auto-tag",
        "tags" : [ "Automatically applied tags" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/autoTags/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateCreateAutoTag",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AutoTag"
              }
            }
          },
          "description" : "The JSON body of the request. Contains auto-tag configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /autoTags` request",
        "tags" : [ "Automatically applied tags" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/autoTags/{id}" : {
      "delete" : {
        "deprecated" : true,
        "operationId" : "deleteAutoTag",
        "parameters" : [ {
          "description" : "The ID of the auto-tag to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified auto-tag",
        "tags" : [ "Automatically applied tags" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "deprecated" : true,
        "operationId" : "getAutoTag",
        "parameters" : [ {
          "description" : "The ID of the required auto-tag.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "description" : "Flag to include process group references to the response. \n\n Process group references aren't compatible across environments. \n\nWhen this flag is set to `false`, conditions with process group references are removed. If that results in a rule having no conditions, the entire rule is removed.",
          "in" : "query",
          "name" : "includeProcessGroupReferences",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AutoTag"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the properties of the specified auto-tag",
        "tags" : [ "Automatically applied tags" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "If the auto-tag with the specified ID does not exist, a new auto-tag is created.",
        "operationId" : "updateAutoTag",
        "parameters" : [ {
          "description" : "The ID of the auto-tag to be updated.\n\n If you set the ID in the body as well, it must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AutoTag"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the auto-tag."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new auto-tag has been created. The response body contains the ID of the new auto-tag."
          },
          "204" : {
            "description" : "Success. The auto-tag has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing auto-tag",
        "tags" : [ "Automatically applied tags" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/autoTags/{id}/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateUpdateAutoTag",
        "parameters" : [ {
          "description" : "The ID of the auto-tag to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AutoTag"
              }
            }
          },
          "description" : "The JSON body of the request. Contains auto-tag configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /autoTags/{id}` request",
        "tags" : [ "Automatically applied tags" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/aws/credentials" : {
      "get" : {
        "operationId" : "listAwsCredentialConfigs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EntityShortRepresentation"
                  }
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all available AWS credentials configurations",
        "tags" : [ "AWS credentials configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createAwsCredentialsConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsCredentialsConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new AWS credentials configuration."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new AWS credentials configuration has been created. The response body contains the ID of the configuration. \n\n Check the connection status for these credentials after 10 minutes with the `GET /aws/credentials/{id}` request."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new AWS credentials configuration",
        "tags" : [ "AWS credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/aws/credentials/validator" : {
      "post" : {
        "operationId" : "validateCreateAwsCredentialsConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsCredentialsConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the AWS credentials configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /aws/credentials` request",
        "tags" : [ "AWS credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/aws/credentials/{id}" : {
      "delete" : {
        "operationId" : "deleteAwsCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of AWS credentials configuration to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The AWS credentials configuration has been deleted. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified AWS credentials configuration",
        "tags" : [ "AWS credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getAwsCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the specified AWS credentials configuration.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsCredentialsConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of the specified AWS credentials",
        "tags" : [ "AWS credentials configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateAwsCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the AWS credentials configuration to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsCredentialsConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the AWS credentials configuration."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new AWS credentials configuration has been created. The response body contains the ID of the configuration. \n\n Check the connection status for these credentials after 10 minutes with the `GET /aws/credentials/{id}` request."
          },
          "204" : {
            "description" : "Success. The AWS credentials configuration has been updated. Response doesn't have a body. \n\n Check the connection status for these credentials after 10 minutes with the `GET /aws/credentials/{id}` request."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing AWS credentials configuration",
        "tags" : [ "AWS credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/aws/credentials/{id}/services" : {
      "get" : {
        "operationId" : "getAwsServicesConfig",
        "parameters" : [ {
          "description" : "The ID of the specified AWS credentials configuration.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsMonitoredServicesDto"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the monitored services configuration of the specified AWS credentials",
        "tags" : [ "AWS credentials configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateAwsServicesConfig",
        "parameters" : [ {
          "description" : "The ID of the AWS credentials to be updated with new monitored services configuration.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsMonitoredServicesDto"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated monitored services configuration for AWS credentials."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The AWS credentials configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Replace an existing monitored services configuration of the specified AWS credentials",
        "tags" : [ "AWS credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/aws/credentials/{id}/services/validator" : {
      "post" : {
        "operationId" : "validateUpdateAwsServicesConfig",
        "parameters" : [ {
          "description" : "The ID of the AWS credentials for which the monitored services configuration is going to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsMonitoredServicesDto"
              }
            }
          },
          "description" : "The JSON body of the request. Contains a monitored services configuration for AWS credentials to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /aws/credentials/{id}/services` request",
        "tags" : [ "AWS credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/aws/credentials/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateAwsCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the AWS credentials configuration to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsCredentialsConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the AWS credentials configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /aws/credentials/{id}` request",
        "tags" : [ "AWS credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/aws/iamExternalId" : {
      "get" : {
        "description" : "You'll need it for the role-based AWS authentication.",
        "operationId" : "readIamExternalIdToken",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsIamToken"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the external ID token for setting an IAM role",
        "tags" : [ "AWS credentials configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/aws/privateLink" : {
      "get" : {
        "description" : "Gets all configuration settings for AWS PrivateLink for this tenant",
        "operationId" : "getPrivateLinkConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsPrivateLinkConfig"
                }
              }
            },
            "description" : "Success. The result is provided in the response body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration information about AWS PrivateLink",
        "tags" : [ "AWS PrivateLink" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "Updates the configuration settings for AWS PrivateLink for this tenant",
        "operationId" : "putPrivateLinkConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsPrivateLinkConfig"
              }
            }
          },
          "description" : "The AWS PrivateLink configuration.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsPrivateLinkConfig"
                }
              }
            },
            "description" : "Success. The configuration settings have been updated."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration information about AWS PrivateLink",
        "tags" : [ "AWS PrivateLink" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/aws/privateLink/allowlistedAccounts" : {
      "get" : {
        "description" : "Lists the account ids of all allowlisted accounts in AWS PrivateLink for this tenant",
        "operationId" : "getAllAllowlistedAccounts",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllowlistedAwsAccountList"
                }
              }
            },
            "description" : "Success. The list is provided in the response body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the information about all allowlisted accounts in AWS PrivateLink",
        "tags" : [ "AWS PrivateLink" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/aws/privateLink/allowlistedAccounts/{id}" : {
      "delete" : {
        "description" : "Removes the given AWS account id from the allowlisted accounts in AWS PrivateLink for this tenant",
        "operationId" : "removeAllowlistedAccount",
        "parameters" : [ {
          "description" : "The AWS account id to be deleted from the AWS PrivateLink allowlist",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The account id has been removed from the PrivateLink allowlist."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Error. Wrong format of the provided AWS account id (length = 12 characters, only digits)."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Removes one AWS account from the allowlist in AWS PrivateLink",
        "tags" : [ "AWS PrivateLink" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "put" : {
        "description" : "Updates the given AWS account id in the allowlisted accounts in AWS PrivateLink for this tenant",
        "operationId" : "putAllowlistedAccount",
        "parameters" : [ {
          "description" : "The AWS account id to be updated in the AWS PrivateLink allowlist, has to match the id in the provided payload.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AllowlistedAwsAccount"
              }
            }
          },
          "description" : "The AWS account id to be updated in the AWS PrivateLink allowlist, has to match the id in the path.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllowlistedAwsAccount"
                }
              }
            },
            "description" : "Success. The account id has been added to the PrivateLink allowlist."
          },
          "204" : {
            "description" : "Success. The account id already exists in the PrivateLink allowlist."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Error. Wrong format of the provided AWS account id (length = 12 characters, only digits)."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the given AWS account id in the allowlist in AWS PrivateLink",
        "tags" : [ "AWS PrivateLink" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/aws/supportedServices" : {
      "get" : {
        "description" : "You can use this list for adding services to AWS credentials",
        "operationId" : "getSupportedServices",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudSupportedServicesList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the list of AWS supported services",
        "tags" : [ "AWS credentials configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/azure/credentials" : {
      "get" : {
        "operationId" : "listAzureCredentialsConfigs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all available Azure credentials configurations",
        "tags" : [ "Azure credentials configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createAzureCredentialsConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureCredentialsCreation"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new Azure credentials configuration."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new Azure credentials configuration has been created. The response body contains the ID of the configuration."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new Azure credentials configuration",
        "tags" : [ "Azure credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/azure/credentials/validator" : {
      "post" : {
        "operationId" : "validateAzureCredentialsConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureCredentials"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the Azure credentials configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /azure/credentials` request",
        "tags" : [ "Azure credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/azure/credentials/{id}" : {
      "delete" : {
        "operationId" : "deleteAzureCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the Azure credentials configuration to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified Azure credentials configuration",
        "tags" : [ "Azure credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getAzureCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the required Azure credentials configuration.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AzureCredentials"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of the specified Azure credentials",
        "tags" : [ "Azure credentials configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "* You can't change the Application ID or Directory ID of an Azure configuration. If you need to change them, create a new credentials configuration. \n* If a configuration with the specified ID doesn't exist, a new configuration is created.",
        "operationId" : "updateAzureCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the Azure credentials configuration to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureCredentials"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the Azure credentials configuration."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new Azure credentials configuration has been created. The response body contains the ID of the configuration."
          },
          "204" : {
            "description" : "Success. The Azure credentials configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing Azure credentials configuration",
        "tags" : [ "Azure credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/azure/credentials/{id}/services" : {
      "get" : {
        "operationId" : "getAzureServicesConfig",
        "parameters" : [ {
          "description" : "The ID of the required Azure credentials configuration.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AzureMonitoredServicesDto"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the monitored services configuration of the specified Azure credentials",
        "tags" : [ "Azure credentials configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateAzureServicesConfig",
        "parameters" : [ {
          "description" : "The ID of the Azure credentials to be updated with new monitored services configuration.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureMonitoredServicesDto"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated monitored services configuration for Azure credentials."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The Azure credentials configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Replace an existing monitored services configuration of the specified Azure credentials",
        "tags" : [ "Azure credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/azure/credentials/{id}/services/validator" : {
      "post" : {
        "operationId" : "validateAzureServicesConfig",
        "parameters" : [ {
          "description" : "The ID of the Azure credentials for which the monitored services configuration is going to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureMonitoredServicesDto"
              }
            }
          },
          "description" : "The JSON body of the request. Contains a monitored services configuration for Azure credentials to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /azure/credentials/{id}/services` request",
        "tags" : [ "Azure credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/azure/credentials/{id}/validator" : {
      "post" : {
        "operationId" : "validateConfigurationUpdate",
        "parameters" : [ {
          "description" : "The ID of the Azure credentials configuration to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureCredentials"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the Azure credentials configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /azure/credentials/{id}` request",
        "tags" : [ "Azure credentials configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/azure/supportedServices" : {
      "get" : {
        "description" : "You can use this list for adding services to Azure credentials",
        "operationId" : "getSupportedServices_1",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudSupportedServicesList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the list of Azure supported services",
        "tags" : [ "Azure credentials configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/calculatedMetrics/log" : {
      "get" : {
        "operationId" : "listLogMetricConfigs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. See the response body for details"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all custom log metrics configured in your environment | maturity=EARLY_ADOPTER",
        "tags" : [ "Calculated metrics - Log monitoring" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/calculatedMetrics/log/{metricKey}" : {
      "delete" : {
        "operationId" : "deleteLogMetricConfig",
        "parameters" : [ {
          "description" : "The key of the custom log metric to be deleted.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. See the response body for details"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified custom log metric definition | maturity=EARLY_ADOPTER",
        "tags" : [ "Calculated metrics - Log monitoring" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getLogMetricConfig",
        "parameters" : [ {
          "description" : "The key of the required custom log metric.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogMetricConfig"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. See the response body for details"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the definition of the specified custom log metric | maturity=EARLY_ADOPTER",
        "tags" : [ "Calculated metrics - Log monitoring" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If the metric definition with the specified key already exists, it is updated.",
        "operationId" : "updateOrCreateLogMetricConfig",
        "parameters" : [ {
          "description" : "The required key of the custom log metric. The key must have the `calc:log.` prefix. \n\n The key in the body of the request must match this key.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/LogMetricConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the definition of the custom log metric."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new metric definition has been created. The response body contains the key and the name of the new metric."
          },
          "204" : {
            "description" : "Success. The metric definition has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new custom log metric | maturity=EARLY_ADOPTER",
        "tags" : [ "Calculated metrics - Log monitoring" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/log/{metricKey}/validator" : {
      "post" : {
        "operationId" : "validateMetric",
        "parameters" : [ {
          "description" : "The key of the custom log metric to be validated.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/LogMetricConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains definition of the custom log metric to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. See the response body for details"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /calculatedMetrics/log/{metricKey}` request. | maturity=EARLY_ADOPTER",
        "tags" : [ "Calculated metrics - Log monitoring" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/mobile" : {
      "get" : {
        "operationId" : "listMobileMetrics",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all calculated metrics for mobile and custom apps configured in your environment",
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "operationId" : "createMobileMetric",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedMobileMetric"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the definition of the new calculated metric for mobile or custom app."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The calculated mobile metric has been created. Response contains its key and name."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new calculated metric for a mobile or custom app",
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/mobile/validator" : {
      "post" : {
        "operationId" : "validateCreateMobileMetric",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedMobileMetric"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the definition of the metric to be validated. \n\nThe key of the metric must be omitted."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted metric is valid. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /calculatedMetrics/mobile` request",
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/mobile/{metricKey}" : {
      "delete" : {
        "operationId" : "deleteMobileMetric",
        "parameters" : [ {
          "description" : "The key of the metric to be deleted.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified calculated metric for mobile or custom app",
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getMobileMetric",
        "parameters" : [ {
          "description" : "The key of the required metric.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CalculatedMobileMetric"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the descriptor of the specified calculated metric for mobile or custom app",
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateMobileMetric",
        "parameters" : [ {
          "description" : "The key of the metric to be updated.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedMobileMetricUpdate"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the updated definition of the calculated mobile metric."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The metric has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified calculated metric for a mobile or custom app",
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/mobile/{metricKey}/validator" : {
      "post" : {
        "operationId" : "validateUpdateMobileMetric",
        "parameters" : [ {
          "description" : "The key of the metric to be validated.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedMobileMetricUpdate"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the definition of the metric to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted metric is valid. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /calculatedMetrics/mobile/{metricKey}` request",
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/rum" : {
      "get" : {
        "operationId" : "listRumMetrics",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all calculated web application metrics",
        "tags" : [ "Calculated metrics - Web applications" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "operationId" : "createRumMetric",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationMetric"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the descriptor of the new calculated web application metric.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The metric has been created. Response contains its key and name."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new calculated web application metric",
        "tags" : [ "Calculated metrics - Web applications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/rum/validator" : {
      "post" : {
        "description" : "The body must not provide an ID.",
        "operationId" : "validateCreateRumMetric",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationMetric"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the descriptor of the metric to be validated.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted metric is valid. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /calculatedMetrics/rum` request",
        "tags" : [ "Calculated metrics - Web applications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/rum/{metricKey}" : {
      "delete" : {
        "operationId" : "deleteRumMetric",
        "parameters" : [ {
          "description" : "The key of the metric to be deleted.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified calculated web application metric",
        "tags" : [ "Calculated metrics - Web applications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getRumMetric",
        "parameters" : [ {
          "description" : "The key of the required metric.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebApplicationMetric"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the descriptor of the specified calculated web application metric",
        "tags" : [ "Calculated metrics - Web applications" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateRumMetric",
        "parameters" : [ {
          "description" : "The key of the calculated web application metric to be updated.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationMetricUpdate"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the updated parameters of the calculated web application metric.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The metric has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified calculated web application metric",
        "tags" : [ "Calculated metrics - Web applications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/rum/{metricKey}/validator" : {
      "post" : {
        "operationId" : "validateUpdateRumMetric",
        "parameters" : [ {
          "description" : "The key of the calculated web application metric to be validated.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationMetricUpdate"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the descriptor of the metric to be validated.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted metric is valid. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /calculatedMetrics/rum/{metricKey}` request",
        "tags" : [ "Calculated metrics - Web applications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/service" : {
      "get" : {
        "operationId" : "listServiceMetrics",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all calculated service metrics configured in your environment",
        "tags" : [ "Calculated metrics - Services" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "operationId" : "createServiceMetric",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedServiceMetric"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new calculated service metric.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The calculated service metric has been created. Response contains the key of the new metric."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new calculated service metric",
        "tags" : [ "Calculated metrics - Services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/service/validator" : {
      "post" : {
        "operationId" : "validateCreateServiceMetric",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedServiceMetric"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the calculated service metric to be validated.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /calculatedMetric/service` request",
        "tags" : [ "Calculated metrics - Services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/service/{metricKey}" : {
      "delete" : {
        "operationId" : "deleteServiceMetric",
        "parameters" : [ {
          "description" : "The key of the calculated service metric to be deleted.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The calculated service metric has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified calculated service metric",
        "tags" : [ "Calculated metrics - Services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getServiceMetric",
        "parameters" : [ {
          "description" : "The key of the required calculated service metric.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CalculatedServiceMetric"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the descriptor of the specified calculated service metric",
        "tags" : [ "Calculated metrics - Services" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If the calculated service metric with the specified key doesn't exist, a new metric is created.",
        "operationId" : "updateServiceMetric",
        "parameters" : [ {
          "description" : "The key of the calculated service metric to be updated. \n\n The key of the calculated service metric in the body of the request must match this key.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedServiceMetric"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the calculated service metric.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new calculated service metric has been created. Response contains the key of the new metric."
          },
          "204" : {
            "description" : "Success. The calculated service metric has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified calculated service metric",
        "tags" : [ "Calculated metrics - Services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/service/{metricKey}/validator" : {
      "post" : {
        "operationId" : "validateUpdateServiceMetric",
        "parameters" : [ {
          "description" : "The key of the calculated service metric to be validated .\n\n The key of the metric in the body of the request must match this key.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedServiceMetric"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the calculated service metric to be validated.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /calculatedMetric/service/{id}` request",
        "tags" : [ "Calculated metrics - Services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/synthetic" : {
      "get" : {
        "operationId" : "listSyntheticMetrics",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all calculated synthetic metrics available in your environment | maturity=EARLY_ADOPTER",
        "tags" : [ "Calculated metrics - Synthetic" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "operationId" : "createSyntheticMetric",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedSyntheticMetric"
              }
            }
          },
          "description" : "The JSON body of the request. Contains definition of the new calculated synthetic metric."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The calculated synthetic metric has been created. Response contains its key and name."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new calculated synthetic metric | maturity=EARLY_ADOPTER",
        "tags" : [ "Calculated metrics - Synthetic" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/synthetic/validator" : {
      "post" : {
        "operationId" : "validateCreateSyntheticMetric",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedSyntheticMetric"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the definition of the metric to be validated. \n\nThe key of the metric must be omitted."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted calculated synthetic metric is valid. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /calculatedMetrics/synthetic` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Calculated metrics - Synthetic" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/synthetic/{metricKey}" : {
      "delete" : {
        "operationId" : "deleteSyntheticMetric",
        "parameters" : [ {
          "description" : "The key of the calculated synthetic metric to be deleted.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified calculated synthetic metric | maturity=EARLY_ADOPTER",
        "tags" : [ "Calculated metrics - Synthetic" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getSyntheticMetric",
        "parameters" : [ {
          "description" : "The key of the required calculated synthetic metric.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CalculatedSyntheticMetric"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the descriptor of the specified calculated synthetic metric | maturity=EARLY_ADOPTER",
        "tags" : [ "Calculated metrics - Synthetic" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateSyntheticMetric",
        "parameters" : [ {
          "description" : "The key of the calculated synthetic metric to be updated.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticMetricUpdate"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the update to the calculated synthetic metric."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The calculated synthetic metric has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified calculated synthetic metric | maturity=EARLY_ADOPTER",
        "tags" : [ "Calculated metrics - Synthetic" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/calculatedMetrics/synthetic/{metricKey}/validator" : {
      "post" : {
        "operationId" : "validateUpdateSyntheticMetric",
        "parameters" : [ {
          "description" : "The key of the metric to be validated.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticMetricUpdate"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the update to the metric to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted calculated synthetic metric is valid. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /calculatedMetrics/synthetic/{metricKey}` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Calculated metrics - Synthetic" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/cloudFoundry/credentials" : {
      "get" : {
        "operationId" : "listCloudFoundryCredentialsConfigs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "List all the Cloud Foundry foundations credentials. | maturity=EARLY_ADOPTER",
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "operationId" : "createCloudFoundryCredentialsConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloudFoundryCredentials"
              }
            }
          },
          "description" : "`name`, `apiUrl` and `loginUrl` must be unique.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. Cloud Foundry foundation credentials have been created. The ID and name of the new credentials are returned."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Create new credentials for a single foundation. | maturity=EARLY_ADOPTER",
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/cloudFoundry/credentials/validator" : {
      "post" : {
        "operationId" : "validateCreateCloudFoundryCredentialsConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloudFoundryCredentials"
              }
            }
          },
          "description" : "`name`, `apiUrl` and `loginUrl` must be unique.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted credentials are valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validate that creating credentials would be successful. | maturity=EARLY_ADOPTER",
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/cloudFoundry/credentials/{id}" : {
      "delete" : {
        "operationId" : "deleteCloudFoundryCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the Cloud Foundry foundation credentials to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Delete the specified Cloud Foundry foundation credentials. | maturity=EARLY_ADOPTER",
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getCloudFoundryCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the required Cloud Foundry foundation credentials.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudFoundryCredentials"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Show the properties for the specified Cloud Foundry foundation credentials. | maturity=EARLY_ADOPTER",
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateCloudFoundryCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the Cloud Foundry foundation credentials.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloudFoundryCredentials"
              }
            }
          },
          "description" : "`name` must be unique. `password` can be omitted for updates, the existing one will be used. `apiUrl` and `loginUrl` must be set and may not differ from the existing config if it exists.\nUse this endpoint for copying credentials between environments while keeping their IDs and for updating existing credentials. You can *not* use this to create new credentials with an arbitrary ID, use POST instead.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. Cloud Foundry foundation credentials have been created. The ID and name of the new credentials are returned."
          },
          "204" : {
            "description" : "Success. Cloud Foundry foundation credentials have been successfully updated."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Create or update credentials for a single Cloud Foundry foundation. | maturity=EARLY_ADOPTER",
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/cloudFoundry/credentials/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateCloudFoundryCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the Cloud Foundry foundation credentials.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloudFoundryCredentials"
              }
            }
          },
          "description" : "`name` must be unique. `password` can be omitted for updates. See the constraints for the PUT /cloudFoundry/credentials/{id} request.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted credentials are valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validate that updating or creating credentials would be successful. | maturity=EARLY_ADOPTER",
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/conditionalNaming/{type}" : {
      "get" : {
        "operationId" : "listNamingRules",
        "parameters" : [ {
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "in" : "path",
          "name" : "type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all configured naming rules of the specified type",
        "tags" : [ "Conditional naming" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createNamingRule",
        "parameters" : [ {
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "in" : "path",
          "name" : "type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConditionalNamingRule"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new naming rule. \n\nDo not specify the **id** of the rule. \n\nThe value of the **type** field must match the **type** path parameter."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The naming rule has been created. The response contains the ID of the new rule"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new naming rule",
        "tags" : [ "Conditional naming" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/conditionalNaming/{type}/validator" : {
      "post" : {
        "operationId" : "validateCreateNamingRule",
        "parameters" : [ {
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "in" : "path",
          "name" : "type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConditionalNamingRule"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the naming rule parameters to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /conditionalNaming/{type}` request",
        "tags" : [ "Conditional naming" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/conditionalNaming/{type}/{id}" : {
      "delete" : {
        "operationId" : "deleteNamingRule",
        "parameters" : [ {
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "in" : "path",
          "name" : "type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        }, {
          "description" : "The ID of the naming rule to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified naming rule",
        "tags" : [ "Conditional naming" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getNamingRule",
        "parameters" : [ {
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "in" : "path",
          "name" : "type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        }, {
          "description" : "The ID of the required naming rule.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConditionalNamingRule"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists the parameters of the specified naming rule",
        "tags" : [ "Conditional naming" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created at the end of the rules list and will be the last to evaluate.",
        "operationId" : "updateNamingRule",
        "parameters" : [ {
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "in" : "path",
          "name" : "type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        }, {
          "description" : "The ID of the naming rule to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConditionalNamingRule"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the naming rule. \n\nThe value of the **type** field must match the **type** path parameter."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The naming rule has been created. The response contains the ID of the new rule."
          },
          "204" : {
            "description" : "Success. The naming rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified naming rule",
        "tags" : [ "Conditional naming" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/conditionalNaming/{type}/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateNamingRule",
        "parameters" : [ {
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "in" : "path",
          "name" : "type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        }, {
          "description" : "The ID of the naming rule to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConditionalNamingRule"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the naming rule parameters to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /conditionalNaming/{type}/{id}` request",
        "tags" : [ "Conditional naming" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/contentResources" : {
      "get" : {
        "operationId" : "getContentConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentResources"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of content resources",
        "tags" : [ "RUM - Content resources" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "putContentResourceConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentResources"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of content resources."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of content resources",
        "tags" : [ "RUM - Content resources" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/contentResources/validator" : {
      "post" : {
        "operationId" : "validateContentResourceConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentResources"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of content resources to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /contentResources` request",
        "tags" : [ "RUM - Content resources" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/credentials" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "listCredentials",
        "parameters" : [ {
          "description" : "Filters the result by the specified credentials type.",
          "in" : "query",
          "name" : "type",
          "schema" : {
            "type" : "string",
            "enum" : [ "CERTIFICATE", "USERNAME_PASSWORD", "TOKEN" ]
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialsList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all sets of credentials for synthetic monitors stored in your environment",
        "tags" : [ "Credential vault" ],
        "x-token-scopes" : [ "credentialVault.read" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createCredentials",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Credentials"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new credentials set.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialsId"
                }
              }
            },
            "description" : "Success. The new credentials set has been created. The response contains the ID of the set."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new credentials set",
        "tags" : [ "Credential vault" ],
        "x-token-scopes" : [ "credentialVault.write" ]
      }
    },
    "/credentials/{id}" : {
      "delete" : {
        "deprecated" : true,
        "operationId" : "removeCredentials",
        "parameters" : [ {
          "description" : "The ID of the credentials set to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The credentials set has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified credentials set",
        "tags" : [ "Credential vault" ],
        "x-token-scopes" : [ "credentialVault.write" ]
      },
      "get" : {
        "deprecated" : true,
        "description" : "The credentials set itself (username/certificate and password) is not included in the response.",
        "operationId" : "getCredentials",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required credentials set.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialsResponseElement"
                }
              }
            },
            "description" : "Success. The response contains the metadata of the credentials set."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the metadata of the specified credentials set",
        "tags" : [ "Credential vault" ],
        "x-token-scopes" : [ "credentialVault.read" ]
      },
      "put" : {
        "deprecated" : true,
        "operationId" : "updateCredentials",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the credentials set to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Credentials"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the credentials set.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialsId"
                }
              }
            },
            "description" : "Success. The new credentials set has been created. The response contains the ID of the set."
          },
          "204" : {
            "description" : "Success. The credentials set has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified credentials set",
        "tags" : [ "Credential vault" ],
        "x-token-scopes" : [ "credentialVault.write" ]
      }
    },
    "/dashboards" : {
      "get" : {
        "operationId" : "getDashboardStubsList",
        "parameters" : [ {
          "description" : "The owner of the dashboard.",
          "in" : "query",
          "name" : "owner",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of tags applied to the dashboard. \n\n The dashboard must match **all** the specified tags.",
          "in" : "query",
          "name" : "tags",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DashboardList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all dashboards of the environment",
        "tags" : [ "Dashboards" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID. An ID is assigned automatically by Dynatrace.",
        "operationId" : "createDashboard",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Dashboard"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new dashboard."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new dashboard has been created. The response body contains the generated ID."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a dashboard",
        "tags" : [ "Dashboards" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/dashboards/migrateAll" : {
      "get" : {
        "operationId" : "migrateAllDashboard",
        "responses" : {
          "200" : {
            "description" : "Success. All dashboards were migrated"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Migrate all dashboards to replace Custom Charting tiles with DataExplorer ones | maturity=EARLY_ADOPTER",
        "tags" : [ "Dashboards" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/dashboards/validator" : {
      "post" : {
        "description" : "The body must not provide an ID.",
        "operationId" : "validateDashboardCreation",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Dashboard"
              }
            }
          },
          "description" : "The JSON body of the request. Containing the dashboard to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted dashboard is valid. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the 'POST /dashboards' request",
        "tags" : [ "Dashboards" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/dashboards/{dashboardId}/migrate" : {
      "put" : {
        "operationId" : "migrateDashboard",
        "parameters" : [ {
          "description" : "The ID of the dashboard to be migrated.",
          "in" : "path",
          "name" : "dashboardId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The tiles were migrated"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Dashboard not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Migrate all the Custom Charting tiles to DataExplorer ones | maturity=EARLY_ADOPTER",
        "tags" : [ "Dashboards" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/dashboards/{id}" : {
      "delete" : {
        "operationId" : "deleteDashboard",
        "parameters" : [ {
          "description" : "The ID of the dashboard to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The dashboard has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified dashboard",
        "tags" : [ "Dashboards" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getDashboard",
        "parameters" : [ {
          "description" : "The ID of the required dashboard.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Dashboard"
                }
              }
            },
            "description" : "Success. The response body contains parameters of the dashboard."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the properties of the specified dashboard",
        "tags" : [ "Dashboards" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If the dashboard with the specified ID doesn't exist, a new dashboard is created",
        "operationId" : "updateDashboard",
        "parameters" : [ {
          "description" : "The ID of the dashboard to be updated. \n\n The ID in the request body must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Dashboard"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the dashboard."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new dashboard has been created. Response doesn't have a body."
          },
          "204" : {
            "description" : "Success. The dashboard has been updated. Response doesn't have a body"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified dashboard",
        "tags" : [ "Dashboards" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/dashboards/{id}/shareSettings" : {
      "get" : {
        "operationId" : "getDashboardSharingSettings",
        "parameters" : [ {
          "description" : "The ID of the required dashboard.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DashboardSharing"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the sharing configuration of the specified dashboard",
        "tags" : [ "Dashboards" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateShareSettings",
        "parameters" : [ {
          "description" : "The ID of the required dashboard.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DashboardSharing"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the dashboard sharing."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the sharing configuration of the specified dashboard",
        "tags" : [ "Dashboards" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/dashboards/{id}/shareSettings/validator" : {
      "post" : {
        "operationId" : "validateShareSettingsUpdate",
        "parameters" : [ {
          "description" : "The ID of the dashboard to be validated. \n\n The ID in the request body must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DashboardSharing"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the dashboard sharing to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted dashboard share setting is valid. Response doesn't have a body"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the 'PUT /dashboards/{id}/shareSettings' request",
        "tags" : [ "Dashboards" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/dashboards/{id}/validator" : {
      "post" : {
        "operationId" : "validateDashboardUpdate",
        "parameters" : [ {
          "description" : "The ID of the dashboard to be validated. \n\n The ID in the request body must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Dashboard"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the dashboard to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted dashboard is valid. Response doesn't have a body"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the 'PUT /dashboards/{id}' request",
        "tags" : [ "Dashboards" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/dataPrivacy" : {
      "get" : {
        "operationId" : "getDataPrivacySettings_1",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataPrivacyAndSecurity"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists the global data privacy and security settings",
        "tags" : [ "Data privacy and security" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "This request updates global settings, affecting all your applications. \n\n To update application-specific data privacy settings, use the [**PUT data privacy of a web application**](https://dt-url.net/q403sv9) request.",
        "operationId" : "updateDataPrivacySettings_1",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataPrivacyAndSecurity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the global data privacy and security settings",
        "tags" : [ "Data privacy and security" ],
        "x-token-scopes" : [ "DataPrivacy" ]
      }
    },
    "/dataPrivacy/validator" : {
      "post" : {
        "operationId" : "validateDataPrivacySettings_1",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataPrivacyAndSecurity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /dataPrivacy` request",
        "tags" : [ "Data privacy and security" ],
        "x-token-scopes" : [ "DataPrivacy" ]
      }
    },
    "/extensions" : {
      "get" : {
        "operationId" : "getExtensions",
        "parameters" : [ {
          "description" : "The number of results per result page. Must be between 1 and 500",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 200,
            "maximum" : 500,
            "minimum" : 1
          }
        }, {
          "description" : "The cursor for the next page of results.",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionListDto"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all uploaded extensions | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "operationId" : "uploadExtension",
        "parameters" : [ {
          "description" : "Use extension-defined thresholds for alerts (`true`) or user-defined thresholds (`false`). \n\n Extension-defined thresholds are stored in the `plugin.json` file. \n\nIf not set, user-defined thresholds are used.",
          "in" : "query",
          "name" : "overrideAlerts",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary",
                    "description" : "Extension ZIP file to be uploaded. \n\n File name must match the **name** field in the `plugin.json` file. \n\nFor example, for the extension whose **name** is `custom.remote.python.demo`, the name of the extension file must be `custom.remote.python.demo.zip`."
                  }
                },
                "required" : [ "file" ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. Extension has been uploaded. Response contains the ID of the extension."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Uploads a ZIP extension file | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/extensions/activeGateExtensionModules" : {
      "get" : {
        "operationId" : "getRemoteExtensionModules",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success. The response contains IDs of ActiveGate extension modules. Use them to configure ActiveGate extension endpoints."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "List available ActiveGate extension modules | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/extensions/validator" : {
      "post" : {
        "operationId" : "validateExtension",
        "parameters" : [ {
          "description" : "Validate only the `plugin.json` file (`true`) or the entire extension structure (`false`). \n\n If not set, the entire extension is validated. ",
          "in" : "query",
          "name" : "jsonOnly",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary",
                    "description" : "The ZIP extension file to be uploaded. \n\n The file name must match the ID of the extension. Example: `custom.remote.python.demo.zip`"
                  }
                },
                "required" : [ "file" ]
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted extension is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates a ZIP extension file for `POST/extensions` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/extensions/{id}" : {
      "delete" : {
        "description" : "Deletion of the extension file uninstalls the extension, making it unavailable for use.",
        "operationId" : "deleteExtension",
        "parameters" : [ {
          "description" : "The ID of the extension to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the ZIP file of the specified extension | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getExtension",
        "parameters" : [ {
          "description" : "The ID of the required extension.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists the properties of the specified extension | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/extensions/{id}/binary" : {
      "get" : {
        "operationId" : "getExtensionBinary",
        "parameters" : [ {
          "description" : "The ID of the extension you want to download.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ZIP file of the extension"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Downloads the ZIP file of the specified extension | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/extensions/{id}/global" : {
      "get" : {
        "operationId" : "getExtensionGlobalConfiguration",
        "parameters" : [ {
          "description" : "The ID of the extension to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GlobalExtensionConfiguration"
                }
              }
            },
            "description" : "Global configuration of given extension."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Get the global configuration of the specified OneAgent or JMX extension | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateGlobalExtensionConfiguration",
        "parameters" : [ {
          "description" : "The ID of the extension to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/GlobalExtensionConfiguration"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated configuration of the extension."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Extension configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of the specified OneAgent or JMX extension | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/extensions/{id}/instances" : {
      "get" : {
        "operationId" : "getExtensionConfigurations",
        "parameters" : [ {
          "description" : "The ID of the required extension.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The number of results per result page. Must be between 1 and 500",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 200,
            "maximum" : 500,
            "minimum" : 1
          }
        }, {
          "description" : "The cursor for the next page of results.",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionConfigurationList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Returns list of all local configuration instances for given extension | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "operationId" : "createLocalExtensionConfiguration",
        "parameters" : [ {
          "description" : "The ID of the extension",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtensionConfigurationDto"
              }
            }
          },
          "description" : "The JSON body of the request. Contains new configuration of the extension."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The extension configuration has been created. Response contains the ID of the new configuration."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates instance of local configuration for given extension | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/extensions/{id}/instances/validator" : {
      "post" : {
        "operationId" : "validateLocalExtensionConfiguration",
        "parameters" : [ {
          "description" : "The ID of the extension.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtensionConfigurationDto"
              }
            }
          },
          "description" : "The JSON body of the request. Contains new configuration of the extension to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /extensions/{id}/instances` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/extensions/{id}/instances/{configurationId}" : {
      "delete" : {
        "operationId" : "deleteLocalExtensionConfiguration",
        "parameters" : [ {
          "description" : "The ID of the extension where you want to delete the configuration.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the configuration to be deleted.",
          "in" : "path",
          "name" : "configurationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes an existing configuration of the extension | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getLocalExtensionConfiguration",
        "parameters" : [ {
          "description" : "The ID of the extension.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the configuration.",
          "in" : "path",
          "name" : "configurationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionConfigurationDto"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Returns instance of local configuration for given extension | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateLocalExtensionConfiguration",
        "parameters" : [ {
          "description" : "The ID of the extension where you want to update the configuration. \n\nIf you set the extension ID in the body as well, it must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the configuration to be updated.",
          "in" : "path",
          "name" : "configurationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtensionConfigurationDto"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the extension configuration."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates instance of local configuration for given extension | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/extensions/{id}/states" : {
      "get" : {
        "operationId" : "getExtensionStates",
        "parameters" : [ {
          "description" : "The ID of the required extension.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The number of results per result page. Must be between 1 and 500",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 200,
            "maximum" : 500,
            "minimum" : 1
          }
        }, {
          "description" : "The cursor for the next page of results.",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Extension state to filter.",
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "string",
            "enum" : [ "DISABLED", "ERROR_AUTH", "ERROR_COMMUNICATION_FAILURE", "ERROR_CONFIG", "ERROR_TIMEOUT", "ERROR_UNKNOWN", "INCOMPATIBLE", "LIMIT_REACHED", "NOTHING_TO_REPORT", "OK", "STATE_TYPE_UNKNOWN", "UNINITIALIZED", "UNSUPPORTED", "WAITING_FOR_STATE" ]
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionStateList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists the states of the specified extension | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/extensions/{technology}/availableHosts" : {
      "get" : {
        "operationId" : "getHostsForTechnology",
        "parameters" : [ {
          "description" : "Name of requested technology",
          "in" : "path",
          "name" : "technology",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ACTIVEMQ_CLIENT", "ACTIVE_MQ", "ACTIVE_MQ_ARTEMIS", "ADOBE_EXPERIENCE_MANAGER", "ADO_NET", "AIX", "AKKA", "AMAZON_REDSHIFT", "AMQP", "APACHE_CAMEL", "APACHE_CASSANDRA", "APACHE_COUCH_DB", "APACHE_DERBY", "APACHE_HTTP_CLIENT_ASYNC", "APACHE_HTTP_CLIENT_SYNC", "APACHE_HTTP_SERVER", "APACHE_KAFKA", "APACHE_LOG4J", "APACHE_SOLR", "APACHE_STORM", "APACHE_SYNAPSE", "APACHE_TOMCAT", "APPARMOR", "APPLICATION_INSIGHTS_SDK", "ASP_DOTNET", "ASP_DOTNET_CORE", "ASP_DOTNET_CORE_SIGNALR", "ASP_DOTNET_SIGNALR", "ASYNC_HTTP_CLIENT", "AWS_DYNAMO_DB", "AWS_LAMBDA", "AWS_RDS", "AWS_SERVICE", "AXIS", "AZURE_FUNCTIONS", "AZURE_SERVICE_BUS", "AZURE_SERVICE_FABRIC", "AZURE_STORAGE", "BOSHBPM", "CICS_FILE_ACCESS", "CITRIX", "CITRIX_COMMON", "CITRIX_DESKTOP_DELIVERY_CONTROLLERS", "CITRIX_DIRECTOR", "CITRIX_LICENSE_SERVER", "CITRIX_PROVISIONING_SERVICES", "CITRIX_STOREFRONT", "CITRIX_VIRTUAL_DELIVERY_AGENT", "CITRIX_WORKSPACE_ENVIRONMENT_MANAGEMENT", "CITRIX_XEN", "CLOUDFOUNDRY", "CLOUDFOUNDRY_AUCTIONEER", "CLOUDFOUNDRY_BOSH", "CLOUDFOUNDRY_GOROUTER", "CODEIGNITER", "COLDFUSION", "CONFLUENT_KAFKA_CLIENT", "CONTAINERD", "CORE_DNS", "COSMOSDB", "COUCHBASE", "CRIO", "CXF", "DATASTAX", "DB2", "DIEGO_CELL", "DOCKER", "DOTNET", "DOTNET_REMOTING", "DRUPAL", "DYNATRACE", "ELASTIC_SEARCH", "ENVOY", "ERLANG", "ETCD", "F5_LTM", "FSHARP", "GARDEN", "GLASSFISH", "GO", "GOOGLE_CLOUD_FUNCTIONS", "GRAAL_TRUFFLE", "GRAPH_QL", "GRPC", "GRSECURITY", "HADOOP", "HADOOP_HDFS", "HADOOP_YARN", "HAPROXY", "HEAT", "HESSIAN", "HORNET_Q", "IBM_CICS_REGION", "IBM_CICS_TRANSACTION_GATEWAY", "IBM_IMS_CONNECT_REGION", "IBM_IMS_CONTROL_REGION", "IBM_IMS_MESSAGE_PROCESSING_REGION", "IBM_IMS_SOAP_GATEWAY", "IBM_INTEGRATION_BUS", "IBM_MQ", "IBM_MQ_CLIENT", "IBM_WEBSHPRERE_APPLICATION_SERVER", "IBM_WEBSHPRERE_LIBERTY", "IBM_WEBSPHERE_APPLICATION_SERVER", "IBM_WEBSPHERE_LIBERTY", "IIS", "IIS_APP_POOL", "ISTIO", "JAVA", "JAVA_HTTPURLCONNETION", "JAX_WS", "JBOSS", "JBOSS_EAP", "JBOSS_LOGMANAGER", "JDK_HTTP_CLIENT", "JDK_HTTP_SERVER", "JERSEY", "JETTY", "JRUBY", "JYTHON", "KUBERNETES", "LAMINAS", "LARAVEL", "LIBC", "LIBVIRT", "LINKERD", "LINUX_SYSTEM", "MAGENTO", "MARIADB", "MEMCACHED", "MICRONAUT", "MICROSOFT_SQL_SERVER", "MONGODB", "MSSQL_CLIENT", "MULE_ESB", "MYSQL", "MYSQL_CONNECTOR", "NETFLIX_SERVO", "NETTY", "NGINX", "NODE_JS", "OK_HTTP_CLIENT", "ONEAGENT_SDK", "OPENCENSUS", "OPENSHIFT", "OPENSTACK_COMPUTE", "OPENSTACK_CONTROLLER", "OPENTELEMETRY", "OPENTRACING", "OPEN_LIBERTY", "ORACLE_DATABASE", "ORACLE_WEBLOGIC", "OWIN", "PERL", "PHP", "PHP_FPM", "PLAY", "PODMAN", "POSTGRE_SQL", "POSTGRE_SQL_DOTNET_DATA_PROVIDER", "POWER_DNS", "PROGRESS", "PYTHON", "QOS_LOGBACK", "QUARKUS", "RABBIT_MQ", "REACTOR_CORE", "REDIS", "RESTEASY", "RESTLET", "RIAK", "RKE2", "RSOCKET", "RUBY", "RUNC", "RXJAVA", "SAG_WEBMETHODS_IS", "SAP", "SAP_HANADB", "SAP_HYBRIS", "SAP_MAXDB", "SAP_SYBASE", "SCALA", "SELINUX", "SHAREPOINT", "SLIM", "SPARK", "SPRING", "SQLITE", "SYMFONY", "THRIFT", "TIBCO", "TIBCO_BUSINESS_WORKS", "TIBCO_EMS", "UNDERTOW_IO", "VARNISH_CACHE", "VERTX", "VIM2", "VIOS", "VIRTUAL_MACHINE_KVM", "VIRTUAL_MACHINE_QEMU", "WILDFLY", "WINDOWS_CONTAINERS", "WINDOWS_SYSTEM", "WINK", "WORDPRESS", "ZERO_MQ", "ZOS_CONNECT" ]
          }
        }, {
          "description" : "Filters the resulting set of hosts by the specified tag. \n\n You can specify several tags in the following format: `tag=tag1&tag=tag2`. The host has to match **all** the specified tags.",
          "in" : "query",
          "name" : "tag",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          }
        }, {
          "description" : "Only return hosts that are part of the specified management zone.",
          "in" : "query",
          "name" : "managementZone",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "description" : "Filters the resulting set of hosts by the specified host group. \n\n Specify the Dynatrace IDs of the host group you're interested in.",
          "in" : "query",
          "name" : "hostGroupId",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of hosts by the specified host group. \n\n Specify the name of the host group you're interested in.",
          "in" : "query",
          "name" : "hostGroupName",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The number of results per result page. Must be between 1 and 500",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 200,
            "maximum" : 500,
            "minimum" : 1
          }
        }, {
          "description" : "The cursor for the next page of results.",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all available hosts that have specified technology running | maturity=EARLY_ADOPTER",
        "tags" : [ "Extensions" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/frequentIssueDetection" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "getFrequentIssueDetectionConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FrequentIssueDetectionConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of frequent issue detection",
        "tags" : [ "Frequent issue detection" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "deprecated" : true,
        "operationId" : "updateFrequentIssueDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FrequentIssueDetectionConfig"
              }
            }
          },
          "description" : "The JSON body of the request, containing parameters of the frequent issue detection configuration"
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of frequent issue detection",
        "tags" : [ "Frequent issue detection" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/frequentIssueDetection/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateFrequentIssueDetectionConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FrequentIssueDetectionConfig"
              }
            }
          },
          "description" : "The JSON body of the request, containing parameters of the frequent issue detection configuration"
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /frequentIssueDetection` request",
        "tags" : [ "Frequent issue detection" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/geographicRegions/ipAddressMappings" : {
      "get" : {
        "operationId" : "getGeolocationRegionsIpAddress",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IpAddressMappings"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of mapping between IP address and geographic regions",
        "tags" : [ "RUM - Geographic regions - IP address mapping" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "The request overwrites the existing configuration. Any rules not presented in the payload will be lost.",
        "operationId" : "putGeolocationRegionsIpAddress",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/IpAddressMappings"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of the IP address mapping."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of mapping between IP address and geographic regions",
        "tags" : [ "RUM - Geographic regions - IP address mapping" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/geographicRegions/ipAddressMappings/validator" : {
      "post" : {
        "operationId" : "validateGeolocationRegionsIpAddress",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/IpAddressMappings"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of the IP address."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /geographicRegions/ipAddressMappings` request",
        "tags" : [ "RUM - Geographic regions - IP address mapping" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/geographicRegions/ipDetectionHeaders" : {
      "get" : {
        "operationId" : "getGeolocationRegionsIpHeaders",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IpDetectionHeaders"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of custom client IP headers",
        "tags" : [ "RUM - Geographic regions - custom client IP headers" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "The request overwrites the existing configuration. Any headers not presented in the payload will be lost.",
        "operationId" : "putGeolocationRegionsIpHeaders",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/IpDetectionHeaders"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of the custom client IP headers."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of custom client IP headers",
        "tags" : [ "RUM - Geographic regions - custom client IP headers" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/geographicRegions/ipDetectionHeaders/validator" : {
      "post" : {
        "operationId" : "validateGeolocationRegionsIpHeaders",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/IpDetectionHeaders"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of the custom client IP headers to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /geographicRegions/ipDetectionHeaders` request",
        "tags" : [ "RUM - Geographic regions - custom client IP headers" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/hostgroups/{id}" : {
      "get" : {
        "operationId" : "getHostGroupConfig",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required host group.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OneAgentHostGroupConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the OneAgent configuration in the specified host group",
        "tags" : [ "OneAgent in a host group" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/hostgroups/{id}/autoupdate" : {
      "get" : {
        "operationId" : "getAutoUpdateConfig_2",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required host group.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostGroupAutoUpdateConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of OneAgent auto-update in the specified host group.",
        "tags" : [ "OneAgent in a host group" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "OneAgents are updated several minutes after the change of configuration. \n\nThe process can take more time depending on number of OneAgents in the update queue.",
        "operationId" : "updateAutoUpdateConfig_1",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required host group.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroupAutoUpdateConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains OneAgent auto-update parameters."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of OneAgent auto-update in the specified host group",
        "tags" : [ "OneAgent in a host group" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/hostgroups/{id}/autoupdate/validator" : {
      "post" : {
        "operationId" : "validateAutoUpdateConfig_2",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required host group.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroupAutoUpdateConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains OneAgent auto-update parameters to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /hostgroups/{id}/autoupdate` request",
        "tags" : [ "OneAgent in a host group" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/hosts/autoupdate" : {
      "get" : {
        "operationId" : "getAutoUpdateConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnvironmentAutoUpdateConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the environment-wide configuration of OneAgents auto-update.",
        "tags" : [ "OneAgent - Environment-wide configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "OneAgents are updated several minutes after the change of configuration. \n\nThe process can take more time depending on number of OneAgents in the update queue.",
        "operationId" : "setAutoUpdateConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnvironmentAutoUpdateConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains OneAgent auto-update parameters."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the environment-wide configuration of OneAgents auto-update",
        "tags" : [ "OneAgent - Environment-wide configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/hosts/autoupdate/validator" : {
      "post" : {
        "operationId" : "validateAutoUpdateConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnvironmentAutoUpdateConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains OneAgent auto-update parameters to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /hosts/autoupdate` request",
        "tags" : [ "OneAgent - Environment-wide configuration" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/hosts/{id}" : {
      "get" : {
        "operationId" : "getHostConfig",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required host.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the OneAgent configuration on the specified host",
        "tags" : [ "OneAgent on a host" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/hosts/{id}/autoupdate" : {
      "get" : {
        "operationId" : "getAutoUpdateConfig_1",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required host.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostAutoUpdateConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of OneAgent auto-update on the specified host.",
        "tags" : [ "OneAgent on a host" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "OneAgent is updated several minutes after the change of configuration. \n\nThe process can take more time depending on number of OneAgents in the update queue.",
        "operationId" : "updateAutoUpdateConfig",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required host.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostAutoUpdateConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains OneAgent auto-update parameters."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of OneAgent auto-update on the specified host",
        "tags" : [ "OneAgent on a host" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/hosts/{id}/autoupdate/validator" : {
      "post" : {
        "operationId" : "validateAutoUpdateConfig_1",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required host.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostAutoUpdateConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains OneAgent auto-update parameters to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /hosts/{id}/autoupdate` request",
        "tags" : [ "OneAgent on a host" ],
        "x-allow-access-with-management-zone-permissions" : true,
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/hosts/{id}/monitoring" : {
      "get" : {
        "deprecated" : true,
        "description" : "Deprecated. Manage host monitoring settings via the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:host.monitoring` instead.\n\nGets the monitoring configuration of OneAgent on the specified host",
        "operationId" : "getMonitoringConfig",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required host.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonitoringConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deprecated. Manage host monitoring settings via the environment API v2 settings endpoint with schemaIds 'builtin:host.monitoring' and 'builtin:host.monitoring.mode' instead.",
        "tags" : [ "OneAgent on a host" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "Deprecated. Manage host monitoring settings via the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:host.monitoring` instead.\n\nUpdates the monitoring configuration of OneAgent on the specified host. The monitoring mode of OneAgent is updated several minutes after the change of configuration.",
        "operationId" : "updateMonitoringConfig",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required host.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonitoringConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains OneAgent monitoring parameters."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deprecated. Manage host monitoring settings via the environment API v2 settings endpoint with schemaIds 'builtin:host.monitoring' and 'builtin:host.monitoring.mode' instead.",
        "tags" : [ "OneAgent on a host" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/hosts/{id}/monitoring/validator" : {
      "post" : {
        "deprecated" : true,
        "description" : "Deprecated. Manage host monitoring settings via the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:host.monitoring` instead.\n\nValidates the payload for the `PUT /hosts/{id}/monitoring` request",
        "operationId" : "validateMonitoringConfig",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required host.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonitoringConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains OneAgent monitoring parameters."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deprecated. Manage host monitoring settings via the environment API v2 settings endpoint with schemaIds 'builtin:host.monitoring' and 'builtin:host.monitoring.mode' instead.",
        "tags" : [ "OneAgent on a host" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/hosts/{id}/technologies" : {
      "get" : {
        "operationId" : "getTechHostConfigs",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required host.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TechMonitoringList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of monitored technologies on the specified host",
        "tags" : [ "OneAgent on a host" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/kubernetes/credentials" : {
      "get" : {
        "operationId" : "listKubernetesCredentialsConfigs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KubernetesConfigStubListDto"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all available Kubernetes credentials configurations | maturity=EARLY_ADOPTER",
        "tags" : [ "Kubernetes credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID as it will be automatically assigned by the Dynatrace server.",
        "operationId" : "createKubernetesCredentialsConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/KubernetesCredentials"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new Kubernetes credentials configuration."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new Kubernetes credentials configuration has been created. The response body contains the ID of the configuration."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new Kubernetes credentials configuration | maturity=EARLY_ADOPTER",
        "tags" : [ "Kubernetes credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/kubernetes/credentials/validator" : {
      "post" : {
        "operationId" : "validateCreateKubernetesCredentialsConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/KubernetesCredentials"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the Kubernetes credentials configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /kubernetes/credentials` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Kubernetes credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/kubernetes/credentials/{id}" : {
      "delete" : {
        "operationId" : "deleteKubernetesCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the Kubernetes credentials configuration be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified Kubernetes credentials configuration | maturity=EARLY_ADOPTER",
        "tags" : [ "Kubernetes credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getKubernetesCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the required Kubernetes credentials configuration.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KubernetesCredentials"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of the specified Kubernetes credentials | maturity=EARLY_ADOPTER",
        "tags" : [ "Kubernetes credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "You can't change the URL of the Kubernetes cluster. \n\nIf a configuration with the specified ID doesn't exist, a new configuration is created.\n\nIDs of entities are computed server side upon creation. If you want to create a new entity, use the POST method without an ID. To update an existing entity, use the PUT method with an existing, valid ID. To re-create an entity under a specific ID, a valid ID must be provided with the PUT method.",
        "operationId" : "updateKubernetesCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the Kubernetes credentials configuration to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/KubernetesCredentials"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the Kubernetes credentials configuration."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new Kubernetes credentials configuration has been created. The response body contains the ID of the configuration."
          },
          "204" : {
            "description" : "Success. The Kubernetes credentials configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing Kubernetes credentials configuration | maturity=EARLY_ADOPTER",
        "tags" : [ "Kubernetes credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/kubernetes/credentials/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateKubernetesCredentialsConfig",
        "parameters" : [ {
          "description" : "The ID of the Kubernetes credentials configuration to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/KubernetesCredentials"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the Kubernetes credentials configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /kubernetes/credentials/{id}` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Kubernetes credentials configuration" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/maintenanceWindows" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "listMaintenanceWindows",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all available maintenance windows",
        "tags" : [ "Maintenance windows" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createMaintenanceWindow",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MaintenanceWindow"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new maintenance window."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new maintenance window has been created. The response body contains its ID."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new maintenance window",
        "tags" : [ "Maintenance windows" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/maintenanceWindows/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateCreateMaintenanceWindow",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MaintenanceWindow"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the maintenance window be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /maintenancewindow` request",
        "tags" : [ "Maintenance windows" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/maintenanceWindows/{id}" : {
      "delete" : {
        "deprecated" : true,
        "operationId" : "deleteMaintenanceWindow",
        "parameters" : [ {
          "description" : "The ID of the maintenance window to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The maintenance window has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified maintenance window",
        "tags" : [ "Maintenance windows" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "deprecated" : true,
        "operationId" : "getMaintenanceWindow",
        "parameters" : [ {
          "description" : "The ID of the required maintenance window.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MaintenanceWindow"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the properties of the specified maintenance window",
        "tags" : [ "Maintenance windows" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "If a maintenance window with the specified ID doesn't exist, a new one is created.",
        "operationId" : "updateMaintenanceWindow",
        "parameters" : [ {
          "description" : "The ID of the maintenance window to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MaintenanceWindow"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the maintenance window."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new maintenance window has been created. The response body contains its ID."
          },
          "204" : {
            "description" : "Success. The maintenance window has been updated. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing maintenance window",
        "tags" : [ "Maintenance windows" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/maintenanceWindows/{id}/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateUpdateMaintenanceWindow",
        "parameters" : [ {
          "description" : "The ID of the maintenance window to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MaintenanceWindow"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the maintenance window to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /maintenancewindow/{id}` request",
        "tags" : [ "Maintenance windows" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/managementZones" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "listManagementZones",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all configured management zones",
        "tags" : [ "Management zones" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createManagementZone",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementZone"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new management zone."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The management zone has been created. The response contains the ID of the new zone."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new management zone",
        "tags" : [ "Management zones" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/managementZones/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateCreateManagementZone",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementZone"
              }
            }
          },
          "description" : "The JSON body of the request, containing the management zone parameters to validate."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates a new management zone for the `POST /managementZones` request",
        "tags" : [ "Management zones" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/managementZones/{id}" : {
      "delete" : {
        "deprecated" : true,
        "operationId" : "deleteManagementZone",
        "parameters" : [ {
          "description" : "The ID of the management zone to delete.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified management zone",
        "tags" : [ "Management zones" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "deprecated" : true,
        "operationId" : "getManagementZone",
        "parameters" : [ {
          "description" : "The ID of the required management zone.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Flag to include process group references to the response. \n\n Process group references aren't compatible across environments. When this flag is set to false, conditions with process group references will be removed. If that leads to a rule having no conditions, the entire rule will be removed.",
          "in" : "query",
          "name" : "includeProcessGroupReferences",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagementZone"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists the parameters of the specified management zone",
        "tags" : [ "Management zones" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "If a management zone with the specified ID doesn't exist, a new one is created.",
        "operationId" : "updateManagementZone",
        "parameters" : [ {
          "description" : "The ID of the management zone to be updated.\n\n If you set the ID in the body as well, it must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementZone"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the management zone."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The management zone has been created. The response contains the ID of the new zone."
          },
          "204" : {
            "description" : "Success. The management zone has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified management zone",
        "tags" : [ "Management zones" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/managementZones/{id}/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateUpdateManagementZone",
        "parameters" : [ {
          "description" : "The ID of the management zone to validate.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementZone"
              }
            }
          },
          "description" : "The JSON body of the request, containing the management zone parameters to validate."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validate updates of existing management zone for the `PUT /managementZones/{id}` request",
        "tags" : [ "Management zones" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/notifications" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "listNotificationConfigs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationConfigStubListDto"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all notification configurations available in your environment",
        "tags" : [ "Notifications" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "deprecated" : true,
        "operationId" : "createNotificationConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new notification configuration."
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new notification configuration has been created. The response contains the ID of the new notification configuration."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new notification configuration",
        "tags" : [ "Notifications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/notifications/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateCreateNotificationConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the notification configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /notifications` request",
        "tags" : [ "Notifications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/notifications/{id}" : {
      "delete" : {
        "deprecated" : true,
        "operationId" : "deleteNotificationConfig",
        "parameters" : [ {
          "description" : "The ID of the notification configuration to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The notification configuration has been deleted. The response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified notification configuration",
        "tags" : [ "Notifications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "deprecated" : true,
        "operationId" : "getNotificationConfig",
        "parameters" : [ {
          "description" : "The ID of the required notification configuration.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the properties of the specified notification configuration",
        "tags" : [ "Notifications" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "If a notification configuration with the specified ID doesn't exist, a new configuration is created.",
        "operationId" : "updateNotificationConfig",
        "parameters" : [ {
          "description" : "The ID of the notification configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the notification configuration."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationConfigStub"
                }
              }
            },
            "description" : "Success. The new notification configuration has been created. The response contains the ID of the new notification configuration."
          },
          "204" : {
            "description" : "Success. The notification configuration has been updated. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing notification configuration or creates a new one",
        "tags" : [ "Notifications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/notifications/{id}/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateUpdateNotificationConfig",
        "parameters" : [ {
          "description" : "The ID of the notification configuration to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the notification configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload the `PUT /notifications/{id}` request",
        "tags" : [ "Notifications" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/plugins" : {
      "get" : {
        "operationId" : "getPlugins",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all uploaded plugins",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "operationId" : "uploadPlugin",
        "parameters" : [ {
          "description" : "Use plugin-defined thresholds for alerts (`true`) or user-defined thresholds (`false`). \n\n Plugin-defined thresholds are stored in the `plugin.json` file. \n\nIf not set, user-defined thresholds are used.",
          "in" : "query",
          "name" : "overrideAlerts",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary",
                    "description" : "Plugin ZIP file to be uploaded. \n\n File name must match the **name** field in the `plugin.json` file. \n\nFor example, for the plugin whose **name** is `custom.remote.python.demo`, the name of the plugin file must be `custom.remote.python.demo.zip`."
                  }
                },
                "required" : [ "file" ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. Plugin has been uploaded. Response contains the ID of the plugin."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Uploads a ZIP plugin file",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/plugins/activeGatePluginModules" : {
      "get" : {
        "operationId" : "getRemotePluginModules",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success. The response contains IDs of ActiveGate plugin modules. Use them to configure plugin endpoints."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "List available ActiveGate plugin modules",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/plugins/validator" : {
      "post" : {
        "operationId" : "validatePlugin",
        "parameters" : [ {
          "description" : "Validate only the `plugin.json` file (`true`) or the entire plugin structure (`false`). \n\n If not set, the entire plugin is validated. ",
          "in" : "query",
          "name" : "jsonOnly",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary",
                    "description" : "The ZIP plugin file to be uploaded. \n\n The file name must match the ID of the plugin. Example: `custom.remote.python.demo.zip`"
                  }
                },
                "required" : [ "file" ]
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted plugin is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates a ZIP plugin file for `POST/plugins` request",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/plugins/{id}" : {
      "get" : {
        "operationId" : "getPlugin",
        "parameters" : [ {
          "description" : "The ID of the required plugin.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Plugin"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists the properties of the specified plugin",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/plugins/{id}/binary" : {
      "delete" : {
        "description" : "Deletion of the plugin file uninstalls the plugin, making it unavailable for use.",
        "operationId" : "deletePlugin",
        "parameters" : [ {
          "description" : "The ID of the plugin to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the ZIP file of the specified plugin",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getPluginBinary",
        "parameters" : [ {
          "description" : "The ID of the plugin you want to download.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Downloads the ZIP file of the specified plugin",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/plugins/{id}/endpoints" : {
      "get" : {
        "operationId" : "getRemotePluginEndpoints",
        "parameters" : [ {
          "description" : "The ID of the required plugin.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists endpoints of the specified ActiveGate plugin",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID of the endpoint, as IDs are automatically assigned.",
        "operationId" : "createRemotePluginEndpoint",
        "parameters" : [ {
          "description" : "The ID of the plugin where you want to create an endpoint.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemotePluginEndpoint"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new plugin endpoint."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The plugin endpoint has been created. Response contains the ID of the new endpoint."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new endpoint for the specified ActiveGate plugin",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/plugins/{id}/endpoints/validator" : {
      "post" : {
        "operationId" : "validateRemotePluginEndpoint",
        "parameters" : [ {
          "description" : "The ID of the required plugin.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemotePluginEndpoint"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new plugin endpoint."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /plugins/{id}/endpoints` request",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/plugins/{id}/endpoints/{endpointId}" : {
      "delete" : {
        "operationId" : "deleteRemotePluginEndpoint",
        "parameters" : [ {
          "description" : "The ID of the plugin where you want to delete an endpoint.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the endpoint to be deleted.",
          "in" : "path",
          "name" : "endpointId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes an existing endpoint of the ActiveGate plugin",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getRemotePluginEndpoint",
        "parameters" : [ {
          "description" : "The ID of the required plugin.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the required endpoint.",
          "in" : "path",
          "name" : "endpointId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemotePluginEndpoint"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets parameters of the specified endpoint of the ActiveGate plugin",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateRemotePluginEndpoint",
        "parameters" : [ {
          "description" : "The ID of the plugin where you want to update an endpoint. \n\nIf you set the plugin ID in the body as well, it must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the endpoint to be updated. \n\nIf you set the endpoint ID in the body as well, it must match this ID.",
          "in" : "path",
          "name" : "endpointId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemotePluginEndpoint"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the plugin endpoint."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The endpoint has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing endpoint of the ActiveGate plugin",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/plugins/{id}/states" : {
      "get" : {
        "operationId" : "getPluginStates",
        "parameters" : [ {
          "description" : "The ID of the required plugin.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PluginStateList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists the states of the specified plugin",
        "tags" : [ "Plugins" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    },
    "/remoteEnvironments" : {
      "get" : {
        "deprecated" : true,
        "operationId" : "listRemoteEnvironmentConfigs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteEnvironmentConfigListDto"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all remote environment configurations | maturity=EARLY_ADOPTER",
        "tags" : [ "Remote environments" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "deprecated" : true,
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server. \n\nBe sure to prepare a token with the **Fetch data from a remote environment** (`RestRequestForwarding`) scope. You can create such a token via [Tokens API](https://dt-url.net/ff23kmx).",
        "operationId" : "createRemoteEnvironmentConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteEnvironmentConfigDto"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new remote environment configuration."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteEnvironmentConfigStub"
                }
              }
            },
            "description" : "Success. A new remote environment configuration has been created. The response contains the ID of the new configuration."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new remote environment configuration | maturity=EARLY_ADOPTER",
        "tags" : [ "Remote environments" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/remoteEnvironments/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateCreateRemoteEnvironmentConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteEnvironmentConfigDto"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the remote environment configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /remoteEnvironments` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Remote environments" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/remoteEnvironments/{id}" : {
      "delete" : {
        "deprecated" : true,
        "operationId" : "deleteRemoteEnvironmentConfig",
        "parameters" : [ {
          "description" : "The ID of the configuration to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been deleted. The response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified remote environment configuration | maturity=EARLY_ADOPTER",
        "tags" : [ "Remote environments" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "deprecated" : true,
        "operationId" : "getRemoteEnvironmentConfig",
        "parameters" : [ {
          "description" : "The ID of the required configuration.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteEnvironmentConfigDto"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the properties of the specified remote environment configuration | maturity=EARLY_ADOPTER",
        "tags" : [ "Remote environments" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "deprecated" : true,
        "description" : "If a remote environment configuration with the specified ID doesn't exist, a new configuration is created.",
        "operationId" : "updateRemoteEnvironmentConfig",
        "parameters" : [ {
          "description" : "The ID of the configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteEnvironmentConfigDto"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the remote environment configuration."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteEnvironmentConfigStub"
                }
              }
            },
            "description" : "Success. A new remote environment configuration has been created. The response contains the ID of the new configuration."
          },
          "204" : {
            "description" : "Success. The configuration has been updated. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing remote environment configuration or creates a new one | maturity=EARLY_ADOPTER",
        "tags" : [ "Remote environments" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/remoteEnvironments/{id}/validator" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "validateUpdateRemoteEnvironmentConfig",
        "parameters" : [ {
          "description" : "The ID of the remote environment configuration to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteEnvironmentConfigDto"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the remote environment configuration to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /remoteEnvironments/{id}` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Remote environments" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/reports" : {
      "get" : {
        "operationId" : "listReports",
        "parameters" : [ {
          "description" : "Type of a report.",
          "in" : "query",
          "name" : "type",
          "schema" : {
            "type" : "string",
            "enum" : [ "DASHBOARD" ]
          }
        }, {
          "description" : "Referencing source entity of a report (e.g. dashboard).",
          "in" : "query",
          "name" : "sourceId",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportStubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all reports available in your environment | maturity=EARLY_ADOPTER",
        "tags" : [ "Reports" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createReport",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DashboardReport"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new report."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new report has been created. The response contains the ID of the new report."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a report | maturity=EARLY_ADOPTER",
        "tags" : [ "Reports" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/reports/validator" : {
      "post" : {
        "description" : "The body must not provide an ID.",
        "operationId" : "validateCreateReport",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DashboardReport"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the report to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted report is valid. The response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /reports` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Reports" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/reports/{id}" : {
      "delete" : {
        "operationId" : "deleteReport",
        "parameters" : [ {
          "description" : "The ID of the report to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The report has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified report | maturity=EARLY_ADOPTER",
        "tags" : [ "Reports" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getReport",
        "parameters" : [ {
          "description" : "The ID of the required report.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DashboardReport"
                }
              }
            },
            "description" : "Success. The response body contains parameters of the report."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the properties of the specified report | maturity=EARLY_ADOPTER",
        "tags" : [ "Reports" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If a report with the specified ID doesn't exist, a new report is created.",
        "operationId" : "createOrUpdateReport",
        "parameters" : [ {
          "description" : "The ID of the report to be updated. \n\n The ID in the request body must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DashboardReport"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the report."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new report has been created. The response contains the ID of the new report."
          },
          "204" : {
            "description" : "Success. The report has been updated. Response doesn't have a body"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing report | maturity=EARLY_ADOPTER",
        "tags" : [ "Reports" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/reports/{id}/subscribe" : {
      "post" : {
        "operationId" : "subscribeReport",
        "parameters" : [ {
          "description" : "The ID of the report to subscribe to.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportSubscriptions"
              }
            }
          },
          "description" : "The JSON body of the request. Contains a list of new subscribers."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new subscriptions have been created. The response body contains the report ID."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Subscribes to the specified report | maturity=EARLY_ADOPTER",
        "tags" : [ "Reports" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/reports/{id}/unsubscribe" : {
      "post" : {
        "operationId" : "unsubscribeReport",
        "parameters" : [ {
          "description" : "The ID of the report to unsubscribe from.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportSubscriptions"
              }
            }
          },
          "description" : "The JSON body of the request. Contains a list of recipients to be unsubscribed."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The subscriptions have been revoked. The response body contains the report ID."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Unsubscribes from the specified report | maturity=EARLY_ADOPTER",
        "tags" : [ "Reports" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/reports/{id}/validator" : {
      "post" : {
        "operationId" : "validateCreateOrUpdateReport",
        "parameters" : [ {
          "description" : "The ID of the report to be validated. \n\n The ID in the request body must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DashboardReport"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the report to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted report is valid. Response doesn't have a body"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /reports/{id}` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Reports" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/customServices/{technology}" : {
      "get" : {
        "operationId" : "listCustomServices",
        "parameters" : [ {
          "description" : "Technology of the required custom services.",
          "in" : "path",
          "name" : "technology",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all custom services of the specified technology",
        "tags" : [ "Service - Custom services" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "In the body of the request, neither custom service nor its rules can have the ID. All IDs will be generated automatically by Dynatrace.",
        "operationId" : "createCustomService",
        "parameters" : [ {
          "description" : "Technology of the new custom service.",
          "in" : "path",
          "name" : "technology",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        }, {
          "description" : "Order of the new custom service. Set to `PREPEND` to prepend it to the list, `APPEND` to append it. Defaults to `APPEND`.",
          "in" : "query",
          "name" : "position",
          "schema" : {
            "type" : "string",
            "default" : "APPEND",
            "enum" : [ "APPEND", "PREPEND" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomService"
              }
            }
          },
          "description" : "JSON body of the request containing definition of the new custom service. \n\nYou must not specify the IDs for the custom service or any of its rules. The *order* field is not allowed either."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The custom service has been created. Response contains the new service's ID and name."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a custom service",
        "tags" : [ "Service - Custom services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/customServices/{technology}/order" : {
      "put" : {
        "description" : "This request reorders the custom services of the specified technology according to the given list of IDs. Custom services not present in the body of the request will retain their relative ordering but will be ordered *after* all those present in the request.",
        "operationId" : "orderCustomServices",
        "parameters" : [ {
          "description" : "Technology of custom services to update.",
          "in" : "path",
          "name" : "technology",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          },
          "description" : "JSON body of the request containing the IDs of the custom services in the desired order. Any further properties (*name*, *description*) will be ignored."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Custom services have been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Reorders the custom services of the specified technology",
        "tags" : [ "Service - Custom services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/customServices/{technology}/validator" : {
      "post" : {
        "operationId" : "validateCreateCustomService",
        "parameters" : [ {
          "description" : "Technology of the custom service to validate.",
          "in" : "path",
          "name" : "technology",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomService"
              }
            }
          },
          "description" : "JSON body of the request containing definition of the custom service to validate."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validate the new custom service for the `POST /customServices/{technology}` request",
        "tags" : [ "Service - Custom services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/customServices/{technology}/{id}" : {
      "delete" : {
        "operationId" : "deleteCustomService",
        "parameters" : [ {
          "description" : "Technology of the custom service to delete.",
          "in" : "path",
          "name" : "technology",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        }, {
          "description" : "The ID of the custom service to delete.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified custom service",
        "tags" : [ "Service - Custom services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getCustomService",
        "parameters" : [ {
          "description" : "Technology of the custom service you're inquiring.",
          "in" : "path",
          "name" : "technology",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        }, {
          "description" : "The ID of the custom service you're inquiring.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "description" : "Flag to include process group references to the response. \n\n Process group references aren't compatible across environments. \n\n`false` is used if the value is not set.",
          "in" : "query",
          "name" : "includeProcessGroupReferences",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomService"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the definition of the specified custom service",
        "tags" : [ "Service - Custom services" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "Will use the config's ´order´ attribute if supplied, otherwise keeps the order of the existing config or appends if no existing config with the supplied ID was found.",
        "operationId" : "updateCustomService",
        "parameters" : [ {
          "description" : "Technology of the custom service to update.",
          "in" : "path",
          "name" : "technology",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        }, {
          "description" : "The ID of the custom service to update.\n\n The ID of the custom service in the body of the request must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomService"
              }
            }
          },
          "description" : "JSON body of the request containing updated definition of the custom service. If *order* is present, it will be used."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. Custom service has been created. Response contains the new service's ID and name."
          },
          "204" : {
            "description" : "Success. Custom service has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified custom service or create a new one.",
        "tags" : [ "Service - Custom services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/customServices/{technology}/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateCustomService",
        "parameters" : [ {
          "description" : "Technology of the custom service to validate.",
          "in" : "path",
          "name" : "technology",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        }, {
          "description" : "The ID of the custom service to validate.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomService"
              }
            }
          },
          "description" : "JSON body of the request containing definition of the custom service to validate."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validate the new custom service for the `PUT /customServices/{technology}/{id}` request",
        "tags" : [ "Service - Custom services" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST" : {
      "get" : {
        "operationId" : "listRequestDetectionRules",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success. The response contains the ordered list of rules."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all full web request service detection rules",
        "tags" : [ "Service - Detection full web request" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createRequestDetectionRule",
        "parameters" : [ {
          "description" : "The position of the new rule: \n\n * `APPEND`: at the bottom of the rule list. \n * `PREPEND`: at the top of the rule list. \n\n If not set, the `APPEND` is used.",
          "in" : "query",
          "name" : "position",
          "schema" : {
            "type" : "string",
            "default" : "APPEND",
            "enum" : [ "APPEND", "PREPEND" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebRequestRule"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new service detection rule. \n\n You must not specify the ID of the rule! \n\nThe **order** field is ignored in this request. To enforce a particular order, use the `PUT /service/detectionRules/FULL_WEB_REQUEST/reorder` request."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new service detection rule has been created. The response body contains the ID of the rule."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new service detection rule",
        "tags" : [ "Service - Detection full web request" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST/order" : {
      "put" : {
        "description" : "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request.",
        "operationId" : "orderRequestDetectionRules",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          },
          "description" : "The JSON body of the request containing the service detection rules in the required order."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Service detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Reorders the service detection rules of the specified type",
        "tags" : [ "Service - Detection full web request" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST/validator" : {
      "post" : {
        "operationId" : "validateCreateRequestDetectionRule",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebRequestRule"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the service detection rule to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /service/detectionRules/FULL_WEB_REQUEST` request",
        "tags" : [ "Service - Detection full web request" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST/{id}" : {
      "delete" : {
        "operationId" : "deleteRequestDetectionRule",
        "parameters" : [ {
          "description" : "The ID of the service detection rule to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified service detection rule",
        "tags" : [ "Service - Detection full web request" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getRequestDetectionRule",
        "parameters" : [ {
          "description" : "The ID of the required service detection rule.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FullWebRequestRule"
                }
              }
            },
            "description" : "Success. The response contains properties of the specified rule."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the properties of the specified service detection rule",
        "tags" : [ "Service - Detection full web request" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If a rule with the specified ID doesn't exist, a new rule is created and appended to the end of the rule list.",
        "operationId" : "updateRequestDetectionRule",
        "parameters" : [ {
          "description" : "The ID of the rule to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebRequestRule"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the service detection rule.\n\nThe **order** field is ignored in this request. To enforce a particular order, use the `PUT /service/detectionRules/FULL_WEB_REQUEST/reorder` request."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new service detection rule has been created. The response body contains the ID of the rule."
          },
          "204" : {
            "description" : "Success. The service detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing service detection rule",
        "tags" : [ "Service - Detection full web request" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateRequestDetectionRule",
        "parameters" : [ {
          "description" : "The ID of the service detection rule to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebRequestRule"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the service detection rule to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /service/detectionRules/FULL_WEB_REQUEST/{id}` request",
        "tags" : [ "Service - Detection full web request" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE" : {
      "get" : {
        "operationId" : "listServiceDetectionRules",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success. The response contains the ordered list of rules."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all full web service detection rules",
        "tags" : [ "Service - Detection full web service" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID as it will be automatically assigned.",
        "operationId" : "createServiceDetectionRule",
        "parameters" : [ {
          "description" : "The position of the new rule: \n\n * `APPEND`: at the end of the rule list. \n * `PREPEND`: on top of the rule list. \n\n",
          "in" : "query",
          "name" : "position",
          "schema" : {
            "type" : "string",
            "default" : "APPEND",
            "enum" : [ "APPEND", "PREPEND" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebServiceRule"
              }
            }
          },
          "description" : "The JSON body of the request containing parameters of the new service detection rule. \n\n You must not specify the ID of the rule! \n\nThe **order** field is ignored in this request. To enforce a particular order use the `PUT /service/detectionRules/FULL_WEB_SERVICE/reorder` request."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new service detection rule",
        "tags" : [ "Service - Detection full web service" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE/order" : {
      "put" : {
        "description" : "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request.",
        "operationId" : "orderServiceDetectionRules",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          },
          "description" : "The JSON body of the request containing the service detection rules in the required order."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Service detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Reorders the service detection rules of the specified type",
        "tags" : [ "Service - Detection full web service" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE/validator" : {
      "post" : {
        "operationId" : "validateCreateServiceDetectionRule",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebServiceRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /service/detectionRules/FULL_WEB_SERVICE` request",
        "tags" : [ "Service - Detection full web service" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE/{id}" : {
      "delete" : {
        "operationId" : "deleteServiceDetectionRule",
        "parameters" : [ {
          "description" : "The ID of the service detection rule to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified service detection rule",
        "tags" : [ "Service - Detection full web service" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getServiceDetectionRule",
        "parameters" : [ {
          "description" : "The ID of the required service detection rule.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FullWebServiceRule"
                }
              }
            },
            "description" : "Success. The response contains properties of the specified rule."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Shows the properties of the specified service detection rule",
        "tags" : [ "Service - Detection full web service" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created and appended to the end of the rule list.",
        "operationId" : "updateServiceDetectionRule",
        "parameters" : [ {
          "description" : "The ID of the rule to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebServiceRule"
              }
            }
          },
          "description" : "The JSON body of the request containing updated parameters of the service detection rule.\n\nThe **order** field is ignored in this request. To enforce a particular order use the `PUT /service/detectionRules/FULL_WEB_SERVICE/reorder` request."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID."
          },
          "204" : {
            "description" : "Success. The service detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing service detection rule",
        "tags" : [ "Service - Detection full web service" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateServiceDetectionRule",
        "parameters" : [ {
          "description" : "The ID of the service detection rule to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebServiceRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validate the payload for the `PUT /service/detectionRules/FULL_WEB_SERVICE/{id}` request",
        "tags" : [ "Service - Detection full web service" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST" : {
      "get" : {
        "operationId" : "listOpaqueAndExternalWebRequestDetectionRules",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success. The response contains the ordered list of rules."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all opaque and external web request service detection rules",
        "tags" : [ "Service - Detection opaque and external web request" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID as it will be automatically assigned.",
        "operationId" : "createOpaqueAndExternalWebRequestDetectionRule",
        "parameters" : [ {
          "description" : "The position of the new rule: \n\n * `APPEND`: at the end of the rule list. \n * `PREPEND`: on top of the rule list. \n\n",
          "in" : "query",
          "name" : "position",
          "schema" : {
            "type" : "string",
            "default" : "APPEND",
            "enum" : [ "APPEND", "PREPEND" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebRequestRule"
              }
            }
          },
          "description" : "The JSON body of the request containing parameters of the new service detection rule. \n\n You must not specify the ID of the rule! \n\nThe **order** field is ignored in this request. To enforce a particular order, use the `PUT /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/reorder` request."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new service detection rule",
        "tags" : [ "Service - Detection opaque and external web request" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/order" : {
      "put" : {
        "description" : "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request.",
        "operationId" : "orderOpaqueAndExternalWebRequestDetectionRules",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          },
          "description" : "The JSON body of the request containing the service detection rules in the required order."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Service detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Reorders the service detection rules of the specified type",
        "tags" : [ "Service - Detection opaque and external web request" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/validator" : {
      "post" : {
        "operationId" : "validateCreateOpaqueAndExternalWebRequestDetectionRule",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebRequestRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST` request",
        "tags" : [ "Service - Detection opaque and external web request" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}" : {
      "delete" : {
        "operationId" : "deleteOpaqueAndExternalWebRequestDetectionRule",
        "parameters" : [ {
          "description" : "The ID of the service detection rule to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified service detection rule",
        "tags" : [ "Service - Detection opaque and external web request" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getOpaqueAndExternalWebRequestDetectionRule",
        "parameters" : [ {
          "description" : "The ID of the required service detection rule.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OpaqueAndExternalWebRequestRule"
                }
              }
            },
            "description" : "Success. The response contains properties of the specified rule."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Shows the properties of the specified service detection rule",
        "tags" : [ "Service - Detection opaque and external web request" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created and appended to the end of the rule list.",
        "operationId" : "updateOpaqueAndExternalWebRequestDetectionRule",
        "parameters" : [ {
          "description" : "The ID of the rule to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebRequestRule"
              }
            }
          },
          "description" : "The JSON body of the request containing updated parameters of the service detection rule.\n\nThe **order** field is ignored in this request. To enforce a particular order, use the `PUT /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/reorder` request."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID."
          },
          "204" : {
            "description" : "Success. The service detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing service detection rule",
        "tags" : [ "Service - Detection opaque and external web request" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateOpaqueAndExternalWebRequestDetectionRule",
        "parameters" : [ {
          "description" : "The ID of the service detection rule to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebRequestRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validate the payload for the `PUT /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}` request",
        "tags" : [ "Service - Detection opaque and external web request" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE" : {
      "get" : {
        "operationId" : "listOpaqueAndExternalWebServiceRules",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success. The response contains the ordered list of rules."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all opaque and external web service detection rules",
        "tags" : [ "Service - Detection opaque and external web service" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID as it will be automatically assigned.",
        "operationId" : "createOpaqueAndExternalWebServiceRule",
        "parameters" : [ {
          "description" : "The position of the new rule: \n\n * `APPEND`: at the end of the rule list. \n * `PREPEND`: on top of the rule list. \n\n",
          "in" : "query",
          "name" : "position",
          "schema" : {
            "type" : "string",
            "default" : "APPEND",
            "enum" : [ "APPEND", "PREPEND" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebServiceRule"
              }
            }
          },
          "description" : "The JSON body of the request containing parameters of the new service detection rule. \n\n You must not specify the ID of the rule! \n\nThe **order** field is ignored in this request. To enforce a particular order use the `PUT /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/reorder` request."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new service detection rule",
        "tags" : [ "Service - Detection opaque and external web service" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/order" : {
      "put" : {
        "description" : "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request.",
        "operationId" : "orderOpaqueAndExternalWebServiceRules",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          },
          "description" : "The JSON body of the request containing the service detection rules in the required order."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Service detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Reorders the service detection rules of the specified type",
        "tags" : [ "Service - Detection opaque and external web service" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/validator" : {
      "post" : {
        "operationId" : "validateCreateOpaqueAndExternalWebServiceRule",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebServiceRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE` request",
        "tags" : [ "Service - Detection opaque and external web service" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/{id}" : {
      "delete" : {
        "operationId" : "deleteOpaqueAndExternalWebServiceRule",
        "parameters" : [ {
          "description" : "The ID of the service detection rule to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified service detection rule",
        "tags" : [ "Service - Detection opaque and external web service" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getOpaqueAndExternalWebServiceRule",
        "parameters" : [ {
          "description" : "The ID of the required service detection rule.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OpaqueAndExternalWebServiceRule"
                }
              }
            },
            "description" : "Success. The response contains properties of the specified rule."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Shows the properties of the specified service detection rule",
        "tags" : [ "Service - Detection opaque and external web service" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created and appended to the end of the rule list.",
        "operationId" : "updateOpaqueAndExternalWebServiceRule",
        "parameters" : [ {
          "description" : "The ID of the rule to be updated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebServiceRule"
              }
            }
          },
          "description" : "The JSON body of the request containing updated parameters of the service detection rule.\n\nThe **order** field is ignored in this request. To enforce a particular order use the `PUT /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/reorder` request."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID."
          },
          "204" : {
            "description" : "Success. The service detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing service detection rule",
        "tags" : [ "Service - Detection opaque and external web service" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateOpaqueAndExternalWebServiceRule",
        "parameters" : [ {
          "description" : "The ID of the service detection rule to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebServiceRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validate the payload for the `PUT /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/{id}` request",
        "tags" : [ "Service - Detection opaque and external web service" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/failureDetection/parameterSelection/parameterSets" : {
      "get" : {
        "operationId" : "getAllFdps",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all available failure detection parameter sets | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection parameter sets" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "operationId" : "createFdp",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionParameterSet"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the new failure detection parameter set. \n\nDynatrace will generate a random UUID for you, if you don't specify an ID."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new failure detection parameter set has been created. The response contains the ID of the new set."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new failure detection parameter set | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection parameter sets" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/failureDetection/parameterSelection/parameterSets/validator" : {
      "post" : {
        "operationId" : "validateCreateFdp",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionParameterSet"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the failure detection parameter set to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /service/failureDetection/parameterSelection/parameterSets` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection parameter sets" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/failureDetection/parameterSelection/parameterSets/{id}" : {
      "delete" : {
        "description" : "You cannot delete the set that is used by any failure detection rule. \n\nIf you need to delete such a set, switch the rule to a new set or delete the rule first.",
        "operationId" : "deleteFdp",
        "parameters" : [ {
          "description" : "The ID of the required failure detection parameter set. Needs to be a valid RFC 4122 UUID.",
          "example" : "123e4567-e89b-12d3-a456-426614174000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The failure detection parameter set has been deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified failure detection parameter set | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection parameter sets" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getFdp",
        "parameters" : [ {
          "description" : "The ID of the required failure detection parameter set. Needs to be a valid RFC 4122 UUID.",
          "example" : "123e4567-e89b-12d3-a456-426614174000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FailureDetectionParameterSet"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the specified failure detection parameter set | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection parameter sets" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If a set with the specified ID doesn't exist, a new one is created.",
        "operationId" : "createOrUpdateFdp",
        "parameters" : [ {
          "description" : "The ID of the required failure detection parameter set. Needs to be a valid RFC 4122 UUID.",
          "example" : "123e4567-e89b-12d3-a456-426614174000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionParameterSet"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the updated failure detection parameter set. \n\nYou can't update the ID with this request. Use the change ID request instead."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new failure detection parameter set has been created. The response contains the ID of the new set."
          },
          "204" : {
            "description" : "Success. The failure detection parameter set has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified failure detection parameter set | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection parameter sets" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/failureDetection/parameterSelection/parameterSets/{id}/changeId" : {
      "put" : {
        "description" : "Rules that use the set will be automatically adapted to the new ID.",
        "operationId" : "changeFdpId",
        "parameters" : [ {
          "description" : "The ID of the required failure detection parameter set. Needs to be a valid RFC 4122 UUID.",
          "example" : "123e4567-e89b-12d3-a456-426614174000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityShortRepresentation"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the new ID of the set. All other fields are ignored.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Changes the ID of the specified failure detection parameter set | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection parameter sets" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/failureDetection/parameterSelection/parameterSets/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateFdp",
        "parameters" : [ {
          "description" : "The ID of the required failure detection parameter set. Needs to be a valid RFC 4122 UUID.",
          "example" : "123e4567-e89b-12d3-a456-426614174000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionParameterSet"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the failure detection parameter set to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /service/failureDetection/parameterSelection/parameterSets/{id}` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection parameter sets" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/failureDetection/parameterSelection/rules" : {
      "get" : {
        "operationId" : "getAllRules",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all available failure detection rules | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection rules" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The new rule is appended to the end of the rule list. \n\nRules are evaluated from top to bottom, the first matching rule applies.To enforce a particular order use the reorder request. \n\nThe failure detection parameter set used by the rule must exist at the time of rule creation.",
        "operationId" : "createRule",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionRule"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of the new failure detection rule. \n\nDynatrace will generate a random UUID for you, if you don't specify an ID."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new failure detection rule has been created. The response contains the ID of the new rule."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new failure detection rule | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection rules" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/failureDetection/parameterSelection/rules/reorderRules" : {
      "put" : {
        "description" : "Rules are evaluated from top to bottom, the first matching rule applies.",
        "operationId" : "reorderRules",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FdpSelectionRuleOrder"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the failure detection rules in the required order.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Reorders failure detection rules | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection rules" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/failureDetection/parameterSelection/rules/validator" : {
      "post" : {
        "operationId" : "validateCreateRule",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionRule"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the parameters of the failure detection rule to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /service/failureDetection/parameterSelection/rules` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection rules" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/failureDetection/parameterSelection/rules/{id}" : {
      "delete" : {
        "operationId" : "deleteRule",
        "parameters" : [ {
          "description" : "The ID of the required failure detection rule. Needs to be a valid RFC 4122 UUID.",
          "example" : "123e4567-e89b-12d3-a456-426614174000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The failure detection rule has been deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified failure detection rule | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection rules" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getRule",
        "parameters" : [ {
          "description" : "The ID of the required failure detection rule. Needs to be a valid RFC 4122 UUID.",
          "example" : "123e4567-e89b-12d3-a456-426614174000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FailureDetectionRule"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the properties of the specified rule | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection rules" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If a rule with the specified ID doesn't exist, a new one is created and appended to the end of the rule list. \n\nRules are evaluated from top to bottom, the first matching rule applies.To enforce a particular order use the reorder request. \n\nThe failure detection parameter set used by the rule must exist at the time of rule creation.",
        "operationId" : "createOrUpdateRule",
        "parameters" : [ {
          "description" : "The ID of the required failure detection rule. Needs to be a valid RFC 4122 UUID.",
          "example" : "123e4567-e89b-12d3-a456-426614174000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionRule"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the updated configuration of the failure detection rule. \n\nYou can't update the ID with this request. Use the change ID request instead."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new failure detection rule has been created. The response contains the ID of the new rule."
          },
          "204" : {
            "description" : "Success. The failure detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified failure detection rule rule | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection rules" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/failureDetection/parameterSelection/rules/{id}/changeId" : {
      "put" : {
        "operationId" : "changeRuleId",
        "parameters" : [ {
          "description" : "The ID of the required failure detection rule. Needs to be a valid RFC 4122 UUID.",
          "example" : "123e4567-e89b-12d3-a456-426614174000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityShortRepresentation"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the new ID of the rule. All other fields are ignored.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Changes the ID of the specified rule | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection rules" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/failureDetection/parameterSelection/rules/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateRule",
        "parameters" : [ {
          "description" : "The ID of the required failure detection rule. Needs to be a valid RFC 4122 UUID.",
          "example" : "123e4567-e89b-12d3-a456-426614174000",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionRule"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the configuration of the failure detection rule to be validated."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /service/failureDetection/parameterSelection/rules/{id}` request | maturity=EARLY_ADOPTER",
        "tags" : [ "Service - Failure detection rules" ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/requestAttributes" : {
      "get" : {
        "operationId" : "listRequestAttributesConfigs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all available request attributes",
        "tags" : [ "Service - Request attributes" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The body must not provide an ID as IDs are automatically assigned.",
        "operationId" : "createRequestAttributesConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestAttribute"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. Request attribute has been created. The ID of the new configuration is returned."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new request attribute",
        "tags" : [ "Service - Request attributes" ],
        "x-token-scopes" : [ "CaptureRequestData" ]
      }
    },
    "/service/requestAttributes/validator" : {
      "post" : {
        "operationId" : "validateCreateRequestAttributesConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestAttribute"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates new request attributes for the `POST /requestAttributes` request",
        "tags" : [ "Service - Request attributes" ],
        "x-token-scopes" : [ "CaptureRequestData" ]
      }
    },
    "/service/requestAttributes/{id}" : {
      "delete" : {
        "operationId" : "deleteRequestAttributesConfig",
        "parameters" : [ {
          "description" : "The ID of the request attribute to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified request attribute",
        "tags" : [ "Service - Request attributes" ],
        "x-token-scopes" : [ "CaptureRequestData" ]
      },
      "get" : {
        "operationId" : "getRequestAttributesConfig",
        "parameters" : [ {
          "description" : "The ID of the required request attribute.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "description" : "Flag to include process group references to the response. \n\n Process Group group references aren't compatible across environments.",
          "in" : "query",
          "name" : "includeProcessGroupReferences",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestAttribute"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Shows the properties of the specified request attribute",
        "tags" : [ "Service - Request attributes" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "operationId" : "updateRequestAttributesConfig",
        "parameters" : [ {
          "description" : "The ID of the request attribute to be updated.\n\n If you set the ID in the body as well, it must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestAttribute"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The request attribute with the specified ID has been created. The ID of the new configuration is returned."
          },
          "204" : {
            "description" : "Success. Request attribute has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates an existing request attribute or creates a new one",
        "tags" : [ "Service - Request attributes" ],
        "x-token-scopes" : [ "CaptureRequestData" ]
      }
    },
    "/service/requestAttributes/{id}/validator" : {
      "post" : {
        "operationId" : "validateUpdateRequestAttributesConfig",
        "parameters" : [ {
          "description" : "The ID of the request attribute to be validated.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestAttribute"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validate updates of existing request attribute for the `PUT /requestAttributes/{id}` request",
        "tags" : [ "Service - Request attributes" ],
        "x-token-scopes" : [ "CaptureRequestData" ]
      }
    },
    "/service/requestNaming" : {
      "get" : {
        "operationId" : "listRequestNaming",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all request naming rules along with their parameters",
        "tags" : [ "Service - Request naming" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "post" : {
        "description" : "The new rule goes to the end of the rules list and will be the last to evaluate. Existing rules remain unaffected.",
        "operationId" : "createRequestNaming",
        "parameters" : [ {
          "description" : "Order of the new request naming rule. Set to `PREPEND` to prepend it to the list, `APPEND` to append it. Defaults to `APPEND`.",
          "in" : "query",
          "name" : "position",
          "schema" : {
            "type" : "string",
            "default" : "APPEND",
            "enum" : [ "APPEND", "PREPEND" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestNaming"
              }
            }
          },
          "description" : "The JSON body of the request containing parameters of the new request naming rule. \n\n You must not specify the ID of the rule!"
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The request naming has been created. Response contains the new service's ID."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new request naming rule",
        "tags" : [ "Service - Request naming" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/requestNaming/order" : {
      "put" : {
        "description" : "This request reorders the request namings according to the given list of IDs. Request namings not present in the body of the request will retain their relative ordering but will be ordered *after* all those present in the request.",
        "operationId" : "orderRequestNaming",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          },
          "description" : "JSON body of the request containing the IDs of the request naming rules in the desired order. Any further properties (*name*, *description*) will be ignored."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Request namings have been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Reorders the request namings",
        "tags" : [ "Service - Request naming" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/requestNaming/validator" : {
      "post" : {
        "operationId" : "validateCreateRequestNaming",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestNaming"
              }
            }
          },
          "description" : "The JSON body of the request containing parameters of the new request naming rule. \n\n You must not specify the ID of the rule!"
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the new request naming rule for the `POST /requestNaming` request",
        "tags" : [ "Service - Request naming" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/requestNaming/{id}" : {
      "delete" : {
        "operationId" : "deleteRequestNaming",
        "parameters" : [ {
          "description" : "The ID of the request naming rule to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The rule has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified request naming rule",
        "tags" : [ "Service - Request naming" ],
        "x-token-scopes" : [ "WriteConfig" ]
      },
      "get" : {
        "operationId" : "getRequestNaming",
        "parameters" : [ {
          "description" : "The ID of the request naming rule you're inquiring.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestNaming"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the parameters of the specified request naming rule",
        "tags" : [ "Service - Request naming" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created at the end of the rules list and will be the last to evaluate.",
        "operationId" : "updateRequestNaming",
        "parameters" : [ {
          "description" : "The ID of the request naming to be updated.\n\n The ID of the request naming in the body of the request must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestNaming"
              }
            }
          },
          "description" : "The JSON body of the request containing updated parameters of the request naming."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. Request naming rule has been created. Response contains the new request naming rule's ID and name."
          },
          "204" : {
            "description" : "Success. Request naming rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified request naming rule",
        "tags" : [ "Service - Request naming" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/requestNaming/{id}/validator" : {
      "post" : {
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created at the end of the rules list and will be the last to evaluate.",
        "operationId" : "validateUpdateRequestNaming",
        "parameters" : [ {
          "description" : "The ID of the request naming to be updated.\n\n The ID of the request naming in the body of the request must match this ID.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestNaming"
              }
            }
          },
          "description" : "The JSON body of the request containing updated parameters of the request naming."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the new request naming for the `PUT /requestNaming/{id}` request",
        "tags" : [ "Service - Request naming" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/resourceNaming" : {
      "get" : {
        "description" : "Lists all extensions which currently are renamed to e.g., `Image`",
        "operationId" : "get",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNaming"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists the global service resource requests.",
        "tags" : [ "Service - Request naming" ],
        "x-token-scopes" : [ "ReadConfig" ]
      },
      "put" : {
        "description" : "Update all extensions which are renamed to `Image` or `Binary`",
        "operationId" : "put",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceNaming"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration is updated. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid. See the response body for details."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the global service resource requests.",
        "tags" : [ "Service - Request naming" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/service/resourceNaming/validator" : {
      "post" : {
        "operationId" : "validate",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceNaming"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid. See the response body for details."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates new resource requests settings for the `PUT /service/resourceRequest` request.",
        "tags" : [ "Service - Request naming" ],
        "x-token-scopes" : [ "WriteConfig" ]
      }
    },
    "/symfiles" : {
      "get" : {
        "description" : "Symbol files are ProGuard files for Android or dSYM files for iOS.",
        "operationId" : "getAll",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SymbolFileList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists metadata of all symbol files from the Symbol File Store",
        "tags" : [ "RUM - Mobile Deobfuscation and Symbolication" ],
        "x-token-scopes" : [ "DssFileManagement" ]
      }
    },
    "/symfiles/dtxdss-download" : {
      "get" : {
        "operationId" : "getDssClientUrl",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SymbolFileClientLinkDto"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets a download link for the latest version of the DTXDssClient",
        "tags" : [ "RUM - Mobile Deobfuscation and Symbolication" ],
        "x-token-scopes" : [ "DssFileManagement" ]
      }
    },
    "/symfiles/info" : {
      "get" : {
        "operationId" : "getInfo",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SymbolFileStorageInfo"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets information about symbol files storage",
        "tags" : [ "RUM - Mobile Deobfuscation and Symbolication" ],
        "x-token-scopes" : [ "DssFileManagement" ]
      }
    },
    "/symfiles/ios/supportedversion" : {
      "get" : {
        "operationId" : "getSupportedVersion",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupportedVersion"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the supported file format version for iOS symbol files",
        "tags" : [ "RUM - Mobile Deobfuscation and Symbolication" ],
        "x-token-scopes" : [ "DssFileManagement" ]
      }
    },
    "/symfiles/{applicationId}" : {
      "delete" : {
        "operationId" : "deleteApp",
        "parameters" : [ {
          "description" : "The ID of the required mobile app.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. All files belonging to the specified mobile app have been deleted successfully. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes all symbol file belonging for a mobile app",
        "tags" : [ "RUM - Mobile Deobfuscation and Symbolication" ],
        "x-token-scopes" : [ "DssFileManagement" ]
      },
      "get" : {
        "description" : "Symbol files are ProGuard files for Android or dSYM files for iOS.",
        "operationId" : "getAllPerApplication",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required mobile app.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SymbolFileList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists metadata of all symbol files for a mobile app from the Symbol File Store",
        "tags" : [ "RUM - Mobile Deobfuscation and Symbolication" ],
        "x-token-scopes" : [ "DssFileManagement" ]
      }
    },
    "/symfiles/{applicationId}/{packageName}/{os}/{versionCode}/{versionName}" : {
      "delete" : {
        "operationId" : "deleteSingleFile",
        "parameters" : [ {
          "description" : "The ID of the required mobile app.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) of the required mobile app.",
          "in" : "path",
          "name" : "packageName",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        }, {
          "description" : "The operating system of the required app.",
          "in" : "path",
          "name" : "os",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ANDROID", "IOS", "TVOS" ]
          }
        }, {
          "description" : "The version code (Android) / CFBundleVersion (iOS) of the required app.",
          "in" : "path",
          "name" : "versionCode",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        }, {
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) of the required app.",
          "in" : "path",
          "name" : "versionName",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The file has been deleted successfully. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the symbol file belonging to the specified app, OS, and an app version",
        "tags" : [ "RUM - Mobile Deobfuscation and Symbolication" ],
        "x-token-scopes" : [ "DssFileManagement" ]
      },
      "get" : {
        "description" : "Only one file per OS and version can exist.",
        "operationId" : "getSingle",
        "parameters" : [ {
          "description" : "The ID of the required mobile app.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) of the required mobile app.",
          "in" : "path",
          "name" : "packageName",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        }, {
          "description" : "The operating system of the required app.",
          "in" : "path",
          "name" : "os",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ANDROID", "IOS", "TVOS" ]
          }
        }, {
          "description" : "The version code (Android) / CFBundleVersion (iOS) of the required app.",
          "in" : "path",
          "name" : "versionCode",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        }, {
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) of the required app.",
          "in" : "path",
          "name" : "versionName",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SymbolFile"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets metadata of the symbol file for an app version",
        "tags" : [ "RUM - Mobile Deobfuscation and Symbolication" ],
        "x-token-scopes" : [ "DssFileManagement" ]
      },
      "put" : {
        "description" : "The file should be either a ProGuard file for Android or a zip file containing all the iOS dSYM files.",
        "operationId" : "createOrUpdate",
        "parameters" : [ {
          "description" : "The ID of the required mobile app.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) of the required mobile app.",
          "in" : "path",
          "name" : "packageName",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        }, {
          "description" : "The operating system of the required app.",
          "in" : "path",
          "name" : "os",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ANDROID", "IOS", "TVOS" ]
          }
        }, {
          "description" : "The version code (Android) / CFBundleVersion (iOS) of the required app.",
          "in" : "path",
          "name" : "versionCode",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        }, {
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) of the required app.",
          "in" : "path",
          "name" : "versionName",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        }, {
          "in" : "header",
          "name" : "content-type",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-compressed" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            },
            "application/x-zip-compressed" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            },
            "application/zip" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            },
            "text/plain" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            }
          },
          "description" : "The file to be uploaded: a proguard file (*.txt) for Android or the zip file produced by the DTXDssClient provided with the OneAgent for iOS. ",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The file has been uploaded and stored. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "413" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The symbol file storage quota is exhausted."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Upload a symbol file",
        "tags" : [ "RUM - Mobile Deobfuscation and Symbolication" ],
        "x-token-scopes" : [ "DssFileManagement" ]
      }
    },
    "/symfiles/{applicationId}/{packageName}/{os}/{versionCode}/{versionName}/pinning" : {
      "put" : {
        "description" : "A pinned file will not be deleted automatically, when running out of space.",
        "operationId" : "createOrUpdatePinning",
        "parameters" : [ {
          "description" : "The operating system of the required app.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) of the required mobile app.",
          "in" : "path",
          "name" : "packageName",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        }, {
          "description" : "The operating system of the required app.",
          "in" : "path",
          "name" : "os",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ANDROID", "IOS", "TVOS" ]
          }
        }, {
          "description" : "The version code (Android) / CFBundleVersion (iOS) of the required app.",
          "in" : "path",
          "name" : "versionCode",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        }, {
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) of the required app.",
          "in" : "path",
          "name" : "versionName",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SymbolFilePinning"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the pinning status to set."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The pinning status of the filed has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Pins/unpins all symbol files of an app version",
        "tags" : [ "RUM - Mobile Deobfuscation and Symbolication" ],
        "x-token-scopes" : [ "DssFileManagement" ]
      }
    },
    "/symfiles/{applicationId}/{packageName}/{os}/{versionCode}/{versionName}/pinning/validator" : {
      "put" : {
        "operationId" : "validatePinning",
        "parameters" : [ {
          "description" : "The ID of the required mobile app.",
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) of the required mobile app.",
          "in" : "path",
          "name" : "packageName",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        }, {
          "description" : "The operating system of the required app.",
          "in" : "path",
          "name" : "os",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ANDROID", "IOS", "TVOS" ]
          }
        }, {
          "description" : "The version code (Android) / CFBundleVersion (iOS) of the required app.",
          "in" : "path",
          "name" : "versionCode",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        }, {
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) of the required app.",
          "in" : "path",
          "name" : "versionName",
          "required" : true,
          "schema" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SymbolFilePinning"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the pinning status to set."
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted body is valid. Response does not have a body."
          },
          "400" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `PUT /{applicationId}/{packageName}/{os}/{versionName}/pinning` request",
        "tags" : [ "RUM - Mobile Deobfuscation and Symbolication" ],
        "x-token-scopes" : [ "DssFileManagement" ]
      }
    },
    "/technologies" : {
      "get" : {
        "operationId" : "getTechGlobalConfigs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TechMonitoringList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the global monitoring configuration of technologies.",
        "tags" : [ "OneAgent - Environment-wide configuration" ],
        "x-token-scopes" : [ "ReadConfig" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "AdditionalEventHandlers" : {
        "type" : "object",
        "description" : "Additional event handlers and wrappers.",
        "properties" : {
          "blurEventHandler" : {
            "type" : "boolean",
            "description" : "Blur event handler enabled/disabled."
          },
          "changeEventHandler" : {
            "type" : "boolean",
            "description" : "Change event handler enabled/disabled."
          },
          "clickEventHandler" : {
            "type" : "boolean",
            "description" : "Click event handler enabled/disabled."
          },
          "maxDomNodesToInstrument" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.",
            "maximum" : 100000,
            "minimum" : 0
          },
          "mouseupEventHandler" : {
            "type" : "boolean",
            "description" : "Mouseup event handler enabled/disabled."
          },
          "toStringMethod" : {
            "type" : "boolean",
            "description" : "toString method enabled/disabled."
          },
          "userMouseupEventForClicks" : {
            "type" : "boolean",
            "description" : "Use mouseup event for clicks enabled/disabled."
          }
        },
        "required" : [ "blurEventHandler", "changeEventHandler", "clickEventHandler", "maxDomNodesToInstrument", "mouseupEventHandler", "toStringMethod", "userMouseupEventForClicks" ]
      },
      "AdvancedJavaScriptTagSettings" : {
        "type" : "object",
        "description" : "Advanced JavaScript tag settings.",
        "properties" : {
          "additionalEventHandlers" : {
            "$ref" : "#/components/schemas/AdditionalEventHandlers"
          },
          "eventWrapperSettings" : {
            "$ref" : "#/components/schemas/EventWrapperSettings"
          },
          "globalEventCaptureSettings" : {
            "$ref" : "#/components/schemas/GlobalEventCaptureSettings"
          },
          "instrumentUnsupportedAjaxFrameworks" : {
            "type" : "boolean",
            "description" : "Instrumentation of unsupported Ajax frameworks enabled/disabled."
          },
          "maxActionNameLength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum character length for action names. Valid values range from 5 to 10000.",
            "maximum" : 10000,
            "minimum" : 5
          },
          "maxErrorsToCapture" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of errors to be captured per page. Valid values range from 0 to 50.",
            "maximum" : 50,
            "minimum" : 0
          },
          "proxyWrapperEnabled" : {
            "type" : "boolean",
            "description" : "Proxy wrapper enabled/disabled."
          },
          "specialCharactersToEscape" : {
            "type" : "string",
            "description" : "Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format.",
            "maxLength" : 30,
            "minLength" : 0,
            "pattern" : "[^\"<>]*"
          },
          "syncBeaconFirefox" : {
            "type" : "boolean",
            "description" : "Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled."
          },
          "syncBeaconInternetExplorer" : {
            "type" : "boolean",
            "description" : "Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled."
          },
          "userActionNameAttribute" : {
            "type" : "string",
            "description" : "User action name attribute."
          }
        },
        "required" : [ "additionalEventHandlers", "eventWrapperSettings", "globalEventCaptureSettings", "instrumentUnsupportedAjaxFrameworks", "maxActionNameLength", "maxErrorsToCapture", "specialCharactersToEscape" ]
      },
      "AfterTransformation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "delimiter" : {
              "type" : "string",
              "description" : "The delimiter of the transformation. The transformation removes everything before this delimiter and keeps everything after it.  \n\n The delimiter itself is not kept. \n\n If several delimiters appear in the initial value, only the first one is used."
            }
          }
        } ],
        "description" : "The transformation of the `AFTER` type.The transformation removes everything before the specified delimiter and keeps the value after it.",
        "required" : [ "delimiter" ]
      },
      "AlertingCustomEventFilter" : {
        "type" : "object",
        "description" : "Configuration of a custom event filter. \n\nFilters custom events by title or description. If both specified, the AND logic applies.",
        "properties" : {
          "customDescriptionFilter" : {
            "$ref" : "#/components/schemas/AlertingCustomTextFilter"
          },
          "customTitleFilter" : {
            "$ref" : "#/components/schemas/AlertingCustomTextFilter"
          }
        }
      },
      "AlertingCustomTextFilter" : {
        "type" : "object",
        "description" : "Configuration of a matching filter.",
        "properties" : {
          "caseInsensitive" : {
            "type" : "boolean",
            "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\n If not set, then `false` is used, making the condition case sensitive."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The filter is enabled (`true`) or disabled (`false`)."
          },
          "negate" : {
            "type" : "boolean",
            "description" : "Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**."
          },
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparison. \n\n You can reverse it by setting **negate** to `true`.",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "CONTAINS_REGEX", "ENDS_WITH", "EQUALS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "minLength" : 1
          }
        },
        "required" : [ "caseInsensitive", "enabled", "negate", "operator", "value" ]
      },
      "AlertingEventTypeFilter" : {
        "type" : "object",
        "description" : "Configuration of the event filter for the alerting profile. \n\nYou have two mutually exclusive options: \n* Select an event type from the list of the predefined events. Specify it in the **predefinedEventFilter** field. \n* Set a rule for custom events. Specify it in the **customEventFilter** field.",
        "properties" : {
          "customEventFilter" : {
            "$ref" : "#/components/schemas/AlertingCustomEventFilter"
          },
          "predefinedEventFilter" : {
            "$ref" : "#/components/schemas/AlertingPredefinedEventFilter"
          }
        }
      },
      "AlertingPredefinedEventFilter" : {
        "type" : "object",
        "description" : "Configuration of a predefined event filter.",
        "properties" : {
          "eventType" : {
            "type" : "string",
            "description" : "The type of the predefined event.",
            "enum" : [ "APPLICATION_ERROR_RATE_INCREASED", "APPLICATION_SLOWDOWN", "APPLICATION_UNEXPECTED_HIGH_LOAD", "APPLICATION_UNEXPECTED_LOW_LOAD", "AWS_LAMBDA_HIGH_ERROR_RATE", "CUSTOM_APPLICATION_ERROR_RATE_INCREASED", "CUSTOM_APPLICATION_SLOWDOWN", "CUSTOM_APPLICATION_UNEXPECTED_HIGH_LOAD", "CUSTOM_APPLICATION_UNEXPECTED_LOW_LOAD", "CUSTOM_APP_CRASH_RATE_INCREASED", "DATABASE_CONNECTION_FAILURE", "EBS_VOLUME_HIGH_LATENCY", "EC2_HIGH_CPU", "ELB_HIGH_BACKEND_ERROR_RATE", "ESXI_GUEST_ACTIVE_SWAP_WAIT", "ESXI_GUEST_CPU_LIMIT_REACHED", "ESXI_HOST_CPU_SATURATION", "ESXI_HOST_DATASTORE_LOW_DISK_SPACE", "ESXI_HOST_DISK_QUEUE_SLOW", "ESXI_HOST_DISK_SLOW", "ESXI_HOST_MEMORY_SATURATION", "ESXI_HOST_NETWORK_PROBLEMS", "ESXI_HOST_OVERLOADED_STORAGE", "ESXI_VM_IMPACT_HOST_CPU_SATURATION", "ESXI_VM_IMPACT_HOST_MEMORY_SATURATION", "EXTERNAL_SYNTHETIC_TEST_OUTAGE", "EXTERNAL_SYNTHETIC_TEST_SLOWDOWN", "HOST_OF_SERVICE_UNAVAILABLE", "HTTP_CHECK_GLOBAL_OUTAGE", "HTTP_CHECK_LOCAL_OUTAGE", "HTTP_CHECK_TEST_LOCATION_SLOWDOWN", "MOBILE_APPLICATION_ERROR_RATE_INCREASED", "MOBILE_APPLICATION_SLOWDOWN", "MOBILE_APPLICATION_UNEXPECTED_HIGH_LOAD", "MOBILE_APPLICATION_UNEXPECTED_LOW_LOAD", "MOBILE_APP_CRASH_RATE_INCREASED", "MONITORING_UNAVAILABLE", "MULTI_PROTOCOL_GLOBAL_OUTAGE", "MULTI_PROTOCOL_LOCAL_OUTAGE", "OSI_DISK_LOW_INODES", "OSI_GRACEFULLY_SHUTDOWN", "OSI_HIGH_CPU", "OSI_HIGH_MEMORY", "OSI_LOW_DISK_SPACE", "OSI_NIC_DROPPED_PACKETS_HIGH", "OSI_NIC_ERRORS_HIGH", "OSI_NIC_UTILIZATION_HIGH", "OSI_SLOW_DISK", "OSI_UNEXPECTEDLY_UNAVAILABLE", "PGI_OF_SERVICE_UNAVAILABLE", "PGI_UNAVAILABLE", "PG_LOW_INSTANCE_COUNT", "PROCESS_CRASHED", "PROCESS_HIGH_GC_ACTIVITY", "PROCESS_MEMORY_RESOURCE_EXHAUSTED", "PROCESS_NA_HIGH_CONN_FAIL_RATE", "PROCESS_NA_HIGH_LOSS_RATE", "PROCESS_THREADS_RESOURCE_EXHAUSTED", "RDS_HIGH_CPU", "RDS_HIGH_LATENCY", "RDS_LOW_MEMORY", "RDS_LOW_STORAGE_SPACE", "RDS_OF_SERVICE_UNAVAILABLE", "RDS_RESTART_SEQUENCE", "SERVICE_ERROR_RATE_INCREASED", "SERVICE_SLOWDOWN", "SERVICE_UNEXPECTED_HIGH_LOAD", "SERVICE_UNEXPECTED_LOW_LOAD", "SYNTHETIC_GLOBAL_OUTAGE", "SYNTHETIC_LOCAL_OUTAGE", "SYNTHETIC_NODE_OUTAGE", "SYNTHETIC_PRIVATE_LOCATION_OUTAGE", "SYNTHETIC_TEST_LOCATION_SLOWDOWN" ]
          },
          "negate" : {
            "type" : "boolean",
            "description" : "The alert triggers when the problem of specified severity arises while the specified event **is** happening (`false`) or while the specified event is **not** happening (`true`). \n\n For example, if you chose the Slowdown (`PERFORMANCE`) severity and Unexpected high traffic (`APPLICATION_UNEXPECTED_HIGH_LOAD`) event with **negate** set to `true`, the alerting profile will trigger only when the slowdown problem is raised while there is no unexpected high traffic event. \n\nConsider the following use case as an example. The Slowdown (`PERFORMANCE`) severity rule is set. Depending on the configuration of the event filter (Unexpected high traffic (`APPLICATION_UNEXPECTED_HIGH_LOAD`) event is used as an example), the behavior of the alerting profile is one of the following:* **negate** is set to `false`: The alert triggers when the slowdown problem is raised while unexpected high traffic event is happening. \n* **negate** is set to `true`: The alert triggers when the slowdown problem is raised while there is no unexpected high traffic event. \n\n* no event rule is set: The alert triggers when the slowdown problem is raised, regardless of any events."
          }
        },
        "required" : [ "eventType", "negate" ]
      },
      "AlertingProfile" : {
        "type" : "object",
        "description" : "Configuration of an alerting profile.",
        "example" : {
          "displayName" : "sampleAlertingProfile",
          "eventTypeFilters" : [ {
            "predefinedEventFilter" : {
              "eventType" : "OSI_HIGH_CPU",
              "negate" : true
            }
          }, {
            "customEventFilter" : {
              "customDescriptionFilter" : {
                "caseInsensitive" : false,
                "enabled" : false,
                "negate" : true,
                "operator" : "CONTAINS",
                "value" : "filterValue"
              },
              "customTitleFilter" : {
                "caseInsensitive" : true,
                "enabled" : true,
                "negate" : false,
                "operator" : "EQUALS",
                "value" : "filterValue"
              }
            }
          } ],
          "id" : "12345678-abcd-1234-abcd-1234567890ab",
          "mzId" : "1",
          "rules" : [ {
            "delayInMinutes" : 60,
            "severityLevel" : "AVAILABILITY",
            "tagFilter" : {
              "includeMode" : "INCLUDE_ALL",
              "tagFilters" : [ {
                "context" : "AWS",
                "key" : "tagKey",
                "value" : "tagValue"
              } ]
            }
          } ]
        },
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The name of the alerting profile, displayed in the UI.",
            "maxLength" : 100,
            "minLength" : 1
          },
          "eventTypeFilters" : {
            "type" : "array",
            "description" : "The list of event filters. \n\nFor all filters that are *negated* inside of these event filters, that is all \"Predefined\" as well as \"Custom\" (Title and/or Description) ones the AND logic applies.\nFor all *non-negated* ones the OR logic applies.\nBetween these two groups, negated and non-negated, the AND logic applies.\n\n If you specify both severity rule and event filter, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/AlertingEventTypeFilter"
            },
            "maxItems" : 20,
            "minItems" : 0
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the alerting profile.",
            "example" : "12345678-abcd-1234-abcd-1234567890ab"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "mzId" : {
            "type" : "string",
            "description" : "The ID of the management zone to which the alerting profile applies."
          },
          "rules" : {
            "type" : "array",
            "description" : "A list of severity rules. \n\n The rules are evaluated from top to bottom. The first matching rule applies and further evaluation stops.\n\n If you specify both severity rule and event filter, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/AlertingProfileSeverityRule"
            },
            "maxItems" : 20,
            "minItems" : 0
          }
        },
        "required" : [ "displayName" ]
      },
      "AlertingProfileSeverityRule" : {
        "type" : "object",
        "description" : "A severity rule of the alerting profile. \n\n A severity rule defines the level of severity that must be met before an alert is sent our for a detected problem. Additionally it restricts the alerting to certain monitored entities.",
        "properties" : {
          "delayInMinutes" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Send a notification if a problem remains open longer than *X* minutes.",
            "maximum" : 10000,
            "minimum" : 0
          },
          "severityLevel" : {
            "type" : "string",
            "description" : "The severity level to trigger the alert.",
            "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "MONITORING_UNAVAILABLE", "PERFORMANCE", "RESOURCE_CONTENTION" ]
          },
          "tagFilter" : {
            "$ref" : "#/components/schemas/AlertingProfileTagFilter"
          }
        },
        "required" : [ "delayInMinutes", "severityLevel", "tagFilter" ]
      },
      "AlertingProfileTagFilter" : {
        "type" : "object",
        "description" : "Configuration of the tag filtering of the alerting profile.",
        "properties" : {
          "includeMode" : {
            "type" : "string",
            "description" : "The filtering mode: \n* `INCLUDE_ANY`: The rule applies to monitored entities that have at least one of the specified tags. You can specify up to 100 tags. \n* `INCLUDE_ALL`: The rule applies to monitored entities that have **all** of the specified tags. You can specify up to 10 tags. \n* `NONE`: The rule applies to all monitored entities.",
            "enum" : [ "INCLUDE_ALL", "INCLUDE_ANY", "NONE" ]
          },
          "tagFilters" : {
            "type" : "array",
            "description" : "A list of required tags.",
            "items" : {
              "$ref" : "#/components/schemas/TagFilter"
            },
            "uniqueItems" : true
          }
        },
        "required" : [ "includeMode" ]
      },
      "AllowedBeaconOrigins" : {
        "type" : "object",
        "description" : "Configuration of the allowed beacon origins for CORS requests.",
        "example" : {
          "allowedBeaconOrigins" : [ {
            "domainNameMatcher" : "EQUALS",
            "domainNamePattern" : "dynatrace.com"
          } ],
          "metadata" : {
            "clusterVersion" : "Mock version",
            "configurationVersions" : [ 4, 2 ]
          }
        },
        "properties" : {
          "allowedBeaconOrigins" : {
            "type" : "array",
            "description" : "A list of allowed beacon origins for CORS requests.",
            "items" : {
              "$ref" : "#/components/schemas/BeaconDomainPattern"
            }
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "rejectBeaconsWithoutOriginHeader" : {
            "type" : "boolean",
            "description" : "Discard (`true`) or keep (`false`) beacons without the **Origin** HTTP header on the BeaconForwarder. \n\nIf not set, `false` is used."
          }
        }
      },
      "AllowlistedAwsAccount" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The AWS account id to allowlist",
            "maxLength" : 12,
            "minLength" : 12,
            "pattern" : "[0-9]*"
          }
        },
        "required" : [ "id" ]
      },
      "AllowlistedAwsAccountList" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AllowlistedAwsAccount"
            }
          }
        }
      },
      "AnomalyDetectionPG" : {
        "type" : "object",
        "description" : "Configuration of anomaly detection for the process group.",
        "example" : {
          "availabilityMonitoring" : {
            "method" : "MINIMUM_THRESHOLD",
            "minimumThreshold" : 5
          }
        },
        "properties" : {
          "availabilityMonitoring" : {
            "$ref" : "#/components/schemas/AvailabilityMonitoringPG"
          }
        }
      },
      "AnsibleTowerNotificationConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "acceptAnyCertificate" : {
              "type" : "boolean",
              "description" : "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates."
            },
            "customMessage" : {
              "type" : "string",
              "description" : "The custom message of the notification. \n\n This message will be displayed in the extra variables **Message** field of your job template.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
              "maxLength" : 1000,
              "minLength" : 0
            },
            "jobTemplateID" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The ID of the target Ansible Tower job template."
            },
            "jobTemplateURL" : {
              "type" : "string",
              "description" : "The URL of the target Ansible Tower job template.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "password" : {
              "type" : "string",
              "description" : "The password for the Ansible Tower account.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "username" : {
              "type" : "string",
              "description" : "The username of the Ansible Tower account.",
              "maxLength" : 1000,
              "minLength" : 1
            }
          }
        } ],
        "description" : "Configuration of the Ansible Tower notification.",
        "required" : [ "acceptAnyCertificate", "active", "alertingProfile", "customMessage", "jobTemplateID", "jobTemplateURL", "name", "username" ]
      },
      "Apdex" : {
        "type" : "object",
        "description" : "Defines the Apdex settings of an application.",
        "properties" : {
          "frustratingFallbackThreshold" : {
            "type" : "number",
            "description" : "Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available.",
            "maximum" : 240000,
            "minimum" : 0
          },
          "frustratingThreshold" : {
            "type" : "number",
            "description" : "Maximal value of apdex, which is considered as tolerable user experience.",
            "maximum" : 240000,
            "minimum" : 0
          },
          "toleratedFallbackThreshold" : {
            "type" : "number",
            "description" : "Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available.",
            "maximum" : 60000,
            "minimum" : 0
          },
          "toleratedThreshold" : {
            "type" : "number",
            "description" : "Maximal value of apdex, which is considered as satisfied user experience.",
            "maximum" : 60000,
            "minimum" : 0
          }
        }
      },
      "AppIdentifier" : {
        "type" : "object",
        "description" : "The identification info of the application to which the file belongs to.",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the mobile app."
          },
          "os" : {
            "type" : "string",
            "description" : "The operating system the file belongs to.",
            "enum" : [ "ANDROID", "IOS", "TVOS" ]
          },
          "packageName" : {
            "type" : "string",
            "description" : "The bundleId (iOS) or package name (Android) the file belongs to."
          },
          "versionCode" : {
            "type" : "string",
            "description" : "The version code (Android) / bundle version (iOS) the file belongs to."
          },
          "versionName" : {
            "type" : "string",
            "description" : "The version name (Android) / bundle versions string (iOS) the file belongs to."
          }
        },
        "required" : [ "versionCode", "versionName" ]
      },
      "ApplicationAnomalyDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of anomaly detection for applications.",
        "example" : {
          "failureRateIncrease" : {
            "detectionMode" : "DETECT_USING_FIXED_THRESHOLDS",
            "thresholds" : {
              "sensitivity" : "LOW",
              "threshold" : 10
            }
          },
          "responseTimeDegradation" : {
            "automaticDetection" : {
              "loadThreshold" : "ONE_REQUEST_PER_MINUTE",
              "responseTimeDegradationMilliseconds" : 250,
              "responseTimeDegradationPercent" : 90,
              "slowestResponseTimeDegradationMilliseconds" : 500,
              "slowestResponseTimeDegradationPercent" : 200
            },
            "detectionMode" : "DETECT_AUTOMATICALLY"
          },
          "trafficDrop" : {
            "enabled" : true,
            "trafficDropPercent" : 95
          },
          "trafficSpike" : {
            "enabled" : false
          }
        },
        "properties" : {
          "failureRateIncrease" : {
            "$ref" : "#/components/schemas/FailureRateIncreaseDetectionConfig"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "responseTimeDegradation" : {
            "$ref" : "#/components/schemas/ResponseTimeDegradationDetectionConfig"
          },
          "trafficDrop" : {
            "$ref" : "#/components/schemas/TrafficDropDetectionConfig"
          },
          "trafficSpike" : {
            "$ref" : "#/components/schemas/TrafficSpikeDetectionConfig"
          }
        },
        "required" : [ "failureRateIncrease", "responseTimeDegradation", "trafficDrop", "trafficSpike" ]
      },
      "ApplicationDataPrivacy" : {
        "type" : "object",
        "description" : "Data privacy settings of the application.",
        "properties" : {
          "dataCaptureOptInEnabled" : {
            "type" : "boolean",
            "description" : "Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called."
          },
          "doNotTrackBehaviour" : {
            "type" : "string",
            "description" : "How to handle the \"Do Not Track\" header: \n\n* `IGNORE_DO_NOT_TRACK`: ignore the header and capture the data. \n* `CAPTURE_ANONYMIZED`: capture the data but do not tie it to the user. \n* `DO_NOT_CAPTURE`: respect the header and do not capture.",
            "enum" : [ "CAPTURE_ANONYMIZED", "DO_NOT_CAPTURE", "IGNORE_DO_NOT_TRACK" ]
          },
          "identifier" : {
            "type" : "string",
            "description" : "Dynatrace entity ID of the web application.",
            "readOnly" : true
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "persistentCookieForUserTracking" : {
            "type" : "boolean",
            "description" : "Set to `true` to set persistent cookie in order to recognize returning devices."
          },
          "sessionReplayDataPrivacy" : {
            "$ref" : "#/components/schemas/SessionReplayDataPrivacySettings"
          }
        },
        "required" : [ "dataCaptureOptInEnabled", "doNotTrackBehaviour", "persistentCookieForUserTracking" ]
      },
      "ApplicationDataPrivacyList" : {
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationDataPrivacy"
            }
          }
        }
      },
      "ApplicationDetectionRuleConfig" : {
        "type" : "object",
        "description" : "Application detection rule.",
        "example" : {
          "applicationIdentifier" : "APPLICATION-123456",
          "filterConfig" : {
            "applicationMatchTarget" : "DOMAIN",
            "applicationMatchType" : "EQUALS",
            "pattern" : "myapp.example.com"
          },
          "id" : "12345678-abcd-1234-abcd-1234567890ab",
          "metadata" : {
            "clusterVersion" : "Mock version",
            "configurationVersions" : [ 4, 2 ]
          },
          "name" : "uniqueName"
        },
        "properties" : {
          "applicationIdentifier" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the application, for example `APPLICATION-4A3B43`. \n\n You must use an existing ID. If you need to create a rule for an application that doesn't exist yet, [create an application first](https://dt-url.net/vt03khh) and then configure detection rules for it.",
            "example" : "APPLICATION-123456"
          },
          "filterConfig" : {
            "$ref" : "#/components/schemas/ApplicationFilter"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the rule.",
            "example" : "12345678-abcd-1234-abcd-1234567890ab"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadataDtoImpl"
          },
          "name" : {
            "type" : "string",
            "description" : "The unique name of the Application detection rule."
          },
          "order" : {
            "type" : "string",
            "description" : "The order of the rule in the rules list. \n\nThe rules are evaluated from top to bottom. The first matching rule applies.",
            "maxLength" : 2147483647,
            "minLength" : 1
          }
        },
        "required" : [ "applicationIdentifier", "filterConfig" ]
      },
      "ApplicationDetectionRulesHostDetectionSettings" : {
        "type" : "object",
        "description" : "Configuration of host detection headers.",
        "example" : {
          "hostDetectionHeaders" : [ "X-Host", "X-Forwarded-Host" ],
          "metadata" : {
            "clusterVersion" : "Mock version",
            "configurationVersions" : [ 4, 2 ]
          }
        },
        "properties" : {
          "hostDetectionHeaders" : {
            "type" : "array",
            "description" : "An ordered list of host detection headers. \n\nHeaders are evaluated from top to bottom; the first matching header applies.",
            "items" : {
              "type" : "string"
            }
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          }
        },
        "required" : [ "hostDetectionHeaders" ]
      },
      "ApplicationErrorRules" : {
        "type" : "object",
        "description" : "Configuration of error rules in the web application.",
        "properties" : {
          "customErrorRules" : {
            "type" : "array",
            "description" : "An ordered list of custom errors.\n\n Rules are evaluated from top to bottom; the first matching rule applies.",
            "items" : {
              "$ref" : "#/components/schemas/CustomErrorRule"
            }
          },
          "httpErrorRules" : {
            "type" : "array",
            "description" : "An ordered list of HTTP errors.\n\n Rules are evaluated from top to bottom; the first matching rule applies.",
            "items" : {
              "$ref" : "#/components/schemas/HttpErrorRule"
            }
          },
          "ignoreCustomErrorsInApdexCalculation" : {
            "type" : "boolean",
            "description" : "Exclude (`true`) or include (`false`) custom errors listed in **customErrorRules** in Apdex calculation."
          },
          "ignoreHttpErrorsInApdexCalculation" : {
            "type" : "boolean",
            "description" : "Exclude (`true`) or include (`false`) HTTP errors listed in **httpErrorRules** in Apdex calculation."
          },
          "ignoreJavaScriptErrorsInApdexCalculation" : {
            "type" : "boolean",
            "description" : "Exclude (`true`) or include (`false`) JavaScript errors in Apdex calculation."
          }
        },
        "required" : [ "customErrorRules", "httpErrorRules", "ignoreCustomErrorsInApdexCalculation", "ignoreHttpErrorsInApdexCalculation", "ignoreJavaScriptErrorsInApdexCalculation" ]
      },
      "ApplicationFilter" : {
        "type" : "object",
        "description" : "The condition of an application detection rule.",
        "properties" : {
          "applicationMatchTarget" : {
            "type" : "string",
            "description" : "Where to look for the the **pattern** value.",
            "enum" : [ "DOMAIN", "URL" ],
            "example" : "DOMAIN"
          },
          "applicationMatchType" : {
            "type" : "string",
            "description" : "The operator of the matching.",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS", "MATCHES" ],
            "example" : "EQUALS"
          },
          "pattern" : {
            "type" : "string",
            "description" : "The value to look for.",
            "example" : "myapp.example.com",
            "maxLength" : 200,
            "minLength" : 1
          }
        },
        "required" : [ "applicationMatchTarget", "applicationMatchType", "pattern" ]
      },
      "ApplicationId" : {
        "type" : "object",
        "description" : "The contribution to the service ID calculation from the detected application ID. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field.",
        "properties" : {
          "transformations" : {
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/TransformationBase"
            },
            "maxItems" : 10,
            "minItems" : 0
          },
          "valueOverride" : {
            "type" : "string",
            "description" : "The value to be used instead of the detected value."
          }
        }
      },
      "ApplicationTypeComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "AGENTLESS_MONITORING", "AMP", "AUTO_INJECTED", "DEFAULT", "SAAS_VENDOR" ]
            }
          }
        } ],
        "description" : "Comparison for `APPLICATION_TYPE` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "AssignedEntitiesTile" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "assignedEntities" : {
              "type" : "array",
              "description" : "The list of Dynatrace entities, assigned to the tile.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ],
        "description" : "Configuration of a tile with an assigned Dynatrace entity. \n\nAn example is the Bounce rate tile, showing the data from an assigned application.",
        "required" : [ "assignedEntities", "bounds", "name", "tileType" ]
      },
      "AssignedEntitiesWithMetricTile" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "assignedEntities" : {
              "type" : "array",
              "description" : "The list of Dynatrace entities, assigned to the tile.",
              "items" : {
                "type" : "string"
              }
            },
            "metric" : {
              "type" : "string",
              "description" : "The metric assigned to the tile."
            }
          }
        } ],
        "description" : "Configuration of a tile with an assigned Dynatrace entity and an assigned metric. \n\nAn example is the Worldmap tile, showing the data from an assigned performance or behavior metric of an assigned application.",
        "required" : [ "assignedEntities", "bounds", "name", "tileType" ]
      },
      "AutoTag" : {
        "type" : "object",
        "description" : "Configuration of an auto-tag. It defines the conditions of tag usage and the tag value.",
        "example" : {
          "description" : "sampleDescription",
          "entitySelectorBasedRules" : [ {
            "enabled" : true,
            "entitySelector" : "type(HOST) AND cpuCores(4)"
          } ],
          "name" : "sampleAutoTag",
          "rules" : [ {
            "conditions" : [ {
              "comparisonInfo" : {
                "caseSensitive" : false,
                "negate" : false,
                "operator" : "BEGINS_WITH",
                "type" : "STRING",
                "value" : "sample"
              },
              "key" : {
                "attribute" : "SERVICE_DATABASE_NAME"
              }
            }, {
              "comparisonInfo" : {
                "negate" : false,
                "operator" : "EXISTS",
                "type" : "STRING"
              },
              "key" : {
                "attribute" : "SERVICE_WEB_SERVER_NAME"
              }
            }, {
              "comparisonInfo" : {
                "caseSensitive" : false,
                "negate" : false,
                "operator" : "BEGINS_WITH",
                "type" : "STRING",
                "value" : "sample"
              },
              "key" : {
                "attribute" : "PROCESS_GROUP_CUSTOM_METADATA",
                "dynamicKey" : {
                  "key" : "kubernetes.io/limit-ranger",
                  "source" : "KUBERNETES"
                },
                "type" : "PROCESS_CUSTOM_METADATA_KEY"
              }
            } ],
            "enabled" : true,
            "propagationTypes" : [ "SERVICE_TO_HOST_LIKE" ],
            "type" : "SERVICE",
            "valueFormat" : "myTagValue {Service:DetectedName}"
          } ]
        },
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the auto-tag.",
            "maxLength" : 1000,
            "minLength" : 1
          },
          "entitySelectorBasedRules" : {
            "type" : "array",
            "description" : "A list of entity-selector based rules for auto tagging usage.\n\nIf several rules are specified, the **OR** logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/EntitySelectorBasedAutoTagRule"
            }
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the auto-tag.",
            "example" : "12345678-abcd-1234-abcd-1234567890ab"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the auto-tag, which is applied to entities. \n\nAdditionally you can specify a **valueFormat** in the tag rule. In that case the tag is used in the `name:valueFormat` format. \n\nFor example you can extend the `Infrastructure` tag to `Infrastructure:Windows` and `Infrastructure:Linux`.",
            "minLength" : 1
          },
          "rules" : {
            "type" : "array",
            "description" : "The list of rules for tag usage. \n\nWhen there are multiple rules, the OR logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/AutoTagRule"
            }
          }
        },
        "required" : [ "name" ]
      },
      "AutoTagRule" : {
        "type" : "object",
        "description" : "A rule for the auto-tag. \n\n Defines the conditions of tag usage.",
        "properties" : {
          "conditions" : {
            "type" : "array",
            "description" : "A list of matching rules for the auto-tag. \n\nThe tag applies only when **all** conditions are fulfilled.",
            "items" : {
              "$ref" : "#/components/schemas/EntityRuleEngineCondition"
            },
            "maxItems" : 30,
            "minItems" : 1
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Tag rule is enabled (`true`) or disabled (`false`)."
          },
          "normalization" : {
            "type" : "string",
            "description" : "Changes applied to the value after applying the value format. Default is LEAVE_TEXT_AS_IS.",
            "enum" : [ "LEAVE_TEXT_AS_IS", "TO_LOWER_CASE", "TO_UPPER_CASE" ],
            "nullable" : true
          },
          "propagationTypes" : {
            "type" : "array",
            "description" : "How to apply the tag to underlying entities: \n\n* `SERVICE_TO_PROCESS_GROUP_LIKE`: Apply to underlying process groups of matching services. \n* `SERVICE_TO_HOST_LIKE`: Apply to underlying hosts of matching services. \n* `PROCESS_GROUP_TO_HOST`: Apply to underlying hosts of matching process groups. \n* `PROCESS_GROUP_TO_SERVICE`: Apply to all services provided by the process groups. \n* `HOST_TO_PROCESS_GROUP_INSTANCE`: Apply to processes running on matching hosts. \n*  `AZURE_TO_PG`: Apply to process groups connected to matching Azure entities. \n* `AZURE_TO_SERVICE`: Apply to services provided by matching Azure entities.",
            "items" : {
              "type" : "string",
              "enum" : [ "AZURE_TO_PG", "AZURE_TO_SERVICE", "HOST_TO_PROCESS_GROUP_INSTANCE", "PROCESS_GROUP_TO_HOST", "PROCESS_GROUP_TO_SERVICE", "SERVICE_TO_HOST_LIKE", "SERVICE_TO_PROCESS_GROUP_LIKE" ]
            }
          },
          "type" : {
            "type" : "string",
            "description" : "Type of entities to which the rule applies.",
            "enum" : [ "APPLICATION", "AWS_APPLICATION_LOAD_BALANCER", "AWS_CLASSIC_LOAD_BALANCER", "AWS_NETWORK_LOAD_BALANCER", "AWS_RELATIONAL_DATABASE_SERVICE", "AZURE", "CUSTOM_APPLICATION", "CUSTOM_DEVICE", "DCRUM_APPLICATION", "ESXI_HOST", "EXTERNAL_SYNTHETIC_TEST", "HOST", "HTTP_CHECK", "MOBILE_APPLICATION", "MULTIPROTOCOL_MONITOR", "PROCESS_GROUP", "SERVICE", "SYNTHETIC_TEST" ]
          },
          "valueFormat" : {
            "type" : "string",
            "description" : "The value of the auto-tag. If specified, the tag is used in the `name:valueFormat` format. \n\nFor example, you can extend the `Infrastructure` tag to `Infrastructure:Windows` and `Infrastructure:Linux`. \n\nYou can use the following placeholders here: \n\n* `{AwsAutoScalingGroup:Name}` \n* `{AwsAvailabilityZone:Name}` \n* `{AwsElasticLoadBalancer:Name}` \n* `{AwsRelationalDatabaseService:DBName}` \n* `{AwsRelationalDatabaseService:Endpoint}` \n* `{AwsRelationalDatabaseService:Engine}` \n* `{AwsRelationalDatabaseService:InstanceClass}` \n* `{AwsRelationalDatabaseService:Name}` \n* `{AwsRelationalDatabaseService:Port}` \n* `{AzureRegion:Name}` \n* `{AzureScaleSet:Name}` \n* `{AzureVm:Name}` \n* `{CloudFoundryOrganization:Name}` \n* `{CustomDevice:DetectedName}` \n* `{CustomDevice:DnsName}` \n* `{CustomDevice:IpAddress}` \n* `{CustomDevice:Port}` \n* `{DockerContainerGroupInstance:ContainerName}` \n* `{DockerContainerGroupInstance:FullImageName}` \n* `{DockerContainerGroupInstance:ImageVersion}` \n* `{ESXIHost:HardwareModel}` \n* `{ESXIHost:HardwareVendor}` \n* `{ESXIHost:Name}` \n* `{ESXIHost:ProductName}` \n* `{ESXIHost:ProductVersion}` \n* `{Ec2Instance:AmiId}` \n* `{Ec2Instance:BeanstalkEnvironmentName}` \n* `{Ec2Instance:InstanceId}` \n* `{Ec2Instance:InstanceType}` \n* `{Ec2Instance:LocalHostName}` \n* `{Ec2Instance:Name}` \n* `{Ec2Instance:PublicHostName}` \n* `{Ec2Instance:SecurityGroup}` \n* `{GoogleComputeInstance:Id}` \n* `{GoogleComputeInstance:IpAddresses}` \n* `{GoogleComputeInstance:MachineType}` \n* `{GoogleComputeInstance:Name}` \n* `{GoogleComputeInstance:ProjectId}` \n* `{GoogleComputeInstance:Project}` \n* `{Host:AWSNameTag}` \n* `{Host:AixLogicalCpuCount}` \n* `{Host:AzureHostName}` \n* `{Host:AzureSiteName}` \n* `{Host:BoshDeploymentId}` \n* `{Host:BoshInstanceId}` \n* `{Host:BoshInstanceName}` \n* `{Host:BoshName}` \n* `{Host:BoshStemcellVersion}` \n* `{Host:CpuCores}` \n* `{Host:DetectedName}` \n* `{Host:Environment:AppName}` \n* `{Host:Environment:BoshReleaseVersion}` \n* `{Host:Environment:Environment}` \n* `{Host:Environment:Link}` \n* `{Host:Environment:Organization}` \n* `{Host:Environment:Owner}` \n* `{Host:Environment:Support}` \n* `{Host:IpAddress}` \n* `{Host:LogicalCpuCores}` \n* `{Host:OneAgentCustomHostName}` \n* `{Host:OperatingSystemVersion}` \n* `{Host:PaasMemoryLimit}` \n* `{HostGroup:Name}` \n* `{KubernetesCluster:Name}` \n* `{KubernetesNode:DetectedName}` \n* `{OpenstackAvailabilityZone:Name}` \n* `{OpenstackZone:Name}` \n* `{OpenstackComputeNode:Name}` \n* `{OpenstackProject:Name}` \n* `{OpenstackVm:UnstanceType}` \n* `{OpenstackVm:Name}` \n* `{OpenstackVm:SecurityGroup}` \n* `{ProcessGroup:AmazonECRImageAccountId}` \n* `{ProcessGroup:AmazonECRImageRegion}` \n* `{ProcessGroup:AmazonECSCluster}` \n* `{ProcessGroup:AmazonECSContainerName}` \n* `{ProcessGroup:AmazonECSFamily}` \n* `{ProcessGroup:AmazonECSRevision}` \n* `{ProcessGroup:AmazonLambdaFunctionName}` \n* `{ProcessGroup:AmazonRegion}` \n* `{ProcessGroup:ApacheConfigPath}` \n* `{ProcessGroup:ApacheSparkMasterIpAddress}` \n* `{ProcessGroup:AspDotNetCoreApplicationPath}` \n* `{ProcessGroup:AspDotNetCoreApplicationPath}` \n* `{ProcessGroup:AzureHostName}` \n* `{ProcessGroup:AzureSiteName}` \n* `{ProcessGroup:CassandraClusterName}` \n* `{ProcessGroup:CatalinaBase}` \n* `{ProcessGroup:CatalinaHome}` \n* `{ProcessGroup:CloudFoundryAppId}` \n* `{ProcessGroup:CloudFoundryAppName}` \n* `{ProcessGroup:CloudFoundryInstanceIndex}` \n* `{ProcessGroup:CloudFoundrySpaceId}` \n* `{ProcessGroup:CloudFoundrySpaceName}` \n* `{ProcessGroup:ColdFusionJvmConfigFile}` \n* `{ProcessGroup:ColdFusionServiceName}` \n* `{ProcessGroup:CommandLineArgs}` \n* `{ProcessGroup:DetectedName}` \n* `{ProcessGroup:DotNetCommandPath}` \n* `{ProcessGroup:DotNetCommand}` \n* `{ProcessGroup:DotNetClusterId}` \n* `{ProcessGroup:DotNetNodeId}` \n* `{ProcessGroup:ElasticsearchClusterName}` \n* `{ProcessGroup:ElasticsearchNodeName}` \n* `{ProcessGroup:EquinoxConfigPath}` \n* `{ProcessGroup:ExeName}` \n* `{ProcessGroup:ExePath}` \n* `{ProcessGroup:GlassFishDomainName}` \n* `{ProcessGroup:GlassFishInstanceName}` \n* `{ProcessGroup:GoogleAppEngineInstance}` \n* `{ProcessGroup:GoogleAppEngineService}` \n* `{ProcessGroup:GoogleCloudProject}` \n* `{ProcessGroup:HybrisBinDirectory}` \n* `{ProcessGroup:HybrisConfigDirectory}` \n* `{ProcessGroup:HybrisConfigDirectory}` \n* `{ProcessGroup:HybrisDataDirectory}` \n* `{ProcessGroup:IBMCicsRegion}` \n* `{ProcessGroup:IBMCtgName}` \n* `{ProcessGroup:IBMImsConnectRegion}` \n* `{ProcessGroup:IBMImsControlRegion}` \n* `{ProcessGroup:IBMImsMessageProcessingRegion}` \n* `{ProcessGroup:IBMImsSoapGwName}` \n* `{ProcessGroup:IBMIntegrationNodeName}` \n* `{ProcessGroup:IBMIntegrationServerName}` \n* `{ProcessGroup:IISAppPool}` \n* `{ProcessGroup:IISRoleName}` \n* `{ProcessGroup:JbossHome}` \n* `{ProcessGroup:JbossMode}` \n* `{ProcessGroup:JbossServerName}` \n* `{ProcessGroup:JavaJarFile}` \n* `{ProcessGroup:JavaJarPath}` \n* `{ProcessGroup:JavaMainCLass}` \n* `{ProcessGroup:KubernetesBasePodName}` \n* `{ProcessGroup:KubernetesContainerName}` \n* `{ProcessGroup:KubernetesFullPodName}` \n* `{ProcessGroup:KubernetesNamespace}` \n* `{ProcessGroup:KubernetesPodUid}` \n* `{ProcessGroup:MssqlInstanceName}` \n* `{ProcessGroup:NodeJsAppBaseDirectory}` \n* `{ProcessGroup:NodeJsAppName}` \n* `{ProcessGroup:NodeJsScriptName}` \n* `{ProcessGroup:OracleSid}` \n* `{ProcessGroup:PHPScriptPath}` \n* `{ProcessGroup:PHPWorkingDirectory}` \n* `{ProcessGroup:Ports}` \n* `{ProcessGroup:RubyAppRootPath}` \n* `{ProcessGroup:RubyScriptPath}` \n* `{ProcessGroup:SoftwareAGInstallRoot}` \n* `{ProcessGroup:SoftwareAGProductPropertyName}` \n* `{ProcessGroup:SpringBootAppName}` \n* `{ProcessGroup:SpringBootProfileName}` \n* `{ProcessGroup:SpringBootStartupClass}` \n* `{ProcessGroup:TIBCOBusinessWorksAppNodeName}` \n* `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` \n* `{ProcessGroup:TIBCOBusinessWorksCeAppName}` \n* `{ProcessGroup:TIBCOBusinessWorksCeVersion}` \n* `{ProcessGroup:TIBCOBusinessWorksDomainName}` \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` \n* `{ProcessGroup:TIBCOBusinessWorksHome}` \n* `{ProcessGroup:VarnishInstanceName}` \n* `{ProcessGroup:WebLogicClusterName}` \n* `{ProcessGroup:WebLogicDomainName}` \n* `{ProcessGroup:WebLogicHome}` \n* `{ProcessGroup:WebLogicName}` \n* `{ProcessGroup:WebSphereCellName}` \n* `{ProcessGroup:WebSphereClusterName}` \n* `{ProcessGroup:WebSphereNodeName}` \n* `{ProcessGroup:WebSphereServerName}` \n* `{ProcessGroup:ActorSystem}` \n* `{Service:STGServerName}` \n* `{Service:DatabaseHostName}` \n* `{Service:DatabaseName}` \n* `{Service:DatabaseVendor}` \n* `{Service:DetectedName}` \n* `{Service:EndpointPath}` \n* `{Service:EndpointPathGatewayUrl}` \n* `{Service:IIBApplicationName}` \n* `{Service:MessageListenerClassName}` \n* `{Service:Port}` \n* `{Service:PublicDomainName}` \n* `{Service:RemoteEndpoint}` \n* `{Service:RemoteName}` \n* `{Service:WebApplicationId}` \n* `{Service:WebContextRoot}` \n* `{Service:WebServerName}` \n* `{Service:WebServiceNamespace}` \n* `{Service:WebServiceName}` \n* `{VmwareDatacenter:Name}` \n* `{VmwareVm:Name}` \n"
          }
        },
        "required" : [ "conditions", "enabled", "type" ]
      },
      "AvailabilityMonitoringPG" : {
        "type" : "object",
        "description" : "Configuration of the availability monitoring for the process group.",
        "example" : {
          "method" : "MINIMUM_THRESHOLD",
          "minimumThreshold" : 5
        },
        "properties" : {
          "method" : {
            "type" : "string",
            "description" : "How to monitor the availability of the process group: \n\n* `PROCESS_IMPACT`: Alert if any process of the group becomes unavailable. \n* `MINIMUM_THRESHOLD`: Alert if the number of active processes in the group falls below the specified threshold. \n* `OFF`: Availability monitoring is disabled.",
            "enum" : [ "MINIMUM_THRESHOLD", "OFF", "PROCESS_IMPACT" ]
          },
          "minimumThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if the number of active processes in the group is lower than this value."
          }
        },
        "required" : [ "method" ]
      },
      "AwsAnomalyDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of anomaly detection for AWS.",
        "example" : {
          "ec2CandidateCpuSaturationDetection" : {
            "customThresholds" : {
              "cpuUsagePercentage" : 98
            },
            "enabled" : true
          },
          "elbHighConnectionErrorsDetection" : {
            "customThresholds" : {
              "connectionErrorsPerMinute" : 4
            },
            "enabled" : true
          },
          "lambdaHighErrorRateDetection" : {
            "customThresholds" : {
              "failedInvocationsRate" : 2
            },
            "enabled" : true
          },
          "metadata" : {
            "clusterVersion" : "Mock version",
            "configurationVersions" : [ 4, 2 ]
          },
          "rdsHighCpuDetection" : {
            "customThresholds" : {
              "cpuUsagePercentage" : 99
            },
            "enabled" : true
          },
          "rdsHighMemoryDetection" : {
            "customThresholds" : {
              "freeMemory" : 96.99,
              "swapUsage" : 5.5
            },
            "enabled" : true
          },
          "rdsHighWriteReadLatencyDetection" : {
            "customThresholds" : {
              "writeReadLatency" : 800
            },
            "enabled" : true
          },
          "rdsLowStorageDetection" : {
            "customThresholds" : {
              "freeStoragePercentage" : 7
            },
            "enabled" : true
          },
          "rdsRestartsSequenceDetection" : {
            "customThresholds" : {
              "restartsPerMinute" : 3
            },
            "enabled" : true
          }
        },
        "properties" : {
          "ec2CandidateCpuSaturationDetection" : {
            "$ref" : "#/components/schemas/Ec2CandidateCpuSaturationDetectionConfig"
          },
          "elbHighConnectionErrorsDetection" : {
            "$ref" : "#/components/schemas/ElbHighConnectionErrorsDetectionConfig"
          },
          "lambdaHighErrorRateDetection" : {
            "$ref" : "#/components/schemas/LambdaHighErrorRateDetectionConfig"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "rdsHighCpuDetection" : {
            "$ref" : "#/components/schemas/RdsHighCpuDetectionConfig"
          },
          "rdsHighMemoryDetection" : {
            "$ref" : "#/components/schemas/RdsHighMemoryDetectionConfig"
          },
          "rdsHighWriteReadLatencyDetection" : {
            "$ref" : "#/components/schemas/RdsHighWriteReadLatencyDetectionConfig"
          },
          "rdsLowStorageDetection" : {
            "$ref" : "#/components/schemas/RdsLowStorageDetectionConfig"
          },
          "rdsRestartsSequenceDetection" : {
            "$ref" : "#/components/schemas/RdsRestartsSequenceDetectionConfig"
          }
        },
        "required" : [ "elbHighConnectionErrorsDetection", "lambdaHighErrorRateDetection", "rdsHighCpuDetection", "rdsHighMemoryDetection", "rdsHighWriteReadLatencyDetection", "rdsLowStorageDetection", "rdsRestartsSequenceDetection" ]
      },
      "AwsAuthenticationData" : {
        "type" : "object",
        "description" : "A credentials for the AWS authentication.",
        "properties" : {
          "keyBasedAuthentication" : {
            "$ref" : "#/components/schemas/KeyBasedAuthentication"
          },
          "roleBasedAuthentication" : {
            "$ref" : "#/components/schemas/RoleBasedAuthentication"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the authentication: role-based or key-based.",
            "enum" : [ "KEYS", "ROLE" ]
          }
        },
        "required" : [ "type" ]
      },
      "AwsConfigTag" : {
        "type" : "object",
        "description" : "An AWS tag of the resource to be monitored.",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The key of the AWS tag."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the AWS tag."
          }
        },
        "required" : [ "name", "value" ]
      },
      "AwsCredentialsConfig" : {
        "type" : "object",
        "description" : "Configuration of an AWS credentials.",
        "properties" : {
          "authenticationData" : {
            "$ref" : "#/components/schemas/AwsAuthenticationData"
          },
          "connectionStatus" : {
            "type" : "string",
            "description" : "The status of the connection to the AWS environment. \n\n * `CONNECTED`: There was a connection within last 10 minutes. \n* `DISCONNECTED`: A problem occurred with establishing connection using these credentials. Check whether the data is correct. \n* `UNINITIALIZED`: The successful connection has never been established for these credentials.",
            "enum" : [ "CONNECTED", "DISCONNECTED", "UNINITIALIZED" ],
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the credentials.",
            "readOnly" : true
          },
          "label" : {
            "type" : "string",
            "description" : "The name of the credentials.",
            "minLength" : 1
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "partitionType" : {
            "type" : "string",
            "description" : "The type of the AWS partition.",
            "enum" : [ "AWS_CN", "AWS_DEFAULT", "AWS_US_GOV" ]
          },
          "supportingServicesToMonitor" : {
            "type" : "array",
            "description" : "**Deprecated**. To manage services use [/aws/credentials/{id}/services](https://dt-url.net/l022s6v) operation. Built-in services are not supported here.\n\nA list of AWS services to be monitored. Available services are listed by [/aws/supportedServices](https://dt-url.net/me02sh2) operation.\n\nFor each service, a list of metrics and dimensions can be specified. A list of supported metrics and dimensions for a given service can be checked in [documentation](https://dt-url.net/r12v0pkl).\n\nList of metrics can be skipped (set to null), resulting in recommended (default) set of metrics and dimensions being chosen for monitoring. ",
            "items" : {
              "$ref" : "#/components/schemas/AwsSupportingServiceConfig"
            }
          },
          "taggedOnly" : {
            "type" : "boolean",
            "description" : "Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)."
          },
          "tagsToMonitor" : {
            "type" : "array",
            "description" : "A list of AWS tags to be monitored. \n\nYou can specify up to 10 tags. \n\nOnly applicable when the **taggedOnly** parameter is set to `true`.",
            "items" : {
              "$ref" : "#/components/schemas/AwsConfigTag"
            },
            "maxItems" : 10,
            "minItems" : 0
          }
        },
        "required" : [ "authenticationData", "label", "partitionType", "taggedOnly", "tagsToMonitor" ]
      },
      "AwsIamToken" : {
        "type" : "object",
        "description" : "The external ID token for setting IAM Role in AWS.",
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "The external ID token for setting IAM Role in AWS."
          }
        },
        "required" : [ "token" ]
      },
      "AwsMonitoredServicesDto" : {
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "services" : {
            "type" : "array",
            "description" : "A list of AWS services to be monitored. Available services are listed by [/aws/supportedServices](https://dt-url.net/me02sh2) operation.\n\nFor each service, a list of metrics and dimensions can be specified. A list of supported metrics and dimensions for a given service can be checked in [documentation](https://dt-url.net/r12v0pkl).\n\nList of metrics can be skipped (set to null), resulting in recommended (default) set of metrics and dimensions being chosen for monitoring. For built-in services, adjusting the list of metrics is not supported, therefore it needs to be null.",
            "items" : {
              "$ref" : "#/components/schemas/AwsSupportingServiceConfig"
            }
          }
        },
        "required" : [ "services" ]
      },
      "AwsPrivateLinkConfig" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "Is AWS PrivateLink enabled"
          },
          "vpcEndpointServiceName" : {
            "type" : "string",
            "description" : "The VirtualPrivateCluster-service name",
            "readOnly" : true
          }
        },
        "required" : [ "enabled" ]
      },
      "AwsSupportingServiceConfig" : {
        "type" : "object",
        "description" : "A service to be monitored.",
        "properties" : {
          "monitoredMetrics" : {
            "type" : "array",
            "description" : "A list of metrics to be monitored for this service. If the list is null then recommended list of metrics for this service will be monitored.",
            "items" : {
              "$ref" : "#/components/schemas/AwsSupportingServiceMetric"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the service. Valid supported service names can be discovered using /aws/supportedServices restAPI"
          }
        },
        "required" : [ "name" ]
      },
      "AwsSupportingServiceMetric" : {
        "type" : "object",
        "description" : "A metric of service to be monitored.",
        "properties" : {
          "dimensions" : {
            "type" : "array",
            "description" : "A list of metric's dimensions names.",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 2147483647,
            "minItems" : 1
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the metric of the service."
          },
          "statistic" : {
            "type" : "string",
            "description" : "The statistic (aggregation) to be used for the metric. AVG_MIN_MAX value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM",
            "enum" : [ "AVERAGE", "AVG_MIN_MAX", "MAXIMUM", "MINIMUM", "SAMPLE_COUNT", "SUM" ]
          }
        },
        "required" : [ "dimensions", "name", "statistic" ]
      },
      "Axes" : {
        "type" : "object",
        "description" : "Axes configuration",
        "properties" : {
          "xAxis" : {
            "$ref" : "#/components/schemas/Axis"
          },
          "yAxes" : {
            "type" : "array",
            "description" : "y Axes configuration",
            "items" : {
              "$ref" : "#/components/schemas/YAxis"
            }
          }
        },
        "required" : [ "xAxis", "yAxes" ]
      },
      "Axis" : {
        "type" : "object",
        "description" : "x Axis configuration",
        "properties" : {
          "displayName" : {
            "type" : "string"
          },
          "visible" : {
            "type" : "boolean"
          }
        }
      },
      "AzureClientSecret" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVault"
        }, {
          "type" : "object",
          "properties" : {
            "clientId" : {
              "type" : "string",
              "description" : "Client (application) ID of Azure application in Azure Active Directory which has permission to access secrets in Azure Key Vault."
            },
            "clientSecret" : {
              "type" : "string",
              "description" : "Client secret generated for Azure application in Azure Active Directory used for proving identity when requesting a token used later for accessing secrets in Azure Key Vault."
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant (directory) ID of Azure application in Azure Active Directory which has permission to access secrets in Azure Key Vault."
            }
          }
        } ],
        "description" : "Synchronization credentials with Azure Key Vault using client secret authentication method"
      },
      "AzureClientSecretConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVaultConfig"
        }, {
          "type" : "object",
          "properties" : {
            "clientId" : {
              "type" : "string"
            },
            "clientSecret" : {
              "type" : "string"
            },
            "tenantId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AzureComputeModeComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "DEDICATED", "SHARED" ]
            }
          }
        } ],
        "description" : "Comparison for `AZURE_COMPUTE_MODE` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "AzureCredentials" : {
        "type" : "object",
        "description" : "Configuration of Azure app-level credentials.",
        "properties" : {
          "active" : {
            "type" : "boolean",
            "description" : "The monitoring is enabled (`true`) or disabled (`false`). \n\nIf not set on creation, the `true` value is used. \n\nIf the field is omitted during an update, the old value remains unaffected."
          },
          "appId" : {
            "type" : "string",
            "description" : "The application ID (also referred to as client ID).\n\n The field is **required** when creating a new credentials configuration. \n\n The field is ignored during an update, the old value remains unaffected."
          },
          "autoTagging" : {
            "type" : "boolean",
            "description" : "The automatic capture of Azure tags is on (`true`) or off (`false`)."
          },
          "directoryId" : {
            "type" : "string",
            "description" : "The directory ID (also referred to as tenant ID).\n\n The field is **required** when creating a new credentials configuration. \n\n The field is ignored during an update, the old value remains unaffected."
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the Azure credentials configuration.",
            "readOnly" : true
          },
          "key" : {
            "type" : "string",
            "description" : "The secret key associated with the application ID. \n\nFor security reasons, GET requests return this field as `null`. \n\n Submit your key on creation or update of the configuration. \n\n The field is **required** when creating a new credentials configuration. If the field is omitted during an update, the old value remains unaffected."
          },
          "label" : {
            "type" : "string",
            "description" : "The unique name of the Azure credentials configuration. \n\nAllowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed.",
            "minLength" : 1,
            "pattern" : "^([a-zA-Z0-9_ +-.]*)$"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "monitorOnlyExcludingTagPairs" : {
            "type" : "array",
            "description" : "A list of Azure tags to be excluded from monitoring. \n\nYou can specify up to 20 tags. A resource tagged with *any* of the specified tags will not be monitored. \n\nOnly applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.",
            "items" : {
              "$ref" : "#/components/schemas/CloudTag"
            },
            "maxItems" : 20,
            "minItems" : 0,
            "uniqueItems" : true
          },
          "monitorOnlyTagPairs" : {
            "type" : "array",
            "description" : "A list of Azure tags to be monitored. \n\nYou can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored. \n\nOnly applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.",
            "items" : {
              "$ref" : "#/components/schemas/CloudTag"
            },
            "maxItems" : 20,
            "minItems" : 0,
            "uniqueItems" : true
          },
          "monitorOnlyTaggedEntities" : {
            "type" : "boolean",
            "description" : "Monitor only resources that have specified Azure tags (`true`) or all resources (`false`)."
          },
          "supportingServices" : {
            "type" : "array",
            "description" : "**Deprecated**. To manage services use [/azure/credentials/{id}/services](https://dt-url.net/1w62s27) operation. Built-in services are not supported here.\n\nA list of Azure services to be monitored. Available services are listed by [/azure/supportedServices](https://dt-url.net/wt42sdq) operation.\n\nFor each service, a list of metrics and dimensions can be specified. A list of supported metrics and dimensions for a given service can be checked in [documentation](https://dt-url.net/kx2351b).\n\nList of metrics can be skipped (set to null), resulting in recommended (default) set of metrics and dimensions being chosen for monitoring. ",
            "items" : {
              "$ref" : "#/components/schemas/AzureSupportingService"
            }
          }
        },
        "required" : [ "autoTagging", "label", "monitorOnlyTaggedEntities" ]
      },
      "AzureCredentialsCreation" : {
        "type" : "object",
        "description" : "Configuration of Azure app-level credentials.",
        "properties" : {
          "active" : {
            "type" : "boolean",
            "description" : "The monitoring is enabled (`true`) or disabled (`false`). \n\nIf not set on creation, the `true` value is used. \n\nIf the field is omitted during an update, the old value remains unaffected."
          },
          "appId" : {
            "type" : "string",
            "description" : "The application ID (also referred to as client ID).\n\n The field is **required** when creating a new credentials configuration. \n\n The field is ignored during an update, the old value remains unaffected."
          },
          "autoTagging" : {
            "type" : "boolean",
            "description" : "The automatic capture of Azure tags is on (`true`) or off (`false`)."
          },
          "directoryId" : {
            "type" : "string",
            "description" : "The directory ID (also referred to as tenant ID).\n\n The field is **required** when creating a new credentials configuration. \n\n The field is ignored during an update, the old value remains unaffected."
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the Azure credentials configuration.",
            "readOnly" : true
          },
          "key" : {
            "type" : "string",
            "description" : "The secret key associated with the application ID. \n\nFor security reasons, GET requests return this field as `null`. \n\n Submit your key on creation or update of the configuration. \n\n The field is **required** when creating a new credentials configuration. If the field is omitted during an update, the old value remains unaffected."
          },
          "label" : {
            "type" : "string",
            "description" : "The unique name of the Azure credentials configuration. \n\nAllowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed.",
            "minLength" : 1,
            "pattern" : "^([a-zA-Z0-9_ +-.]*)$"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "monitorOnlyExcludingTagPairs" : {
            "type" : "array",
            "description" : "A list of Azure tags to be excluded from monitoring. \n\nYou can specify up to 20 tags. A resource tagged with *any* of the specified tags will not be monitored. \n\nOnly applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.",
            "items" : {
              "$ref" : "#/components/schemas/CloudTag"
            },
            "maxItems" : 20,
            "minItems" : 0,
            "uniqueItems" : true
          },
          "monitorOnlyTagPairs" : {
            "type" : "array",
            "description" : "A list of Azure tags to be monitored. \n\nYou can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored. \n\nOnly applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.",
            "items" : {
              "$ref" : "#/components/schemas/CloudTag"
            },
            "maxItems" : 20,
            "minItems" : 0,
            "uniqueItems" : true
          },
          "monitorOnlyTaggedEntities" : {
            "type" : "boolean",
            "description" : "Monitor only resources that have specified Azure tags (`true`) or all resources (`false`)."
          },
          "supportingServices" : {
            "type" : "array",
            "description" : "**Deprecated**. To manage services use [/azure/credentials/{id}/services](https://dt-url.net/1w62s27) operation. Built-in services are not supported here.\n\nA list of Azure services to be monitored. Available services are listed by [/azure/supportedServices](https://dt-url.net/wt42sdq) operation.\n\nFor each service, a list of metrics and dimensions can be specified. A list of supported metrics and dimensions for a given service can be checked in [documentation](https://dt-url.net/kx2351b).\n\nList of metrics can be skipped (set to null), resulting in recommended (default) set of metrics and dimensions being chosen for monitoring. ",
            "items" : {
              "$ref" : "#/components/schemas/AzureSupportingService"
            }
          }
        },
        "required" : [ "appId", "autoTagging", "directoryId", "key", "label", "monitorOnlyTaggedEntities" ]
      },
      "AzureMonitoredMetric" : {
        "type" : "object",
        "description" : "A metric of service to be monitored.",
        "properties" : {
          "dimensions" : {
            "type" : "array",
            "description" : "A list of metric's dimensions names. It must include all the recommended dimensions.",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the metric of the service."
          }
        },
        "required" : [ "dimensions", "name" ]
      },
      "AzureMonitoredServicesDto" : {
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "services" : {
            "type" : "array",
            "description" : "A list of Azure services to be monitored. Available services are listed by [/azure/supportedServices](https://dt-url.net/wt42sdq) operation.\n\nFor each service, a list of metrics and dimensions can be specified. A list of supported metrics and dimensions for a given service can be checked in [documentation](https://dt-url.net/kx2351b).\n\nList of metrics can be skipped (set to null), resulting in recommended (default) set of metrics and dimensions being chosen for monitoring. For built-in services, adjusting the list of metrics is not supported, therefore it needs to be null.",
            "items" : {
              "$ref" : "#/components/schemas/AzureSupportingService"
            }
          }
        },
        "required" : [ "services" ]
      },
      "AzureSkuComparision" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "BASIC", "DYNAMIC", "FREE", "PREMIUM", "SHARED", "STANDARD" ]
            }
          }
        } ],
        "description" : "Comparison for `AZURE_SKU` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "AzureSupportingService" : {
        "type" : "object",
        "description" : "A service to be monitored.",
        "properties" : {
          "monitoredMetrics" : {
            "type" : "array",
            "description" : "A list of metrics to be monitored for this service. It must include all the recommended metrics. If the list is null then recommended list of metrics for this service will be monitored.",
            "items" : {
              "$ref" : "#/components/schemas/AzureMonitoredMetric"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the service. Valid supported service names can be discovered using /azure/supportedServices restAPI"
          }
        },
        "required" : [ "name" ]
      },
      "BeaconDomainPattern" : {
        "type" : "object",
        "description" : "Allowed beacon origin for CORS requests.",
        "properties" : {
          "domainNameMatcher" : {
            "type" : "string",
            "description" : "The matching operation for the **domainNamePattern**.",
            "enum" : [ "CONTAINS", "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
          },
          "domainNamePattern" : {
            "type" : "string",
            "description" : "The pattern of the allowed domain name."
          }
        },
        "required" : [ "domainNameMatcher", "domainNamePattern" ]
      },
      "BeforeTransformation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "delimiter" : {
              "type" : "string",
              "description" : "The delimiter of the transformation. The transformation keeps everything before this delimiter and removes everything after it. \n\n The delimiter itself is not kept. \n\nIf several delimiters appear in the initial value, only the first one is used."
            }
          }
        } ],
        "description" : "The transformation of the `BEFORE` type. \n\nThe transformation keeps the value before the specified delimiter and removes everything after it.",
        "required" : [ "delimiter" ]
      },
      "BetweenTransformation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "after" : {
              "type" : "string",
              "description" : "The starting delimiter. The transformation removes everything before it. The delimiter itself is not kept. "
            },
            "before" : {
              "type" : "string",
              "description" : "The ending delimiter. The transformation removes everything after it. The delimiter itself is not kept."
            }
          }
        } ],
        "description" : "The transformation of the `BETWEEN` type.The transformation keeps value between the specified delimiters and removes everything outside them.",
        "required" : [ "after", "before" ]
      },
      "BitnessComparision" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "32", "64" ]
            }
          }
        } ],
        "description" : "Comparison for `BITNESS` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "BooleanComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "boolean",
              "description" : "The value to compare to."
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "boolean",
                "description" : "The values to compare to."
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `BOOLEAN` attributes.",
        "required" : [ "comparison", "negate" ]
      },
      "CalculatedMetricDefinition" : {
        "type" : "object",
        "description" : "The definition of a calculated service metric.",
        "properties" : {
          "metric" : {
            "type" : "string",
            "description" : "The metric to be captured.",
            "enum" : [ "CAPTURED_FULL_SERVICE_CALLS", "CPU_TIME", "DATABASE_CHILD_CALL_COUNT", "DATABASE_CHILD_CALL_TIME", "DISK_IO_TIME", "EXCEPTION_COUNT", "FAILED_REQUEST_COUNT", "FAILED_REQUEST_COUNT_CLIENT", "FAILURE_RATE", "FAILURE_RATE_CLIENT", "HTTP_4XX_ERROR_COUNT", "HTTP_4XX_ERROR_COUNT_CLIENT", "HTTP_5XX_ERROR_COUNT", "HTTP_5XX_ERROR_COUNT_CLIENT", "IO_TIME", "LOCK_TIME", "NETWORK_IO_TIME", "NON_DATABASE_CHILD_CALL_COUNT", "NON_DATABASE_CHILD_CALL_TIME", "PROCESSING_TIME", "REQUEST_ATTRIBUTE", "REQUEST_COUNT", "RESPONSE_TIME", "RESPONSE_TIME_CLIENT", "SUCCESSFUL_REQUEST_COUNT", "SUCCESSFUL_REQUEST_COUNT_CLIENT", "WAIT_TIME" ]
          },
          "requestAttribute" : {
            "type" : "string",
            "description" : "The request attribute to be captured. \n\n Only applicable when the **metric** parameter is set to `REQUEST_ATTRIBUTE`."
          }
        },
        "required" : [ "metric" ]
      },
      "CalculatedMobileMetric" : {
        "type" : "object",
        "description" : "Definition of the calculated metric for mobile or custom app.",
        "example" : {
          "applicationIdentifier" : "MOBILE_APPLICATION-1234",
          "dimensions" : [ {
            "dimension" : "GEOLOCATION",
            "topX" : 20
          } ],
          "enabled" : true,
          "metricKey" : "calc:apps.mobile.mymetric",
          "metricType" : "USER_ACTION_DURATION",
          "name" : "MyMetric",
          "userActionFilter" : {
            "country" : "GEOLOCATION-1234",
            "hasHttpError" : true,
            "osVersion" : "OS-1234"
          }
        },
        "properties" : {
          "applicationIdentifier" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the application to which the metric belongs."
          },
          "dimensions" : {
            "type" : "array",
            "description" : "A list of metric dimensions.",
            "items" : {
              "$ref" : "#/components/schemas/CalculatedMobileMetricDimension"
            },
            "maxItems" : 2,
            "minItems" : 0
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          },
          "metricKey" : {
            "type" : "string",
            "description" : "The unique key of the metric. \n\n The key must have the `calc:apps` prefix.",
            "pattern" : "^calc:apps\\..*"
          },
          "metricType" : {
            "type" : "string",
            "description" : "The type of the metric.",
            "enum" : [ "REPORTED_ERROR_COUNT", "USER_ACTION_DURATION", "WEB_REQUEST_COUNT", "WEB_REQUEST_ERROR_COUNT" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the metric, displayed in the UI.",
            "maxLength" : 100,
            "minLength" : 0
          },
          "userActionFilter" : {
            "$ref" : "#/components/schemas/CalculatedMobileMetricUserActionFilter"
          }
        },
        "required" : [ "applicationIdentifier", "enabled", "metricKey", "metricType", "name" ]
      },
      "CalculatedMobileMetricDimension" : {
        "type" : "object",
        "description" : "Dimension of the calculated mobile metric.",
        "properties" : {
          "dimension" : {
            "type" : "string",
            "description" : "The dimension of the metric.",
            "enum" : [ "APP_VERSION", "DEVICE", "ERROR_CONTEXT", "GEOLOCATION", "MANUFACTURER", "OS" ]
          },
          "topX" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of top values to be calculated.",
            "maximum" : 200,
            "minimum" : 1
          }
        },
        "required" : [ "dimension", "topX" ]
      },
      "CalculatedMobileMetricUpdate" : {
        "type" : "object",
        "description" : "Update of the calculated mobile or custom metric.",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          }
        }
      },
      "CalculatedMobileMetricUserActionFilter" : {
        "type" : "object",
        "description" : "User actions filter of the calculated metric for mobile or custom app.",
        "properties" : {
          "actionDurationFromMilliseconds" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation."
          },
          "actionDurationToMilliseconds" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation."
          },
          "apdex" : {
            "type" : "string",
            "description" : "Only actions with the specified Apdex score are included in the metric calculation.",
            "enum" : [ "Frustrated", "Satisfied", "Tolerating", "Unknown" ]
          },
          "appVersion" : {
            "type" : "string",
            "description" : "Only actions coming from this app version are included in the metric calculation. \n\n The EQUALS operator applies."
          },
          "carrier" : {
            "type" : "string",
            "description" : "Only actions coming from this carrier type are included in the metric calculation."
          },
          "city" : {
            "type" : "string",
            "description" : "Only actions of users from this city are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "connectionType" : {
            "type" : "string",
            "description" : "Only actions coming from this connection type are included in the metric calculation.",
            "enum" : [ "LAN", "MOBILE", "OFFLINE", "UNKNOWN", "WIFI" ]
          },
          "continent" : {
            "type" : "string",
            "description" : "Only actions of users from this continent are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "country" : {
            "type" : "string",
            "description" : "Only actions of users from this country are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "device" : {
            "type" : "string",
            "description" : "Only actions coming from this app version are included in the metric calculation. \n\n The EQUALS operator applies."
          },
          "hasHttpError" : {
            "type" : "boolean",
            "description" : "The HTTP error status of the actions to be included in the metric calculation: \n\n* `true`: Only actions with HTTP errors are included. \n\n * `false`: All actions are included."
          },
          "hasReportedError" : {
            "type" : "boolean",
            "description" : "The error status of the actions to be included in the metric calculation: \n\n* `true`: Only actions with reported errors are included. \n\n * `false`: All actions are included."
          },
          "isp" : {
            "type" : "string",
            "description" : "Only actions coming from this internet service provider are included in the metric calculation. \n\n  The EQUALS operator applies."
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Only actions coming from devices of this manufacturer are included in the metric calculation. \n\n The EQUALS operator applies."
          },
          "networkTechnology" : {
            "type" : "string",
            "description" : "Filter by network technology"
          },
          "orientation" : {
            "type" : "string",
            "description" : "Only actions coming from devices with this display orientation are included in the metric calculation.",
            "enum" : [ "LANDSCAPE", "PORTRAIT", "UNKNOWN" ]
          },
          "osFamily" : {
            "type" : "string",
            "description" : "Only actions coming from this OS family are included in the metric calculation. \n\n Specify the OS ID here."
          },
          "osVersion" : {
            "type" : "string",
            "description" : "Only actions coming from this OS version are included in the metric calculation. \n\n Specify the OS ID here."
          },
          "region" : {
            "type" : "string",
            "description" : "Only actions of users from this region are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "resolution" : {
            "type" : "string",
            "description" : "Only actions coming from devices with this display resolution are included in the metric calculation.",
            "enum" : [ "CGA", "DCI2K", "DCI4K", "DVGA", "FHD", "FWVGA", "FWXGA", "GHDPlus", "HD", "HQVGA", "HQVGA2", "HSXGA", "HUXGA", "HVGA", "HXGA", "NTSC", "PAL", "QHD", "QQVGA", "QSXGA", "QUXGA", "QVGA", "QWXGA", "QXGA", "SVGA", "SXGA", "SXGAMinus", "SXGAPlus", "UGA", "UHD16K", "UHD4K", "UHD8K", "UHDPlus", "UNKNOWN", "UWQHD", "UXGA", "VGA", "WHSXGA", "WHUXGA", "WHXGA", "WQSXGA", "WQUXGA", "WQVGA", "WQVGA2", "WQVGA3", "WQXGA", "WQXGA2", "WSVGA", "WSVGA2", "WSXGA", "WSXGAPlus", "WUXGA", "WVGA", "WVGA2", "WXGA", "WXGA2", "WXGA3", "WXGAPlus", "XGA", "XGAPLUS", "_1280x854", "nHD", "qHD" ]
          },
          "userActionName" : {
            "type" : "string",
            "description" : "Only actions with this name are included in the metric calculation. \n\n The EQUALS operator applies."
          }
        }
      },
      "CalculatedServiceMetric" : {
        "type" : "object",
        "description" : "Descriptor of a calculated service metric.",
        "example" : {
          "conditions" : [ {
            "attribute" : "WEBREQUEST_URL_PATH",
            "comparisonInfo" : {
              "caseSensitive" : false,
              "comparison" : "BEGINS_WITH",
              "negate" : false,
              "type" : "STRING",
              "value" : "/url_path"
            }
          } ],
          "dimensionDefinition" : {
            "dimension" : "{myPlaceholder}",
            "name" : "my dimension",
            "placeholders" : [ {
              "attribute" : "WEBREQUEST_URL_PATH",
              "delimiterOrRegex" : "/booking",
              "kind" : "BEFORE_DELIMITER",
              "name" : "myPlaceholder",
              "normalization" : "ORIGINAL",
              "useFromChildCalls" : "false"
            } ],
            "topX" : 10,
            "topXAggregation" : "AVERAGE",
            "topXDirection" : "DESCENDING"
          },
          "enabled" : true,
          "managementZones" : [ "zone1" ],
          "metricDefinition" : {
            "metric" : "CPU_TIME"
          },
          "name" : "My Metric",
          "tsmMetricKey" : "calc:service.mymetric",
          "unit" : "MICRO_SECOND"
        },
        "properties" : {
          "conditions" : {
            "type" : "array",
            "description" : "The set of conditions for the metric usage. \n\n **All** the specified conditions must be fulfilled to use the metric.",
            "items" : {
              "$ref" : "#/components/schemas/Condition"
            }
          },
          "dimensionDefinition" : {
            "$ref" : "#/components/schemas/DimensionDefinition"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          },
          "entityId" : {
            "type" : "string",
            "description" : "Restricts the metric usage to the specified service. \n\n This field is mutually exclusive with the **managementZones** field."
          },
          "ignoreMutedRequests" : {
            "type" : "boolean",
            "description" : "Metric should (`true`) or not (`false`) ignore muted requests."
          },
          "managementZones" : {
            "type" : "array",
            "description" : "Restricts the metric usage to specified management zones. \n\n This field is mutually exclusive with the **entityId** field.",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 1,
            "minItems" : 0
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "metricDefinition" : {
            "$ref" : "#/components/schemas/CalculatedMetricDefinition"
          },
          "name" : {
            "type" : "string",
            "description" : "The displayed name of the metric.",
            "maxLength" : 200,
            "minLength" : 0
          },
          "tsmMetricKey" : {
            "type" : "string",
            "description" : "The key of the calculated service metric.",
            "maxLength" : 200,
            "minLength" : 0
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of the metric.",
            "enum" : [ "AMPERE", "BILLION", "BIT", "BIT_PER_HOUR", "BIT_PER_MINUTE", "BIT_PER_SECOND", "BYTE", "BYTE_PER_HOUR", "BYTE_PER_MINUTE", "BYTE_PER_SECOND", "CORES", "COUNT", "DAY", "DECIBEL_MILLI_WATT", "GIBI_BYTE", "GIBI_BYTE_PER_HOUR", "GIBI_BYTE_PER_MINUTE", "GIBI_BYTE_PER_SECOND", "GIGA", "GIGA_BYTE", "GIGA_BYTE_PER_HOUR", "GIGA_BYTE_PER_MINUTE", "GIGA_BYTE_PER_SECOND", "HERTZ", "HOUR", "KIBI_BYTE", "KIBI_BYTE_PER_HOUR", "KIBI_BYTE_PER_MINUTE", "KIBI_BYTE_PER_SECOND", "KILO", "KILO_BYTE", "KILO_BYTE_PER_HOUR", "KILO_BYTE_PER_MINUTE", "KILO_BYTE_PER_SECOND", "KILO_METRE_PER_HOUR", "MEBI_BYTE", "MEBI_BYTE_PER_HOUR", "MEBI_BYTE_PER_MINUTE", "MEBI_BYTE_PER_SECOND", "MEGA", "MEGA_BYTE", "MEGA_BYTE_PER_HOUR", "MEGA_BYTE_PER_MINUTE", "MEGA_BYTE_PER_SECOND", "METRE_PER_HOUR", "METRE_PER_SECOND", "MICRO_SECOND", "MILLION", "MILLI_CORES", "MILLI_SECOND", "MILLI_SECOND_PER_MINUTE", "MINUTE", "MONTH", "MSU", "NANO_SECOND", "NANO_SECOND_PER_MINUTE", "NOT_APPLICABLE", "PERCENT", "PER_HOUR", "PER_MINUTE", "PER_SECOND", "PIXEL", "PROMILLE", "RATIO", "SECOND", "STATE", "TRILLION", "UNSPECIFIED", "VOLT", "WATT", "WEEK", "YEAR" ]
          },
          "unitDisplayName" : {
            "type" : "string",
            "description" : "The display name of the metric's unit. \n\n Only applicable when the **unit** parameter is set to `UNSPECIFIED`."
          }
        },
        "required" : [ "enabled", "metricDefinition", "name", "tsmMetricKey", "unit" ]
      },
      "CalculatedSyntheticMetric" : {
        "type" : "object",
        "description" : "Definition of the calculated synthetic metric.",
        "example" : {
          "dimensions" : [ {
            "dimension" : "Location"
          } ],
          "enabled" : true,
          "filter" : {
            "event" : "SYNTHETIC_TEST_STEP-1234",
            "hasError" : true
          },
          "metric" : "UserActionDuration",
          "metricKey" : "calc:synthetic.browser.mymetric",
          "monitorIdentifier" : "SYNTHETIC_TEST-1234",
          "name" : "MyMetric"
        },
        "properties" : {
          "dimensions" : {
            "type" : "array",
            "description" : "A list of metric dimensions.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticMetricDimension"
            },
            "maxItems" : 2,
            "minItems" : 0
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          },
          "filter" : {
            "$ref" : "#/components/schemas/SyntheticMetricFilter"
          },
          "metric" : {
            "type" : "string",
            "description" : "The type of the synthetic metric.",
            "enum" : [ "ApplicationCache", "Callback", "CumulativeLayoutShift", "DNSLookup", "DOMComplete", "DOMContentLoaded", "DOMInteractive", "FailedRequestsResources", "FirstContentfulPaint", "FirstInputDelay", "FirstInputStart", "FirstPaint", "HTMLDownloaded", "HttpErrors", "JavaScriptErrors", "LargestContentfulPaint", "LoadEventEnd", "LoadEventStart", "LongTasks", "NavigationStart", "OnDOMContentLoaded", "OnLoad", "Processing", "RedirectTime", "Request", "RequestStart", "ResourceCount", "Response", "SecureConnect", "SpeedIndex", "TCPConnect", "TimeToFirstByte", "TotalDuration", "TransferSize", "UserActionDuration", "VisuallyComplete" ]
          },
          "metricKey" : {
            "type" : "string",
            "description" : "The unique key of the metric. \n\n The key must have the `calc:synthetic` prefix."
          },
          "monitorIdentifier" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the synthetic monitor to which the metric belongs."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the metric, displayed in the UI.",
            "maxLength" : 100,
            "minLength" : 0
          }
        },
        "required" : [ "enabled", "metric", "metricKey", "monitorIdentifier", "name" ]
      },
      "CapturedMethod" : {
        "type" : "object",
        "properties" : {
          "argumentIndex" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The index of the argument to capture. Set `0` to capture the return value, `1` or higher to capture a mehtod argument. \n\n Required if the **capture** is set to `ARGUMENT`.\n\n Not applicable in other cases.",
            "minimum" : 0
          },
          "capture" : {
            "type" : "string",
            "description" : "What to capture from the method.",
            "enum" : [ "ARGUMENT", "CLASS_NAME", "METHOD_NAME", "OCCURRENCES", "SIMPLE_CLASS_NAME", "THIS" ]
          },
          "deepObjectAccess" : {
            "type" : "string",
            "description" : "The getter chain to apply to the captured object. It is required in one of the following cases:\n\n The **capture** is set to `THIS`. \n  The **capture** is set to `ARGUMENT`, and the argument is not a primitive, a primitive wrapper class, a string, or an array. \n\n Not applicable in other cases."
          },
          "method" : {
            "$ref" : "#/components/schemas/MethodReference"
          }
        },
        "required" : [ "capture", "method" ]
      },
      "CertificateCredentials" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Credentials"
        }, {
          "type" : "object",
          "properties" : {
            "certificate" : {
              "type" : "string",
              "description" : "The certificate in the string format."
            },
            "certificateFormat" : {
              "type" : "string",
              "description" : "The certificate format.",
              "enum" : [ "PEM", "PKCS12", "UNKNOWN" ]
            },
            "password" : {
              "type" : "string",
              "description" : "The password of the credential (Base64 encoded)."
            }
          }
        } ],
        "description" : "A credentials set of the `CERTIFICATE` type.",
        "required" : [ "certificate", "certificateFormat", "name", "password", "scopes" ]
      },
      "CloudFoundryCredentials" : {
        "type" : "object",
        "description" : "Configuration for specific Cloud Foundry credentials.",
        "properties" : {
          "active" : {
            "type" : "boolean",
            "description" : "The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration. \n\nIf not set on creation, the `true` value is used. \n\nIf the field is omitted during an update, the old value remains unaffected."
          },
          "apiUrl" : {
            "type" : "string",
            "description" : "The URL of the Cloud Foundry foundation credentials. \n\nThe URL must be valid according to RFC 2396. \n\nLeading or trailing whitespaces are not allowed."
          },
          "endpointStatus" : {
            "type" : "string",
            "description" : "The status of the configured endpoint.\n\nASSIGNED: The credentials are assigned to an ActiveGate which is responsible for processing.\nUNASSIGNED: The credentials are not yet assigned to an ActiveGate so there is currently no processing.\nDISABLED: The credentials have been disabled by the user.\nFASTCHECK_AUTH_ERROR: The credentials are invalid.\nFASTCHECK_TLS_ERROR: The endpoint TLS certificate is invalid.\nFASTCHECK_NO_RESPONSE: The endpoint did not return a result until the timeout was reached.\nFASTCHECK_INVALID_ENDPOINT: The endpoint URL was invalid.\nFASTCHECK_AUTH_LOCKED: The credentials seem to be locked.\nUNKNOWN: An unknown error occured.\n",
            "enum" : [ "ASSIGNED", "DISABLED", "FASTCHECK_AUTH_ERROR", "FASTCHECK_AUTH_LOCKED", "FASTCHECK_INVALID_ENDPOINT", "FASTCHECK_LOW_MEMORY_ERROR", "FASTCHECK_NO_RESPONSE", "FASTCHECK_TLS_ERROR", "FASTCHECK_TOO_BIG_ENVIRONMENT", "UNASSIGNED", "UNKNOWN" ],
            "readOnly" : true
          },
          "endpointStatusInfo" : {
            "type" : "string",
            "description" : "The detailed status info of the configured endpoint.",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the given credentials configuration.",
            "readOnly" : true
          },
          "loginUrl" : {
            "type" : "string",
            "description" : "The login URL of the Cloud Foundry foundation credentials. \n\nThe URL must be valid according to RFC 2396. \n\nLeading or trailing whitespaces are not allowed."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Cloud Foundry foundation credentials. \n\nAllowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.",
            "minLength" : 1,
            "pattern" : "^([a-zA-Z0-9_ +-.]*)$"
          },
          "password" : {
            "type" : "string",
            "description" : "The password of the Cloud Foundry foundation credentials."
          },
          "username" : {
            "type" : "string",
            "description" : "The username of the Cloud Foundry foundation credentials. \n\nLeading and trailing whitespaces are not allowed.",
            "minLength" : 1
          }
        },
        "required" : [ "apiUrl", "loginUrl", "name", "username" ]
      },
      "CloudSupportedService" : {
        "type" : "object",
        "description" : "A supported service metadata",
        "properties" : {
          "cloudProviderServiceType" : {
            "type" : "string",
            "description" : "Name of service used by cloud provider."
          },
          "displayName" : {
            "type" : "string",
            "description" : "Display name for service on Dynatrace UI"
          },
          "entityType" : {
            "type" : "string",
            "description" : "Entity type monitored by this service"
          },
          "name" : {
            "type" : "string",
            "description" : "Service unique name used by Dynatrace. "
          }
        },
        "required" : [ "cloudProviderServiceType", "displayName", "entityType", "name" ]
      },
      "CloudSupportedServicesList" : {
        "type" : "object",
        "description" : "A supported services metadata list",
        "properties" : {
          "services" : {
            "type" : "array",
            "description" : "List of supported services metadata",
            "items" : {
              "$ref" : "#/components/schemas/CloudSupportedService"
            }
          }
        }
      },
      "CloudTag" : {
        "type" : "object",
        "description" : "A cloud tag.",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the tag."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the tag. \n\n If set to `null` or `\"\"`, then resources with any value of the tag are monitored."
          }
        }
      },
      "CloudTypeComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "AZURE", "EC2", "GOOGLE_CLOUD_PLATFORM", "OPENSTACK", "ORACLE", "UNRECOGNIZED" ]
            }
          }
        } ],
        "description" : "Comparison for `CLOUD_TYPE` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "ColumnDefinition" : {
        "type" : "object",
        "description" : "Definition of numeric column.",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "name" : {
            "type" : "string",
            "minLength" : 1
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `CUSTOM` -> CustomColumnDefinition \n* `JSON` -> JsonColumnDefinition \n",
            "enum" : [ "CUSTOM", "JSON" ]
          }
        },
        "required" : [ "name", "type" ]
      },
      "CompareOperation" : {
        "type" : "object",
        "description" : "The condition of the rule. \n\nThe actual set of fields depends on the type of the condition. Find the list of actual objects in the description of the **type** field or see [Service detection API - JSON models](https://dt-url.net/2ie3slq).",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `EQUALS` -> EqualsCompareOperation \n* `STRING_CONTAINS` -> StringContainsCompareOperation \n* `STARTS_WITH` -> StartsWithCompareOperation \n* `ENDS_WITH` -> EndsWithCompareOperation \n* `EXISTS` -> ExistsCompareOperation \n* `IP_IN_RANGE` -> IpInRangeCompareOperation \n* `LESS_THAN` -> LessThanCompareOperation \n* `GREATER_THAN` -> GreaterThanCompareOperation \n* `INT_EQUALS` -> IntEqualsCompareOperation \n* `STRING_EQUALS` -> StringEqualsCompareOperation \n* `TAG` -> TagCompareOperation \n",
            "enum" : [ "ENDS_WITH", "EQUALS", "EXISTS", "GREATER_THAN", "INT_EQUALS", "IP_IN_RANGE", "LESS_THAN", "STARTS_WITH", "STRING_CONTAINS", "STRING_EQUALS", "TAG" ]
          }
        },
        "required" : [ "type" ]
      },
      "ComparisonBasic" : {
        "type" : "object",
        "description" : "Defines how the matching is actually performed: what and how are we comparing. \n\nThe actual set of fields and possible values of the **operator** field depend on the type of the comparison. Find the list of actual objects in the description of the **type** field or see [JSON models](https://dt-url.net/0b83s6z).",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "negate" : {
            "type" : "boolean",
            "description" : "Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**."
          },
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need."
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `STRING` -> StringComparison \n* `INDEXED_NAME` -> IndexedNameComparison \n* `INDEXED_STRING` -> IndexedStringComparison \n* `INTEGER` -> IntegerComparison \n* `SERVICE_TYPE` -> ServiceTypeComparison \n* `PAAS_TYPE` -> PaasTypeComparison \n* `CLOUD_TYPE` -> CloudTypeComparison \n* `AZURE_SKU` -> AzureSkuComparision \n* `AZURE_COMPUTE_MODE` -> AzureComputeModeComparison \n* `ENTITY_ID` -> EntityIdComparison \n* `SIMPLE_TECH` -> SimpleTechComparison \n* `SIMPLE_HOST_TECH` -> SimpleHostTechComparison \n* `SERVICE_TOPOLOGY` -> ServiceTopologyComparison \n* `DATABASE_TOPOLOGY` -> DatabaseTopologyComparison \n* `OS_TYPE` -> OsTypeComparison \n* `HYPERVISOR_TYPE` -> HypervisorTypeComparision \n* `IP_ADDRESS` -> IpAddressComparison \n* `OS_ARCHITECTURE` -> OsArchitectureComparison \n* `BITNESS` -> BitnessComparision \n* `APPLICATION_TYPE` -> ApplicationTypeComparison \n* `MOBILE_PLATFORM` -> MobilePlatformComparison \n* `CUSTOM_APPLICATION_TYPE` -> CustomApplicationTypeComparison \n* `DCRUM_DECODER_TYPE` -> DcrumDecoderComparison \n* `SYNTHETIC_ENGINE_TYPE` -> SyntheticEngineTypeComparison \n* `TAG` -> TagComparison \n* `INDEXED_TAG` -> IndexedTagComparison \n",
            "enum" : [ "APPLICATION_TYPE", "AZURE_COMPUTE_MODE", "AZURE_SKU", "BITNESS", "CLOUD_TYPE", "CUSTOM_APPLICATION_TYPE", "DATABASE_TOPOLOGY", "DCRUM_DECODER_TYPE", "ENTITY_ID", "HYPERVISOR_TYPE", "INDEXED_NAME", "INDEXED_STRING", "INDEXED_TAG", "INTEGER", "IP_ADDRESS", "MOBILE_PLATFORM", "OS_ARCHITECTURE", "OS_TYPE", "PAAS_TYPE", "SERVICE_TOPOLOGY", "SERVICE_TYPE", "SIMPLE_HOST_TECH", "SIMPLE_TECH", "STRING", "SYNTHETIC_ENGINE_TYPE", "TAG" ]
          },
          "value" : {
            "type" : "object",
            "description" : "The value to compare to."
          }
        },
        "required" : [ "negate", "operator", "type" ]
      },
      "ComparisonInfo" : {
        "type" : "object",
        "description" : "Type-specific comparison for attributes. The actual set of fields depends on the type of the comparison. Find the list of actual objects in the description of the **type** field or see [Service metrics API - JSON models](https://dt-url.net/9803svb).",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`."
          },
          "negate" : {
            "type" : "boolean",
            "description" : "Reverse the comparison **operator**. For example, it turns **equals** into **does not equal**."
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `STRING` -> StringComparisonInfo \n* `NUMBER` -> NumberComparisonInfo \n* `BOOLEAN` -> BooleanComparisonInfo \n* `HTTP_METHOD` -> HttpMethodComparisonInfo \n* `STRING_REQUEST_ATTRIBUTE` -> StringRequestAttributeComparisonInfo \n* `NUMBER_REQUEST_ATTRIBUTE` -> NumberRequestAttributeComparisonInfo \n* `ZOS_CALL_TYPE` -> ZosComparisonInfo \n* `IIB_INPUT_NODE_TYPE` -> IIBInputNodeTypeComparisonInfo \n* `ESB_INPUT_NODE_TYPE` -> ESBInputNodeTypeComparisonInfo \n* `FAILED_STATE` -> FailedStateComparisonInfo \n* `FLAW_STATE` -> FlawStateComparisonInfo \n* `FAILURE_REASON` -> FailureReasonComparisonInfo \n* `HTTP_STATUS_CLASS` -> HttpStatusClassComparisonInfo \n* `TAG` -> TagComparisonInfo \n* `FAST_STRING` -> FastStringComparisonInfo \n* `SERVICE_TYPE` -> ServiceTypeComparisonInfo \n",
            "enum" : [ "BOOLEAN", "ESB_INPUT_NODE_TYPE", "FAILED_STATE", "FAILURE_REASON", "FAST_STRING", "FLAW_STATE", "HTTP_METHOD", "HTTP_STATUS_CLASS", "IIB_INPUT_NODE_TYPE", "NUMBER", "NUMBER_REQUEST_ATTRIBUTE", "SERVICE_TYPE", "STRING", "STRING_REQUEST_ATTRIBUTE", "TAG", "ZOS_CALL_TYPE" ]
          },
          "value" : {
            "type" : "object",
            "description" : "The value to compare to."
          },
          "values" : {
            "type" : "array",
            "description" : "The values to compare to.",
            "items" : {
              "type" : "object",
              "description" : "The values to compare to."
            },
            "maxItems" : 50,
            "minItems" : 0,
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "uniqueItems" : true
          }
        },
        "required" : [ "comparison", "negate", "type" ]
      },
      "Condition" : {
        "type" : "object",
        "description" : "A condition of a rule usage.",
        "properties" : {
          "attribute" : {
            "type" : "string",
            "description" : "The attribute to be matched. \n\nNote that for a service property attribute you must use the comparison of the `FAST_STRING` type.",
            "enum" : [ "ACTOR_SYSTEM", "AKKA_ACTOR_CLASS_NAME", "AKKA_ACTOR_MESSAGE_TYPE", "AKKA_ACTOR_PATH", "APPLICATION_BUILD_VERSION", "APPLICATION_ENVIRONMENT", "APPLICATION_NAME", "APPLICATION_RELEASE_VERSION", "AZURE_FUNCTIONS_FUNCTION_NAME", "AZURE_FUNCTIONS_SITE_NAME", "CICS_PROGRAM_NAME", "CICS_SYSTEM_ID", "CICS_TASK_ID", "CICS_TRANSACTION_ID", "CICS_USER_ID", "CPU_TIME", "CTG_GATEWAY_URL", "CTG_PROGRAM", "CTG_SERVER_NAME", "CTG_TRANSACTION_ID", "CUSTOMSERVICE_CLASS", "CUSTOMSERVICE_METHOD", "DATABASE_CHILD_CALL_COUNT", "DATABASE_CHILD_CALL_TIME", "DATABASE_HOST", "DATABASE_NAME", "DATABASE_STATEMENT", "DATABASE_TYPE", "DATABASE_URL", "DISK_IO_TIME", "ERROR_COUNT", "ESB_APPLICATION_NAME", "ESB_INPUT_TYPE", "ESB_LIBRARY_NAME", "ESB_MESSAGE_FLOW_NAME", "EXCEPTION_CLASS", "EXCEPTION_MESSAGE", "FAILED_STATE", "FAILURE_REASON", "FLAW_STATE", "HTTP_REQUEST_METHOD", "HTTP_STATUS", "HTTP_STATUS_CLASS", "IMS_PROGRAM_NAME", "IMS_TRANSACTION_ID", "IMS_USER_ID", "IO_TIME", "IS_KEY_REQUEST", "LAMBDA_COLDSTART", "LOCK_TIME", "MESSAGING_DESTINATION_TYPE", "MESSAGING_IS_TEMPORARY_QUEUE", "MESSAGING_QUEUE_NAME", "MESSAGING_QUEUE_VENDOR", "NETWORK_IO_TIME", "NON_DATABASE_CHILD_CALL_COUNT", "NON_DATABASE_CHILD_CALL_TIME", "PROCESS_GROUP_NAME", "PROCESS_GROUP_TAG", "REMOTE_ENDPOINT", "REMOTE_METHOD", "REMOTE_SERVICE_NAME", "REQUEST_NAME", "REQUEST_TYPE", "RESPONSE_TIME", "RESPONSE_TIME_CLIENT", "RMI_CLASS", "RMI_METHOD", "SERVICE_DISPLAY_NAME", "SERVICE_NAME", "SERVICE_PORT", "SERVICE_PUBLIC_DOMAIN_NAME", "SERVICE_REQUEST_ATTRIBUTE", "SERVICE_TAG", "SERVICE_TYPE", "SERVICE_WEB_APPLICATION_ID", "SERVICE_WEB_CONTEXT_ROOT", "SERVICE_WEB_SERVER_NAME", "SERVICE_WEB_SERVICE_NAME", "SERVICE_WEB_SERVICE_NAMESPACE", "SUSPENSION_TIME", "TOTAL_PROCESSING_TIME", "WAIT_TIME", "WEBREQUEST_QUERY", "WEBREQUEST_RELATIVE_URL", "WEBREQUEST_URL", "WEBREQUEST_URL_HOST", "WEBREQUEST_URL_PATH", "WEBREQUEST_URL_PORT", "WEBSERVICE_ENDPOINT", "WEBSERVICE_METHOD", "ZOS_CALL_TYPE" ]
          },
          "comparisonInfo" : {
            "$ref" : "#/components/schemas/ComparisonInfo"
          }
        },
        "required" : [ "attribute", "comparisonInfo" ]
      },
      "ConditionKey" : {
        "type" : "object",
        "description" : "The key to identify the data we're matching. \n\nThe actual set of fields and possible values depend on the type of the key. Find the list of actual objects in the description of the **type** field or see [JSON models](https://dt-url.net/0b83s6z).",
        "discriminator" : {
          "mapping" : {
            "HOST_CUSTOM_METADATA_KEY" : "#/components/schemas/CustomHostMetadataConditionKey",
            "PROCESS_CUSTOM_METADATA_KEY" : "#/components/schemas/CustomProcessMetadataConditionKey",
            "PROCESS_PREDEFINED_METADATA_KEY" : "#/components/schemas/ProcessMetadataConditionKey",
            "STATIC" : "#/components/schemas/StaticConditionKey",
            "STRING" : "#/components/schemas/StringConditionKey"
          },
          "propertyName" : "type"
        },
        "properties" : {
          "attribute" : {
            "type" : "string",
            "description" : "The attribute to be used for comparison.",
            "enum" : [ "APPMON_SERVER_NAME", "APPMON_SYSTEM_PROFILE_NAME", "AWS_ACCOUNT_ID", "AWS_ACCOUNT_NAME", "AWS_APPLICATION_LOAD_BALANCER_NAME", "AWS_APPLICATION_LOAD_BALANCER_TAGS", "AWS_AUTO_SCALING_GROUP_NAME", "AWS_AUTO_SCALING_GROUP_TAGS", "AWS_AVAILABILITY_ZONE_NAME", "AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS", "AWS_CLASSIC_LOAD_BALANCER_NAME", "AWS_CLASSIC_LOAD_BALANCER_TAGS", "AWS_NETWORK_LOAD_BALANCER_NAME", "AWS_NETWORK_LOAD_BALANCER_TAGS", "AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME", "AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT", "AWS_RELATIONAL_DATABASE_SERVICE_ENGINE", "AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS", "AWS_RELATIONAL_DATABASE_SERVICE_NAME", "AWS_RELATIONAL_DATABASE_SERVICE_PORT", "AWS_RELATIONAL_DATABASE_SERVICE_TAGS", "AZURE_ENTITY_NAME", "AZURE_ENTITY_TAGS", "AZURE_MGMT_GROUP_NAME", "AZURE_MGMT_GROUP_UUID", "AZURE_REGION_NAME", "AZURE_SCALE_SET_NAME", "AZURE_SUBSCRIPTION_NAME", "AZURE_SUBSCRIPTION_UUID", "AZURE_TENANT_NAME", "AZURE_TENANT_UUID", "AZURE_VM_NAME", "BROWSER_MONITOR_NAME", "BROWSER_MONITOR_TAGS", "CLOUD_APPLICATION_LABELS", "CLOUD_APPLICATION_NAME", "CLOUD_APPLICATION_NAMESPACE_LABELS", "CLOUD_APPLICATION_NAMESPACE_NAME", "CLOUD_FOUNDRY_FOUNDATION_NAME", "CLOUD_FOUNDRY_ORG_NAME", "CUSTOM_APPLICATION_NAME", "CUSTOM_APPLICATION_PLATFORM", "CUSTOM_APPLICATION_TAGS", "CUSTOM_APPLICATION_TYPE", "CUSTOM_DEVICE_DETECTED_NAME", "CUSTOM_DEVICE_DNS_ADDRESS", "CUSTOM_DEVICE_GROUP_NAME", "CUSTOM_DEVICE_GROUP_TAGS", "CUSTOM_DEVICE_IP_ADDRESS", "CUSTOM_DEVICE_METADATA", "CUSTOM_DEVICE_NAME", "CUSTOM_DEVICE_PORT", "CUSTOM_DEVICE_TAGS", "CUSTOM_DEVICE_TECHNOLOGY", "DATA_CENTER_SERVICE_DECODER_TYPE", "DATA_CENTER_SERVICE_IP_ADDRESS", "DATA_CENTER_SERVICE_METADATA", "DATA_CENTER_SERVICE_NAME", "DATA_CENTER_SERVICE_PORT", "DATA_CENTER_SERVICE_TAGS", "DOCKER_CONTAINER_NAME", "DOCKER_FULL_IMAGE_NAME", "DOCKER_IMAGE_VERSION", "DOCKER_STRIPPED_IMAGE_NAME", "EC2_INSTANCE_AMI_ID", "EC2_INSTANCE_AWS_INSTANCE_TYPE", "EC2_INSTANCE_AWS_SECURITY_GROUP", "EC2_INSTANCE_BEANSTALK_ENV_NAME", "EC2_INSTANCE_ID", "EC2_INSTANCE_NAME", "EC2_INSTANCE_PRIVATE_HOST_NAME", "EC2_INSTANCE_PUBLIC_HOST_NAME", "EC2_INSTANCE_TAGS", "ENTERPRISE_APPLICATION_DECODER_TYPE", "ENTERPRISE_APPLICATION_IP_ADDRESS", "ENTERPRISE_APPLICATION_METADATA", "ENTERPRISE_APPLICATION_NAME", "ENTERPRISE_APPLICATION_PORT", "ENTERPRISE_APPLICATION_TAGS", "ESXI_HOST_CLUSTER_NAME", "ESXI_HOST_HARDWARE_MODEL", "ESXI_HOST_HARDWARE_VENDOR", "ESXI_HOST_NAME", "ESXI_HOST_PRODUCT_NAME", "ESXI_HOST_PRODUCT_VERSION", "ESXI_HOST_TAGS", "EXTERNAL_MONITOR_ENGINE_DESCRIPTION", "EXTERNAL_MONITOR_ENGINE_NAME", "EXTERNAL_MONITOR_ENGINE_TYPE", "EXTERNAL_MONITOR_NAME", "EXTERNAL_MONITOR_TAGS", "GEOLOCATION_SITE_NAME", "GOOGLE_CLOUD_PLATFORM_ZONE_NAME", "GOOGLE_COMPUTE_INSTANCE_ID", "GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE", "GOOGLE_COMPUTE_INSTANCE_NAME", "GOOGLE_COMPUTE_INSTANCE_PROJECT", "GOOGLE_COMPUTE_INSTANCE_PROJECT_ID", "GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES", "HOST_AIX_LOGICAL_CPU_COUNT", "HOST_AIX_SIMULTANEOUS_THREADS", "HOST_AIX_VIRTUAL_CPU_COUNT", "HOST_ARCHITECTURE", "HOST_AWS_NAME_TAG", "HOST_AZURE_COMPUTE_MODE", "HOST_AZURE_SKU", "HOST_AZURE_WEB_APPLICATION_HOST_NAMES", "HOST_AZURE_WEB_APPLICATION_SITE_NAMES", "HOST_BITNESS", "HOST_BOSH_AVAILABILITY_ZONE", "HOST_BOSH_DEPLOYMENT_ID", "HOST_BOSH_INSTANCE_ID", "HOST_BOSH_INSTANCE_NAME", "HOST_BOSH_NAME", "HOST_BOSH_STEMCELL_VERSION", "HOST_CLOUD_TYPE", "HOST_CPU_CORES", "HOST_CUSTOM_METADATA", "HOST_DETECTED_NAME", "HOST_GROUP_ID", "HOST_GROUP_NAME", "HOST_HYPERVISOR_TYPE", "HOST_IP_ADDRESS", "HOST_KUBERNETES_LABELS", "HOST_LOGICAL_CPU_CORES", "HOST_NAME", "HOST_ONEAGENT_CUSTOM_HOST_NAME", "HOST_OS_TYPE", "HOST_OS_VERSION", "HOST_PAAS_MEMORY_LIMIT", "HOST_PAAS_TYPE", "HOST_TAGS", "HOST_TECHNOLOGY", "HTTP_MONITOR_NAME", "HTTP_MONITOR_TAGS", "KUBERNETES_CLUSTER_NAME", "KUBERNETES_NODE_NAME", "KUBERNETES_SERVICE_NAME", "MOBILE_APPLICATION_NAME", "MOBILE_APPLICATION_PLATFORM", "MOBILE_APPLICATION_TAGS", "NAME_OF_COMPUTE_NODE", "OPENSTACK_ACCOUNT_NAME", "OPENSTACK_ACCOUNT_PROJECT_NAME", "OPENSTACK_AVAILABILITY_ZONE_NAME", "OPENSTACK_PROJECT_NAME", "OPENSTACK_REGION_NAME", "OPENSTACK_VM_INSTANCE_TYPE", "OPENSTACK_VM_NAME", "OPENSTACK_VM_SECURITY_GROUP", "PROCESS_GROUP_AZURE_HOST_NAME", "PROCESS_GROUP_AZURE_SITE_NAME", "PROCESS_GROUP_CUSTOM_METADATA", "PROCESS_GROUP_DETECTED_NAME", "PROCESS_GROUP_ID", "PROCESS_GROUP_LISTEN_PORT", "PROCESS_GROUP_NAME", "PROCESS_GROUP_PREDEFINED_METADATA", "PROCESS_GROUP_TAGS", "PROCESS_GROUP_TECHNOLOGY", "PROCESS_GROUP_TECHNOLOGY_EDITION", "PROCESS_GROUP_TECHNOLOGY_VERSION", "QUEUE_NAME", "QUEUE_TECHNOLOGY", "QUEUE_VENDOR", "SERVICE_AKKA_ACTOR_SYSTEM", "SERVICE_CTG_SERVICE_NAME", "SERVICE_DATABASE_HOST_NAME", "SERVICE_DATABASE_NAME", "SERVICE_DATABASE_TOPOLOGY", "SERVICE_DATABASE_VENDOR", "SERVICE_DETECTED_NAME", "SERVICE_ESB_APPLICATION_NAME", "SERVICE_IBM_CTG_GATEWAY_URL", "SERVICE_IIB_APPLICATION_NAME", "SERVICE_MESSAGING_LISTENER_CLASS_NAME", "SERVICE_NAME", "SERVICE_PORT", "SERVICE_PUBLIC_DOMAIN_NAME", "SERVICE_REMOTE_ENDPOINT", "SERVICE_REMOTE_SERVICE_NAME", "SERVICE_TAGS", "SERVICE_TECHNOLOGY", "SERVICE_TECHNOLOGY_EDITION", "SERVICE_TECHNOLOGY_VERSION", "SERVICE_TOPOLOGY", "SERVICE_TYPE", "SERVICE_WEB_APPLICATION_ID", "SERVICE_WEB_CONTEXT_ROOT", "SERVICE_WEB_SERVER_ENDPOINT", "SERVICE_WEB_SERVER_NAME", "SERVICE_WEB_SERVICE_NAME", "SERVICE_WEB_SERVICE_NAMESPACE", "VMWARE_DATACENTER_NAME", "VMWARE_VM_NAME", "WEB_APPLICATION_NAME", "WEB_APPLICATION_NAME_PATTERN", "WEB_APPLICATION_TAGS", "WEB_APPLICATION_TYPE" ]
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `PROCESS_CUSTOM_METADATA_KEY` -> CustomProcessMetadataConditionKey \n* `HOST_CUSTOM_METADATA_KEY` -> CustomHostMetadataConditionKey \n* `PROCESS_PREDEFINED_METADATA_KEY` -> ProcessMetadataConditionKey \n* `STRING` -> StringConditionKey \n* `STATIC` -> StaticConditionKey \n",
            "enum" : [ "HOST_CUSTOM_METADATA_KEY", "PROCESS_CUSTOM_METADATA_KEY", "PROCESS_PREDEFINED_METADATA_KEY", "STATIC", "STRING" ]
          }
        },
        "required" : [ "attribute" ]
      },
      "ConditionalNamingRule" : {
        "type" : "object",
        "description" : "The rule for the conditional naming.",
        "example" : {
          "displayName" : "TestRule",
          "enabled" : true,
          "id" : "4e88530c-edec-4e31-9cb4-3f2c63abc2b7",
          "nameFormat" : "TestNameFormat",
          "rules" : [ {
            "comparisonInfo" : {
              "negate" : "false",
              "operator" : "EQUALS",
              "type" : "SIMPLE_TECH",
              "value" : {
                "type" : "JAVA"
              }
            },
            "key" : {
              "attribute" : "PROCESS_GROUP_TECHNOLOGY"
            }
          }, {
            "comparisonInfo" : {
              "caseSensitive" : true,
              "negate" : "false",
              "operator" : "CONTAINS",
              "type" : "STRING",
              "value" : "test"
            },
            "key" : {
              "attribute" : "PROCESS_GROUP_PREDEFINED_METADATA",
              "dynamicKey" : "EXE_NAME",
              "type" : "PROCESS_PREDEFINED_METADATA_KEY"
            }
          } ],
          "type" : "PROCESS_GROUP"
        },
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The name of the rule",
            "example" : "Host Naming Rule using Cores",
            "maxLength" : 99,
            "minLength" : 1
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the naming rule.",
            "example" : "12345678-abcd-1234-abcd-1234567890ab"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "nameFormat" : {
            "type" : "string",
            "description" : "The name to be assigned to matching entities. You can use the following placeholders here: \n\n* `{AwsAutoScalingGroup:Name}` \n* `{AwsAvailabilityZone:Name}` \n* `{AwsElasticLoadBalancer:Name}` \n* `{AwsRelationalDatabaseService:DBName}` \n* `{AwsRelationalDatabaseService:Endpoint}` \n* `{AwsRelationalDatabaseService:Engine}` \n* `{AwsRelationalDatabaseService:InstanceClass}` \n* `{AwsRelationalDatabaseService:Name}` \n* `{AwsRelationalDatabaseService:Port}` \n* `{AzureRegion:Name}` \n* `{AzureScaleSet:Name}` \n* `{AzureVm:Name}` \n* `{CloudFoundryOrganization:Name}` \n* `{CustomDevice:DetectedName}` \n* `{CustomDevice:DnsName}` \n* `{CustomDevice:IpAddress}` \n* `{CustomDevice:Port}` \n* `{DockerContainerGroupInstance:ContainerName}` \n* `{DockerContainerGroupInstance:FullImageName}` \n* `{DockerContainerGroupInstance:ImageVersion}` \n* `{ESXIHost:HardwareModel}` \n* `{ESXIHost:HardwareVendor}` \n* `{ESXIHost:Name}` \n* `{ESXIHost:ProductName}` \n* `{ESXIHost:ProductVersion}` \n* `{Ec2Instance:AmiId}` \n* `{Ec2Instance:BeanstalkEnvironmentName}` \n* `{Ec2Instance:InstanceId}` \n* `{Ec2Instance:InstanceType}` \n* `{Ec2Instance:LocalHostName}` \n* `{Ec2Instance:Name}` \n* `{Ec2Instance:PublicHostName}` \n* `{Ec2Instance:SecurityGroup}` \n* `{GoogleComputeInstance:Id}` \n* `{GoogleComputeInstance:IpAddresses}` \n* `{GoogleComputeInstance:MachineType}` \n* `{GoogleComputeInstance:Name}` \n* `{GoogleComputeInstance:ProjectId}` \n* `{GoogleComputeInstance:Project}` \n* `{Host:AWSNameTag}` \n* `{Host:AixLogicalCpuCount}` \n* `{Host:AzureHostName}` \n* `{Host:AzureSiteName}` \n* `{Host:BoshDeploymentId}` \n* `{Host:BoshInstanceId}` \n* `{Host:BoshInstanceName}` \n* `{Host:BoshName}` \n* `{Host:BoshStemcellVersion}` \n* `{Host:CpuCores}` \n* `{Host:DetectedName}` \n* `{Host:Environment:AppName}` \n* `{Host:Environment:BoshReleaseVersion}` \n* `{Host:Environment:Environment}` \n* `{Host:Environment:Link}` \n* `{Host:Environment:Organization}` \n* `{Host:Environment:Owner}` \n* `{Host:Environment:Support}` \n* `{Host:IpAddress}` \n* `{Host:LogicalCpuCores}` \n* `{Host:OneAgentCustomHostName}` \n* `{Host:OperatingSystemVersion}` \n* `{Host:PaasMemoryLimit}` \n* `{HostGroup:Name}` \n* `{KubernetesCluster:Name}` \n* `{KubernetesNode:DetectedName}` \n* `{OpenstackAvailabilityZone:Name}` \n* `{OpenstackZone:Name}` \n* `{OpenstackComputeNode:Name}` \n* `{OpenstackProject:Name}` \n* `{OpenstackVm:InstanceType}` \n* `{OpenstackVm:Name}` \n* `{OpenstackVm:SecurityGroup}` \n* `{ProcessGroup:AmazonECRImageAccountId}` \n* `{ProcessGroup:AmazonECRImageRegion}` \n* `{ProcessGroup:AmazonECSCluster}` \n* `{ProcessGroup:AmazonECSContainerName}` \n* `{ProcessGroup:AmazonECSFamily}` \n* `{ProcessGroup:AmazonECSRevision}` \n* `{ProcessGroup:AmazonLambdaFunctionName}` \n* `{ProcessGroup:AmazonRegion}` \n* `{ProcessGroup:ApacheConfigPath}` \n* `{ProcessGroup:ApacheSparkMasterIpAddress}` \n* `{ProcessGroup:AspDotNetCoreApplicationPath}` \n* `{ProcessGroup:AspDotNetCoreApplicationPath}` \n* `{ProcessGroup:AzureHostName}` \n* `{ProcessGroup:AzureSiteName}` \n* `{ProcessGroup:CassandraClusterName}` \n* `{ProcessGroup:CatalinaBase}` \n* `{ProcessGroup:CatalinaHome}` \n* `{ProcessGroup:CloudFoundryAppId}` \n* `{ProcessGroup:CloudFoundryAppName}` \n* `{ProcessGroup:CloudFoundryInstanceIndex}` \n* `{ProcessGroup:CloudFoundrySpaceId}` \n* `{ProcessGroup:CloudFoundrySpaceName}` \n* `{ProcessGroup:ColdFusionJvmConfigFile}` \n* `{ProcessGroup:ColdFusionServiceName}` \n* `{ProcessGroup:CommandLineArgs}` \n* `{ProcessGroup:DetectedName}` \n* `{ProcessGroup:DotNetCommandPath}` \n* `{ProcessGroup:DotNetCommand}` \n* `{ProcessGroup:DotNetClusterId}` \n* `{ProcessGroup:DotNetNodeId}` \n* `{ProcessGroup:ElasticsearchClusterName}` \n* `{ProcessGroup:ElasticsearchNodeName}` \n* `{ProcessGroup:EquinoxConfigPath}` \n* `{ProcessGroup:ExeName}` \n* `{ProcessGroup:ExePath}` \n* `{ProcessGroup:GlassFishDomainName}` \n* `{ProcessGroup:GlassFishInstanceName}` \n* `{ProcessGroup:GoogleAppEngineInstance}` \n* `{ProcessGroup:GoogleAppEngineService}` \n* `{ProcessGroup:GoogleCloudProject}` \n* `{ProcessGroup:HybrisBinDirectory}` \n* `{ProcessGroup:HybrisConfigDirectory}` \n* `{ProcessGroup:HybrisConfigDirectory}` \n* `{ProcessGroup:HybrisDataDirectory}` \n* `{ProcessGroup:IBMCicsRegion}` \n* `{ProcessGroup:IBMCtgName}` \n* `{ProcessGroup:IBMImsConnectRegion}` \n* `{ProcessGroup:IBMImsControlRegion}` \n* `{ProcessGroup:IBMImsMessageProcessingRegion}` \n* `{ProcessGroup:IBMImsSoapGwName}` \n* `{ProcessGroup:IBMIntegrationNodeName}` \n* `{ProcessGroup:IBMIntegrationServerName}` \n* `{ProcessGroup:IISAppPool}` \n* `{ProcessGroup:IISRoleName}` \n* `{ProcessGroup:JbossHome}` \n* `{ProcessGroup:JbossMode}` \n* `{ProcessGroup:JbossServerName}` \n* `{ProcessGroup:JavaJarFile}` \n* `{ProcessGroup:JavaJarPath}` \n* `{ProcessGroup:JavaMainCLass}` \n* `{ProcessGroup:KubernetesBasePodName}` \n* `{ProcessGroup:KubernetesContainerName}` \n* `{ProcessGroup:KubernetesFullPodName}` \n* `{ProcessGroup:KubernetesNamespace}` \n* `{ProcessGroup:KubernetesPodUid}` \n* `{ProcessGroup:MssqlInstanceName}` \n* `{ProcessGroup:NodeJsAppBaseDirectory}` \n* `{ProcessGroup:NodeJsAppName}` \n* `{ProcessGroup:NodeJsScriptName}` \n* `{ProcessGroup:OracleSid}` \n* `{ProcessGroup:PHPScriptPath}` \n* `{ProcessGroup:PHPWorkingDirectory}` \n* `{ProcessGroup:Ports}` \n* `{ProcessGroup:RubyAppRootPath}` \n* `{ProcessGroup:RubyScriptPath}` \n* `{ProcessGroup:SoftwareAGInstallRoot}` \n* `{ProcessGroup:SoftwareAGProductPropertyName}` \n* `{ProcessGroup:SpringBootAppName}` \n* `{ProcessGroup:SpringBootProfileName}` \n* `{ProcessGroup:SpringBootStartupClass}` \n* `{ProcessGroup:TIBCOBusinessWorksAppNodeName}` \n* `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` \n* `{ProcessGroup:TIBCOBusinessWorksCeAppName}` \n* `{ProcessGroup:TIBCOBusinessWorksCeVersion}` \n* `{ProcessGroup:TIBCOBusinessWorksDomainName}` \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` \n* `{ProcessGroup:TIBCOBusinessWorksHome}` \n* `{ProcessGroup:VarnishInstanceName}` \n* `{ProcessGroup:WebLogicClusterName}` \n* `{ProcessGroup:WebLogicDomainName}` \n* `{ProcessGroup:WebLogicHome}` \n* `{ProcessGroup:WebLogicName}` \n* `{ProcessGroup:WebSphereCellName}` \n* `{ProcessGroup:WebSphereClusterName}` \n* `{ProcessGroup:WebSphereNodeName}` \n* `{ProcessGroup:WebSphereServerName}` \n* `{ProcessGroup:ActorSystem}` \n* `{Service:STGServerName}` \n* `{Service:DatabaseHostName}` \n* `{Service:DatabaseName}` \n* `{Service:DatabaseVendor}` \n* `{Service:DetectedName}` \n* `{Service:EndpointPath}` \n* `{Service:EndpointPathGatewayUrl}` \n* `{Service:IIBApplicationName}` \n* `{Service:MessageListenerClassName}` \n* `{Service:Port}` \n* `{Service:PublicDomainName}` \n* `{Service:RemoteEndpoint}` \n* `{Service:RemoteName}` \n* `{Service:WebApplicationId}` \n* `{Service:WebContextRoot}` \n* `{Service:WebServerName}` \n* `{Service:WebServiceNamespace}` \n* `{Service:WebServiceName}` \n* `{VmwareDatacenter:Name}` \n* `{VmwareVm:Name}` \n",
            "example" : "Host with {Host:CpuCores} cores",
            "minLength" : 1
          },
          "rules" : {
            "type" : "array",
            "description" : "A list of matching conditions of the rule. \n\nThe rule applies only if **all** conditions are fulfilled.",
            "items" : {
              "$ref" : "#/components/schemas/EntityRuleEngineCondition"
            },
            "maxItems" : 30,
            "minItems" : 1
          },
          "type" : {
            "type" : "string",
            "description" : "The type of Dynatrace entities to which the rule applies.",
            "enum" : [ "HOST", "PROCESS_GROUP", "SERVICE" ],
            "example" : "PROCESS_GROUP"
          }
        },
        "required" : [ "displayName", "enabled", "nameFormat", "rules", "type" ]
      },
      "ConditionsFullWebRequestAttributeTypeDto" : {
        "type" : "object",
        "description" : "A condition of the service detection rule.",
        "properties" : {
          "attributeType" : {
            "type" : "string",
            "description" : "The type of the attribute to be checked.",
            "enum" : [ "APPLICATION_ID", "CONTEXT_ROOT", "PG_TAG", "SERVER_NAME", "URL_HOST_NAME", "URL_PATH" ]
          },
          "compareOperations" : {
            "type" : "array",
            "description" : "A list of conditions for the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/CompareOperation"
            },
            "maxItems" : 10,
            "minItems" : 0
          }
        },
        "required" : [ "attributeType" ]
      },
      "ConditionsFullWebServiceAttributeTypeDto" : {
        "type" : "object",
        "description" : "A condition of the service detection rule.",
        "properties" : {
          "attributeType" : {
            "type" : "string",
            "description" : "The type of the attribute to be checked.",
            "enum" : [ "APPLICATION_ID", "CONTEXT_ROOT", "FRAMEWORK", "IS_SOAP_SERVICE", "PG_TAG", "SERVER_NAME", "URL_HOST_NAME", "URL_PATH", "WEBSERVICE_METHOD", "WEBSERVICE_NAME", "WEBSERVICE_NAMESPACE" ]
          },
          "compareOperations" : {
            "type" : "array",
            "description" : "A list of conditions for the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/CompareOperation"
            },
            "maxItems" : 10,
            "minItems" : 0
          }
        },
        "required" : [ "attributeType" ]
      },
      "ConditionsOpaqueAndExternalWebRequestAttributeTypeDto" : {
        "type" : "object",
        "description" : "A condition of the service detection rule.",
        "properties" : {
          "attributeType" : {
            "type" : "string",
            "description" : "The type of the attribute to be checked.",
            "enum" : [ "IP", "PG_TAG", "TOP_LEVEL_DOMAIN", "URL", "URL_HOST_NAME", "URL_PATH", "URL_PORT" ]
          },
          "compareOperations" : {
            "type" : "array",
            "description" : "A list of conditions for the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/CompareOperation"
            },
            "maxItems" : 10,
            "minItems" : 0
          }
        },
        "required" : [ "attributeType" ]
      },
      "ConditionsOpaqueAndExternalWebServiceAttributeTypeDto" : {
        "type" : "object",
        "description" : "A condition of the service detection rule.",
        "properties" : {
          "attributeType" : {
            "type" : "string",
            "description" : "The type of the attribute to be checked.",
            "enum" : [ "ENDPOINT", "IP", "OPERATION_NAME", "PG_TAG", "URL_PATH", "URL_PORT" ]
          },
          "compareOperations" : {
            "type" : "array",
            "description" : "A list of conditions for the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/CompareOperation"
            },
            "maxItems" : 10,
            "minItems" : 0
          }
        },
        "required" : [ "attributeType" ]
      },
      "ConfigurationMetadata" : {
        "type" : "object",
        "description" : "Metadata useful for debugging",
        "properties" : {
          "clusterVersion" : {
            "type" : "string",
            "description" : "Dynatrace version.",
            "example" : "1.192.1"
          },
          "configurationVersions" : {
            "type" : "array",
            "description" : "A sorted list of the version numbers of the configuration.",
            "example" : [ 4, 2 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "currentConfigurationVersions" : {
            "type" : "array",
            "description" : "A sorted list of version numbers of the configuration.",
            "example" : [ "1.0.4", "1.23" ],
            "items" : {
              "type" : "string"
            }
          }
        },
        "readOnly" : true
      },
      "ConfigurationMetadataDtoImpl" : {
        "type" : "object",
        "description" : "Metadata useful for debugging.",
        "properties" : {
          "clusterVersion" : {
            "type" : "string",
            "description" : "Dynatrace version.",
            "example" : "1.192.1"
          },
          "configurationVersions" : {
            "type" : "array",
            "description" : "A sorted list of the version numbers of the configuration.",
            "example" : [ 4, 2 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "currentConfigurationVersions" : {
            "type" : "array",
            "description" : "A sorted list of version numbers of the configuration.",
            "example" : [ "1.0.4", "1.23" ],
            "items" : {
              "type" : "string"
            }
          }
        },
        "readOnly" : true
      },
      "ConnectionLostDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of lost connection detection.",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "enabledOnGracefulShutdowns" : {
            "type" : "boolean",
            "description" : "Alert (`true`) on graceful host shutdowns."
          }
        },
        "required" : [ "enabled", "enabledOnGracefulShutdowns" ]
      },
      "ConstraintViolation" : {
        "type" : "object",
        "description" : "A list of constraint violations",
        "properties" : {
          "location" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "parameterLocation" : {
            "type" : "string",
            "enum" : [ "HEADER", "PATH", "PAYLOAD_BODY", "QUERY" ]
          },
          "path" : {
            "type" : "string"
          }
        }
      },
      "ContentCapture" : {
        "type" : "object",
        "description" : "Settings for content capture.",
        "properties" : {
          "javaScriptErrors" : {
            "type" : "boolean",
            "description" : "JavaScript errors monitoring enabled/disabled."
          },
          "resourceTimingSettings" : {
            "$ref" : "#/components/schemas/ResourceTimingSettings"
          },
          "timeoutSettings" : {
            "$ref" : "#/components/schemas/TimeoutSettings"
          },
          "visuallyComplete2Settings" : {
            "$ref" : "#/components/schemas/VisuallyComplete2Settings"
          },
          "visuallyCompleteAndSpeedIndex" : {
            "type" : "boolean",
            "description" : "Visually complete and Speed index support enabled/disabled."
          }
        },
        "required" : [ "javaScriptErrors", "resourceTimingSettings", "timeoutSettings", "visuallyCompleteAndSpeedIndex" ]
      },
      "ContentResources" : {
        "type" : "object",
        "description" : "The configuration of content resources.",
        "properties" : {
          "resourceProviders" : {
            "type" : "array",
            "description" : "An ordered list of manually added content providers.\n\n Rules are evaluated from top to bottom; the first matching rules applies.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceProvider"
            }
          },
          "resourceTypes" : {
            "type" : "array",
            "description" : "An ordered list of manually defined resource types.\n\n Rules are evaluated from top to bottom; the first matching rules applies.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceType"
            }
          },
          "resourceUrlCleanupRules" : {
            "type" : "array",
            "description" : "An ordered list of resource URL cleanup rules.\n\n Rules are evaluated from top to bottom; the first matching rules applies.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceUrlCleanupRule"
            }
          }
        }
      },
      "ContextRoot" : {
        "type" : "object",
        "description" : "The contribution to the service ID calculation from the detected context root. \n\n The context root is the first segment of the request URL after server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `support`. \n\nYou have two options: \n* Keep a part of the detected URL. Specify the number of segments to be kept in the **segmentsToCopyFromUrlPath** field. \n* Dynamically transform the detected URL. Specify the transformation parameters in the **transformations** field. \n\nYou can use one or both options. If you use both, the transformation applies to the modified URL.",
        "properties" : {
          "segmentsToCopyFromUrlPath" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of segments of the URL to be kept. \n\nThe URL is divided by slashes (`/`), the indexing starts with 1 at context root. \n\nFor example, if you specify `2` for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used."
          },
          "transformations" : {
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/ContextRootTransformation"
            },
            "maxItems" : 10,
            "minItems" : 0
          }
        }
      },
      "ContextRootTransformation" : {
        "type" : "object",
        "description" : "Configuration of transformation of the detected value. \n\nIf several transformations are specified, they are handled sequentially from top to bottom. Each transformation is applied to the result of the preceding transformation. For example, the second transformation is applied to the result of the first transformation. \n\nThe actual set of fields depends on the `type` of the transformation.",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `BEFORE` -> BeforeTransformation \n* `REPLACE_BETWEEN` -> ReplaceBetweenTransformation \n* `REMOVE_NUMBERS` -> RemoveNumbersTransformation \n* `REMOVE_CREDIT_CARDS` -> RemoveCreditCardNumbersTransformation \n* `REMOVE_IBANS` -> RemoveIBANsTransformation \n* `REMOVE_IPS` -> RemoveIPsTransformation \n",
            "enum" : [ "BEFORE", "REMOVE_CREDIT_CARDS", "REMOVE_IBANS", "REMOVE_IPS", "REMOVE_NUMBERS", "REPLACE_BETWEEN" ]
          }
        },
        "required" : [ "type" ]
      },
      "ConversionGoal" : {
        "type" : "object",
        "description" : "A conversion goal of the application.",
        "properties" : {
          "destinationDetails" : {
            "$ref" : "#/components/schemas/DestinationDetails"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of conversion goal. \n\n Omit it while creating a new conversion goal."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the conversion goal.",
            "maxLength" : 50,
            "minLength" : 1
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the conversion goal.",
            "enum" : [ "Destination", "UserAction", "VisitDuration", "VisitNumActions" ]
          },
          "userActionDetails" : {
            "$ref" : "#/components/schemas/UserActionDetails"
          },
          "visitDurationDetails" : {
            "$ref" : "#/components/schemas/VisitDurationDetails"
          },
          "visitNumActionDetails" : {
            "$ref" : "#/components/schemas/VisitNumActionDetails"
          }
        },
        "required" : [ "name" ]
      },
      "CredentialAccessData" : {
        "type" : "object",
        "description" : "The set of entities allowed to use the credential.",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "APPLICATION", "UNKNOWN", "USER" ]
          }
        }
      },
      "CredentialUsageHandler" : {
        "type" : "object",
        "description" : "Keeps information about credential's usage.",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of uses."
          },
          "type" : {
            "type" : "string",
            "description" : "Type of usage."
          }
        }
      },
      "Credentials" : {
        "type" : "object",
        "description" : "A set of credentials for synthetic monitors. \n\nThe actual set of fields depends on the type of credentials. Find the list of actual objects in the description of the **type** field or see [Credential vault API - JSON models](https://dt-url.net/2sa3sen).",
        "discriminator" : {
          "mapping" : {
            "CERTIFICATE" : "#/components/schemas/CertificateCredentials",
            "PUBLIC_CERTIFICATE" : "#/components/schemas/PublicCertificateCredentials",
            "TOKEN" : "#/components/schemas/TokenCredentials",
            "USERNAME_PASSWORD" : "#/components/schemas/UserPasswordCredentials"
          },
          "propertyName" : "type"
        },
        "example" : {
          "allowContextlessRequests" : "false",
          "allowedEntities" : [ {
            "id" : "jane.doe@example.com",
            "type" : "USER"
          }, {
            "id" : "john.smith@example.com",
            "type" : "USER"
          }, {
            "id" : "my.with.credentials",
            "type" : "APPLICATION"
          } ],
          "description" : "Sample set of credentials for API documentation",
          "name" : "Sample credentials",
          "ownerAccessOnly" : false,
          "password" : "1234abcd",
          "scope" : "SYNTHETIC",
          "scopes" : [ "SYNTHETIC", "EXTENSION_AUTHENTICATION" ],
          "type" : "USERNAME_PASSWORD",
          "user" : "john.smith@example.com"
        },
        "properties" : {
          "allowContextlessRequests" : {
            "type" : "boolean",
            "description" : "Allow ad-hoc functions to access the credential details (requires the APP_ENGINE scope)."
          },
          "allowedEntities" : {
            "type" : "array",
            "description" : "The set of entities allowed to use the credential.",
            "items" : {
              "$ref" : "#/components/schemas/CredentialAccessData"
            },
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the credentials set."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the credentials set."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the credentials set."
          },
          "ownerAccessOnly" : {
            "type" : "boolean",
            "description" : "The credentials set is available to every user (`false`) or to owner only (`true`)."
          },
          "scope" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "The scope of the credentials set.",
            "enum" : [ "ALL", "EXTENSION", "SYNTHETIC", "UNKNOWN" ]
          },
          "scopes" : {
            "type" : "array",
            "description" : "The set of scopes of the credentials set.",
            "items" : {
              "type" : "string",
              "description" : "The set of scopes of the credentials set.",
              "enum" : [ "ALL", "EXTENSION", "SYNTHETIC", "UNKNOWN" ]
            },
            "uniqueItems" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `CERTIFICATE` -> CertificateCredentials \n* `PUBLIC_CERTIFICATE` -> PublicCertificateCredentials \n* `USERNAME_PASSWORD` -> UserPasswordCredentials \n* `TOKEN` -> TokenCredentials \n",
            "enum" : [ "CERTIFICATE", "PUBLIC_CERTIFICATE", "TOKEN", "USERNAME_PASSWORD" ]
          }
        },
        "required" : [ "name", "scopes" ]
      },
      "CredentialsId" : {
        "type" : "object",
        "description" : "A short representation of the credentials set.",
        "example" : {
          "id" : "CREDENTIALS_VAULT-C43F2C2E6395AD23"
        },
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the credentials set."
          }
        },
        "required" : [ "id" ]
      },
      "CredentialsList" : {
        "type" : "object",
        "description" : "A list of credentials sets for Synthetic monitors.",
        "example" : {
          "credentials" : [ {
            "credentialUsageSummary" : [ {
              "HTTP_MONITOR" : 4
            } ],
            "description" : "Sample credentials for demo purposes",
            "id" : "CREDENTIALS_VAULT-E80203F993472E6D",
            "name" : "Sample username-password credentials",
            "owner" : "admin",
            "ownerAccessOnly" : true,
            "scope" : "SYNTHETIC",
            "type" : "USERNAME_PASSWORD"
          }, {
            "credentialUsageSummary" : [ ],
            "description" : "Sample credentials for demo purposes",
            "id" : "CREDENTIALS_VAULT-842DEF439999E15B",
            "name" : "Sample certificate credentials",
            "owner" : "John.Doe@domain.com",
            "ownerAccessOnly" : true,
            "scope" : "EXTENSION",
            "type" : "CERTIFICATE"
          }, {
            "credentialUsageSummary" : [ {
              "BROWSER_MONITOR" : 11,
              "HTTP_MONITOR" : 4
            } ],
            "description" : "Sample token for demo purposes",
            "id" : "CREDENTIALS_VAULT-854345639999E15B",
            "name" : "Sample token credentials",
            "owner" : "John.Doe@domain.com",
            "ownerAccessOnly" : true,
            "scope" : "SYNTHETIC",
            "type" : "TOKEN"
          } ]
        },
        "properties" : {
          "credentials" : {
            "type" : "array",
            "description" : "A list of credentials sets for Synthetic monitors.",
            "items" : {
              "$ref" : "#/components/schemas/CredentialsResponseElement"
            }
          },
          "nextPageKey" : {
            "type" : "string"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "required" : [ "credentials" ]
      },
      "CredentialsResponseElement" : {
        "type" : "object",
        "description" : "Metadata of the credentials set.",
        "example" : {
          "allowContextlessRequests" : "false",
          "credentialUsageSummary" : [ {
            "BROWSER_MONITOR" : 2,
            "HTTP_MONITOR" : 3
          } ],
          "description" : "Sample credentials for demo purposes.",
          "externalVault" : {
            "passwordSecretName" : "password",
            "pathToCredentials" : "kv/credentials",
            "roleId" : "00e4858c-ec33-bc99-4e7e-34de6967de6c",
            "secretId" : "CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX",
            "sourceAuthMethod" : "HASHICORP_VAULT_APPROLE",
            "usernameSecretName" : "username",
            "vaultNamespace" : "admin",
            "vaultUrl" : "https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200"
          },
          "id" : "CREDENTIALS_VAULT-C43F2C2E6395AD23",
          "name" : "Sample username-password credentials",
          "owner" : "user@domain.com",
          "ownerAccessOnly" : true,
          "scope" : "SYNTHETIC",
          "type" : "USERNAME_PASSWORD"
        },
        "properties" : {
          "allowContextlessRequests" : {
            "type" : "boolean",
            "description" : "Allow access without app context, for example, from ad hoc functions in Workflows (requires the APP_ENGINE scope)."
          },
          "allowedEntities" : {
            "type" : "array",
            "description" : "The set of entities allowed to use the credential.",
            "items" : {
              "$ref" : "#/components/schemas/CredentialAccessData"
            },
            "uniqueItems" : true
          },
          "credentialUsageSummary" : {
            "type" : "array",
            "description" : "The list contains summary data related to the use of credentials.",
            "items" : {
              "$ref" : "#/components/schemas/CredentialUsageHandler"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the credentials set."
          },
          "externalVault" : {
            "$ref" : "#/components/schemas/ExternalVaultConfig"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the credentials set."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the credentials set."
          },
          "owner" : {
            "type" : "string",
            "description" : "The owner of the credential (user for which used API token was created)."
          },
          "ownerAccessOnly" : {
            "type" : "boolean",
            "description" : "Flag indicating that this credential is visible only to the owner."
          },
          "scope" : {
            "type" : "string",
            "description" : "The scope of the credentials set.",
            "enum" : [ "ALL", "EXTENSION", "SYNTHETIC", "UNKNOWN" ]
          },
          "scopes" : {
            "type" : "array",
            "description" : "The set of scopes of the credentials set.",
            "items" : {
              "type" : "string",
              "description" : "The set of scopes of the credentials set.",
              "enum" : [ "ALL", "EXTENSION", "SYNTHETIC", "UNKNOWN" ]
            },
            "uniqueItems" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the credentials set.",
            "enum" : [ "CERTIFICATE", "PUBLIC_CERTIFICATE", "TOKEN", "UNKNOWN", "USERNAME_PASSWORD" ]
          }
        },
        "required" : [ "allowedEntities", "credentialUsageSummary", "description", "name", "owner", "ownerAccessOnly", "type" ]
      },
      "CustomApplicationTypeComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "AMAZON_ECHO", "DESKTOP", "EMBEDDED", "IOT", "MICROSOFT_HOLOLENS", "UFO" ]
            }
          }
        } ],
        "description" : "Comparison for `CUSTOM_APPLICATION_TYPE` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "CustomChartingItemMetadataConfig" : {
        "type" : "object",
        "description" : "Additional metadata for charted metric.",
        "properties" : {
          "customColor" : {
            "type" : "string",
            "description" : "The color of the metric in the chart, hex format."
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The timestamp of the last metadata modification, in UTC milliseconds."
          }
        },
        "required" : [ "customColor" ]
      },
      "CustomChartingTile" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "filterConfig" : {
              "$ref" : "#/components/schemas/CustomFilterConfig"
            }
          }
        } ],
        "description" : "Configuration of a custom chart tile.",
        "required" : [ "bounds", "name", "tileType" ]
      },
      "CustomColumnDefinition" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ColumnDefinition"
        }, {
          "type" : "object",
          "properties" : {
            "prefix" : {
              "type" : "string",
              "minLength" : 1
            },
            "suffix" : {
              "type" : "string"
            }
          }
        } ],
        "description" : "Definition of a custom column.",
        "required" : [ "name", "prefix", "suffix", "type" ]
      },
      "CustomDeviceGroupNameAlertingScope" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "nameFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventTextFilterOperatorDto"
            }
          }
        } ],
        "description" : "A scope filter for the related custom device group name.",
        "required" : [ "filterType", "nameFilter" ]
      },
      "CustomErrorRule" : {
        "type" : "object",
        "description" : "Configuration of the custom error in the web application.",
        "properties" : {
          "capture" : {
            "type" : "boolean",
            "description" : "Capture (`true`) or ignore (`false`) the error."
          },
          "customAlerting" : {
            "type" : "boolean",
            "description" : "Include (`true`) or exclude (`false`) the error in Davis AI [problem detection and analysis](https://dt-url.net/a963kd2)."
          },
          "impactApdex" : {
            "type" : "boolean",
            "description" : "Include (`true`) or exclude (`false`) the error in Apdex calculation."
          },
          "keyMatcher" : {
            "type" : "string",
            "description" : "The matching operation for the **keyPattern**.",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS" ]
          },
          "keyPattern" : {
            "type" : "string",
            "description" : "The key of the error to look for."
          },
          "valueMatcher" : {
            "type" : "string",
            "description" : "The matching operation for the **valuePattern**.",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS" ]
          },
          "valuePattern" : {
            "type" : "string",
            "description" : "The value of the error to look for."
          }
        },
        "required" : [ "capture", "customAlerting", "impactApdex" ]
      },
      "CustomFilterChartConfig" : {
        "type" : "object",
        "description" : "Configuration of a custom chart.",
        "properties" : {
          "axisLimits" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double",
              "description" : "The optional custom y-axis limits."
            },
            "description" : "The optional custom y-axis limits."
          },
          "leftAxisCustomUnit" : {
            "type" : "string",
            "description" : "The custom unit for the left Y-axis.",
            "enum" : [ "Ampere", "Billion", "Bit", "BitPerHour", "BitPerMinute", "BitPerSecond", "Byte", "BytePerHour", "BytePerMinute", "BytePerSecond", "Cores", "Count", "Day", "DecibelMilliWatt", "GibiByte", "GibiBytePerHour", "GibiBytePerMinute", "GibiBytePerSecond", "Giga", "GigaByte", "GigaBytePerHour", "GigaBytePerMinute", "GigaBytePerSecond", "Hertz", "Hour", "KibiByte", "KibiBytePerHour", "KibiBytePerMinute", "KibiBytePerSecond", "Kilo", "KiloByte", "KiloBytePerHour", "KiloBytePerMinute", "KiloBytePerSecond", "KiloMetrePerHour", "MSU", "MebiByte", "MebiBytePerHour", "MebiBytePerMinute", "MebiBytePerSecond", "Mega", "MegaByte", "MegaBytePerHour", "MegaBytePerMinute", "MegaBytePerSecond", "MetrePerHour", "MetrePerSecond", "MicroSecond", "MilliCores", "MilliSecond", "MilliSecondPerMinute", "Million", "Minute", "Month", "NanoSecond", "NanoSecondPerMinute", "NotApplicable", "PerHour", "PerMinute", "PerSecond", "Percent", "Pixel", "Promille", "Ratio", "Second", "State", "Trillion", "Unspecified", "Volt", "Watt", "Week", "Year" ]
          },
          "legendShown" : {
            "type" : "boolean",
            "description" : "Defines if a legend should be shown."
          },
          "resultMetadata" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/CustomChartingItemMetadataConfig"
            },
            "description" : "Additional information about charted metric."
          },
          "rightAxisCustomUnit" : {
            "type" : "string",
            "description" : "The custom unit for the right Y-axis.",
            "enum" : [ "Ampere", "Billion", "Bit", "BitPerHour", "BitPerMinute", "BitPerSecond", "Byte", "BytePerHour", "BytePerMinute", "BytePerSecond", "Cores", "Count", "Day", "DecibelMilliWatt", "GibiByte", "GibiBytePerHour", "GibiBytePerMinute", "GibiBytePerSecond", "Giga", "GigaByte", "GigaBytePerHour", "GigaBytePerMinute", "GigaBytePerSecond", "Hertz", "Hour", "KibiByte", "KibiBytePerHour", "KibiBytePerMinute", "KibiBytePerSecond", "Kilo", "KiloByte", "KiloBytePerHour", "KiloBytePerMinute", "KiloBytePerSecond", "KiloMetrePerHour", "MSU", "MebiByte", "MebiBytePerHour", "MebiBytePerMinute", "MebiBytePerSecond", "Mega", "MegaByte", "MegaBytePerHour", "MegaBytePerMinute", "MegaBytePerSecond", "MetrePerHour", "MetrePerSecond", "MicroSecond", "MilliCores", "MilliSecond", "MilliSecondPerMinute", "Million", "Minute", "Month", "NanoSecond", "NanoSecondPerMinute", "NotApplicable", "PerHour", "PerMinute", "PerSecond", "Percent", "Pixel", "Promille", "Ratio", "Second", "State", "Trillion", "Unspecified", "Volt", "Watt", "Week", "Year" ]
          },
          "series" : {
            "type" : "array",
            "description" : "A list of charted metrics.",
            "items" : {
              "$ref" : "#/components/schemas/CustomFilterChartSeriesConfig"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the chart.",
            "enum" : [ "PIE", "SINGLE_VALUE", "TIMESERIES", "TOP_LIST" ]
          }
        },
        "required" : [ "resultMetadata", "series", "type" ]
      },
      "CustomFilterChartSeriesConfig" : {
        "type" : "object",
        "description" : "Configuration of a charted metric.",
        "properties" : {
          "aggregation" : {
            "type" : "string",
            "description" : "The charted aggregation of the metric.",
            "enum" : [ "AVG", "COUNT", "DISTINCT", "FASTEST10PERCENT", "MAX", "MEDIAN", "MIN", "NONE", "OF_INTEREST_RATIO", "OTHER_RATIO", "PERCENTILE", "PER_MIN", "SLOWEST10PERCENT", "SLOWEST5PERCENT", "SUM", "SUM_DIMENSIONS" ]
          },
          "aggregationRate" : {
            "type" : "string",
            "enum" : [ "HOUR", "MINUTE", "SECOND", "TOTAL" ]
          },
          "dimensions" : {
            "type" : "array",
            "description" : "Configuration of the charted metric splitting.",
            "items" : {
              "$ref" : "#/components/schemas/CustomFilterChartSeriesDimensionConfig"
            }
          },
          "entityType" : {
            "type" : "string",
            "description" : "The type of the Dynatrace entity that delivered the charted metric."
          },
          "metric" : {
            "type" : "string",
            "description" : "The name of the charted metric."
          },
          "percentile" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The charted percentile. \n\n Only applicable if the **aggregation** is set to `PERCENTILE`."
          },
          "sortAscending" : {
            "type" : "boolean",
            "description" : "Sort ascending (`true`) or descending (`false`). "
          },
          "sortColumn" : {
            "type" : "boolean"
          },
          "type" : {
            "type" : "string",
            "description" : "The visualization of the timeseries chart.",
            "enum" : [ "AREA", "BAR", "LINE" ]
          }
        },
        "required" : [ "aggregation", "dimensions", "entityType", "metric", "type" ]
      },
      "CustomFilterChartSeriesDimensionConfig" : {
        "type" : "object",
        "description" : "Configuration of the charted metric splitting.",
        "properties" : {
          "entityDimension" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the dimension by which the metric is split."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the dimension by which the metric is split."
          },
          "values" : {
            "type" : "array",
            "description" : "The splitting value.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "id", "values" ]
      },
      "CustomFilterConfig" : {
        "type" : "object",
        "description" : "Configuration of the custom filter of a tile.",
        "properties" : {
          "chartConfig" : {
            "$ref" : "#/components/schemas/CustomFilterChartConfig"
          },
          "customName" : {
            "type" : "string",
            "description" : "The name of the tile, set by user"
          },
          "defaultName" : {
            "type" : "string",
            "description" : "The default name of the tile",
            "minLength" : 1
          },
          "filtersPerEntityType" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "array",
                "description" : "A list of filters, applied to specific entity types.",
                "items" : {
                  "type" : "string",
                  "description" : "A list of filters, applied to specific entity types."
                },
                "uniqueItems" : true
              },
              "description" : "A list of filters, applied to specific entity types."
            },
            "description" : "A list of filters, applied to specific entity types."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the filter. \n\n It shows to which entity the filter belongs. \n\n Custom charts have the `MIXED` type.",
            "enum" : [ "ALB", "APPLICATION", "APPLICATION_METHOD", "APPMON", "ASG", "AWS_CREDENTIALS", "AWS_CUSTOM_SERVICE", "AWS_LAMBDA_FUNCTION", "CLOUD_APPLICATION", "CLOUD_APPLICATION_INSTANCE", "CLOUD_APPLICATION_NAMESPACE", "CONTAINER_GROUP_INSTANCE", "CUSTOM_APPLICATION", "CUSTOM_DEVICES", "CUSTOM_SERVICES", "DATABASE", "DATABASE_KEY_REQUEST", "DCRUM_APPLICATION", "DCRUM_ENTITY", "DYNAMO_DB", "EBS", "EC2", "ELB", "ENVIRONMENT", "ESXI", "EXTERNAL_SYNTHETIC_TEST", "GLOBAL_BACKGROUND_ACTIVITY", "HOST", "IOT", "KUBERNETES_CLUSTER", "KUBERNETES_NODE", "MDA_SERVICE", "MIXED", "MOBILE_APPLICATION", "MONITORED_ENTITY", "NLB", "PG_BACKGROUND_ACTIVITY", "PROBLEM", "PROCESS_GROUP_INSTANCE", "RDS", "REMOTE_PLUGIN", "SERVICE", "SERVICE_KEY_REQUEST", "SYNTHETIC_BROWSER_MONITOR", "SYNTHETIC_HTTPCHECK", "SYNTHETIC_HTTPCHECK_STEP", "SYNTHETIC_LOCATION", "SYNTHETIC_TEST", "SYNTHETIC_TEST_STEP", "UI_ENTITY", "VIRTUAL_MACHINE", "WEB_CHECK" ]
          }
        },
        "required" : [ "chartConfig", "customName", "defaultName", "filtersPerEntityType", "type" ]
      },
      "CustomHostMetadataConditionKey" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConditionKey"
        }, {
          "type" : "object",
          "properties" : {
            "dynamicKey" : {
              "$ref" : "#/components/schemas/CustomHostMetadataKey"
            }
          }
        } ],
        "description" : "The key for dynamic attributes of the `HOST_CUSTOM_METADATA_KEY` type.",
        "required" : [ "attribute", "dynamicKey" ]
      },
      "CustomHostMetadataKey" : {
        "type" : "object",
        "description" : "The key of the attribute, which need dynamic keys. \n\nNot applicable otherwise, as the attibute itself acts as a key.",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The actual key of the custom metadata.",
            "maxLength" : 256,
            "minLength" : 0
          },
          "source" : {
            "type" : "string",
            "description" : "The source of the custom metadata.",
            "enum" : [ "ENVIRONMENT", "GOOGLE_COMPUTE_ENGINE", "PLUGIN" ]
          }
        },
        "required" : [ "key", "source" ]
      },
      "CustomProcessMetadataConditionKey" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConditionKey"
        }, {
          "type" : "object",
          "properties" : {
            "dynamicKey" : {
              "$ref" : "#/components/schemas/CustomProcessMetadataKey"
            }
          }
        } ],
        "description" : "The key for dynamic attributes of the `PROCESS_CUSTOM_METADATA_KEY` type.",
        "required" : [ "attribute", "dynamicKey" ]
      },
      "CustomProcessMetadataKey" : {
        "type" : "object",
        "description" : "The key of the attribute, which need dynamic keys. \n\nNot applicable otherwise, as the attibute itself acts as a key.",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The actual key of the custom metadata.",
            "maxLength" : 256,
            "minLength" : 0
          },
          "source" : {
            "type" : "string",
            "description" : "The source of the custom metadata.",
            "enum" : [ "AGENT", "CLOUD_FOUNDRY", "ENVIRONMENT", "GOOGLE_CLOUD", "KUBERNETES", "PLUGIN" ]
          }
        },
        "required" : [ "key", "source" ]
      },
      "CustomService" : {
        "type" : "object",
        "example" : {
          "enabled" : true,
          "name" : "CustomService",
          "queueEntryPoint" : false,
          "rules" : [ {
            "className" : "com.your.company.ClassName",
            "enabled" : true,
            "methodRules" : [ {
              "argumentTypes" : [ "java.lang.String" ],
              "methodName" : "AMethod",
              "returnType" : "void"
            } ]
          } ]
        },
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "Custom service enabled/disabled."
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the custom service."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the custom service, displayed in the UI.",
            "maxLength" : 500,
            "minLength" : 3
          },
          "order" : {
            "type" : "string",
            "description" : "The order string. Sorting custom services alphabetically by their order string determines their relative ordering.\n\nTypically this is managed by Dynatrace internally and will not be present in GET responses.",
            "maxLength" : 2147483647,
            "minLength" : 1
          },
          "processGroups" : {
            "type" : "array",
            "description" : "The list of process groups the custom service should belong to.",
            "items" : {
              "type" : "string"
            }
          },
          "queueEntryPoint" : {
            "type" : "boolean",
            "description" : "The queue entry point flag. \n\nSet to `true` for custom messaging services."
          },
          "queueEntryPointType" : {
            "type" : "string",
            "description" : "The queue entry point type..",
            "enum" : [ "IBM_MQ", "JMS", "KAFKA", "MSMQ", "RABBIT_MQ" ]
          },
          "rules" : {
            "type" : "array",
            "description" : "The list of rules defining the custom service.",
            "items" : {
              "$ref" : "#/components/schemas/DetectionRule"
            },
            "maxItems" : 2000,
            "minItems" : 1
          }
        },
        "required" : [ "enabled", "name", "queueEntryPoint", "rules" ]
      },
      "CyberArkAllowedLocationConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVaultConfig"
        }, {
          "type" : "object",
          "properties" : {
            "accountName" : {
              "type" : "string"
            },
            "applicationId" : {
              "type" : "string"
            },
            "certificate" : {
              "type" : "string"
            },
            "folderName" : {
              "type" : "string"
            },
            "safeName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CyberArkAllowedLocationDto" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVault"
        }, {
          "type" : "object",
          "properties" : {
            "accountName" : {
              "type" : "string",
              "description" : "Account name that stores the username and password to retrieve and synchronize with the Dynatrace Credential Vault: This is NOT the name of the account logged into the CyberArk Central Credential Provider."
            },
            "applicationId" : {
              "type" : "string",
              "description" : "Application ID connected to CyberArk Vault."
            },
            "certificate" : {
              "type" : "string",
              "description" : "[Optional] Certificate used for authentication to CyberArk application. ID of certificate credential saved in Dynatrace CV."
            },
            "folderName" : {
              "type" : "string",
              "description" : "[Optional] Folder name where credentials in CyberArk Vault are stored. Default folder name is 'Root'."
            },
            "safeName" : {
              "type" : "string",
              "description" : "Safe name connected to CyberArk Vault."
            }
          }
        } ],
        "description" : "Synchronization credentials with CyberArk Vault using allowed machines (location) authentication method.",
        "required" : [ "accountName", "applicationId", "safeName" ]
      },
      "CyberArkUsernamePassword" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVault"
        }, {
          "type" : "object",
          "properties" : {
            "accountName" : {
              "type" : "string",
              "description" : "Account name that stores the username and password to retrieve and synchronize with the Dynatrace Credential Vault: This is NOT the name of the account logged into the CyberArk Central Credential Provider."
            },
            "applicationId" : {
              "type" : "string",
              "description" : "Application ID connected to CyberArk Vault."
            },
            "certificate" : {
              "type" : "string",
              "description" : "[Optional] Certificate used for authentication to CyberArk application. ID of certificate credential saved in Dynatrace CV."
            },
            "folderName" : {
              "type" : "string",
              "description" : "[Optional] Folder name where credentials in CyberArk Vault are stored. Default folder name is 'Root'."
            },
            "safeName" : {
              "type" : "string",
              "description" : "Safe name connected to CyberArk Vault."
            },
            "usernamePasswordForCPM" : {
              "type" : "string",
              "description" : "Dynatrace credential ID of the username-password pair used for authentication to the CyberArk Central Credential Provider"
            }
          }
        } ],
        "description" : "Synchronization credentials with CyberArk Vault using username password authentication method.",
        "required" : [ "accountName", "applicationId", "safeName", "usernamePasswordForCPM" ]
      },
      "CyberArkUsernamePasswordConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVaultConfig"
        }, {
          "type" : "object",
          "properties" : {
            "accountName" : {
              "type" : "string"
            },
            "applicationId" : {
              "type" : "string"
            },
            "certificate" : {
              "type" : "string"
            },
            "folderName" : {
              "type" : "string"
            },
            "safeName" : {
              "type" : "string"
            },
            "usernamePasswordForCPM" : {
              "type" : "string"
            }
          }
        } ]
      },
      "Dashboard" : {
        "type" : "object",
        "description" : "Configuration of a dashboard.",
        "example" : {
          "dashboardMetadata" : {
            "dashboardFilter" : {
              "managementZone" : {
                "id" : "3438779970106539862",
                "name" : "Example Management Zone"
              },
              "timeframe" : "l_72_HOURS"
            },
            "dynamicFilters" : {
              "filters" : [ "SERVICE_TYPE" ]
            },
            "name" : "Example Dashboard",
            "owner" : "Example Owner",
            "shared" : true
          },
          "metadata" : {
            "clusterVersion" : "Mock version",
            "configurationVersions" : [ 4, 2 ]
          },
          "tiles" : [ {
            "bounds" : {
              "height" : 38,
              "left" : 0,
              "top" : 0,
              "width" : 304
            },
            "configured" : true,
            "name" : "Hosts",
            "tileFilter" : { },
            "tileType" : "HEADER"
          }, {
            "bounds" : {
              "height" : 38,
              "left" : 304,
              "top" : 0,
              "width" : 304
            },
            "configured" : true,
            "name" : "Applications",
            "tileFilter" : { },
            "tileType" : "HEADER"
          }, {
            "bounds" : {
              "height" : 304,
              "left" : 0,
              "top" : 38,
              "width" : 304
            },
            "chartVisible" : true,
            "configured" : true,
            "name" : "Host health",
            "tileFilter" : {
              "managementZone" : {
                "id" : "3438779970106539862",
                "name" : "Example Management Zone"
              }
            },
            "tileType" : "HOSTS"
          }, {
            "bounds" : {
              "height" : 304,
              "left" : 304,
              "top" : 38,
              "width" : 304
            },
            "chartVisible" : true,
            "configured" : true,
            "name" : "Application health",
            "tileFilter" : {
              "managementZone" : {
                "id" : "3438779970106539862",
                "name" : "Example Management Zone"
              }
            },
            "tileType" : "APPLICATIONS"
          } ]
        },
        "properties" : {
          "dashboardMetadata" : {
            "$ref" : "#/components/schemas/DashboardMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the dashboard."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "tiles" : {
            "type" : "array",
            "description" : "The list of tiles on the dashboard.",
            "items" : {
              "$ref" : "#/components/schemas/Tile"
            }
          }
        },
        "required" : [ "dashboardMetadata", "tiles" ]
      },
      "DashboardAnonymousAccess" : {
        "type" : "object",
        "description" : "Configuration of the [anonymous access](https://dt-url.net/ov03sf1) to the dashboard.",
        "properties" : {
          "managementZoneIds" : {
            "type" : "array",
            "description" : "A list of management zones that can display data on the publicly shared dashboard. \n\nSpecify management zone IDs here. For each management zone you specify Dynatrace generates an access link. You can access them in the **urls** list. \n\nTo share the dashboard with its default management zone, use the `default` value.",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "urls" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "A list of URLs for anonymous access to the dashboard. \n\nEach link grants access to data from the specific management zone, listed in the in the **managementZoneIds** list. \n\nThese links are automatically generated by Dynatrace, you can't change them.",
              "readOnly" : true
            },
            "description" : "A list of URLs for anonymous access to the dashboard. \n\nEach link grants access to data from the specific management zone, listed in the in the **managementZoneIds** list. \n\nThese links are automatically generated by Dynatrace, you can't change them.",
            "readOnly" : true
          }
        },
        "required" : [ "managementZoneIds" ]
      },
      "DashboardFilter" : {
        "type" : "object",
        "description" : "Filters, applied to a dashboard.",
        "properties" : {
          "managementZone" : {
            "$ref" : "#/components/schemas/EntityShortRepresentation"
          },
          "timeframe" : {
            "type" : "string",
            "description" : "The default timeframe of the dashboard."
          }
        }
      },
      "DashboardGenericTagFilter" : {
        "type" : "object",
        "description" : "Generic tag filters that can be applied to a dashboard.",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display name used to identify this generic filter."
          },
          "entityTypes" : {
            "type" : "array",
            "description" : "Entity types affected by tag.",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "suggestionsFromEntityType" : {
            "type" : "string",
            "description" : "The entity type for which the suggestions should be provided."
          },
          "tagKey" : {
            "type" : "string",
            "description" : "The tag key for this filter."
          }
        },
        "required" : [ "entityTypes" ]
      },
      "DashboardList" : {
        "type" : "object",
        "description" : "A list of short representations of dashboards.",
        "example" : {
          "dashboards" : [ {
            "id" : "d6740373-ff26-4681-b95f-fd5b858c97f7",
            "name" : "Home dashboard",
            "owner" : "admin"
          }, {
            "id" : "54b34dbb-2ae7-4c27-9dbc-90a4f4c68b10",
            "name" : "Databases",
            "owner" : "viewer"
          }, {
            "id" : "8525b0bf-e33c-4a92-a534-9dedc1391e10",
            "name" : "Business value",
            "owner" : "rocks"
          } ]
        },
        "properties" : {
          "dashboards" : {
            "type" : "array",
            "description" : "A list of short representations of dashboards.",
            "items" : {
              "$ref" : "#/components/schemas/DashboardStub"
            }
          }
        },
        "required" : [ "dashboards" ]
      },
      "DashboardMetadata" : {
        "type" : "object",
        "description" : "Parameters of a dashboard.",
        "properties" : {
          "dashboardFilter" : {
            "$ref" : "#/components/schemas/DashboardFilter"
          },
          "dynamicFilters" : {
            "$ref" : "#/components/schemas/DynamicFilters"
          },
          "hasConsistentColors" : {
            "type" : "boolean",
            "description" : "The tile uses consistent colors when rendering its content."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the dashboard."
          },
          "owner" : {
            "type" : "string",
            "description" : "The owner of the dashboard."
          },
          "preset" : {
            "type" : "boolean",
            "description" : "The dashboard is a preset (`true`) or a custom (`false`) dashboard."
          },
          "shared" : {
            "type" : "boolean",
            "description" : "The dashboard is shared (`true`) or private (`false`)."
          },
          "tags" : {
            "type" : "array",
            "description" : "A set of tags assigned to the dashboard.",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "tilesNameSize" : {
            "type" : "string",
            "description" : "The general size of the tiles tile. Default value is medium",
            "enum" : [ "small", "medium", "large" ]
          }
        },
        "required" : [ "name", "owner" ]
      },
      "DashboardReport" : {
        "type" : "object",
        "description" : "Configuration of a dashboard report. \n\nThe dashboard report provides a public link to the associated dashboard with a custom reporting period: last week for weekly subscribers or last month for monthly subscribers.",
        "example" : {
          "dashboardId" : "8dd67562-8bf5-4a09-830d-4e0ca992abd6",
          "enabled" : "true",
          "id" : "337d883e-98c3-4dac-b8f2-1a9cdbd05969",
          "subscriptions" : {
            "MONTH" : [ "demo@email.com", "demo2@email.com" ],
            "WEEK" : [ "demo@email.com" ]
          },
          "type" : "DASHBOARD"
        },
        "properties" : {
          "dashboardId" : {
            "type" : "string",
            "description" : "The ID of the associated dashboard."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The email notifications for the dashboard report are enabled (`true`) or disabled (`false`)."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the report."
          },
          "subscriptions" : {
            "$ref" : "#/components/schemas/DashboardReportSubscription"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "DASHBOARD" ]
          }
        },
        "required" : [ "dashboardId", "subscriptions", "type" ]
      },
      "DashboardReportStub" : {
        "type" : "object",
        "description" : "A short representations of the report.",
        "properties" : {
          "dashboardId" : {
            "type" : "string",
            "description" : "The ID of the associated dashboard."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the report."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the report.",
            "enum" : [ "DASHBOARD" ]
          }
        },
        "required" : [ "dashboardId", "id", "type" ]
      },
      "DashboardReportSubscription" : {
        "type" : "object",
        "description" : "A list of the report subscribers.",
        "properties" : {
          "MONTH" : {
            "type" : "array",
            "description" : "A list of monthly subscribers. \n\nMonthly subscribers receive the report on the first Monday of the month at midnight. \n\nYou can specify email addresses or Dynatrace user IDs here.",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "WEEK" : {
            "type" : "array",
            "description" : "A list of weekly subscribers. \n\nWeekly subscribers receive the report every Monday at midnight. \n\n You can specify email addresses or Dynatrace user IDs here.",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          }
        }
      },
      "DashboardSharePermissions" : {
        "type" : "object",
        "description" : "Access permissions of the dashboard.",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the user or group to whom the permission is granted.\n\nNot applicable if the **type** is set to `ALL`."
          },
          "permission" : {
            "type" : "string",
            "description" : "The level of the permission: \n \n* `VIEW`: The dashboard is shared with read permission. \n* `EDIT`: The dashboard is shared with edit permission. \n",
            "enum" : [ "EDIT", "VIEW" ]
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the permission: \n\n* `USER`: The dashboard is shared with the specified user. \n* `GROUP`: The dashboard is shared with all users of the specified group. \n* `ALL`: The dashboard is shared via link. Any authenticated user with the link can view the dashboard.",
            "enum" : [ "ALL", "GROUP", "USER" ]
          }
        },
        "required" : [ "permission", "type" ]
      },
      "DashboardSharing" : {
        "type" : "object",
        "description" : "Sharing configuration of the dashboard.",
        "example" : {
          "enabled" : "true",
          "id" : "a5fca32f-d3ba-4749-b201-5d3cd70b9d22",
          "permissions" : [ {
            "permission" : "VIEW",
            "type" : "ALL"
          }, {
            "id" : "userid",
            "permission" : "VIEW",
            "type" : "USER"
          }, {
            "id" : "userid",
            "permission" : "EDIT",
            "type" : "USER"
          }, {
            "id" : "groupid",
            "permission" : "VIEW",
            "type" : "GROUP"
          }, {
            "id" : "groupid",
            "permission" : "EDIT",
            "type" : "GROUP"
          } ],
          "preset" : "true",
          "publicAccess" : {
            "managementZoneIds" : [ "default", "2899273953172250973" ],
            "urls" : {
              "2899273953172250973" : "https://mytenantid.live.dynatrace.com/e/1/dashboards/a5fca32f-d3ba-4749-b201-5d3cd70b9d22?auth=SL5wTvCbaM2lwpew23234",
              "default" : "https://mytenantid.live.dynatrace.com/e/1/dashboards/a5fca32f-d3ba-4749-b201-5d3cd70b9d22?auth=9yPpSI-M-3434Irz8yc8U"
            }
          }
        },
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The dashboard is shared (`true`) or private (`false`)."
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the dashboard."
          },
          "permissions" : {
            "type" : "array",
            "description" : "A list of permissions to access the dashboard.",
            "items" : {
              "$ref" : "#/components/schemas/DashboardSharePermissions"
            }
          },
          "preset" : {
            "type" : "boolean",
            "description" : "If `true` the dashboard will be marked as preset."
          },
          "publicAccess" : {
            "$ref" : "#/components/schemas/DashboardAnonymousAccess"
          }
        },
        "required" : [ "id", "permissions", "publicAccess" ]
      },
      "DashboardStub" : {
        "type" : "object",
        "description" : "A short representation of a dashboard.",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the dashboard."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the dashboard.",
            "readOnly" : true
          },
          "owner" : {
            "type" : "string",
            "description" : "The owner of the dashboard.",
            "readOnly" : true
          }
        },
        "required" : [ "id" ]
      },
      "DataExplorerFilter" : {
        "type" : "object",
        "description" : "Filter for data explorer queries.",
        "properties" : {
          "criteria" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DexpFilterCriterion"
            },
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "uniqueItems" : true
          },
          "entityAttribute" : {
            "type" : "string"
          },
          "filter" : {
            "type" : "string"
          },
          "filterOperator" : {
            "type" : "string",
            "enum" : [ "AND", "NOT", "OR" ]
          },
          "filterType" : {
            "type" : "string",
            "enum" : [ "DIMENSION", "ENTITY_ATTRIBUTE", "ID", "NAME", "TAG" ]
          },
          "globalEntity" : {
            "type" : "string"
          },
          "nestedFilters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DataExplorerFilter"
            },
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "uniqueItems" : true
          },
          "relationship" : {
            "$ref" : "#/components/schemas/DexpFilterRelationship"
          }
        }
      },
      "DataExplorerQuery" : {
        "type" : "object",
        "description" : "Configuration of a data explorer query.",
        "properties" : {
          "defaultValue" : {
            "type" : "number",
            "format" : "double",
            "description" : "Replaces null data points with the provided value"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Status of the query"
          },
          "filterBy" : {
            "$ref" : "#/components/schemas/DataExplorerFilter"
          },
          "foldTransformation" : {
            "type" : "string",
            "description" : "The fold transformation",
            "enum" : [ "LAST_VALUE", "TOTAL" ]
          },
          "generatedMetricSelector" : {
            "type" : "string",
            "description" : "Generated metric selector"
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the query"
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Limit the results of the query"
          },
          "metric" : {
            "type" : "string",
            "description" : "The metric id"
          },
          "metricSelector" : {
            "type" : "string",
            "description" : "The metric selector"
          },
          "rate" : {
            "type" : "string",
            "description" : "Converts a count-based metric (for example, bytes) into a rate-based metric (bytes per second)",
            "enum" : [ "HOUR", "MINUTE", "MONTH", "NONE", "SECOND", "WEEK", "YEAR" ]
          },
          "sortBy" : {
            "type" : "string",
            "description" : "The order of the sorting applied to the query",
            "enum" : [ "ASC", "DESC" ]
          },
          "sortByDimension" : {
            "type" : "string",
            "description" : "The dimension where sorting is applied. Sorting by value if null"
          },
          "spaceAggregation" : {
            "type" : "string",
            "description" : "Space aggregation applied to the query",
            "enum" : [ "AUTO", "AVG", "COUNT", "MAX", "MEDIAN", "MIN", "PERCENTILE_10", "PERCENTILE_75", "PERCENTILE_90", "SUM", "VALUE" ]
          },
          "splitBy" : {
            "type" : "array",
            "description" : "The splittings applied to the query",
            "items" : {
              "type" : "string",
              "description" : "The splittings applied to the query"
            }
          },
          "timeAggregation" : {
            "type" : "string",
            "description" : "Time roll up applied to the query",
            "enum" : [ "AVG", "COUNT", "DEFAULT", "MAX", "MEDIAN", "MIN", "SUM", "VALUE" ]
          },
          "timeShift" : {
            "$ref" : "#/components/schemas/DataExplorerTimeShift"
          }
        },
        "required" : [ "enabled", "filterBy", "id", "metric", "spaceAggregation", "splitBy", "timeAggregation" ]
      },
      "DataExplorerQuerySettings" : {
        "type" : "object",
        "description" : "Configuration for the queries",
        "properties" : {
          "foldAggregation" : {
            "type" : "string",
            "description" : "The fold aggregation",
            "enum" : [ "AUTO", "AVG", "COUNT", "MAX", "MEDIAN", "MIN", "PERCENTILE_10", "PERCENTILE_75", "PERCENTILE_90", "SUM", "VALUE" ]
          },
          "foldTransformation" : {
            "type" : "string",
            "description" : "The fold transformation",
            "enum" : [ "LAST_VALUE", "TOTAL" ]
          },
          "resolution" : {
            "type" : "string",
            "description" : "The resolution"
          }
        }
      },
      "DataExplorerTile" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "customName" : {
              "type" : "string",
              "description" : "The name of the tile, set by user."
            },
            "metricExpressions" : {
              "type" : "array",
              "description" : "The metric expressions generated by this configuration",
              "items" : {
                "type" : "string",
                "description" : "The metric expressions generated by this configuration"
              }
            },
            "queries" : {
              "type" : "array",
              "description" : "The list queries to explore",
              "items" : {
                "$ref" : "#/components/schemas/DataExplorerQuery"
              }
            },
            "queriesSettings" : {
              "$ref" : "#/components/schemas/DataExplorerQuerySettings"
            },
            "visualConfig" : {
              "$ref" : "#/components/schemas/VisualizationConfiguration"
            }
          }
        } ],
        "description" : "Configuration of a data explorer tile.",
        "required" : [ "bounds", "name", "queries", "tileType", "visualConfig" ]
      },
      "DataExplorerTimeShift" : {
        "type" : "object",
        "description" : "TimeShift for data explorer queries.",
        "properties" : {
          "factor" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unit" : {
            "type" : "string",
            "enum" : [ "DAY", "HOUR", "MINUTE", "SECOND", "WEEK" ]
          }
        }
      },
      "DataPrivacyAndSecurity" : {
        "type" : "object",
        "description" : "Global configuration for data privacy and security.",
        "properties" : {
          "logAuditEvents" : {
            "type" : "boolean",
            "description" : "The audit logging is enabled (`true`) or disabled (`false`)."
          },
          "maskIpAddressesAndGpsCoordinates" : {
            "type" : "boolean",
            "description" : "Masking of IP addresses and GPS coordinates is enabled (`true`) or disabled (`false`)."
          },
          "maskPersonalDataInUris" : {
            "type" : "boolean",
            "description" : "Masking of personal data in URIs is enabled (`true`) or disabled (`false`)."
          },
          "maskUserActionNames" : {
            "type" : "boolean",
            "description" : "Masking of user action names is enabled (`true`) or disabled (`false`). \n\nThis masking is available only for web applications."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          }
        },
        "required" : [ "maskIpAddressesAndGpsCoordinates", "maskPersonalDataInUris", "maskUserActionNames" ]
      },
      "DataSource" : {
        "type" : "object",
        "properties" : {
          "capturingAndStorageLocation" : {
            "type" : "string",
            "description" : "Specifies the location where the values are captured and stored.\n\n Required if the **source** is one of the following: `GET_PARAMETER`, `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`. \n\n Not applicable in other cases. \n\n If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`, the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed.",
            "enum" : [ "CAPTURE_AND_STORE_ON_BOTH", "CAPTURE_AND_STORE_ON_CLIENT", "CAPTURE_AND_STORE_ON_SERVER", "CAPTURE_ON_CLIENT_STORE_ON_SERVER" ]
          },
          "cicsSDKMethodNodeCondition" : {
            "$ref" : "#/components/schemas/ValueCondition"
          },
          "cicsTransactionCallType" : {
            "type" : "string",
            "description" : "CICS transaction call type condition for which the value is captured.\n\n Required if the **source** is: `CICS_TRANSACTION_CALL_TYPE`.\n\n Not applicable in other cases.",
            "enum" : [ "CTG", "DPL", "EXPLICIT_ADK", "HTTP", "IMS_CONNECT", "IMS_CONNECT_API", "IMS_ITRA", "IMS_MSC", "IMS_PGM_SWITCH", "IMS_SHARED_QUEUES", "IMS_TRANS_EXEC", "MQ", "SOAP", "START", "TTX", "TX", "UNKNOWN", "ZOS_CONNECT" ]
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The data source is enabled (`true`) or disabled (`false`)."
          },
          "iibLabelMethodNodeCondition" : {
            "$ref" : "#/components/schemas/ValueCondition"
          },
          "iibMethodNodeCondition" : {
            "$ref" : "#/components/schemas/ValueCondition"
          },
          "iibNodeType" : {
            "type" : "string",
            "description" : "The IBM integration bus node type for which the value is captured.\n\n This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.\n\n Not applicable in other cases.",
            "enum" : [ "AGGREGATE_CONTROL_NODE", "AGGREGATE_REPLY_NODE", "AGGREGATE_REQUEST_NODE", "CALLABLE_FLOW_REPLY_NODE", "COLLECTOR_NODE", "COMPUTE_NODE", "DATABASE_NODE", "DATABASE_RETRIEVE_NODE", "DATABASE_ROUTE_NODE", "DECISION_SERVICE_NODE", "DOT_NET_COMPUTE_NODE", "FILE_READ_NODE", "FILTER_NODE", "FLOW_ORDER_NODE", "GROUP_COMPLETE_NODE", "GROUP_GATHER_NODE", "GROUP_SCATTER_NODE", "HTTP_ASYNC_REQUEST", "HTTP_ASYNC_RESPONSE", "HTTP_HEADER", "HTTP_INPUT", "HTTP_REPLY", "HTTP_REQUEST", "JAVA_COMPUTE_NODE", "JMS_CLIENT_RECEIVE", "JMS_CLIENT_REPLY_NODE", "JMS_HEADER", "JMS_INPUT_NODE", "JMS_OUTPUT_NODE", "JMS_REPLY_NODE", "MQ_GET_NODE", "MQ_INPUT_NODE", "MQ_OUTPUT_NODE", "MQ_REPLY_NODE", "PASSTHRU_NODE", "PUBLICATION_NODE", "RESET_CONTENT_DESCRIPTOR_NODE", "REST_ASYNC_REQUEST_NODE", "REST_ASYNC_RESPONSE_NODE", "REST_REQUEST_NODE", "RE_SEQUENCE_NODE", "ROUTE_NODE", "SAP_REPLY_NODE", "SCA_REPLY_NODE", "SECURITY_PEP", "SEQUENCE_NODE", "SOAP_ASYNC_REQUEST_NODE", "SOAP_ASYNC_RESPONSE_NODE", "SOAP_EXTRACT_NODE", "SOAP_INPUT_NODE", "SOAP_REPLY_NODE", "SOAP_REQUEST_NODE", "SOAP_WRAPPER_NODE", "SR_RETRIEVE_ENTITY_NODE", "SR_RETRIEVE_IT_SERVICE_NODE", "THROW_NODE", "TRACE_NODE", "TRY_CATCH_NODE", "VALIDATE_NODE", "WS_REPLY_NODE", "XSL_MQSI_NODE" ]
          },
          "imsTransactionCallType" : {
            "type" : "string",
            "description" : "IMS transaction call type condition for which the value is captured.\n\n Required if the **source** is: `IMS_TRANSACTION_CALL_TYPE`.\n\n Not applicable in other cases.",
            "enum" : [ "CTG", "DPL", "EXPLICIT_ADK", "HTTP", "IMS_CONNECT", "IMS_CONNECT_API", "IMS_ITRA", "IMS_MSC", "IMS_PGM_SWITCH", "IMS_SHARED_QUEUES", "IMS_TRANS_EXEC", "MQ", "SOAP", "START", "TTX", "TX", "UNKNOWN", "ZOS_CONNECT" ]
          },
          "methods" : {
            "type" : "array",
            "description" : "The method specification if the **source** value is `METHOD_PARAM`. \n\n Not applicable in other cases.",
            "items" : {
              "$ref" : "#/components/schemas/CapturedMethod"
            }
          },
          "parameterName" : {
            "type" : "string",
            "description" : "The name of the web request parameter to capture.\n\n Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.\n\n Not applicable in other cases."
          },
          "scope" : {
            "$ref" : "#/components/schemas/ScopeConditions"
          },
          "serverVariableTechnology" : {
            "type" : "string",
            "description" : "The technology of the server variable to capture if the **source** value is `SERVER_VARIABLE`. \\n\\n Not applicable in other cases.",
            "enum" : [ "ASP_NET" ]
          },
          "sessionAttributeTechnology" : {
            "type" : "string",
            "description" : "The technology of the session attribute to capture if the **source** value is `SESSION_ATTRIBUTE`. \\n\\n Not applicable in other cases.",
            "enum" : [ "ASP_NET", "ASP_NET_CORE", "JAVA", "PHP" ]
          },
          "source" : {
            "type" : "string",
            "description" : "The source of the attribute to capture. Works in conjunction with **parameterName** or **methods** and **technology**.",
            "enum" : [ "CICS_SDK", "CICS_SYSTEM_ID", "CICS_TASK_ID", "CICS_TRANSACTION_CALL_TYPE", "CICS_UNIT_OF_WORK_ID", "CICS_USER_ID", "CLIENT_IP", "CUSTOM_ATTRIBUTE", "DLI_DB_OR_LTERM_NAME", "DLI_SEGMENT_NAME", "IIB_LABEL", "IIB_NODE", "IMS_TRANSACTION_CALL_TYPE", "IMS_UNIT_OF_WORK_ID", "IMS_USER_ID", "METHOD_PARAM", "MQ_CORRELATION_ID", "MQ_MESSAGE_ID", "MQ_MESSAGE_SIZE", "POST_PARAMETER", "QUERY_PARAMETER", "REQUEST_HEADER", "RESPONSE_HEADER", "SERVER_VARIABLE", "SESSION_ATTRIBUTE", "SPAN_ATTRIBUTE", "URI", "URI_PATH", "WEBSERVICE_METHOD", "WEBSERVICE_NAME" ]
          },
          "spanAttributeKey" : {
            "type" : "string",
            "description" : "The key of the span attribute to capture.\n\n Required if the **source** is: `SPAN_ATTRIBUTE`.\n\n Not applicable in other cases."
          },
          "technology" : {
            "type" : "string",
            "description" : "The technology of the method to capture if the **source** value is `METHOD_PARAM`. \\n\\n Not applicable in other cases.",
            "enum" : [ "DOTNET", "JAVA", "PHP" ]
          },
          "valueProcessing" : {
            "$ref" : "#/components/schemas/ValueProcessing"
          }
        },
        "required" : [ "enabled", "source" ]
      },
      "DatabaseAnomalyDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of the anomaly detection for database services.",
        "example" : {
          "databaseConnectionFailureCount" : {
            "connectionFailsCount" : 5,
            "enabled" : "true",
            "timePeriodMinutes" : 5
          },
          "failureRateIncrease" : {
            "detectionMode" : "DETECT_USING_FIXED_THRESHOLDS",
            "thresholds" : {
              "sensitivity" : "LOW",
              "threshold" : 10
            }
          },
          "loadDrop" : {
            "enabled" : true,
            "loadDropPercent" : 40,
            "minAbnormalStateDurationInMinutes" : 5
          },
          "loadSpike" : {
            "enabled" : false
          },
          "responseTimeDegradation" : {
            "automaticDetection" : {
              "loadThreshold" : "ONE_REQUEST_PER_MINUTE",
              "responseTimeDegradationMilliseconds" : 250,
              "responseTimeDegradationPercent" : 90,
              "slowestResponseTimeDegradationMilliseconds" : 500,
              "slowestResponseTimeDegradationPercent" : 200
            },
            "detectionMode" : "DETECT_AUTOMATICALLY"
          }
        },
        "properties" : {
          "databaseConnectionFailureCount" : {
            "$ref" : "#/components/schemas/DatabaseConnectionFailureDetectionConfig"
          },
          "failureRateIncrease" : {
            "$ref" : "#/components/schemas/FailureRateIncreaseDetectionConfig"
          },
          "loadDrop" : {
            "$ref" : "#/components/schemas/LoadDropDetectionConfig"
          },
          "loadSpike" : {
            "$ref" : "#/components/schemas/LoadSpikeDetectionConfig"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "responseTimeDegradation" : {
            "$ref" : "#/components/schemas/ResponseTimeDegradationDetectionConfig"
          }
        },
        "required" : [ "databaseConnectionFailureCount", "failureRateIncrease", "responseTimeDegradation" ]
      },
      "DatabaseConnectionFailureDetectionConfig" : {
        "type" : "object",
        "description" : "Parameters of the failed database connections detection. \n\nThe alert is triggered when failed connections number exceeds **connectionFailsCount** during any **timePeriodMinutes** minutes period.",
        "properties" : {
          "connectionFailsCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of failed database connections during any **timePeriodMinutes** minutes period to trigger an alert.",
            "maximum" : 9999999,
            "minimum" : 1
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "timePeriodMinutes" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The *X* minutes time period during which the **connectionFailsCount** is evaluated.",
            "maximum" : 15,
            "minimum" : 1
          }
        },
        "required" : [ "enabled" ]
      },
      "DatabaseTopologyComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "CLUSTER", "EMBEDDED", "FAILOVER", "IPC", "LOAD_BALANCING", "SINGLE_SERVER", "UNSPECIFIED" ]
            }
          }
        } ],
        "description" : "Comparison for `DATABASE_TOPOLOGY` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "DcrumDecoderComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "ALL_OTHER", "CITRIX_APPFLOW", "CITRIX_ICA", "CITRIX_ICA_OVER_SSL", "DB2_DRDA", "HTTP", "HTTPS", "HTTP_EXPRESS", "INFORMIX", "MYSQL", "ORACLE", "SAP_GUI", "SAP_GUI_OVER_HTTP", "SAP_GUI_OVER_HTTPS", "SAP_HANA_DB", "SAP_RFC", "SSL", "TDS" ]
            }
          }
        } ],
        "description" : "Comparison for `DCRUM_DECODER_TYPE` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "DestinationDetails" : {
        "type" : "object",
        "description" : "Configuration of a destination-based conversion goal.",
        "properties" : {
          "caseSensitive" : {
            "type" : "boolean",
            "description" : "The match is case-sensitive (`true`) or (`false`)."
          },
          "matchType" : {
            "type" : "string",
            "description" : "The operator of the match.",
            "enum" : [ "Begins", "Contains", "Ends" ]
          },
          "urlOrPath" : {
            "type" : "string",
            "description" : "The path to be reached to hit the conversion goal."
          }
        },
        "required" : [ "urlOrPath" ]
      },
      "DetectionRule" : {
        "type" : "object",
        "properties" : {
          "annotations" : {
            "type" : "array",
            "description" : "Additional annotations filter of the rule. \n\nOnly classes where all listed annotations are available in the class itself or any of its superclasses are instrumented. \n\nNot applicable to PHP.",
            "items" : {
              "type" : "string"
            }
          },
          "className" : {
            "type" : "string",
            "description" : "The fully qualified class or interface to instrument. \n\nRequired for Java and .NET custom services. \n\n Not applicable to PHP."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Rule enabled/disabled."
          },
          "fileName" : {
            "type" : "string",
            "description" : "The PHP file containing the class or methods to instrument. \n\nRequired for PHP custom service. \n\n Not applicable to Java and .NET."
          },
          "fileNameMatcher" : {
            "type" : "string",
            "description" : "Matcher applying to the file name. Default value is `ENDS_WITH` (if applicable).",
            "enum" : [ "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the detection rule."
          },
          "matcher" : {
            "type" : "string",
            "description" : "Matcher applying to the class name. `STARTS_WITH` can only be used if there is at least one annotation defined. Default value is `EQUALS`.",
            "enum" : [ "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
          },
          "methodRules" : {
            "type" : "array",
            "description" : "List of methods to instrument.",
            "items" : {
              "$ref" : "#/components/schemas/MethodRule"
            },
            "maxItems" : 2000,
            "minItems" : 1
          }
        },
        "required" : [ "enabled", "methodRules" ]
      },
      "DexpFilterCriterion" : {
        "type" : "object",
        "description" : "Criterion for data explorer filters.",
        "properties" : {
          "evaluator" : {
            "type" : "string",
            "enum" : [ "EQ", "IN", "NE", "PREFIX" ]
          },
          "matchExactly" : {
            "type" : "boolean"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "DexpFilterRelationship" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the relationship. e.g runsOn, isStepOf, etc"
          },
          "targetEntity" : {
            "type" : "string",
            "description" : "The target entity of the relationship. e.g HOST, VCENTER, SERVICE etc"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the relationship",
            "enum" : [ "fromRelationship", "toRelationship" ]
          }
        }
      },
      "DimensionDefinition" : {
        "type" : "object",
        "description" : "Parameters of a definition of a calculated service metric.",
        "properties" : {
          "dimension" : {
            "type" : "string",
            "description" : "The dimension value pattern. \n\n You can define custom placeholders in the **placeholders** field and use them here.",
            "maxLength" : 400,
            "minLength" : 0
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the dimension.",
            "maxLength" : 200,
            "minLength" : 0
          },
          "placeholders" : {
            "type" : "array",
            "description" : "The list of custom placeholders to be used in a dimension value pattern.",
            "items" : {
              "$ref" : "#/components/schemas/Placeholder"
            }
          },
          "topX" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of top values to be calculated.",
            "maximum" : 100,
            "minimum" : 1
          },
          "topXAggregation" : {
            "type" : "string",
            "description" : "The aggregation of the dimension.",
            "enum" : [ "AVERAGE", "COUNT", "MAX", "MIN", "OF_INTEREST_RATIO", "OTHER_RATIO", "SINGLE_VALUE", "SUM" ]
          },
          "topXDirection" : {
            "type" : "string",
            "description" : "How to calculate the **topX** values.",
            "enum" : [ "ASCENDING", "DESCENDING" ]
          }
        },
        "required" : [ "dimension", "name", "topX", "topXAggregation", "topXDirection" ]
      },
      "DiskEventAnomalyDetectionConfig" : {
        "type" : "object",
        "properties" : {
          "diskNameFilter" : {
            "$ref" : "#/components/schemas/DiskNameFilter"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Disk event rule enabled/disabled."
          },
          "hostGroupId" : {
            "type" : "string",
            "description" : "Narrows the rule usage down to disks that run on hosts that themselves run on the specified host group."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the disk event rule.",
            "readOnly" : true
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "metric" : {
            "type" : "string",
            "description" : "The metric to monitor.",
            "enum" : [ "LOW_DISK_SPACE", "LOW_INODES", "READ_TIME_EXCEEDING", "WRITE_TIME_EXCEEDING" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the disk event rule.",
            "maxLength" : 255,
            "minLength" : 1
          },
          "samples" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of samples to evaluate.",
            "example" : 10,
            "maximum" : 60,
            "minimum" : 3
          },
          "tagFilters" : {
            "type" : "array",
            "description" : "Narrows the rule usage down to the hosts matching the specified tags.",
            "items" : {
              "$ref" : "#/components/schemas/TagFilter"
            },
            "uniqueItems" : true
          },
          "threshold" : {
            "type" : "number",
            "format" : "double",
            "description" : "The threshold to trigger disk event. \n\n * A percentage for `LowDiskSpace` or `LowInodes` metrics. \n * In milliseconds for `ReadTimeExceeding` or `WriteTimeExceeding` metrics.",
            "maximum" : 1000,
            "minimum" : 0
          },
          "violatingSamples" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of samples that must violate the threshold to trigger an event. Must not exceed the number of evaluated samples.",
            "example" : 8,
            "minimum" : 1
          }
        },
        "required" : [ "enabled", "metric", "name", "samples", "threshold", "violatingSamples" ]
      },
      "DiskLowInodesDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of low disk inodes number detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/DiskLowInodesThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "DiskLowInodesThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for low disk inodes number. If not set, automatic mode is used.",
        "properties" : {
          "freeInodesPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if percentage of available inodes is lower than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "freeInodesPercentage" ]
      },
      "DiskLowSpaceDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of low disk space detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/DiskLowSpaceThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "DiskLowSpaceThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for low disk space. If not set, automatic mode is used.",
        "properties" : {
          "freeSpacePercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if free disk space is lower than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 0
          }
        },
        "required" : [ "freeSpacePercentage" ]
      },
      "DiskNameFilter" : {
        "type" : "object",
        "description" : "Narrows the rule usage down to disks, matching the specified criteria.",
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Comparison operator.",
            "enum" : [ "CONTAINS", "DOES_NOT_CONTAIN", "DOES_NOT_EQUAL", "DOES_NOT_START_WITH", "EQUALS", "STARTS_WITH" ]
          },
          "value" : {
            "type" : "string",
            "description" : "Value to compare to.",
            "maxLength" : 100,
            "minLength" : 0
          }
        },
        "required" : [ "operator", "value" ]
      },
      "DiskSlowWriteAndReadsThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for slow running disks. If not set, the automatic mode is used.",
        "properties" : {
          "writeAndReadTime" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if disk read/write time is higher than *X* milliseconds in 3 out of 5 samples.",
            "maximum" : 10000,
            "minimum" : 1
          }
        },
        "required" : [ "writeAndReadTime" ]
      },
      "DiskSlowWritesAndReadsDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of slow running disks detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/DiskSlowWriteAndReadsThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "DroppedPacketsDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of the high number of dropped packets detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/DroppedPacketsThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "DroppedPacketsThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for high number of dropped packets. If not set then the automatic mode is used.",
        "properties" : {
          "droppedPacketsPerSecond" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if receive/transmit dropped packets rate on NIC is higher than *X* packets per second in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "droppedPacketsPerSecond" ]
      },
      "DynamicFilters" : {
        "type" : "object",
        "description" : "Dashboard filter configuration of a dashboard.",
        "properties" : {
          "filters" : {
            "type" : "array",
            "description" : "A set of all possible global dashboard filters that can be applied to a dashboard \n\nCurrently supported values are: \n\n\tOS_TYPE,\n\tSERVICE_TYPE,\n\tDEPLOYMENT_TYPE,\n\tAPPLICATION_INJECTION_TYPE,\n\tPAAS_VENDOR_TYPE,\n\tDATABASE_VENDOR,\n\tHOST_VIRTUALIZATION_TYPE,\n\tHOST_MONITORING_MODE,\n\tKUBERNETES_CLUSTER,\n\tRELATED_CLOUD_APPLICATION,\n\tRELATED_NAMESPACE,\n\tSERVICE_TAG_KEY:<tagname>,\n\tHOST_TAG_KEY:<tagname>,\n\tAPPLICATION_TAG_KEY:<tagname>,\n\tCUSTOM_DIMENSION:<key>,\n\tPROCESS_GROUP_TAG_KEY:<tagname>,\n\tPROCESS_GROUP_INSTANCE_TAG_KEY:<tagname>",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "genericTagFilters" : {
            "type" : "array",
            "description" : "A set of generic tag filters that can be applied to a dashboard",
            "items" : {
              "$ref" : "#/components/schemas/DashboardGenericTagFilter"
            },
            "uniqueItems" : true
          }
        },
        "required" : [ "filters", "genericTagFilters" ]
      },
      "ESBInputNodeTypeComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "CALLABLE_FLOW_ASYNC_RESPONSE_NODE", "CALLABLE_FLOW_INPUT_NODE", "DATABASE_INPUT_NODE", "DOTNET_INPUT_NODE", "EMAIL_INPUT_NODE", "EVENT_INPUT", "EVENT_INPUT_NODE", "FILE_INPUT_NODE", "FTE_INPUT_NODE", "HTTP_ASYNC_RESPONSE", "JD_EDWARDS_INPUT_NODE", "JMS_CLIENT_INPUT_NODE", "LABEL_NODE", "MQ_INPUT_NODE", "PEOPLE_SOFT_INPUT_NODE", "REST_ASYNC_RESPONSE", "REST_REQUEST", "SAP_INPUT_NODE", "SCA_ASYNC_RESPONSE_NODE", "SCA_INPUT_NODE", "SIEBEL_INPUT_NODE", "SOAP_INPUT_NODE", "TCPIP_CLIENT_INPUT_NODE", "TCPIP_CLIENT_REQUEST_NODE", "TCPIP_SERVER_INPUT_NODE", "TCPIP_SERVER_REQUEST_NODE", "TIMEOUT_NOTIFICATION_NODE", "WS_INPUT_NODE" ]
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "CALLABLE_FLOW_ASYNC_RESPONSE_NODE", "CALLABLE_FLOW_INPUT_NODE", "DATABASE_INPUT_NODE", "DOTNET_INPUT_NODE", "EMAIL_INPUT_NODE", "EVENT_INPUT", "EVENT_INPUT_NODE", "FILE_INPUT_NODE", "FTE_INPUT_NODE", "HTTP_ASYNC_RESPONSE", "JD_EDWARDS_INPUT_NODE", "JMS_CLIENT_INPUT_NODE", "LABEL_NODE", "MQ_INPUT_NODE", "PEOPLE_SOFT_INPUT_NODE", "REST_ASYNC_RESPONSE", "REST_REQUEST", "SAP_INPUT_NODE", "SCA_ASYNC_RESPONSE_NODE", "SCA_INPUT_NODE", "SIEBEL_INPUT_NODE", "SOAP_INPUT_NODE", "TCPIP_CLIENT_INPUT_NODE", "TCPIP_CLIENT_REQUEST_NODE", "TCPIP_SERVER_INPUT_NODE", "TCPIP_SERVER_REQUEST_NODE", "TIMEOUT_NOTIFICATION_NODE", "WS_INPUT_NODE" ]
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Type-specific comparison information for attributes of type 'ESB_INPUT_NODE_TYPE'.This model also inherits fields from the parent model ComparisonInfo.",
        "required" : [ "comparison", "negate" ]
      },
      "Ec2CandidateCpuSaturationDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of the high CPU saturation on EC2 without installed agent (monitoring candidate). If null, then this configuration won't be changed.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/Ec2CandidateCpuSaturationThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "Ec2CandidateCpuSaturationThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for high CPU saturation on EC2 monitoring candidate. If not set, automatic mode is used.",
        "properties" : {
          "cpuUsagePercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if CPU usage is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "cpuUsagePercentage" ]
      },
      "ElbHighConnectionErrorsDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of the high number of backend connection errors on ELB detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/ElbHighConnectionErrorsThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "ElbHighConnectionErrorsThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for high number of backend connection errors on ELB. If not set, automatic mode is used.",
        "properties" : {
          "connectionErrorsPerMinute" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if number of backend connection errors is higher than *X* per minute in 3 out of 5 samples.",
            "minimum" : 1
          }
        },
        "required" : [ "connectionErrorsPerMinute" ]
      },
      "EmailNotificationConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "bccReceivers" : {
              "type" : "array",
              "description" : "The list of the email BCC-recipients.",
              "items" : {
                "type" : "string"
              },
              "uniqueItems" : true
            },
            "body" : {
              "type" : "string",
              "description" : "The template of the email notification.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string. \n* `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://dt-url.net/1yk3kkq) string. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
              "minLength" : 1
            },
            "ccReceivers" : {
              "type" : "array",
              "description" : "The list of the email CC-recipients.",
              "items" : {
                "type" : "string"
              },
              "uniqueItems" : true
            },
            "receivers" : {
              "type" : "array",
              "description" : "The list of the email recipients.",
              "items" : {
                "type" : "string"
              },
              "minItems" : 1,
              "uniqueItems" : true
            },
            "subject" : {
              "type" : "string",
              "description" : "The subject of the email notifications.",
              "maxLength" : 1000,
              "minLength" : 1
            }
          }
        } ],
        "description" : "Configuration of the email notification.",
        "required" : [ "active", "alertingProfile", "body", "name", "receivers", "subject" ]
      },
      "EndsWithCompareOperation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **ends with** into **does not end with**. \n\n If not set, then `false` is used."
            },
            "values" : {
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "type" : "string"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The condition of the `ENDS_WITH` type. \n\nThe condition checks whether the string value ends with the specified text.",
        "required" : [ "values" ]
      },
      "EntityIdAlertingScope" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "entityId" : {
              "type" : "string",
              "description" : "The monitored entities id to match on."
            }
          }
        } ],
        "description" : "A scope filter for a monitored entity identifier.",
        "required" : [ "entityId", "filterType" ]
      },
      "EntityIdComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to."
            }
          }
        } ],
        "description" : "Comparison for `ENTITY_ID` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "EntityRuleEngineCondition" : {
        "type" : "object",
        "description" : "A condition defines how to execute matching logic for an entity.",
        "properties" : {
          "comparisonInfo" : {
            "$ref" : "#/components/schemas/ComparisonBasic"
          },
          "key" : {
            "$ref" : "#/components/schemas/ConditionKey"
          }
        },
        "required" : [ "comparisonInfo", "key" ]
      },
      "EntitySelectorBasedAutoTagRule" : {
        "type" : "object",
        "description" : "The entity-selector-based rule for auto tag usage. It allows tagging entities via an entity selector.",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          },
          "entitySelector" : {
            "type" : "string",
            "description" : "The entity selector string, by which the entities are selected.",
            "minLength" : 1
          },
          "normalization" : {
            "type" : "string",
            "description" : "Changes applied to the value after applying the value format. Default is LEAVE_TEXT_AS_IS.",
            "enum" : [ "LEAVE_TEXT_AS_IS", "TO_LOWER_CASE", "TO_UPPER_CASE" ],
            "nullable" : true
          },
          "valueFormat" : {
            "type" : "string",
            "description" : "The value of the entity-selector-based auto-tag. If specified, the tag is used in the `name:valueFormat` format. \n\nFor example, you can extend the `Infrastructure` tag to `Infrastructure:Windows` and `Infrastructure:Linux`. \n\n",
            "maxLength" : 100,
            "minLength" : 0
          }
        },
        "required" : [ "entitySelector" ]
      },
      "EntitySelectorBasedMzRule" : {
        "type" : "object",
        "description" : "The entity-selector-based rule for management zone usage. It allows adding entities to a management zone via an entity selector.",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          },
          "entitySelector" : {
            "type" : "string",
            "description" : "The entity selector string, by which the entities are selected.",
            "minLength" : 1
          }
        },
        "required" : [ "entitySelector" ]
      },
      "EntityShortRepresentation" : {
        "type" : "object",
        "description" : "The short representation of a Dynatrace entity.",
        "example" : {
          "description" : "Dynatrace entity for the REST API example",
          "id" : "6a98d7bc-abb9-44f8-ae6a-73e68e71812a",
          "name" : "Dynatrace entity"
        },
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "A short description of the Dynatrace entity.",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the Dynatrace entity."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity.",
            "readOnly" : true
          }
        },
        "required" : [ "id" ]
      },
      "EnvironmentAutoUpdateConfig" : {
        "type" : "object",
        "description" : "Environment-wide configuration of OneAgents auto-updates. \n\nApplies to all OneAgents connecting to the environment if their **setting** parameter is set to `INHERITED`. Otherwise, the host group or host level setting applies.",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "setting" : {
            "type" : "string",
            "description" : "The auto-update state of OneAgents connecting to the environment: \n\n* `ENABLED`: OneAgents automatically update to the most recent version. \n* `DISABLED`: OneAgents update to the version specified in the **version** field.\n\nOneAgents that connect to the environment use this configuration only when their **setting** parameter is set to `INHERITED`.",
            "enum" : [ "ENABLED", "DISABLED" ],
            "example" : "DISABLED"
          },
          "targetVersion" : {
            "type" : "string",
            "description" : "Version to update a OneAgent to when automatic updates are enabled.\n\nSupports relative versions `latest`, `previous` and `older` as well as specific version in `<major>.<minor>` format (for example `1.261`) or `<major>.<minor>.<revision>.<timestamp>` format (for example `1.261.178.20230313-090930`).\n\nOnly applicable when the **setting** parameter is set to `ENABLED`.",
            "example" : "latest"
          },
          "updateWindows" : {
            "$ref" : "#/components/schemas/UpdateWindowsConfig"
          },
          "version" : {
            "type" : "string",
            "description" : "The version to which the OneAgent must be updated. \n\nSpecify the version in the `<major>.<minor>.<revision>` format (for example `1.181.0`) or `<major>.<minor>` format (for example `1.181`). You can fetch the list of available versions with the [GET available versions](https://dt-url.net/fo23rb5) call. If no suitable installer is found for the provided version or the value is set to `null`, OneAgent won't be updated. \n\nOnly applicable when the **setting** parameter is set to `DISABLED`.",
            "example" : "1.181.0"
          }
        },
        "required" : [ "setting" ]
      },
      "EqualsCompareOperation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **equals** into **does not equal**. \n\n If not set, then `false` is used."
            },
            "values" : {
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "type" : "object"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The condition of the `EQUALS` type. \n\nThe condition checks whether the detected value equals the specified one.",
        "required" : [ "values" ]
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The HTTP status code"
          },
          "constraintViolations" : {
            "type" : "array",
            "description" : "A list of constraint violations",
            "items" : {
              "$ref" : "#/components/schemas/ConstraintViolation"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "The error message"
          }
        }
      },
      "ErrorEnvelope" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/Error"
          }
        }
      },
      "EsxiHighCpuSaturationConfig" : {
        "type" : "object",
        "description" : "The configuration of the CPU saturation on ESXi host detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/EsxiHighCpuThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "EsxiHighCpuThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for CPU saturation detection on ESXi. If not set then the automatic mode is used. \n\n **All** conditions must be fulfilled to trigger an alert.",
        "properties" : {
          "cpuPeakPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "At least one peak higher than *X*% occurred in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          },
          "cpuUsagePercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "CPU usage is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          },
          "vmCpuReadyPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "VM CPU ready is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "cpuPeakPercentage", "cpuUsagePercentage", "vmCpuReadyPercentage" ]
      },
      "EsxiHighMemoryDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of the memory saturation on ESXi host detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/EsxiHighMemoryThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "EsxiHighMemoryThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for memory saturation on ESXi host. If not set then the automatic mode is used.",
        "properties" : {
          "compressionDecompressionRate" : {
            "type" : "number",
            "description" : "Alert if ESXi host swap IN/OUT or compression/decompression rate is higher *X* kilobytes per second in 3 out of 5 samples.",
            "exclusiveMinimum" : false,
            "maximum" : 1000000,
            "minimum" : 0.01
          }
        },
        "required" : [ "compressionDecompressionRate" ]
      },
      "EventWrapperSettings" : {
        "type" : "object",
        "description" : "In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page.",
        "properties" : {
          "blur" : {
            "type" : "boolean",
            "description" : "Blur enabled/disabled."
          },
          "change" : {
            "type" : "boolean",
            "description" : "Change enabled/disabled."
          },
          "click" : {
            "type" : "boolean",
            "description" : "Click enabled/disabled."
          },
          "mouseUp" : {
            "type" : "boolean",
            "description" : "MouseUp enabled/disabled."
          },
          "touchEnd" : {
            "type" : "boolean",
            "description" : "TouchEnd enabled/disabled."
          },
          "touchStart" : {
            "type" : "boolean",
            "description" : "TouchStart enabled/disabled."
          }
        },
        "required" : [ "blur", "change", "click", "mouseUp", "touchEnd", "touchStart" ]
      },
      "ExceptionPattern" : {
        "type" : "object",
        "description" : "A list of faulty exceptions. \n\nIf an exception on *any* node of the service matches *any* of these patterns it is considered a failure.",
        "properties" : {
          "classPattern" : {
            "type" : "string"
          },
          "messagePattern" : {
            "type" : "string"
          }
        }
      },
      "ExistsCompareOperation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **exists** into **does not exist**. \n\n If not set, then `false` is used."
            }
          }
        } ],
        "description" : "The condition of the `EXISTS` type. \n\nThe condition checks whether the specified attribute exists."
      },
      "Extension" : {
        "type" : "object",
        "description" : "General configuration of an extension.",
        "example" : {
          "id" : "custom.remote.python.demo",
          "metadata" : {
            "clusterVersion" : "1.186.0.20200109-094111",
            "configurationVersions" : [ 7 ]
          },
          "metricGroup" : "custom.demo_metrics",
          "name" : "ActiveGate demo extension",
          "properties" : [ {
            "defaultValue" : "127.0.0.1",
            "key" : "serverIp",
            "type" : "STRING"
          }, {
            "defaultValue" : "",
            "key" : "password",
            "type" : "PASSWORD"
          }, {
            "defaultValue" : "dynatrace",
            "key" : "username",
            "type" : "STRING"
          }, {
            "defaultValue" : "one",
            "dropdownValues" : [ "one", "two", "three" ],
            "key" : "dropdownProperty",
            "type" : "DROPDOWN"
          } ],
          "type" : "ActiveGate",
          "version" : "1.01"
        },
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the extension, for example `custom.remote.python.demo`."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "metricGroup" : {
            "type" : "string",
            "description" : "The metricGroup of the extension used for grouping custom metrics into a hierarchical namespace."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the extension, displayed in Dynatrace."
          },
          "properties" : {
            "type" : "array",
            "description" : "A list of extension properties.",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionProperty"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the extension. It indicates the runtime environment of the extension (for example, ACTIVEGATE).",
            "enum" : [ "ACTIVEGATE", "CODEMODULE", "JMX", "ONEAGENT", "PMI", "UNKNOWN" ]
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the extension, displayed in Dynatrace."
          }
        }
      },
      "ExtensionConfigurationDto" : {
        "type" : "object",
        "example" : {
          "activeGate" : {
            "id" : "7835970235169136995",
            "name" : "ActiveGate Host Name"
          },
          "enabled" : true,
          "hostId" : "HOST-01A7DEFA5340A86D",
          "id" : "custom.remote.python.demo",
          "properties" : {
            "dropdownProperty" : "three",
            "password" : "",
            "serverIp" : "127.0.0.1",
            "username" : "dynatrace"
          },
          "useGlobal" : false
        },
        "properties" : {
          "activeGate" : {
            "$ref" : "#/components/schemas/EntityShortRepresentation"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The extension is enabled (`true`) or disabled (`false`)."
          },
          "endpointId" : {
            "type" : "string",
            "description" : "The ID of the endpoint."
          },
          "endpointName" : {
            "type" : "string",
            "description" : "The name of the endpoint, displayed in Dynatrace."
          },
          "extensionId" : {
            "type" : "string",
            "description" : "The ID of the extension."
          },
          "hostId" : {
            "type" : "string",
            "description" : "The ID of the host on which the extension runs."
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The list of extension parameters. \n\n Each parameter is a key-value pair."
            },
            "description" : "The list of extension parameters. \n\n Each parameter is a key-value pair."
          },
          "useGlobal" : {
            "type" : "boolean",
            "description" : "Allows to skip current configuration and use global one."
          }
        },
        "required" : [ "enabled", "useGlobal" ]
      },
      "ExtensionConfigurationList" : {
        "type" : "object",
        "description" : "A list of configurations.",
        "example" : {
          "configurationsList" : [ {
            "id" : "HOST-E1550E0AED6A572F"
          } ],
          "nextPageToken" : "LlUdYmu5S2MfX/ppfCInR9M=",
          "totalResults" : 9
        },
        "properties" : {
          "configurationsList" : {
            "type" : "array",
            "description" : "List of configurations.",
            "items" : {
              "$ref" : "#/components/schemas/EntityShortRepresentation"
            }
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result."
          },
          "totalResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The total number of entries in the result."
          }
        }
      },
      "ExtensionDto" : {
        "type" : "object",
        "example" : {
          "id" : "custom.python.connectionpool",
          "name" : "Connection Pool",
          "type" : "ONEAGENT"
        },
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ACTIVEGATE", "CODEMODULE", "JMX", "ONEAGENT", "PMI", "UNKNOWN" ]
          }
        }
      },
      "ExtensionListDto" : {
        "type" : "object",
        "example" : {
          "extensions" : [ {
            "id" : "custom.python.connectionpool",
            "name" : "Connection Pool",
            "type" : "ONEAGENT"
          } ],
          "nextPageToken" : "LlUdYmu5S2MfX/ppfCInR9M=",
          "totalResults" : 9
        },
        "properties" : {
          "extensions" : {
            "type" : "array",
            "description" : "A list of extensions.",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionDto"
            }
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result."
          },
          "totalResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The total number of entries in the result."
          }
        }
      },
      "ExtensionProperty" : {
        "type" : "object",
        "description" : "A property of an extension.",
        "properties" : {
          "defaultValue" : {
            "type" : "string",
            "description" : "The default value of the property."
          },
          "dropdownValues" : {
            "type" : "array",
            "description" : "The list of possible values of the property. \n\n If such a list is defined, only values from this list can be assigned to the property.",
            "items" : {
              "type" : "string"
            }
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the property."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the property."
          }
        }
      },
      "ExtensionState" : {
        "type" : "object",
        "description" : "The state of the extension.",
        "properties" : {
          "endpointId" : {
            "type" : "string",
            "description" : "The ID of the endpoint where the state is detected - Active Gate only."
          },
          "extensionId" : {
            "type" : "string",
            "description" : "The ID of the extension."
          },
          "hostId" : {
            "type" : "string",
            "description" : "The ID of the host on which the extension runs."
          },
          "processId" : {
            "type" : "string",
            "description" : "The ID of the entity on which the extension is active."
          },
          "state" : {
            "type" : "string",
            "description" : "The state of the extension.",
            "enum" : [ "ERROR_AUTH", "ERROR_COMMUNICATION_FAILURE", "ERROR_CONFIG", "ERROR_TIMEOUT", "ERROR_UNKNOWN", "INCOMPATIBLE", "LIMIT_REACHED", "NOTHING_TO_REPORT", "OK", "STATE_TYPE_UNKNOWN", "UNINITIALIZED", "UNSUPPORTED", "WAITING_FOR_STATE" ]
          },
          "stateDescription" : {
            "type" : "string",
            "description" : "A short description of the state."
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The timestamp when the state was detected, in UTC milliseconds."
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the extension (for example `1.0.0`)."
          }
        }
      },
      "ExtensionStateList" : {
        "type" : "object",
        "description" : "A list of extension states.",
        "example" : {
          "nextPageToken" : "LlUdYmu5S2MfX/ppfCInR9M=",
          "states" : [ {
            "endpointId" : "null",
            "extensionId" : "custom.python.connectionpool",
            "hostId" : "HOST-01A7DEFA5340A86D",
            "processId" : "PROCESS_GROUP_INSTANCE-2182DF2E20E3E067",
            "state" : "OK",
            "stateDescription" : "",
            "timestamp" : 1578578108213,
            "version" : "1.82"
          } ],
          "totalResults" : 9
        },
        "properties" : {
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result."
          },
          "states" : {
            "type" : "array",
            "description" : "A list of extension states.",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionState"
            }
          },
          "totalResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The total number of entries in the result."
          }
        }
      },
      "ExternalVault" : {
        "type" : "object",
        "description" : "Information for synchronization credentials with external vault",
        "discriminator" : {
          "mapping" : {
            "AZURE_KEY_VAULT_CLIENT_SECRET" : "#/components/schemas/AzureClientSecret",
            "CYBERARK_VAULT_ALLOWED_LOCATION" : "#/components/schemas/CyberArkAllowedLocationDto",
            "CYBERARK_VAULT_USERNAME_PASSWORD" : "#/components/schemas/CyberArkUsernamePassword",
            "HASHICORP_VAULT_APPROLE" : "#/components/schemas/HashicorpApprole",
            "HASHICORP_VAULT_CERTIFICATE" : "#/components/schemas/HashicorpCertificate"
          },
          "propertyName" : "sourceAuthMethod"
        },
        "example" : {
          "description" : "Sample credentials for demo purposes.",
          "externalVault" : {
            "passwordSecretName" : "password",
            "pathToCredentials" : "kv/credentials",
            "roleId" : "00e4858c-ec33-bc99-4e7e-34de6967de6c",
            "secretId" : "CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX",
            "sourceAuthMethod" : "HASHICORP_VAULT_APPROLE",
            "usernameSecretName" : "username",
            "vaultNamespace" : "admin",
            "vaultUrl" : "https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200"
          },
          "id" : "CREDENTIALS_VAULT-C43F2C2E6395AD23",
          "name" : "Sample username-password credentials synchronized with Hashicorp vault",
          "owner" : "user@domain.com",
          "ownerAccessOnly" : true,
          "scope" : "SYNTHETIC",
          "type" : "USERNAME_PASSWORD"
        },
        "properties" : {
          "locationForSynchronizationId" : {
            "type" : "string",
            "description" : "Id of a location used by the synchronizing monitor"
          },
          "passwordSecretName" : {
            "type" : "string",
            "description" : "The name of the secret saved in external vault where password is stored."
          },
          "sourceAuthMethod" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `HASHICORP_VAULT_APPROLE` -> HashicorpApprole \n* `HASHICORP_VAULT_CERTIFICATE` -> HashicorpCertificate \n* `AZURE_KEY_VAULT_CLIENT_SECRET` -> AzureClientSecret \n* `CYBERARK_VAULT_USERNAME_PASSWORD` -> CyberArkUsernamePassword \n* `CYBERARK_VAULT_ALLOWED_LOCATION` -> CyberArkAllowedLocationDto \n",
            "enum" : [ "AZURE_KEY_VAULT_CLIENT_SECRET", "CYBERARK_VAULT_ALLOWED_LOCATION", "CYBERARK_VAULT_USERNAME_PASSWORD", "HASHICORP_VAULT_APPROLE", "HASHICORP_VAULT_CERTIFICATE" ]
          },
          "tokenSecretName" : {
            "type" : "string",
            "description" : "The name of the secret saved in external vault where token is stored."
          },
          "usernameSecretName" : {
            "type" : "string",
            "description" : "The name of the secret saved in external vault where username is stored."
          },
          "vaultUrl" : {
            "type" : "string",
            "description" : "External vault URL."
          }
        }
      },
      "ExternalVaultConfig" : {
        "type" : "object",
        "description" : "Configuration for external vault synchronization for username and password credentials.",
        "discriminator" : {
          "mapping" : {
            "AZURE_KEY_VAULT_CLIENT_SECRET" : "#/components/schemas/AzureClientSecretConfig",
            "CYBERARK_VAULT_ALLOWED_LOCATION" : "#/components/schemas/CyberArkAllowedLocationConfig",
            "CYBERARK_VAULT_USERNAME_PASSWORD" : "#/components/schemas/CyberArkUsernamePasswordConfig",
            "HASHICORP_VAULT_APPROLE" : "#/components/schemas/HashicorpApproleConfig",
            "HASHICORP_VAULT_CERTIFICATE" : "#/components/schemas/HashicorpCertificateConfig"
          },
          "propertyName" : "sourceAuthMethod"
        },
        "properties" : {
          "credentialsUsedForExternalSynchronization" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "passwordSecretName" : {
            "type" : "string"
          },
          "sourceAuthMethod" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `HASHICORP_VAULT_APPROLE` -> HashicorpApproleConfig \n* `HASHICORP_VAULT_CERTIFICATE` -> HashicorpCertificateConfig \n* `AZURE_KEY_VAULT_CLIENT_SECRET` -> AzureClientSecretConfig \n* `CYBERARK_VAULT_USERNAME_PASSWORD` -> CyberArkUsernamePasswordConfig \n* `CYBERARK_VAULT_ALLOWED_LOCATION` -> CyberArkAllowedLocationConfig \n",
            "enum" : [ "AZURE_KEY_VAULT_CLIENT_SECRET", "CYBERARK_VAULT_ALLOWED_LOCATION", "CYBERARK_VAULT_USERNAME_PASSWORD", "HASHICORP_VAULT_APPROLE", "HASHICORP_VAULT_CERTIFICATE" ]
          },
          "tokenSecretName" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "AZURE_CERTIFICATE_MODEL", "AZURE_CLIENT_SECRET_MODEL", "CYBERARK_VAULT_ALLOWED_LOCATION_MODEL", "CYBERARK_VAULT_USERNAME_PASSWORD_MODEL", "HASHICORP_APPROLE_MODEL", "HASHICORP_CERTIFICATE_MODEL" ]
          },
          "usernameSecretName" : {
            "type" : "string"
          },
          "vaultUrl" : {
            "type" : "string"
          }
        }
      },
      "ExtractSubstring" : {
        "type" : "object",
        "description" : "Preprocess by extracting a substring from the original value.",
        "properties" : {
          "delimiter" : {
            "type" : "string",
            "description" : "The delimiter string."
          },
          "endDelimiter" : {
            "type" : "string",
            "description" : "The end-delimiter string. \n\n Required if the **position** value is `BETWEEN`. Otherwise not allowed."
          },
          "position" : {
            "type" : "string",
            "description" : "The position of the extracted string relative to delimiters.",
            "enum" : [ "AFTER", "BEFORE", "BETWEEN" ]
          }
        },
        "required" : [ "delimiter", "position" ]
      },
      "FailedStateComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "FAILED", "SUCCESSFUL" ]
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "FAILED", "SUCCESSFUL" ]
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `FAILED_STATE` attributes.",
        "required" : [ "comparison", "negate" ]
      },
      "FailureDetectionCondition" : {
        "type" : "object",
        "description" : "The condition of the failure detection rule.",
        "properties" : {
          "attribute" : {
            "type" : "string",
            "description" : "The attribute to be checked.",
            "enum" : [ "PG_NAME", "PG_TAG", "SERVICE_MANAGEMENT_ZONES", "SERVICE_NAME", "SERVICE_SERVICE_TYPE", "SERVICE_TAG" ]
          },
          "predicate" : {
            "$ref" : "#/components/schemas/FdcPredicate"
          }
        }
      },
      "FailureDetectionParameterSet" : {
        "type" : "object",
        "description" : "A set of failure detection parameters (FDP). \n\nThese parameters define the conditions of failure and success.",
        "example" : {
          "brokenLinkDomains" : [ "mydomain.com" ],
          "clientSideMissingHttpCodeIsFailure" : false,
          "description" : "for requests from shipping module",
          "failingHttpCodesClientSide" : "400-599",
          "failingHttpCodesServerSide" : "500-599",
          "http404NotFoundFailureEnabled" : false,
          "id" : "FDP_9",
          "name" : "shipping",
          "serverSideMissingHttpCodeIsFailure" : false,
          "successForcingExceptionPatterns" : [ {
            "classPattern" : "NullPointerException",
            "messagePattern" : ""
          } ],
          "tagConditions" : [ {
            "predicate" : {
              "ignoreCase" : true,
              "type" : "STRING_EQUALS",
              "value" : "NG"
            },
            "tagKey" : "myTag"
          } ]
        },
        "properties" : {
          "brokenLinkDomains" : {
            "type" : "array",
            "description" : "A list of domains for the special handling of the 404 HTTP response code. \n\nIf the top domain of the *Referer* is presented in the list OR equals the top domain of the request's host, the 404 code is considered a failure. \n\nOnly applicable when **isHttp404NotFoundFailureEnabled** is set to `true`.",
            "items" : {
              "type" : "string",
              "description" : "A list of domains for the special handling of the 404 HTTP response code. \n\nIf the top domain of the *Referer* is presented in the list OR equals the top domain of the request's host, the 404 code is considered a failure. \n\nOnly applicable when **isHttp404NotFoundFailureEnabled** is set to `true`."
            }
          },
          "clientSideMissingHttpCodeIsFailure" : {
            "type" : "boolean",
            "description" : "The missing HTTP response code on the client side is a failure (`true`) or a success (`false`).\n\n If not set, `false` is used."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the FDP set.",
            "maxLength" : 1000,
            "minLength" : 0
          },
          "exceptionOnAnyNodeExceptionPatterns" : {
            "type" : "array",
            "description" : "A list of faulty exceptions. \n\nIf an exception on *any* node of the service matches *any* of these patterns it is considered a failure.",
            "items" : {
              "$ref" : "#/components/schemas/ExceptionPattern"
            }
          },
          "failingHttpCodesClientSide" : {
            "type" : "string",
            "description" : "A list of client side HTTP response codes that are considered a failure. \n\nThe format is a list of ranges and individual values (for example, `500-599, 400-499, 1008`). \n\nIf not set, the range of `400-599` is used."
          },
          "failingHttpCodesServerSide" : {
            "type" : "string",
            "description" : "A list of server side HTTP response codes that are considered a failure. \n\nThe format is a list of ranges and individual values (for example, `500-599, 400-499, 1008`).If not set, the range of `500-599` is used."
          },
          "http404NotFoundFailureEnabled" : {
            "type" : "boolean",
            "description" : "Special handling of the 404 HTTP response code is enabled (`true`) or disabled (`false`). See **brokenLinkDomains** for special handling details. \n\nOnly applicable when 404 is NOT in the list of failing HTTP response codes and only for the server side.\n\n If not set, `false` is used."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the parameter set."
          },
          "ignoreAllExceptions" : {
            "type" : "boolean",
            "description" : "If set to true all exceptions will be ignored. Which means defined exception patterns will not have any effect."
          },
          "ignoreSpanFailureDetection" : {
            "type" : "boolean",
            "description" : "If set to true span failure detection will be ignored."
          },
          "ignoredExceptionPatterns" : {
            "type" : "array",
            "description" : "A list of ignored exceptions. \n\nIf an exception on the entry node of the service matches *any* of these patterns it is ignored by failure detection.",
            "items" : {
              "$ref" : "#/components/schemas/ExceptionPattern"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The display name of the FDP set. \n\nThe length of the name is limited to 150 characters.",
            "maxLength" : 150,
            "minLength" : 0
          },
          "serverSideMissingHttpCodeIsFailure" : {
            "type" : "boolean",
            "description" : "The missing HTTP response code on the server side is a failure (`true`) or a success (`false`).\n\n If not set, `false` is used."
          },
          "successForcingExceptionPatterns" : {
            "type" : "array",
            "description" : "A list of success exceptions. \n\nIf an exception on the entry node of the service matches *any* of these patterns it is considered a success.",
            "items" : {
              "$ref" : "#/components/schemas/ExceptionPattern"
            }
          },
          "tagConditions" : {
            "type" : "array",
            "description" : "A list of tag-based conditions. \n\nIf *any* condition is fulfilled the request is considered a failure.",
            "items" : {
              "$ref" : "#/components/schemas/FdpTagCondition"
            }
          }
        }
      },
      "FailureDetectionRule" : {
        "type" : "object",
        "description" : "Configuration of the failure detection rule.",
        "example" : {
          "conditions" : [ {
            "attribute" : "SERVICE_NAME",
            "predicate" : {
              "ignoreCase" : false,
              "type" : "STRING_STARTS_WITH",
              "values" : [ "shp", "stg_shp" ]
            }
          } ],
          "description" : "for requests from shipping module",
          "enabled" : true,
          "fdpId" : "FDP_9",
          "id" : "R_5",
          "name" : "shipping"
        },
        "properties" : {
          "conditions" : {
            "type" : "array",
            "description" : "A list of conditions of the rule. \n\nThe rule applies when **all** conditions are fulfilled.",
            "items" : {
              "$ref" : "#/components/schemas/FailureDetectionCondition"
            },
            "maxItems" : 10,
            "minItems" : 1
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the rule.",
            "maxLength" : 1000,
            "minLength" : 0
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          },
          "fdpId" : {
            "type" : "string",
            "description" : "The failure detection parameter (FDP) set of the rule. \n\nSpecify the ID of the set here. The FDP set must exist at the time of rule creation."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the rule."
          },
          "name" : {
            "type" : "string",
            "description" : "The display name of the rule. \n\nThe length of the name is limited to 150 characters.",
            "maxLength" : 150,
            "minLength" : 0
          }
        },
        "required" : [ "conditions", "enabled", "fdpId" ]
      },
      "FailureRateIncreaseAutodetectionConfig" : {
        "type" : "object",
        "description" : "Parameters of failure rate increase auto-detection. Required if **detectionMode** is `DETECT_AUTOMATICALLY`. Not applicable otherwise. \n\nThe absolute and relative thresholds **both** must exceed to trigger an alert. \n\nExample: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be: \nAbsolute: 1.5% + **1%** = 2.5% \nRelative: 1.5% + 1.5% * **50%** = 2.25%",
        "properties" : {
          "failingServiceCallPercentageIncreaseAbsolute" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Absolute increase of failing service calls to trigger an alert, %.",
            "maximum" : 1000,
            "minimum" : 0
          },
          "failingServiceCallPercentageIncreaseRelative" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Relative increase of failing service calls to trigger an alert, %.",
            "maximum" : 1000,
            "minimum" : 0
          }
        },
        "required" : [ "failingServiceCallPercentageIncreaseAbsolute", "failingServiceCallPercentageIncreaseRelative" ]
      },
      "FailureRateIncreaseDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of failure rate increase detection.",
        "properties" : {
          "automaticDetection" : {
            "$ref" : "#/components/schemas/FailureRateIncreaseAutodetectionConfig"
          },
          "detectionMode" : {
            "type" : "string",
            "description" : "How to detect failure rate increase: automatically, or based on fixed thresholds, or do not detect.",
            "enum" : [ "DETECT_AUTOMATICALLY", "DETECT_USING_FIXED_THRESHOLDS", "DONT_DETECT" ]
          },
          "thresholds" : {
            "$ref" : "#/components/schemas/FailureRateIncreaseThresholdConfig"
          }
        },
        "required" : [ "detectionMode" ]
      },
      "FailureRateIncreaseThresholdConfig" : {
        "type" : "object",
        "description" : "Fixed thresholds for failure rate increase detection. \n\n Required if **detectionMode** is `DETECT_USING_FIXED_THRESHOLDS`. Not applicable otherwise.",
        "properties" : {
          "sensitivity" : {
            "type" : "string",
            "description" : "Sensitivity of the threshold. \n\nWith `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts. \n\nWith `high` sensitivity, no statistical confidence is used. Each violation triggers alert.",
            "enum" : [ "HIGH", "LOW", "MEDIUM" ]
          },
          "threshold" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Failure rate during any 5-minute period to trigger an alert, %.",
            "maximum" : 1000,
            "minimum" : 0
          }
        },
        "required" : [ "sensitivity", "threshold" ]
      },
      "FailureReasonComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "EXCEPTION_AT_ENTRY_NODE", "EXCEPTION_ON_ANY_NODE", "HTTP_CODE", "REQUEST_ATTRIBUTE", "SPAN_FAILURE" ]
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "EXCEPTION_AT_ENTRY_NODE", "EXCEPTION_ON_ANY_NODE", "HTTP_CODE", "REQUEST_ATTRIBUTE", "SPAN_FAILURE" ]
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `FAILURE_REASON` attributes.",
        "required" : [ "comparison", "negate" ]
      },
      "FastStringComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "caseSensitive" : {
              "type" : "boolean",
              "description" : "The comparison is case-sensitive (`true`) or not case-sensitive (`false`)."
            },
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "CONTAINS", "EQUALS", "EQUALS_ANY_OF" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to."
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to."
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `FAST_STRING` attributes. Use it for all service property attributes.",
        "required" : [ "comparison", "negate" ]
      },
      "FdcPredicate" : {
        "type" : "object",
        "description" : "The predicate that tests the value of the attribute. \n\nThe actual set of fields depends on the type of the predicate. Find the list of actual objects in the description of the **type** field or see [Failure detection API - JSON models](https://dt-url.net/9sg3swf).",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `STRING_EQUALS` -> FdcPredicateStringEquals \n* `STRING_STARTS_WITH` -> FdcPredicateStringStartsWith \n* `STRING_ENDS_WITH` -> FdcPredicateStringEndsWith \n* `STRING_CONTAINS_SUBSTRING` -> FdcPredicateStringContains \n* `INTEGER_EQUALS` -> FdcPredicateIntegerEquals \n* `INTEGER_LESS_THAN` -> FdcPredicateIntegerLessThan \n* `INTEGER_LESS_THAN_OR_EQUAL` -> FdcPredicateIntegerLessThanOrEqual \n* `INTEGER_GREATER_THAN` -> FdcPredicateIntegerGreaterThan \n* `INTEGER_GREATER_THAN_OR_EQUAL` -> FdcPredicateIntegerGreaterThanOrEqual \n* `LONG_EQUALS` -> FdcPredicateLongEquals \n* `LONG_LESS_THAN` -> FdcPredicateLongLessThan \n* `LONG_LESS_THAN_OR_EQUAL` -> FdcPredicateLongLessThanOrEqual \n* `LONG_GREATER_THAN` -> FdcPredicateLongGreaterThan \n* `LONG_GREATER_THAN_OR_EQUAL` -> FdcPredicateLongGreaterThanOrEqual \n* `TAG_KEY_EQUALS` -> FdcPredicateTagKeyEquals \n* `TAG_EQUALS` -> FdcPredicateTagEquals \n* `SERVICE_TYPE_EQUALS` -> FdcPredicateServiceTypeEquals \n* `MANAGEMENT_ZONES_CONTAINS_ALL` -> FdcPredicateManagementZonesContainsAll \n* `SET_OF_INTEGERS_CONTAINS_ANY` -> FdcPredicateSetOfIntegersContainsAny \n* `SET_OF_INTEGERS_CONTAINS_ALL` -> FdcPredicateSetOfIntegersContainsAll \n",
            "enum" : [ "INTEGER_EQUALS", "INTEGER_GREATER_THAN", "INTEGER_GREATER_THAN_OR_EQUAL", "INTEGER_LESS_THAN", "INTEGER_LESS_THAN_OR_EQUAL", "LONG_EQUALS", "LONG_GREATER_THAN", "LONG_GREATER_THAN_OR_EQUAL", "LONG_LESS_THAN", "LONG_LESS_THAN_OR_EQUAL", "MANAGEMENT_ZONES_CONTAINS_ALL", "SERVICE_TYPE_EQUALS", "SET_OF_INTEGERS_CONTAINS_ALL", "SET_OF_INTEGERS_CONTAINS_ANY", "STRING_CONTAINS_SUBSTRING", "STRING_ENDS_WITH", "STRING_EQUALS", "STRING_STARTS_WITH", "TAG_EQUALS", "TAG_KEY_EQUALS" ]
          }
        },
        "required" : [ "type" ]
      },
      "FdcPredicateIntegerEquals" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "type" : "array",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is an integer) equals *any* of these.",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The predicate of the `INTEGER_EQUALS` type. It checks whether the attribute (which is an integer) equals one of the reference values.",
        "required" : [ "values" ]
      },
      "FdcPredicateIntegerGreaterThan" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is an integer) is greater than this value."
            }
          }
        } ],
        "description" : "The predicate of the `INTEGER_GREATER_THAN` type. It checks whether the attribute (which is an integer) is greater than the reference value."
      },
      "FdcPredicateIntegerGreaterThanOrEqual" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is an integer) is greater than or equals this value."
            }
          }
        } ],
        "description" : "The predicate of the `INTEGER_GREATER_THAN_OR_EQUAL` type. It checks whether the attribute (which is an integer) is greater than or equals the reference value."
      },
      "FdcPredicateIntegerLessThan" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is an integer) is less than this value."
            }
          }
        } ],
        "description" : "The predicate of the `INTEGER_LESS_THAN` type. It checks whether the attribute (which is an integer) is less than the reference value."
      },
      "FdcPredicateIntegerLessThanOrEqual" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is an integer) is less than or equals this value."
            }
          }
        } ],
        "description" : "The predicate of the `INTEGER_LESS_THAN_OR_EQUAL` type. It checks whether the attribute (which is an integer) is less than or equals the reference value."
      },
      "FdcPredicateLongEquals" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a long) equals *any* of these.",
              "items" : {
                "type" : "string"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The predicate of the `LONG_EQUALS` type. It checks whether the attribute (which is a long) equals one of the reference values.",
        "required" : [ "values" ]
      },
      "FdcPredicateLongGreaterThan" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is a long) is greater than this value."
            }
          }
        } ],
        "description" : "The predicate of the `LONG_GREATER_THAN` type. It checks whether the attribute (which is a long) is greater than the reference value."
      },
      "FdcPredicateLongGreaterThanOrEqual" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is a long) is greater than or equals this value."
            }
          }
        } ],
        "description" : "The predicate of the `LONG_GREATER_THAN_OR_EQUAL` type. It checks whether the attribute (which is a long) is greater than or equals the reference value."
      },
      "FdcPredicateLongLessThan" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is a long) is less than this value."
            }
          }
        } ],
        "description" : "The predicate of the `LONG_LESS_THAN` type. It checks whether the attribute (which is a long) is less than the reference value."
      },
      "FdcPredicateLongLessThanOrEqual" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is a long) is less than or equals this value."
            }
          }
        } ],
        "description" : "The predicate of the `LONG_LESS_THAN_OR_EQUAL` type. It checks whether the attribute (which is a long) is less than or equals the reference value."
      },
      "FdcPredicateManagementZonesContainsAll" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a set of management zones) contains **all** the reference values. \n\nSpecify the ID or the name of the management zone here.",
              "items" : {
                "type" : "string",
                "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a set of management zones) contains **all** the reference values. \n\nSpecify the ID or the name of the management zone here."
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The predicate of the `MANAGEMENT_ZONES_CONTAINS_ALL` type. It checks whether the attribute (which is a set of management zones) contains **all** the reference values."
      },
      "FdcPredicateServiceTypeEquals" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is the type of the service) equals *any* of these.The possible values are: WebRequest, WebService, Database, Method, WebSite, Messaging, Mobile, Process, Rmi, External, QueueListener, QueueInteraction, RemoteCall, SaasVendor, AMP, CustomApplication, Cics, Ims, CicsInteraction, ImsInteraction, EnterpriseServiceBus, ZosConnect.",
              "items" : {
                "type" : "string",
                "description" : "A list of reference values. The condition is fulfilled when the attribute (which is the type of the service) equals *any* of these.The possible values are: WebRequest, WebService, Database, Method, WebSite, Messaging, Mobile, Process, Rmi, External, QueueListener, QueueInteraction, RemoteCall, SaasVendor, AMP, CustomApplication, Cics, Ims, CicsInteraction, ImsInteraction, EnterpriseServiceBus, ZosConnect."
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The predicate of the `SERVICE_TYPE_EQUALS` type. It checks whether the attribute (which is the type of the service) equals one of the reference values."
      },
      "FdcPredicateSetOfIntegersContainsAll" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a set of integers) contains **all** the reference values.",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The predicate of the `SET_OF_INTEGERS_CONTAINS_ALL` type. It checks whether the attribute (which is a set of integers) contains **all** the reference values.",
        "required" : [ "values" ]
      },
      "FdcPredicateSetOfIntegersContainsAny" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a set of integers) contains *any* of these.",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The predicate of the `SET_OF_INTEGERS_CONTAINS_ANY` type. It checks whether the attribute (which is a set of integers) contains one of the reference values.",
        "required" : [ "values" ]
      },
      "FdcPredicateStringContains" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "values" : {
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a string) contains *any* of these.",
              "items" : {
                "type" : "string"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The predicate of the `STRING_CONTAINS_SUBSTRING` type. It checks whether the attribute (which is a string) contains one of the reference values.",
        "required" : [ "ignoreCase", "values" ]
      },
      "FdcPredicateStringEndsWith" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "values" : {
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a string) ends with *any* of these.",
              "items" : {
                "type" : "string"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The predicate of the `STRING_ENDS_WITH ` type. It checks whether the attribute (which is a string) ends with one of the reference values.",
        "required" : [ "ignoreCase", "values" ]
      },
      "FdcPredicateStringEquals" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "values" : {
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a string) equals *any* of these.",
              "items" : {
                "type" : "string"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The predicate of the `STRING_EQUALS` type. It checks whether the attribute (which is a string) equals one of the reference values.",
        "required" : [ "ignoreCase", "values" ]
      },
      "FdcPredicateStringStartsWith" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "values" : {
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a string) start with *any* of these.",
              "items" : {
                "type" : "string"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The predicate of the `STRING_STARTS_WITH` type. It checks whether the attribute (which is a string) starts with one of the reference values.",
        "required" : [ "ignoreCase", "values" ]
      },
      "FdcPredicateTagEquals" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "keys" : {
              "type" : "array",
              "description" : "A list of reference tag keys.\n\n The condition is fulfilled when the tag matches *any* key:value pair, consisting of a key and a value that are at the **same position** in the respective list.",
              "items" : {
                "type" : "string",
                "description" : "A list of reference tag keys.\n\n The condition is fulfilled when the tag matches *any* key:value pair, consisting of a key and a value that are at the **same position** in the respective list."
              }
            },
            "values" : {
              "type" : "array",
              "description" : "A list of reference tag values.\n\n The condition is fulfilled when the tag matches *any* key:value pair, consisting of a key and a value that are at the **same position** in the respective list.",
              "items" : {
                "type" : "string",
                "description" : "A list of reference tag values.\n\n The condition is fulfilled when the tag matches *any* key:value pair, consisting of a key and a value that are at the **same position** in the respective list."
              }
            }
          }
        } ],
        "description" : "The predicate of the `TAG_EQUALS` type. It checks whether the attribute (which is a key:value pair) equals one of the reference values.\n\n The  reference value is a key:value pair, consisting of a key and a value that are at the **same position** in the respective list."
      },
      "FdcPredicateTagKeyEquals" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "keys" : {
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is the key of a tag) equals *any* of these.",
              "items" : {
                "type" : "string",
                "description" : "A list of reference values. The condition is fulfilled when the attribute (which is the key of a tag) equals *any* of these."
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The predicate of the `TAG_KEY_EQUALS` type. It checks whether the attribute (which is the key of a tag) equals one of the reference values."
      },
      "FdpSelectionRuleOrder" : {
        "type" : "object",
        "description" : "The order of the rules in the ruleset.",
        "example" : {
          "ruleIds" : [ "R1", "RZa", "RZb" ]
        },
        "properties" : {
          "ruleIds" : {
            "type" : "array",
            "description" : "A list of the rule IDs. The rules in the ruleset are arranged such that their IDs form the same sequence as this list. The ID of each rule in the ruleset must occur exactly once in the list. ",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 2147483647,
            "minItems" : 1
          }
        },
        "required" : [ "ruleIds" ]
      },
      "FdpTagCondition" : {
        "type" : "object",
        "description" : "Configuration of the tag condition in the FDP set.",
        "properties" : {
          "predicate" : {
            "$ref" : "#/components/schemas/FdpTagPredicate"
          },
          "tagKey" : {
            "type" : "string",
            "description" : "The key of the tag to be checked."
          }
        },
        "required" : [ "predicate", "tagKey" ]
      },
      "FdpTagDoubleEquals" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "negated" : {
              "type" : "boolean"
            },
            "value" : {
              "type" : "number",
              "format" : "double",
              "description" : "The reference value."
            }
          }
        } ],
        "description" : "The predicate of the `DOUBLE_EQUALS` type. It checks whether the tag (which is a double) equals the reference value."
      },
      "FdpTagDoubleExists" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "negated" : {
              "type" : "boolean"
            }
          }
        } ],
        "description" : "The predicate of the `DOUBLE_EXISTS` type. It checks whether the tag  exists"
      },
      "FdpTagDoubleGreaterThan" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "number",
              "format" : "double",
              "description" : "The reference value."
            }
          }
        } ],
        "description" : "The predicate of the `DOUBLE_GREATER_THAN` type. It checks whether the tag (which is a double) is greater than the reference value."
      },
      "FdpTagDoubleGreaterThanOrEqual" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "number",
              "format" : "double",
              "description" : "The reference value."
            }
          }
        } ],
        "description" : "The predicate of the `DOUBLE_GREATER_THAN_OR_EQUAL` type. It checks whether the tag (which is a double) is greater than or equals the reference value."
      },
      "FdpTagDoubleLessThan" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "number",
              "format" : "double",
              "description" : "The reference value."
            }
          }
        } ],
        "description" : "The predicate of the `DOUBLE_LESS_THAN` type. It checks whether the tag (which is a double) is less than the reference value."
      },
      "FdpTagDoubleLessThanOrEqual" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "number",
              "format" : "double",
              "description" : "The reference value."
            }
          }
        } ],
        "description" : "The predicate of the `DOUBLE_LESS_THAN_OR_EQUAL` type. It checks whether the tag (which is a double) is less than or equals the reference value."
      },
      "FdpTagIntegerEquals" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "negated" : {
              "type" : "boolean"
            },
            "value" : {
              "type" : "string",
              "description" : "The reference value."
            }
          }
        } ],
        "description" : "The predicate of the `INTEGER_EQUALS` type. It checks whether the tag (which is an integer) equals the reference value."
      },
      "FdpTagIntegerExists" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "negated" : {
              "type" : "boolean"
            }
          }
        } ],
        "description" : "The predicate of the `INTEGER_EXISTS` type. It checks whether the tag  exists"
      },
      "FdpTagIntegerGreaterThan" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value."
            }
          }
        } ],
        "description" : "The predicate of the `INTEGER_GREATER_THAN` type. It checks whether the tag (which is an integer) is greater than the reference value."
      },
      "FdpTagIntegerGreaterThanOrEqual" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value."
            }
          }
        } ],
        "description" : "The predicate of the `INTEGER_GREATER_THAN_OR_EQUAL` type. It checks whether the tag (which is an integer) is greater than or equals the reference value."
      },
      "FdpTagIntegerLessThan" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value."
            }
          }
        } ],
        "description" : "The predicate of the `INTEGER_LESS_THAN` type. It checks whether the tag (which is an integer) is less than the reference value."
      },
      "FdpTagIntegerLessThanOrEqual" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value."
            }
          }
        } ],
        "description" : "The predicate of the `INTEGER_LESS_THAN_OR_EQUAL` type. It checks whether the tag (which is an integer) is less than or equals the reference value."
      },
      "FdpTagPredicate" : {
        "type" : "object",
        "description" : "The predicate that tests the value of the tag. \n\nThe actual set of fields depends on the type of the predicate. Find the list of actual objects in the description of the **type** field or see [Failure detection API - JSON models](https://dt-url.net/9sg3swf).",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `STRING_EXISTS` -> FdpTagStringExists \n* `STRING_EQUALS` -> FdpTagStringEquals \n* `STRING_STARTS_WITH` -> FdpTagStringStartsWith \n* `STRING_ENDS_WITH` -> FdpTagStringEndsWith \n* `STRING_CONTAINS_SUBSTRING` -> FdpTagStringContainsSubstring \n* `INTEGER_EXISTS` -> FdpTagIntegerExists \n* `INTEGER_EQUALS` -> FdpTagIntegerEquals \n* `INTEGER_LESS_THAN` -> FdpTagIntegerLessThan \n* `INTEGER_LESS_THAN_OR_EQUAL` -> FdpTagIntegerLessThanOrEqual \n* `INTEGER_GREATER_THAN` -> FdpTagIntegerGreaterThan \n* `INTEGER_GREATER_THAN_OR_EQUAL` -> FdpTagIntegerGreaterThanOrEqual \n* `DOUBLE_EXISTS` -> FdpTagDoubleExists \n* `DOUBLE_EQUALS` -> FdpTagDoubleEquals \n* `DOUBLE_LESS_THAN` -> FdpTagDoubleLessThan \n* `DOUBLE_LESS_THAN_OR_EQUAL` -> FdpTagDoubleLessThanOrEqual \n* `DOUBLE_GREATER_THAN` -> FdpTagDoubleGreaterThan \n* `DOUBLE_GREATER_THAN_OR_EQUAL` -> FdpTagDoubleGreaterThanOrEqual \n",
            "enum" : [ "DOUBLE_EQUALS", "DOUBLE_EXISTS", "DOUBLE_GREATER_THAN", "DOUBLE_GREATER_THAN_OR_EQUAL", "DOUBLE_LESS_THAN", "DOUBLE_LESS_THAN_OR_EQUAL", "INTEGER_EQUALS", "INTEGER_EXISTS", "INTEGER_GREATER_THAN", "INTEGER_GREATER_THAN_OR_EQUAL", "INTEGER_LESS_THAN", "INTEGER_LESS_THAN_OR_EQUAL", "STRING_CONTAINS_SUBSTRING", "STRING_ENDS_WITH", "STRING_EQUALS", "STRING_EXISTS", "STRING_STARTS_WITH" ]
          }
        },
        "required" : [ "type" ]
      },
      "FdpTagStringContainsSubstring" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean"
            },
            "negated" : {
              "type" : "boolean"
            },
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the tag (which is a string) contains this value."
            }
          }
        } ],
        "description" : "The predicate of the `STRING_CONTAINS_SUBSTRING` type. It checks whether the tag (which is a string) contains the reference value."
      },
      "FdpTagStringEndsWith" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean"
            },
            "negated" : {
              "type" : "boolean"
            },
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the tag (which is a string) ends with this value."
            }
          }
        } ],
        "description" : "The predicate of the `STRING_ENDS_WITH` type. It checks whether the tag (which is a string) ends with the reference value."
      },
      "FdpTagStringEquals" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean"
            },
            "negated" : {
              "type" : "boolean"
            },
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the tag (which is a string) equals this value."
            }
          }
        } ],
        "description" : "The predicate of the `STRING_EQUALS` type. It checks whether the tag (which is a string) equals the reference value."
      },
      "FdpTagStringExists" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "negated" : {
              "type" : "boolean"
            }
          }
        } ],
        "description" : "The predicate of the `STRING_EXISTS` type. It checks whether the tag  exists"
      },
      "FdpTagStringStartsWith" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean"
            },
            "negated" : {
              "type" : "boolean"
            },
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the tag (which is a string) starts with this value."
            }
          }
        } ],
        "description" : "The predicate of the `STRING_STARTS_WITH` type. It checks whether the tag (which is a string) starts with the reference value."
      },
      "FilterableEntityTile" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "chartVisible" : {
              "type" : "boolean"
            },
            "filterConfig" : {
              "$ref" : "#/components/schemas/CustomFilterConfig"
            }
          }
        } ],
        "description" : "Configuration of a tile with the built-in custom filter. \n\nAn example is the Service health tile, which may use a custom timeframe.",
        "required" : [ "bounds", "name", "tileType" ]
      },
      "FlawStateComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "FLAWED", "NOT_FLAWED" ]
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "FLAWED", "NOT_FLAWED" ]
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `FLAW_STATE` attributes.",
        "required" : [ "comparison", "negate" ]
      },
      "FrequentIssueDetectionConfig" : {
        "type" : "object",
        "description" : "Parameters of the frequent issue detection. To learn more about it, see [Detection of frequent issues](https://dt-url.net/4da3kdg) in Dynatrace Documentation. ",
        "example" : {
          "frequentIssueDetectionApplicationEnabled" : true,
          "frequentIssueDetectionInfrastructureEnabled" : true,
          "frequentIssueDetectionServiceEnabled" : true
        },
        "properties" : {
          "frequentIssueDetectionApplicationEnabled" : {
            "type" : "boolean",
            "description" : "The detection for applications is enabled (`true`) or disabled (`false`)."
          },
          "frequentIssueDetectionInfrastructureEnabled" : {
            "type" : "boolean",
            "description" : "The detection for infrastructure is enabled (`true`) or disabled (`false`)."
          },
          "frequentIssueDetectionServiceEnabled" : {
            "type" : "boolean",
            "description" : "The detection for services is enabled (`true`) or disabled (`false`)."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          }
        },
        "required" : [ "frequentIssueDetectionApplicationEnabled", "frequentIssueDetectionInfrastructureEnabled", "frequentIssueDetectionServiceEnabled" ]
      },
      "FullWebRequestRule" : {
        "type" : "object",
        "description" : "The service detection rule of the `FULL_WEB_REQUEST` type.",
        "example" : {
          "applicationId" : {
            "valueOverride" : "abc"
          },
          "conditions" : [ {
            "attributeType" : "APPLICATION_ID",
            "compareOperations" : [ {
              "ignoreCase" : "false",
              "invert" : "false",
              "type" : "STRING_CONTAINS",
              "values" : [ "value1", "value2" ]
            } ]
          } ],
          "contextRoot" : {
            "segmentsToCopyFromUrlPath" : 2,
            "transformations" : [ {
              "delimiter" : "/",
              "type" : "BEFORE"
            } ]
          },
          "description" : "REST API example",
          "enabled" : true,
          "managementZones" : [ "zone 1" ],
          "name" : "My sample rule",
          "serverName" : {
            "transformations" : [ {
              "delimiter" : "-",
              "type" : "BEFORE"
            } ]
          },
          "type" : "FULL_WEB_REQUEST"
        },
        "properties" : {
          "applicationId" : {
            "$ref" : "#/components/schemas/ApplicationId"
          },
          "conditions" : {
            "type" : "array",
            "description" : "A list of conditions of the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/ConditionsFullWebRequestAttributeTypeDto"
            },
            "maxItems" : 10,
            "minItems" : 0
          },
          "contextRoot" : {
            "$ref" : "#/components/schemas/ContextRoot"
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the rule."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled(`true`) or disabled (`false`)."
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the service detection rule."
          },
          "managementZones" : {
            "type" : "array",
            "description" : "The management zone (specified by the ID) of the process group for which this service detection rule should be created. \n\n You can specify only 1 management zone here.",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 1,
            "minItems" : 0
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the rule.",
            "minLength" : 1
          },
          "order" : {
            "type" : "string",
            "description" : "The order of the rule in the rules list. \n\n The rules are evaluated from top to bottom. The first matching rule applies.",
            "maxLength" : 2147483647,
            "minLength" : 1
          },
          "serverName" : {
            "$ref" : "#/components/schemas/ServerName"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the service detection rule."
          }
        },
        "required" : [ "enabled", "name", "type" ]
      },
      "FullWebServiceRule" : {
        "type" : "object",
        "description" : "The service detection rule of the `FULL_WEB_SERVICE` type. \n\nIf you have a condition with the **attributeType** set to `FRAMEWORK`, the **values** field from **compareOperations** is limited to the following possible values: \n\n * `AXIS` \n * `CXF` \n * `HESSIAN` \n * `JAX_WS_RI` \n * `JBOSS` \n * `JERSEY` \n * `PROGRESS` \n * `RESTEASY` \n * `RESTLET` \n * `SPRING` \n * `TIBCO` \n * `WEBLOGIC` \n * `WEBMETHODS` \n * `WEBSPHERE` \n * `WINK`",
        "example" : {
          "applicationId" : {
            "valueOverride" : "abc"
          },
          "conditions" : [ {
            "attributeType" : "APPLICATION_ID",
            "compareOperations" : [ {
              "ignoreCase" : "false",
              "invert" : "false",
              "type" : "STRING_CONTAINS",
              "values" : [ "value1", "value2" ]
            } ]
          } ],
          "contextRoot" : {
            "segmentsToCopyFromUrlPath" : 2,
            "transformations" : [ {
              "delimiter" : "/",
              "type" : "BEFORE"
            } ]
          },
          "description" : "REST API example",
          "detectAsWebRequestService" : false,
          "enabled" : true,
          "managementZones" : [ "zone 1" ],
          "name" : "My sample rule",
          "serverName" : {
            "transformations" : [ {
              "delimiter" : "-",
              "type" : "BEFORE"
            } ]
          },
          "type" : "FULL_WEB_SERVICE",
          "webServiceName" : {
            "valueOverride" : "abc"
          },
          "webServiceNameSpace" : {
            "valueOverride" : "abc"
          }
        },
        "properties" : {
          "applicationId" : {
            "$ref" : "#/components/schemas/ApplicationId"
          },
          "conditions" : {
            "type" : "array",
            "description" : "A list of conditions of the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/ConditionsFullWebServiceAttributeTypeDto"
            },
            "maxItems" : 10,
            "minItems" : 0
          },
          "contextRoot" : {
            "$ref" : "#/components/schemas/ContextRoot"
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the rule."
          },
          "detectAsWebRequestService" : {
            "type" : "boolean",
            "description" : "Detect the matching requests as full web services (`false`) or web request services (`true`). \n\nSetting this field to `true` prevents detecting of matching requests as full web services. A web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate rule of the `FULL_WEB_REQUEST` type. \n\nDefault is `false`, detecting matching requests as full web services."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled(`true`) or disabled (`false`)."
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the service detection rule."
          },
          "managementZones" : {
            "type" : "array",
            "description" : "The management zone (specified by the ID) of the process group for which this service detection rule should be created. \n\n You can specify only 1 management zone here.",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 1,
            "minItems" : 0
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the rule.",
            "minLength" : 1
          },
          "order" : {
            "type" : "string",
            "description" : "The order of the rule in the rules list. \n\n The rules are evaluated from top to bottom. The first matching rule applies.",
            "maxLength" : 2147483647,
            "minLength" : 1
          },
          "serverName" : {
            "$ref" : "#/components/schemas/ServerName"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the service detection rule."
          },
          "webServiceName" : {
            "$ref" : "#/components/schemas/WebServiceName"
          },
          "webServiceNameSpace" : {
            "$ref" : "#/components/schemas/WebServiceNameSpace"
          }
        },
        "required" : [ "enabled", "name", "type" ]
      },
      "GlobalEventCaptureSettings" : {
        "type" : "object",
        "description" : "Global event capture settings.",
        "properties" : {
          "additionalEventCapturedAsUserInput" : {
            "type" : "string",
            "description" : "Additional events to be captured globally as user input. \n\nFor example, DragStart or DragEnd.",
            "maxLength" : 100,
            "minLength" : 0,
            "pattern" : "[a-z,]*"
          },
          "change" : {
            "type" : "boolean",
            "description" : "Change enabled/disabled."
          },
          "click" : {
            "type" : "boolean",
            "description" : "Click enabled/disabled."
          },
          "doubleClick" : {
            "type" : "boolean",
            "description" : "DoubleClick enabled/disabled."
          },
          "keyDown" : {
            "type" : "boolean",
            "description" : "KeyDown enabled/disabled."
          },
          "keyUp" : {
            "type" : "boolean",
            "description" : "KeyUp enabled/disabled."
          },
          "mouseDown" : {
            "type" : "boolean",
            "description" : "MouseDown enabled/disabled."
          },
          "mouseUp" : {
            "type" : "boolean",
            "description" : "MouseUp enabled/disabled."
          },
          "scroll" : {
            "type" : "boolean",
            "description" : "Scroll enabled/disabled."
          },
          "touchEnd" : {
            "type" : "boolean",
            "description" : "TouchEnd enabled/disabled."
          },
          "touchStart" : {
            "type" : "boolean",
            "description" : "TouchStart enabled/disabled."
          }
        },
        "required" : [ "additionalEventCapturedAsUserInput", "click", "doubleClick", "keyDown", "keyUp", "mouseDown", "mouseUp", "scroll" ]
      },
      "GlobalExtensionConfiguration" : {
        "type" : "object",
        "description" : "Global Configuration of OneAgent and JMX extension",
        "example" : {
          "id" : "custom.remote.python.demo",
          "properties" : [ {
            "defaultValue" : "127.0.0.1",
            "key" : "serverIp",
            "type" : "STRING"
          }, {
            "defaultValue" : "",
            "key" : "password",
            "type" : "PASSWORD"
          }, {
            "defaultValue" : "dynatrace",
            "key" : "username",
            "type" : "STRING"
          }, {
            "defaultValue" : "one",
            "dropdownValues" : [ "one", "two", "three" ],
            "key" : "dropdownProperty",
            "type" : "DROPDOWN"
          } ]
        },
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The extension is enabled (`true`) or disabled (`false`)."
          },
          "extensionId" : {
            "type" : "string",
            "description" : "The ID of the extension."
          },
          "infraOnlyEnabled" : {
            "type" : "boolean",
            "description" : "The plugin is enabled (`true`) or disabled (`false`) globally for hosts in infrastructure-only monitoring mode"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The list of configuration parameters. \n\n Each parameter is a key-value pair."
            },
            "description" : "The list of configuration parameters. \n\n Each parameter is a key-value pair."
          }
        },
        "required" : [ "enabled" ]
      },
      "GraphChartSettings" : {
        "type" : "object",
        "description" : "Settings for graph chart visualization",
        "properties" : {
          "connectNulls" : {
            "type" : "boolean"
          }
        }
      },
      "GreaterThanCompareOperation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The value to compare to."
            }
          }
        } ],
        "description" : "The condition of the `GREATER_THAN` type. \n\nThe condition checks whether the integer value is greater than the specified value.",
        "required" : [ "value" ]
      },
      "GuestCPULimitReachedConfig" : {
        "type" : "object",
        "description" : "The configuration of the guest CPU limit reached configuration detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/GuestCPULimitThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "GuestCPULimitThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for guest CPU limit detection. If not set then the automatic mode is used. \n\n **All** conditions must be fulfilled to trigger an alert.",
        "properties" : {
          "hostCpuUsageMinPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Hypervisor CPU usage is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          },
          "vmCpuReadyMaxPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "VM CPU ready is higher than *X*% occurred in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          },
          "vmCpuUsageMaxPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "VM CPU usage (VM CPU Usage Mhz / VM CPU limit in Mhz) is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "hostCpuUsageMinPercentage", "vmCpuReadyMaxPercentage", "vmCpuUsageMaxPercentage" ]
      },
      "HashicorpApprole" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVault"
        }, {
          "type" : "object",
          "properties" : {
            "pathToCredentials" : {
              "type" : "string",
              "description" : "Path to folder where credentials in HashiCorp Vault are stored."
            },
            "roleId" : {
              "type" : "string",
              "description" : "Role ID is similar to username when you want to authenticate in HashiCorp Vault using AppRole."
            },
            "secretId" : {
              "type" : "string",
              "description" : "Secret ID is similar to password when you want to authenticate in HashiCorp Vault using AppRole. ID of token representing secret ID saved in Dynatrace CV."
            },
            "vaultNamespace" : {
              "type" : "string",
              "description" : "Vault namespace in HashiCorp Vault. It is an information you set as environmental variable VAULT_NAMESPACE if you are accessing HashiCorp Vault from command line."
            }
          }
        } ],
        "description" : "Synchronization credentials with HashiCorp Vault using appRole authentication method",
        "required" : [ "pathToCredentials", "roleId", "secretId", "vaultNamespace" ]
      },
      "HashicorpApproleConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVaultConfig"
        }, {
          "type" : "object",
          "properties" : {
            "pathToCredentials" : {
              "type" : "string"
            },
            "roleId" : {
              "type" : "string"
            },
            "secretId" : {
              "type" : "string"
            },
            "vaultNamespace" : {
              "type" : "string"
            }
          }
        } ]
      },
      "HashicorpCertificate" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVault"
        }, {
          "type" : "object",
          "properties" : {
            "certificate" : {
              "type" : "string",
              "description" : "ID of certificate saved in Dynatrace CV. Using this certificate you can authenticate to your HashiCorp Vault."
            },
            "pathToCredentials" : {
              "type" : "string",
              "description" : "Path to folder where credentials in HashiCorp Vault are stored."
            }
          }
        } ],
        "description" : "Synchronization credentials with HashiCorp Vault using certificate authentication method"
      },
      "HashicorpCertificateConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVaultConfig"
        }, {
          "type" : "object",
          "properties" : {
            "certificate" : {
              "type" : "string"
            },
            "pathToCredentials" : {
              "type" : "string"
            }
          }
        } ]
      },
      "HeatmapSettings" : {
        "type" : "object",
        "description" : "Settings for heatmap visualization",
        "properties" : {
          "showLabels" : {
            "type" : "boolean"
          },
          "xAxisBuckets" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of buckets in the X axis"
          },
          "yAxis" : {
            "type" : "string",
            "description" : "Y axis aggregation criteria",
            "enum" : [ "DIMENSIONS", "VALUE" ]
          },
          "yAxisBuckets" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of buckets in the Y axis"
          }
        },
        "required" : [ "yAxis" ]
      },
      "HighCpuSaturationDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of high CPU saturation detection",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/HighCpuSaturationThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "HighCpuSaturationThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for high CPU saturation. If not set then the automatic mode is used.",
        "properties" : {
          "cpuSaturation" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if CPU usage is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "cpuSaturation" ]
      },
      "HighGcActivityDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of high Garbage Collector activity detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/HighGcActivityThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "HighGcActivityThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for high GC activity. If not set, automatic mode is used. \n\n Meeting **any** of these conditions triggers an alert.",
        "properties" : {
          "gcSuspensionPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "GC suspension is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          },
          "gcTimePercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "GC time is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "gcSuspensionPercentage", "gcTimePercentage" ]
      },
      "HighMemoryDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of high memory usage detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/HighMemoryThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "HighMemoryThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for high memory usage. If not set then the automatic mode is used. \n\n **Both** conditions must be met to trigger an alert.",
        "properties" : {
          "pageFaultsPerSecondNonWindows" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Memory page fault rate is higher than *X* faults per second on Linux.",
            "maximum" : 10000,
            "minimum" : 1
          },
          "pageFaultsPerSecondWindows" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Memory page fault rate is higher than *X* faults per second on Windows.",
            "maximum" : 10000,
            "minimum" : 1
          },
          "usedMemoryPercentageNonWindows" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Memory usage is higher than *X*% on Linux.",
            "maximum" : 100,
            "minimum" : 1
          },
          "usedMemoryPercentageWindows" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Memory usage is higher than *X*% on Windows.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "pageFaultsPerSecondNonWindows", "pageFaultsPerSecondWindows", "usedMemoryPercentageNonWindows", "usedMemoryPercentageWindows" ]
      },
      "HighNetworkDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of high network utilization detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/HighNetworkThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "HighNetworkThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for high network utilization. If not set, automatic mode is used.",
        "properties" : {
          "utilizationPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if sent/received traffic utilization is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "utilizationPercentage" ]
      },
      "HoneycombSettings" : {
        "type" : "object",
        "description" : "Settings for honeycomb visualization",
        "properties" : {
          "showHive" : {
            "type" : "boolean"
          },
          "showLabels" : {
            "type" : "boolean"
          },
          "showLegend" : {
            "type" : "boolean"
          }
        }
      },
      "Host" : {
        "type" : "object",
        "description" : "Host details. Contains ID, name, host group, and tags.",
        "example" : {
          "hostGroup" : {
            "meId" : "HOST_GROUP-CF1DA380B3A53F17",
            "name" : "example host group"
          },
          "id" : "HOST-0000000000000000",
          "managementZones" : [ {
            "id" : "000000000000000000",
            "name" : "example zone"
          } ],
          "name" : "example host",
          "tags" : [ "tagA", "tagB" ]
        },
        "properties" : {
          "hostGroup" : {
            "$ref" : "#/components/schemas/HostGroup"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the host"
          },
          "managementZones" : {
            "type" : "array",
            "description" : "A list of management zones to which the host belongs.",
            "items" : {
              "$ref" : "#/components/schemas/EntityShortRepresentation"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the host"
          },
          "tags" : {
            "type" : "array",
            "description" : "A list of tags of the host.",
            "items" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          }
        }
      },
      "HostAutoUpdateConfig" : {
        "type" : "object",
        "description" : "Configuration of OneAgent auto-update.",
        "properties" : {
          "effectiveSetting" : {
            "type" : "string",
            "description" : "The actual state of the auto-update on the host. \n\nApplicable only if the **setting** parameter is set to `INHERITED`. In that case the value is taken from the host group or the environment-wide configuration.",
            "enum" : [ "ENABLED", "DISABLED" ],
            "example" : "DISABLED",
            "readOnly" : true
          },
          "effectiveVersion" : {
            "type" : "string",
            "description" : "The actual version to which the OneAgent must be updated. \n\nApplicable only if the **setting** parameter is set to `INHERITED` and the **version** parameter is set to `null`. In that case the value is taken from the host group or the environment-wide configuration.",
            "example" : "1.191.0.20200326-161115",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the host where OneAgent is deployed.",
            "example" : "HOST-0123456789ABCDE",
            "readOnly" : true
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "setting" : {
            "type" : "string",
            "description" : "The auto-update state of OneAgents on the host: \n\n* `ENABLED`: OneAgent automatically updates to the most recent version. \n* `DISABLED`: OneAgent updates to the version specified in the **version** field.\n* `INHERITED`: The setting from the host group (if the host is a member of a host group) or the environment-wide configuration (if the host doesn't belong to a host group) is used.",
            "enum" : [ "DISABLED", "ENABLED", "INHERITED" ],
            "example" : "DISABLED"
          },
          "targetVersion" : {
            "type" : "string",
            "description" : "Version to update a OneAgent to when automatic updates are enabled.\n\nSupports relative versions `latest`, `previous` and `older` as well as specific version in `<major>.<minor>` format (for example `1.261`) or `<major>.<minor>.<revision>.<timestamp>` format (for example `1.261.178.20230313-090930`).\n\nOnly applicable when the **setting** parameter is set to `ENABLED`.",
            "example" : "latest"
          },
          "updateWindows" : {
            "$ref" : "#/components/schemas/UpdateWindowsConfig"
          },
          "version" : {
            "type" : "string",
            "description" : "The version to which the OneAgent must be updated. \n\nSpecify the version in the `<major>.<minor>.<revision>.<timestamp>` format (for example `1.191.0.20200326-161115`). You can fetch the list of available versions with the [GET available versions](https://dt-url.net/fo23rb5) call. \n\nIf no suitable installer is found for the provided version or the value is set to `null`, OneAgent won't be updated. \n\nOnly applicable when the **effectiveSetting** value is `DISABLED`. \n\nIf the **setting** parameter is set to `INHERITED` but the **version** is still set, it will result in a one-time update: OneAgent will be updated to the specified version and the **version** value will be set to `null`. For further updates the parent setting will be used.",
            "example" : "1.191.0.20200326-161115"
          }
        },
        "required" : [ "setting" ]
      },
      "HostConfig" : {
        "type" : "object",
        "description" : "OneAgent configuration on a host.",
        "properties" : {
          "autoUpdateConfig" : {
            "$ref" : "#/components/schemas/HostAutoUpdateConfig"
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the host where OneAgent is deployed.",
            "example" : "HOST-0123456789ABCDE",
            "readOnly" : true
          },
          "monitoringConfig" : {
            "$ref" : "#/components/schemas/MonitoringConfig"
          },
          "techMonitoringConfigList" : {
            "$ref" : "#/components/schemas/TechMonitoringList"
          }
        }
      },
      "HostGroup" : {
        "type" : "object",
        "description" : "Host group to which the host belongs.",
        "properties" : {
          "meId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the host group."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity, displayed in the UI."
          }
        }
      },
      "HostGroupAutoUpdateConfig" : {
        "type" : "object",
        "description" : "Configuration of OneAgent auto-update in a host group. \n\nApplies to all OneAgents installed on hosts of the host group if their **setting** parameter is set to `INHERITED`. Otherwise, the host level setting applies.",
        "properties" : {
          "effectiveSetting" : {
            "type" : "string",
            "description" : "The actual state of the auto-update on the hosts in a host group. \n\nApplicable only if the **setting** parameter is set to `INHERITED`. In that case the value is taken from the environment-wide setting.",
            "enum" : [ "ENABLED", "DISABLED" ],
            "example" : "DISABLED",
            "readOnly" : true
          },
          "effectiveVersion" : {
            "type" : "string",
            "description" : "The actual version to which the OneAgent must be updated. \n\nApplicable only if the **setting** parameter is set to `INHERITED`. In that case the value is taken from the environment-wide setting.",
            "example" : "1.181.0",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the host group.",
            "example" : "HOST_GROUP-0123456789ABCDE",
            "readOnly" : true
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "setting" : {
            "type" : "string",
            "description" : "The auto-update state of OneAgents in a host group: \n\n* `ENABLED`: OneAgents automatically update to the most recent version. \n* `DISABLED`: OneAgents update to the version specified in the **version** field.\n* `INHERITED`: The setting from the environment-wide configuration is used.\n\nOneAgents installed on hosts of the host group use this configuration only when their **setting** parameter is set to `INHERITED`.",
            "enum" : [ "DISABLED", "ENABLED", "INHERITED" ],
            "example" : "DISABLED"
          },
          "targetVersion" : {
            "type" : "string",
            "description" : "Version to update a OneAgent to when automatic updates are enabled.\n\nSupports relative versions `latest`, `previous` and `older` as well as specific version in `<major>.<minor>` format (for example `1.261`) or `<major>.<minor>.<revision>.<timestamp>` format (for example `1.261.178.20230313-090930`).\n\nOnly applicable when the **setting** parameter is set to `ENABLED`.",
            "example" : "latest"
          },
          "updateWindows" : {
            "$ref" : "#/components/schemas/UpdateWindowsConfig"
          },
          "version" : {
            "type" : "string",
            "description" : "The version to which the OneAgent must be updated. \n\nSpecify the version in the `<major>.<minor>.<revision>` format (for example `1.181.0`) or `<major>.<minor>` format (for example `1.181`). You can fetch the list of available versions with the [GET available versions](https://dt-url.net/fo23rb5) call. If no suitable installer is found for the provided version or the value is set to `null`, OneAgent won't be updated. \n\nOnly applicable when the **setting** parameter is set to `DISABLED`.",
            "example" : "1.181.0"
          }
        },
        "required" : [ "setting" ]
      },
      "HostGroupNameAlertingScope" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "nameFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventTextFilterOperatorDto"
            }
          }
        } ],
        "description" : "A scope filter for the related host group name.",
        "required" : [ "filterType", "nameFilter" ]
      },
      "HostList" : {
        "type" : "object",
        "description" : "The list of hosts supported by extension.",
        "properties" : {
          "hosts" : {
            "type" : "array",
            "description" : "The list of hosts",
            "items" : {
              "$ref" : "#/components/schemas/Host"
            }
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "Next page key used for paging"
          },
          "totalResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of results"
          }
        }
      },
      "HostNameAlertingScope" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "nameFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventTextFilterOperatorDto"
            }
          }
        } ],
        "description" : "A scope filter for the related host name.",
        "required" : [ "filterType", "nameFilter" ]
      },
      "HostsAnomalyDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of anomaly detection for hosts.",
        "example" : {
          "connectionLostDetection" : {
            "enabled" : true,
            "enabledOnGracefulShutdowns" : true
          },
          "diskLowInodesDetection" : {
            "customThresholds" : {
              "freeInodesPercentage" : 10
            },
            "enabled" : true
          },
          "diskLowSpaceDetection" : {
            "customThresholds" : {
              "freeSpacePercentage" : 10
            },
            "enabled" : true
          },
          "diskSlowWritesAndReadsDetection" : {
            "customThresholds" : {
              "writeAndReadTime" : 300
            },
            "enabled" : true
          },
          "highCpuSaturationDetection" : {
            "customThresholds" : {
              "cpuSaturation" : 90
            },
            "enabled" : true
          },
          "highGcActivityDetection" : {
            "customThresholds" : {
              "gcSuspensionPercentage" : 20,
              "gcTimePercentage" : 35
            },
            "enabled" : true
          },
          "highMemoryDetection" : {
            "customThresholds" : {
              "pageFaultsPerSecondNonWindows" : 10,
              "pageFaultsPerSecondWindows" : 50,
              "usedMemoryPercentageNonWindows" : 85,
              "usedMemoryPercentageWindows" : 85
            },
            "enabled" : true
          },
          "highNetworkDetection" : {
            "customThresholds" : {
              "utilizationPercentage" : 88
            },
            "enabled" : true
          },
          "metadata" : {
            "clusterVersion" : "Mock version",
            "configurationVersions" : [ 4, 2 ]
          },
          "networkDroppedPacketsDetection" : {
            "customThresholds" : {
              "droppedPacketsPercentage" : 8,
              "totalPacketsRate" : 8
            },
            "enabled" : true
          },
          "networkErrorsDetection" : {
            "customThresholds" : {
              "errorsPercentage" : 9,
              "totalPacketsRate" : 9
            },
            "enabled" : true
          },
          "networkHighRetransmissionDetection" : {
            "customThresholds" : {
              "retransmissionRatePercentage" : 15,
              "retransmittedPacketsNumberPerMinute" : 15
            },
            "enabled" : true
          },
          "networkTcpProblemsDetection" : {
            "customThresholds" : {
              "failedConnectionsNumberPerMinute" : 5,
              "newConnectionFailuresPercentage" : 5
            },
            "enabled" : true
          },
          "outOfMemoryDetection" : {
            "customThresholds" : {
              "outOfMemoryExceptionsNumber" : 2
            },
            "enabled" : true
          },
          "outOfThreadsDetection" : {
            "customThresholds" : {
              "outOfThreadsExceptionsNumber" : 2
            },
            "enabled" : true
          }
        },
        "properties" : {
          "connectionLostDetection" : {
            "$ref" : "#/components/schemas/ConnectionLostDetectionConfig"
          },
          "diskLowInodesDetection" : {
            "$ref" : "#/components/schemas/DiskLowInodesDetectionConfig"
          },
          "diskLowSpaceDetection" : {
            "$ref" : "#/components/schemas/DiskLowSpaceDetectionConfig"
          },
          "diskSlowWritesAndReadsDetection" : {
            "$ref" : "#/components/schemas/DiskSlowWritesAndReadsDetectionConfig"
          },
          "highCpuSaturationDetection" : {
            "$ref" : "#/components/schemas/HighCpuSaturationDetectionConfig"
          },
          "highGcActivityDetection" : {
            "$ref" : "#/components/schemas/HighGcActivityDetectionConfig"
          },
          "highMemoryDetection" : {
            "$ref" : "#/components/schemas/HighMemoryDetectionConfig"
          },
          "highNetworkDetection" : {
            "$ref" : "#/components/schemas/HighNetworkDetectionConfig"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "networkDroppedPacketsDetection" : {
            "$ref" : "#/components/schemas/NetworkDroppedPacketsDetectionConfig"
          },
          "networkErrorsDetection" : {
            "$ref" : "#/components/schemas/NetworkErrorsDetectionConfig"
          },
          "networkHighRetransmissionDetection" : {
            "$ref" : "#/components/schemas/NetworkHighRetransmissionDetectionConfig"
          },
          "networkTcpProblemsDetection" : {
            "$ref" : "#/components/schemas/NetworkTcpProblemsDetectionConfig"
          },
          "outOfMemoryDetection" : {
            "$ref" : "#/components/schemas/OutOfMemoryDetectionConfig"
          },
          "outOfThreadsDetection" : {
            "$ref" : "#/components/schemas/OutOfThreadsDetectionConfig"
          }
        },
        "required" : [ "connectionLostDetection", "diskLowInodesDetection", "diskLowSpaceDetection", "diskSlowWritesAndReadsDetection", "highCpuSaturationDetection", "highGcActivityDetection", "highMemoryDetection", "highNetworkDetection", "networkDroppedPacketsDetection", "networkErrorsDetection", "networkHighRetransmissionDetection", "networkTcpProblemsDetection", "outOfMemoryDetection", "outOfThreadsDetection" ]
      },
      "HttpErrorRule" : {
        "type" : "object",
        "description" : "Configuration of the HTTP error in the web application.",
        "properties" : {
          "capture" : {
            "type" : "boolean",
            "description" : "Capture (`true`) or ignore (`false`) the error."
          },
          "considerBlockedRequests" : {
            "type" : "boolean",
            "description" : "If `true`, match by errors that have CSP Rule violations."
          },
          "considerForAi" : {
            "type" : "boolean",
            "description" : "Include (`true`) or exclude (`false`) the error in Davis AI [problem detection and analysis](https://dt-url.net/a963kd2)."
          },
          "considerUnknownErrorCode" : {
            "type" : "boolean",
            "description" : "If `true`, match by errors that have unknown HTTP status code."
          },
          "errorCodes" : {
            "type" : "string",
            "description" : "The HTTP status code or status code range to match by. \n\nThis field is required if **considerUnknownErrorCode** AND **considerBlockedRequests** are both set to `false`.",
            "example" : "400"
          },
          "filter" : {
            "type" : "string",
            "description" : "The matching rule for the URL.",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS" ]
          },
          "filterByUrl" : {
            "type" : "boolean",
            "description" : "If `true`, filter errors by URL."
          },
          "impactApdex" : {
            "type" : "boolean",
            "description" : "Include (`true`) or exclude (`false`) the error in Apdex calculation."
          },
          "url" : {
            "type" : "string",
            "description" : "The URL to look for."
          }
        },
        "required" : [ "capture", "considerForAi", "considerUnknownErrorCode", "filterByUrl", "impactApdex" ]
      },
      "HttpHeader" : {
        "type" : "object",
        "description" : "The HTTP header.",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the HTTP header.",
            "minLength" : 1
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the HTTP header. May contain an empty value. \n\n Required when creating a new notification. \n\nFor the **Authorization** header, GET requests return the `null` value. \n\nIf you want update a notification configuration with an **Authorization** header which you want to remain intact, set the **Authorization** header with the `null` value."
          }
        },
        "required" : [ "name" ]
      },
      "HttpMethodComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE", "UNKNOWN" ]
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE", "UNKNOWN" ]
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `HTTP_METHOD` attributes.",
        "required" : [ "comparison", "negate" ]
      },
      "HttpStatusClassComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "C_1XX", "C_2XX", "C_3XX", "C_4XX", "C_5XX", "NO_RESPONSE" ]
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "C_1XX", "C_2XX", "C_3XX", "C_4XX", "C_5XX", "NO_RESPONSE" ]
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `HTTP_STATUS_CLASS` attributes.",
        "required" : [ "comparison", "negate" ]
      },
      "HypervisorTypeComparision" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "AHV", "AWS_NITRO", "GVISOR", "HYPER_V", "KVM", "LPAR", "QEMU", "UNRECOGNIZED", "VIRTUAL_BOX", "VMWARE", "WPAR", "XEN" ]
            }
          }
        } ],
        "description" : "Comparison for `HYPERVISOR_TYPE` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "IIBInputNodeTypeComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "CALLABLE_FLOW_ASYNC_RESPONSE_NODE", "CALLABLE_FLOW_INPUT_NODE", "DATABASE_INPUT_NODE", "DOTNET_INPUT_NODE", "EMAIL_INPUT_NODE", "EVENT_INPUT", "EVENT_INPUT_NODE", "FILE_INPUT_NODE", "FTE_INPUT_NODE", "HTTP_ASYNC_RESPONSE", "JD_EDWARDS_INPUT_NODE", "JMS_CLIENT_INPUT_NODE", "LABEL_NODE", "MQ_INPUT_NODE", "PEOPLE_SOFT_INPUT_NODE", "REST_ASYNC_RESPONSE", "REST_REQUEST", "SAP_INPUT_NODE", "SCA_ASYNC_RESPONSE_NODE", "SCA_INPUT_NODE", "SIEBEL_INPUT_NODE", "SOAP_INPUT_NODE", "TCPIP_CLIENT_INPUT_NODE", "TCPIP_CLIENT_REQUEST_NODE", "TCPIP_SERVER_INPUT_NODE", "TCPIP_SERVER_REQUEST_NODE", "TIMEOUT_NOTIFICATION_NODE", "WS_INPUT_NODE" ]
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "CALLABLE_FLOW_ASYNC_RESPONSE_NODE", "CALLABLE_FLOW_INPUT_NODE", "DATABASE_INPUT_NODE", "DOTNET_INPUT_NODE", "EMAIL_INPUT_NODE", "EVENT_INPUT", "EVENT_INPUT_NODE", "FILE_INPUT_NODE", "FTE_INPUT_NODE", "HTTP_ASYNC_RESPONSE", "JD_EDWARDS_INPUT_NODE", "JMS_CLIENT_INPUT_NODE", "LABEL_NODE", "MQ_INPUT_NODE", "PEOPLE_SOFT_INPUT_NODE", "REST_ASYNC_RESPONSE", "REST_REQUEST", "SAP_INPUT_NODE", "SCA_ASYNC_RESPONSE_NODE", "SCA_INPUT_NODE", "SIEBEL_INPUT_NODE", "SOAP_INPUT_NODE", "TCPIP_CLIENT_INPUT_NODE", "TCPIP_CLIENT_REQUEST_NODE", "TCPIP_SERVER_INPUT_NODE", "TCPIP_SERVER_REQUEST_NODE", "TIMEOUT_NOTIFICATION_NODE", "WS_INPUT_NODE" ]
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `IIB_INPUT_NODE_TYPE` attributes.",
        "required" : [ "comparison", "negate" ]
      },
      "ImageTile" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "image" : {
              "type" : "string",
              "description" : "The image-formatted content of the tile.",
              "maxLength" : 250000,
              "minLength" : 0
            }
          }
        } ],
        "description" : "Configuration of the Image tile.",
        "required" : [ "bounds", "image", "name", "tileType" ]
      },
      "IndexedNameComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "caseSensitive" : {
              "type" : "boolean",
              "description" : "The comparison is case-sensitive (`true`) or insensitive (`false`)."
            },
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "CONTAINS", "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to."
            }
          }
        } ],
        "description" : "Comparison for `INDEXED_NAME` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "IndexedStringComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "caseSensitive" : {
              "type" : "boolean",
              "description" : "The comparison is case-sensitive (`true`) or insensitive (`false`)."
            },
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to."
            }
          }
        } ],
        "description" : "Comparison for `INDEXED_STRING` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "IndexedTagComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS", "TAG_KEY_EQUALS" ]
            },
            "value" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          }
        } ],
        "description" : "Comparison for `INDEXED_TAG` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "IntEqualsCompareOperation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **equals** into **does not equal**. \n\n If not set, then `false` is used."
            },
            "values" : {
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The condition of the `INT_EQUALS` type. \n\nThe condition checks whether the integer value equals the specified value.",
        "required" : [ "values" ]
      },
      "IntegerComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "LOWER_THAN", "LOWER_THAN_OR_EQUAL" ]
            },
            "value" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The value to compare to."
            }
          }
        } ],
        "description" : "Comparison for `INTEGER` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "IpAddressComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "caseSensitive" : {
              "type" : "boolean",
              "description" : "The comparison is case-sensitive (`true`) or insensitive (`false`)."
            },
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS", "EXISTS", "IS_IP_IN_RANGE", "REGEX_MATCHES" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to."
            }
          }
        } ],
        "description" : "Comparison for `IP_ADDRESS` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "IpAddressMappingLocation" : {
        "type" : "object",
        "description" : "The location for an IP address mapping.",
        "properties" : {
          "city" : {
            "type" : "string",
            "description" : "The city name of the location."
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The country code of the location. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request.",
            "maxLength" : 2,
            "minLength" : 2
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "The latitude of the location in `DDD.dddd` format.",
            "maximum" : 90,
            "minimum" : -90
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "The longitude of the location in `DDD.dddd` format.",
            "maximum" : 180,
            "minimum" : -180
          },
          "regionCode" : {
            "type" : "string",
            "description" : "The region code of the location. \n\n To fetch the list of available region codes, use the [GET regions of the country](https://dt-url.net/az230x0) request."
          }
        },
        "required" : [ "countryCode" ]
      },
      "IpAddressMappingRule" : {
        "type" : "object",
        "description" : "Configuration of the IP address mapping to the geographic location.",
        "properties" : {
          "ipAddressMappingLocation" : {
            "$ref" : "#/components/schemas/IpAddressMappingLocation"
          },
          "ipAddressRange" : {
            "$ref" : "#/components/schemas/IpAddressRange"
          }
        },
        "required" : [ "ipAddressMappingLocation", "ipAddressRange" ]
      },
      "IpAddressMappings" : {
        "type" : "object",
        "description" : "Configuration of the IP address mappings to geographic locations.",
        "properties" : {
          "ipAddressMappingRules" : {
            "type" : "array",
            "description" : "A list of IP address mapping rules. \n\nRules are evaluated from top to bottom; the first matching rule applies.",
            "items" : {
              "$ref" : "#/components/schemas/IpAddressMappingRule"
            }
          }
        }
      },
      "IpAddressRange" : {
        "type" : "object",
        "description" : "The IP address or the IP address range to be mapped to the location.",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "The IP address to be mapped. \n\nFor an IP address range, this is the **from** address."
          },
          "addressTo" : {
            "type" : "string",
            "description" : "The **to** address of the IP address range."
          },
          "subnetMask" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The subnet mask of the IP address range.",
            "maximum" : 128,
            "minimum" : 0
          }
        },
        "required" : [ "address" ]
      },
      "IpDetectionHeaders" : {
        "type" : "object",
        "description" : "Configuration of the custom client IP headers.",
        "properties" : {
          "ipDetectionHeaders" : {
            "type" : "array",
            "description" : "A list of custom client IP headers. \n\nHeaders are evaluated from top to bottom; the first matching header applies.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "IpInRangeCompareOperation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "lower" : {
              "type" : "string",
              "description" : "The lower boundary of the IP range."
            },
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **IP is in range** into **IP is not in range**. \n\n If not set, then `false` is used."
            },
            "upper" : {
              "type" : "string",
              "description" : "The upper boundary of the IP range."
            }
          }
        } ],
        "description" : "The condition of the `IP_IN_RANGE` type. \n\nThe condition checks whether the IP address belongs to a specified range.",
        "required" : [ "lower", "upper" ]
      },
      "JavaScriptFrameworkSupport" : {
        "type" : "object",
        "description" : "Support of various JavaScript frameworks.",
        "properties" : {
          "activeXObject" : {
            "type" : "boolean",
            "description" : "ActiveXObject detection support enabled/disabled."
          },
          "angular" : {
            "type" : "boolean",
            "description" : "AngularJS and Angular support enabled/disabled."
          },
          "dojo" : {
            "type" : "boolean",
            "description" : "Dojo support enabled/disabled."
          },
          "extJS" : {
            "type" : "boolean",
            "description" : "ExtJS, Sencha Touch support enabled/disabled."
          },
          "icefaces" : {
            "type" : "boolean",
            "description" : "ICEfaces support enabled/disabled."
          },
          "jQuery" : {
            "type" : "boolean",
            "description" : "jQuery, Backbone.js support enabled/disabled."
          },
          "mooTools" : {
            "type" : "boolean",
            "description" : "MooTools support enabled/disabled."
          },
          "prototype" : {
            "type" : "boolean",
            "description" : "Prototype support enabled/disabled."
          }
        },
        "required" : [ "activeXObject", "angular", "dojo", "extJS", "icefaces", "jQuery", "mooTools", "prototype" ]
      },
      "JavaScriptInjectionRules" : {
        "type" : "object",
        "description" : "Rules for javascript injection",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The enable or disable rule of the java script injection."
          },
          "htmlPattern" : {
            "type" : "string",
            "description" : "The html pattern of the java script injection."
          },
          "rule" : {
            "type" : "string",
            "description" : "The url rule of the java script injection.",
            "enum" : [ "AFTER_SPECIFIC_HTML", "AUTOMATIC_INJECTION", "BEFORE_SPECIFIC_HTML", "DO_NOT_INJECT" ]
          },
          "target" : {
            "type" : "string",
            "description" : "The target against which the rule of the java script injection should be matched.",
            "enum" : [ "PAGE_QUERY", "URL" ]
          },
          "urlOperator" : {
            "type" : "string",
            "description" : "The url operator of the java script injection.",
            "enum" : [ "ALL_PAGES", "CONTAINS", "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
          },
          "urlPattern" : {
            "type" : "string",
            "description" : "The url pattern of the java script injection."
          }
        },
        "required" : [ "enabled", "rule", "urlOperator" ]
      },
      "JiraNotificationConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "description" : {
              "type" : "string",
              "description" : "The description of the Jira issue to be created by this notification. \n\n You can use same placeholders as in issue summary.",
              "minLength" : 1
            },
            "issueType" : {
              "type" : "string",
              "description" : "The type of the Jira issue to be created by this notification.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "password" : {
              "type" : "string",
              "description" : "The password for the Jira profile.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "projectKey" : {
              "type" : "string",
              "description" : "The project key of the Jira issue to be created by this notification.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "summary" : {
              "type" : "string",
              "description" : "The summary of the Jira issue to be created by this notification.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "url" : {
              "type" : "string",
              "description" : "The URL of the Jira API endpoint.",
              "minLength" : 1
            },
            "username" : {
              "type" : "string",
              "description" : "The username of the Jira profile.",
              "maxLength" : 1000,
              "minLength" : 1
            }
          }
        } ],
        "description" : "Configuration of the Jira notification.",
        "required" : [ "active", "alertingProfile", "description", "issueType", "name", "projectKey", "summary", "url", "username" ]
      },
      "JsonColumnDefinition" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ColumnDefinition"
        } ],
        "description" : "Definition of a JSON column.",
        "required" : [ "name", "type" ]
      },
      "KeyBasedAuthentication" : {
        "type" : "object",
        "description" : "**Deprecated**. The credentials for the key-based authentication.",
        "properties" : {
          "accessKey" : {
            "type" : "string",
            "description" : "The ID of the access key.",
            "minLength" : 1
          },
          "secretKey" : {
            "type" : "string",
            "description" : "The secret access key.",
            "minLength" : 1
          }
        },
        "required" : [ "accessKey", "secretKey" ]
      },
      "KeyUserAction" : {
        "type" : "object",
        "description" : "Configuration of the key user action.",
        "example" : {
          "actionType" : "Load",
          "domain" : "test.com",
          "name" : "Loading of page /example"
        },
        "properties" : {
          "actionType" : {
            "type" : "string",
            "description" : "The type of the action.",
            "enum" : [ "Custom", "Load", "Xhr" ]
          },
          "domain" : {
            "type" : "string",
            "description" : "The domain where the action is performed."
          },
          "meIdentifier" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the action.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the action.",
            "minLength" : 1
          }
        },
        "required" : [ "actionType", "name" ]
      },
      "KeyUserActionList" : {
        "type" : "object",
        "description" : "The list of key user actions in the web application",
        "example" : {
          "keyUserActionList" : [ {
            "actionType" : "Load",
            "domain" : "test.com",
            "meIdentifier" : "APPLICATION_METHOD-1234",
            "name" : "Loading of page /example"
          } ]
        },
        "properties" : {
          "keyUserActionList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyUserAction"
            }
          }
        }
      },
      "KeyUserActionMobile" : {
        "type" : "object",
        "description" : "A key user action.",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the key user action."
          }
        }
      },
      "KeyUserActionMobileList" : {
        "type" : "object",
        "description" : "A list of key actions in an application.",
        "properties" : {
          "keyUserActions" : {
            "type" : "array",
            "description" : "A list of key actions in an application.",
            "items" : {
              "$ref" : "#/components/schemas/KeyUserActionMobile"
            },
            "uniqueItems" : true
          }
        }
      },
      "KubernetesConfigShortRepresentation" : {
        "type" : "object",
        "description" : "The short representation of a kubernetes configuration.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "A short description of the Dynatrace entity.",
            "readOnly" : true
          },
          "endpointUrl" : {
            "type" : "string",
            "description" : "The URL of the Kubernetes API server. \n\nIt must be unique within a Dynatrace environment. \n\nThe URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the Dynatrace entity."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity.",
            "readOnly" : true
          }
        },
        "required" : [ "endpointUrl", "id" ]
      },
      "KubernetesConfigStubListDto" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KubernetesConfigShortRepresentation"
            }
          }
        }
      },
      "KubernetesCredentials" : {
        "type" : "object",
        "description" : "Configuration for specific Kubernetes credentials.",
        "example" : {
          "active" : true,
          "activeGateGroup" : "group-1",
          "authToken" : "abcd9876",
          "certificateCheckEnabled" : true,
          "davisEventsIntegrationEnabled" : true,
          "endpointUrl" : "https://k8s-api.sample.org",
          "eventAnalysisAndAlertingEnabled" : true,
          "eventsFieldSelectors" : [ {
            "active" : true,
            "fieldSelector" : "involvedObject.kind=Node",
            "label" : "Node events"
          } ],
          "eventsIntegrationEnabled" : true,
          "hostnameVerificationEnabled" : true,
          "id" : "KUBERNETES_CLUSTER-CC06304728FC9396",
          "label" : "K8s credentials - REST example",
          "prometheusExportersIntegrationEnabled" : true,
          "workloadIntegrationEnabled" : true
        },
        "properties" : {
          "active" : {
            "type" : "boolean",
            "description" : "The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration. \n\nIf not set on creation, the `true` value is used. \n\nIf the field is omitted during an update, the old value remains unaffected."
          },
          "activeGateGroup" : {
            "type" : "string",
            "description" : "Active Gate group to filter active gates for this credentials."
          },
          "authToken" : {
            "type" : "string",
            "description" : "The service account bearer token for the Kubernetes API server. \n\nSubmit your token on creation or update of the configuration. For security reasons, GET requests return this field as `null`. \n\nIf the field is omitted during an update, the old value remains unaffected."
          },
          "certificateCheckEnabled" : {
            "type" : "boolean",
            "description" : "The check of SSL certificates is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. \n\nIf not set on creation, the `true` value is used. \n\nIf the field is omitted during an update, the old value remains unaffected."
          },
          "davisEventsIntegrationEnabled" : {
            "type" : "boolean",
            "description" : "Inclusion of all Davis relevant events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected."
          },
          "endpointStatus" : {
            "type" : "string",
            "description" : "The status of the configured endpoint.\n\nASSIGNED: The credentials are assigned to an ActiveGate which is responsible for processing.\nUNASSIGNED: The credentials are not yet assigned to an ActiveGate so there is currently no processing.\nDISABLED: The credentials have been disabled by the user.\nFASTCHECK_AUTH_ERROR: The credentials are invalid.\nFASTCHECK_TLS_ERROR: The endpoint TLS certificate is invalid.\nFASTCHECK_NO_RESPONSE: The endpoint did not return a result until the timeout was reached.\nFASTCHECK_INVALID_ENDPOINT: The endpoint URL was invalid.\nFASTCHECK_AUTH_LOCKED: The credentials seem to be locked.\nUNKNOWN: An unknown error occured.\n",
            "enum" : [ "ASSIGNED", "DISABLED", "FASTCHECK_AUTH_ERROR", "FASTCHECK_AUTH_LOCKED", "FASTCHECK_INVALID_ENDPOINT", "FASTCHECK_LOW_MEMORY_ERROR", "FASTCHECK_NO_RESPONSE", "FASTCHECK_TLS_ERROR", "FASTCHECK_TOO_BIG_ENVIRONMENT", "UNASSIGNED", "UNKNOWN" ],
            "readOnly" : true
          },
          "endpointStatusInfo" : {
            "type" : "string",
            "description" : "The detailed status info of the configured endpoint.",
            "readOnly" : true
          },
          "endpointUrl" : {
            "type" : "string",
            "description" : "The URL of the Kubernetes API server. \n\nIt must be unique within a Dynatrace environment. \n\nThe URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed."
          },
          "eventAnalysisAndAlertingEnabled" : {
            "type" : "boolean",
            "description" : "[Deprecated] With 1.240 the EA events monitoring has been deprecated and replaced by the events GA version which obsoletes this property.\n\nCorresponds to the value of `eventsIntegrationEnabled`.\n\n\n\n The field is ignored during an update, the old value remains unaffected."
          },
          "eventsFieldSelectors" : {
            "type" : "array",
            "description" : "Kubernetes event filters based on field-selectors. If set to `null` on creation, no events field selectors are subscribed. If set to `null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.",
            "items" : {
              "$ref" : "#/components/schemas/KubernetesEventPattern"
            },
            "maxItems" : 20,
            "minItems" : 0
          },
          "eventsIntegrationEnabled" : {
            "type" : "boolean",
            "description" : "The monitoring of events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true. \n\nIf not set on creation, the `false` value is used. \n\nIf the field is omitted during an update, the old value remains unaffected."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the given credentials configuration.",
            "readOnly" : true
          },
          "label" : {
            "type" : "string",
            "description" : "The name of the Kubernetes credentials configuration. \n\nAllowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.",
            "minLength" : 1,
            "pattern" : "^([a-zA-Z0-9_ +-.]*)$"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "prometheusExportersIntegrationEnabled" : {
            "type" : "boolean",
            "description" : "Prometheus exporters integration is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected."
          },
          "workloadIntegrationEnabled" : {
            "type" : "boolean",
            "description" : "Workload and cloud application processing is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected."
          }
        },
        "required" : [ "endpointUrl", "label" ]
      },
      "KubernetesEventPattern" : {
        "type" : "object",
        "description" : "Represents a single Kubernetes events field selector (=event filter based on the K8s field selector).",
        "properties" : {
          "active" : {
            "type" : "boolean",
            "description" : "Whether subscription to this events field selector is enabled (value set to `true`). If disabled (value set to `false`), Dynatrace will stop fetching events from the Kubernetes API for this events field selector"
          },
          "fieldSelector" : {
            "type" : "string",
            "description" : "The field selector string (url decoding is applied) when storing it.",
            "pattern" : "[\\w\\.]{1,1024}((=){1,2}|(!=))[^,!=]{0,256}(,[\\w\\.]{1,1024}((=){1,2}|(!=))[^,!=]{0,256}){0,9}"
          },
          "label" : {
            "type" : "string",
            "description" : "A label of the events field selector.",
            "pattern" : "^([a-zA-Z0-9_ +-.]*)$"
          }
        },
        "required" : [ "active", "fieldSelector", "label" ]
      },
      "LambdaHighErrorRateDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of the AWS Lambda high error rate detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/LambdaHighErrorRateThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "LambdaHighErrorRateThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for AWS Lambda high error rate. If not set, automatic mode is used.",
        "properties" : {
          "failedInvocationsRate" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if failed invocations rate is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 0
          }
        },
        "required" : [ "failedInvocationsRate" ]
      },
      "LessThanCompareOperation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The value to compare to."
            }
          }
        } ],
        "description" : "The condition of the `LESS_THAN` type. \n\nThe condition checks whether the integer value is less than the specified value.",
        "required" : [ "value" ]
      },
      "LoadDropDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of load drops detection.",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "loadDropPercent" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if the observed load is less than *X* % of the expected value.",
            "maximum" : 100,
            "minimum" : 0
          },
          "minAbnormalStateDurationInMinutes" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if the service stays in abnormal state for at least *X* minutes.",
            "maximum" : 60,
            "minimum" : 1
          }
        },
        "required" : [ "enabled" ]
      },
      "LoadSpikeDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of load spikes detection.",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "loadSpikePercent" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if the observed load is more than *X* % of the expected value.",
            "maximum" : 1000,
            "minimum" : 100
          },
          "minAbnormalStateDurationInMinutes" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if the service stays in abnormal state for at least *X* minutes.",
            "maximum" : 60,
            "minimum" : 1
          }
        },
        "required" : [ "enabled" ]
      },
      "LogMetricConfig" : {
        "type" : "object",
        "description" : "Custom log metric definition.",
        "example" : {
          "active" : true,
          "displayName" : "Sample metric",
          "logSourceFilters" : [ {
            "hostFilters" : [ "HOST-066703AD79C38DB5" ],
            "osTypes" : [ ],
            "pathDefinitions" : [ {
              "definition" : "/var/log/sample.log",
              "type" : "FIXED"
            } ],
            "sourceEntities" : [ "PROCESS_GROUP_INSTANCE-63FC6E7C73DC893F" ]
          } ],
          "metricKey" : "calc:log.metric",
          "metricValueType" : "OCCURRENCES",
          "searchString" : "\"memory fault\"",
          "unit" : "HOUR",
          "unitDisplayName" : ""
        },
        "properties" : {
          "active" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          },
          "columnDefiningValue" : {
            "$ref" : "#/components/schemas/ColumnDefinition"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the metric, displayed in the UI.",
            "minLength" : 1
          },
          "logSourceFilters" : {
            "type" : "array",
            "description" : "A list of filters to define the logs to look into. \n\n If several filters are specified, the OR logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/LogSourceFilter"
            },
            "minItems" : 1
          },
          "metricKey" : {
            "type" : "string",
            "description" : "The unique key of the metric. \n\nThe key must have the `calc:log.` prefix.",
            "example" : "calc:log.metric",
            "minLength" : 1
          },
          "metricValueType" : {
            "type" : "string",
            "description" : "The type of the metric data points calculation. For now the only allowed value is `OCCURRENCES`.",
            "enum" : [ "FP_COLUMN_AVG", "FP_COLUMN_COUNT", "FP_COLUMN_MAX", "FP_COLUMN_MIN", "FP_COLUMN_SUM", "FP_COLUMN_TOP_X_AVG", "FP_COLUMN_TOP_X_COUNT", "FP_COLUMN_TOP_X_MAX", "FP_COLUMN_TOP_X_MIN", "FP_COLUMN_TOP_X_SUM", "INT_COLUMN_AVG", "INT_COLUMN_COUNT", "INT_COLUMN_MAX", "INT_COLUMN_MIN", "INT_COLUMN_SUM", "INT_COLUMN_TOP_X_AVG", "INT_COLUMN_TOP_X_COUNT", "INT_COLUMN_TOP_X_MAX", "INT_COLUMN_TOP_X_MIN", "INT_COLUMN_TOP_X_SUM", "OCCURRENCES" ],
            "example" : "OCCURRENCES"
          },
          "searchString" : {
            "type" : "string",
            "description" : "The pattern to look for in logs. \n\n Use the [Dynatrace search query language](https://dt-url.net/vv83rhp) to specify it. Quotes must be escaped. \n\n To return all results, leave the field blank.",
            "example" : "prefix1* OR prefix2*"
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of the metric.",
            "enum" : [ "AMPERE", "BILLION", "BIT", "BIT_PER_HOUR", "BIT_PER_MINUTE", "BIT_PER_SECOND", "BYTE", "BYTE_PER_HOUR", "BYTE_PER_MINUTE", "BYTE_PER_SECOND", "CORES", "COUNT", "DAY", "DECIBEL_MILLI_WATT", "GIBI_BYTE", "GIBI_BYTE_PER_HOUR", "GIBI_BYTE_PER_MINUTE", "GIBI_BYTE_PER_SECOND", "GIGA", "GIGA_BYTE", "GIGA_BYTE_PER_HOUR", "GIGA_BYTE_PER_MINUTE", "GIGA_BYTE_PER_SECOND", "HERTZ", "HOUR", "KIBI_BYTE", "KIBI_BYTE_PER_HOUR", "KIBI_BYTE_PER_MINUTE", "KIBI_BYTE_PER_SECOND", "KILO", "KILO_BYTE", "KILO_BYTE_PER_HOUR", "KILO_BYTE_PER_MINUTE", "KILO_BYTE_PER_SECOND", "KILO_METRE_PER_HOUR", "MEBI_BYTE", "MEBI_BYTE_PER_HOUR", "MEBI_BYTE_PER_MINUTE", "MEBI_BYTE_PER_SECOND", "MEGA", "MEGA_BYTE", "MEGA_BYTE_PER_HOUR", "MEGA_BYTE_PER_MINUTE", "MEGA_BYTE_PER_SECOND", "METRE_PER_HOUR", "METRE_PER_SECOND", "MICRO_SECOND", "MILLION", "MILLI_CORES", "MILLI_SECOND", "MILLI_SECOND_PER_MINUTE", "MINUTE", "MONTH", "MSU", "NANO_SECOND", "NANO_SECOND_PER_MINUTE", "NOT_APPLICABLE", "PERCENT", "PER_HOUR", "PER_MINUTE", "PER_SECOND", "PIXEL", "PROMILLE", "RATIO", "SECOND", "STATE", "TRILLION", "UNSPECIFIED", "VOLT", "WATT", "WEEK", "YEAR" ]
          },
          "unitDisplayName" : {
            "type" : "string",
            "description" : "The display name of the unit. \n\n Only applicable if the **unit** is set to `UNSPECIFIED`."
          }
        },
        "required" : [ "displayName", "logSourceFilters", "metricKey", "metricValueType", "searchString", "unit" ]
      },
      "LogSourceFilter" : {
        "type" : "object",
        "description" : "Configuration of the log filter for a custom log metric. \n\nIf several criteria are specified, the AND logic applies.",
        "properties" : {
          "hostFilters" : {
            "type" : "array",
            "description" : "A list of hosts, where the log can originate from. Specify Dynatrace entity IDs here. \n\nIf several hosts are specified, the OR logic applies.",
            "items" : {
              "type" : "string"
            }
          },
          "osTypes" : {
            "type" : "array",
            "description" : "A list of operating system types, where the log can originate from. \n\nIf set, **only OS logs** are included in the result. \n\nIf several OS are specified, the OR logic applies. \n\nThis field is mutually exclusive with the **sourceEntities** field.",
            "items" : {
              "type" : "string",
              "enum" : [ "AIX", "DARWIN", "HPUX", "LINUX", "SOLARIS", "WINDOWS", "ZOS" ]
            },
            "maxItems" : 1,
            "minItems" : 0
          },
          "pathDefinitions" : {
            "type" : "array",
            "description" : "A list of filtering criteria for log path. \n\nIf several criteria are specified, the OR logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/PathDefinition"
            }
          },
          "sourceEntities" : {
            "type" : "array",
            "description" : "A list of Dynatrace entities, where the log can originate from. Specify Dynatrace entity IDs here. \n\n Allowed types of entities are `PROCESS_GROUP` and `PROCESS_GROUP_INSTANCE`. You can't mix entity types. \n\nIf several entities are specified, the OR logic applies. \n\nThis field is mutually exclusive with the **osTypes** field.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "LowDatastoreSpaceDetectionConfig" : {
        "type" : "object",
        "description" : "The configuraiton of the low datastore free space detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/LowDatastoreSpaceThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "LowDatastoreSpaceThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for low datastore free space. If not set then the automatic mode is used.",
        "properties" : {
          "freeSpacePercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if datastore free space is lower than *X*%.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "freeSpacePercentage" ]
      },
      "MaintenanceWindow" : {
        "type" : "object",
        "description" : "Configuration of a maintenance window.",
        "example" : {
          "description" : "An example Maintenance window",
          "metadata" : {
            "clusterVersion" : "Mock version",
            "configurationVersions" : [ 4, 2 ]
          },
          "name" : "Example Window",
          "schedule" : {
            "end" : "2019-02-27 00:00",
            "recurrence" : {
              "dayOfMonth" : "23",
              "durationMinutes" : "60",
              "startTime" : "16:28"
            },
            "recurrenceType" : "MONTHLY",
            "start" : "2018-08-02 00:00",
            "zoneId" : "Europe/Vienna"
          },
          "scope" : {
            "entities" : [ "HOST-0000000000123456" ],
            "matches" : [ {
              "mzId" : "123456789",
              "tagCombination" : "AND",
              "tags" : [ {
                "context" : "AWS",
                "key" : "testkey",
                "value" : "testvalue"
              } ],
              "type" : "HOST"
            } ]
          },
          "suppressSyntheticMonitorsExecution" : "true",
          "suppression" : "DETECT_PROBLEMS_AND_ALERT",
          "type" : "UNPLANNED"
        },
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "A short description of the maintenance purpose."
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the maintenance window."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the maintenance window, displayed in the UI.",
            "minLength" : 1
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          },
          "scope" : {
            "$ref" : "#/components/schemas/Scope"
          },
          "suppressSyntheticMonitorsExecution" : {
            "type" : "boolean",
            "description" : "Suppress execution of synthetic monitors during the maintenance."
          },
          "suppression" : {
            "type" : "string",
            "description" : "The type of suppression of alerting and problem detection during the maintenance.",
            "enum" : [ "DETECT_PROBLEMS_AND_ALERT", "DETECT_PROBLEMS_DONT_ALERT", "DONT_DETECT_PROBLEMS" ]
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the maintenance: planned or unplanned.",
            "enum" : [ "PLANNED", "UNPLANNED" ]
          }
        },
        "required" : [ "description", "name", "schedule", "suppression", "type" ]
      },
      "ManagementZone" : {
        "type" : "object",
        "description" : "The configuration of the management zone. It defines how the management zone applies.",
        "example" : {
          "description" : "sampleDescription",
          "dimensionalRules" : [ {
            "appliesTo" : "METRIC",
            "conditions" : [ {
              "conditionType" : "DIMENSION",
              "key" : "alwaysRequired",
              "ruleMatcher" : "EQUALS",
              "value" : "requiredForDimension_forbiddenForMetricKeyAndLogFileName"
            } ],
            "enabled" : true
          } ],
          "entitySelectorBasedRules" : [ {
            "enabled" : true,
            "entitySelector" : "type(HOST) AND cpuCores(4)"
          } ],
          "name" : "sampleManagementZone",
          "rules" : [ {
            "conditions" : [ {
              "comparisonInfo" : {
                "caseSensitive" : false,
                "negate" : false,
                "operator" : "BEGINS_WITH",
                "type" : "STRING",
                "value" : "sample"
              },
              "key" : {
                "attribute" : "SERVICE_DATABASE_NAME"
              }
            }, {
              "comparisonInfo" : {
                "negate" : false,
                "operator" : "EXISTS",
                "type" : "STRING"
              },
              "key" : {
                "attribute" : "SERVICE_WEB_SERVER_NAME"
              }
            }, {
              "comparisonInfo" : {
                "caseSensitive" : false,
                "negate" : false,
                "operator" : "BEGINS_WITH",
                "type" : "STRING",
                "value" : "sample"
              },
              "key" : {
                "attribute" : "PROCESS_GROUP_CUSTOM_METADATA",
                "dynamicKey" : {
                  "key" : "kubernetes.io/limit-ranger",
                  "source" : "KUBERNETES"
                },
                "type" : "PROCESS_CUSTOM_METADATA_KEY"
              }
            } ],
            "enabled" : true,
            "propagationTypes" : [ "SERVICE_TO_HOST_LIKE" ],
            "type" : "SERVICE"
          } ]
        },
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the management zone.",
            "maxLength" : 1000,
            "minLength" : 0
          },
          "dimensionalRules" : {
            "type" : "array",
            "description" : "A list of dimensional data rules for management zone usage. \n\nIf several rules are specified, the **OR** logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/MzDimensionalRule"
            }
          },
          "entitySelectorBasedRules" : {
            "type" : "array",
            "description" : "A list of entity-selector based rules for management zone usage.\n\nIf several rules are specified, the **OR** logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/EntitySelectorBasedMzRule"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the management zone.",
            "example" : "123456"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the management zone.",
            "maxLength" : 100,
            "minLength" : 1
          },
          "rules" : {
            "type" : "array",
            "description" : "A list of rules for management zone usage. \n\nIf several rules are specified, the **OR** logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/MzRule"
            }
          }
        },
        "required" : [ "name" ]
      },
      "ManagementZoneAlertingScope" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "mzId" : {
              "type" : "string",
              "description" : "The management zone id to match on."
            }
          }
        } ],
        "description" : "A scope filter for a management zone identifier.",
        "required" : [ "filterType" ]
      },
      "MarkdownTile" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "markdown" : {
              "type" : "string",
              "description" : "The markdown-formatted content of the tile."
            }
          }
        } ],
        "description" : "Configuration of the Markdown tile.",
        "required" : [ "bounds", "markdown", "name", "tileType" ]
      },
      "MaskingRule" : {
        "type" : "object",
        "description" : "The masking rule defining how data is hidden.",
        "properties" : {
          "maskingRuleType" : {
            "type" : "string",
            "description" : "The type of the masking rule.",
            "enum" : [ "ATTRIBUTE", "ELEMENT" ]
          },
          "selector" : {
            "type" : "string",
            "description" : "The selector for the element or the attribute to be masked. \n\nSpecify a CSS expression for an element or a [regular expression](https://dt-url.net/k9e0iaq) for an attribute."
          },
          "userInteractionHidden" : {
            "type" : "boolean",
            "description" : "Interactions with the element are (`true`) or are not (`false) masked.",
            "example" : false
          }
        },
        "required" : [ "maskingRuleType", "selector", "userInteractionHidden" ]
      },
      "MetaDataCapturing" : {
        "type" : "object",
        "description" : "Configuration to capture meta data with the JavaScript agent.",
        "properties" : {
          "capturingName" : {
            "type" : "string",
            "description" : "The name of the meta data to capture."
          },
          "name" : {
            "type" : "string",
            "description" : "Name for displaying the captured values in Dynatrace."
          },
          "publicMetadata" : {
            "type" : "boolean",
            "description" : "True if this metadata should be captured regardless of the privacy settings"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the meta data to capture.",
            "enum" : [ "COOKIE", "CSS_SELECTOR", "JAVA_SCRIPT_FUNCTION", "JAVA_SCRIPT_VARIABLE", "META_TAG", "QUERY_STRING", "RESPONSE_HEADER" ]
          },
          "uniqueId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The unique id of the meta data to capture.",
            "minimum" : 0
          },
          "useLastValue" : {
            "type" : "boolean",
            "description" : "True if the last captured value should be used for this metadata. By default the first value will be used."
          }
        },
        "required" : [ "capturingName", "name", "type" ]
      },
      "MethodReference" : {
        "type" : "object",
        "description" : "Configuration of a method to be captured.",
        "properties" : {
          "argumentTypes" : {
            "type" : "array",
            "description" : "The list of argument types.",
            "items" : {
              "type" : "string"
            }
          },
          "className" : {
            "type" : "string",
            "description" : "The class name where the method to capture resides. \n\n Either this or the **fileName** must be set."
          },
          "fileName" : {
            "type" : "string",
            "description" : "The file name where the method to capture resides. \n\n Either this or **className** must be set."
          },
          "fileNameMatcher" : {
            "type" : "string",
            "description" : "The operator of the comparison. \n\n If not set, `EQUALS` is used.",
            "enum" : [ "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
          },
          "methodName" : {
            "type" : "string",
            "description" : "The name of the method to capture."
          },
          "modifiers" : {
            "type" : "array",
            "description" : "The modifiers of the method to capture.",
            "items" : {
              "type" : "string",
              "enum" : [ "ABSTRACT", "EXTERN", "FINAL", "NATIVE", "STATIC" ]
            },
            "uniqueItems" : true
          },
          "returnType" : {
            "type" : "string",
            "description" : "The return type."
          },
          "visibility" : {
            "type" : "string",
            "description" : "The visibility of the method to capture.",
            "enum" : [ "INTERNAL", "PACKAGE_PROTECTED", "PRIVATE", "PROTECTED", "PUBLIC" ]
          }
        },
        "required" : [ "argumentTypes", "methodName", "modifiers", "returnType", "visibility" ]
      },
      "MethodRule" : {
        "type" : "object",
        "properties" : {
          "argumentTypes" : {
            "type" : "array",
            "description" : "Fully qualified types of argument the method expects.",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the method rule."
          },
          "methodName" : {
            "type" : "string",
            "description" : "The method to instrument.",
            "minLength" : 1
          },
          "modifiers" : {
            "type" : "array",
            "description" : "The modifiers of the method rule.",
            "items" : {
              "type" : "string",
              "enum" : [ "ABSTRACT", "EXTERN", "FINAL", "NATIVE", "STATIC" ]
            },
            "uniqueItems" : true
          },
          "returnType" : {
            "type" : "string",
            "description" : "Fully qualified type the method returns."
          },
          "visibility" : {
            "type" : "string",
            "description" : "The visibility of the method rule.",
            "enum" : [ "INTERNAL", "PACKAGE_PROTECTED", "PRIVATE", "PROTECTED", "PUBLIC" ]
          }
        },
        "required" : [ "methodName", "returnType" ]
      },
      "MetricEvent" : {
        "type" : "object",
        "description" : "The configuration of the metric event.",
        "example" : {
          "aggregationType" : "AVG",
          "alertingScope" : [ {
            "entityId" : "HOST-000000000001E240",
            "filterType" : "ENTITY_ID"
          }, {
            "filterType" : "TAG",
            "tagFilter" : {
              "context" : "CONTEXTLESS",
              "key" : "someKey",
              "value" : "someValue"
            }
          } ],
          "description" : "This is the description for my metric event.",
          "disabledReason" : "NONE",
          "enabled" : true,
          "metadata" : {
            "clusterVersion" : "Mock version",
            "configurationVersions" : [ 4, 2 ]
          },
          "metricDimensions" : [ {
            "filterType" : "ENTITY",
            "key" : "dt.entity.disk",
            "nameFilter" : {
              "operator" : "EQUALS",
              "value" : "diskName"
            }
          } ],
          "metricId" : "com.dynatrace.builtin:host.disk.bytesread",
          "monitoringStrategy" : {
            "alertCondition" : "ABOVE",
            "dealertingSamples" : 5,
            "samples" : 5,
            "threshold" : 80.0,
            "type" : "STATIC_THRESHOLD",
            "unit" : "KILO_BYTE_PER_SECOND",
            "violatingSamples" : 3
          },
          "name" : "My metric event",
          "severity" : "CUSTOM_ALERT",
          "warningReason" : "NONE"
        },
        "properties" : {
          "aggregationType" : {
            "type" : "string",
            "description" : "How the metric data points are aggregated for the evaluation. \n\n The timeseries must support this aggregation.",
            "enum" : [ "AVG", "COUNT", "MAX", "MEDIAN", "MIN", "P90", "SUM", "VALUE" ]
          },
          "alertingScope" : {
            "type" : "array",
            "description" : "Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction.",
            "items" : {
              "$ref" : "#/components/schemas/MetricEventAlertingScope"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the metric event.",
            "maxLength" : 4000,
            "minLength" : 0
          },
          "disabledReason" : {
            "type" : "string",
            "description" : "The reason of automatic disabling. \n\nThe `NONE` means config was not disabled automatically.",
            "enum" : [ "METRIC_DEFINITION_INCONSISTENCY", "NONE", "TOO_MANY_DIMS" ],
            "readOnly" : true
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric event is enabled (`true`) or disabled (`false`)."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the metric event.",
            "maxLength" : 256,
            "minLength" : 0,
            "pattern" : "^[a-zA-Z0-9\\.\\-_:%]+$"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "metricDimensions" : {
            "type" : "array",
            "description" : "Defines the dimensions of the metric to alert on. The filters are combined by conjunction.",
            "items" : {
              "$ref" : "#/components/schemas/MetricEventDimensions"
            }
          },
          "metricId" : {
            "type" : "string",
            "description" : "The ID of the metric evaluated by the metric event."
          },
          "metricSelector" : {
            "type" : "string",
            "description" : "The metric selector that should be executed.",
            "maxLength" : 10000,
            "minLength" : 1
          },
          "monitoringStrategy" : {
            "$ref" : "#/components/schemas/MetricEventMonitoringStrategy"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the metric event displayed in the UI.",
            "maxLength" : 1024,
            "minLength" : 0
          },
          "primaryDimensionKey" : {
            "type" : "string",
            "description" : "Defines which dimension key should be used for the **alertingScope**."
          },
          "queryOffset" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Defines the query offset to adapt the evaluation timeframe for known metric latency.",
            "maximum" : 60,
            "minimum" : 1
          },
          "severity" : {
            "type" : "string",
            "description" : "The type of the event to trigger on the threshold violation. \n\nThe `CUSTOM_ALERT` type is not correlated with other alerts.\nThe `INFO` type does not open a problem.",
            "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "INFO", "PERFORMANCE", "RESOURCE_CONTENTION" ]
          },
          "warningReason" : {
            "type" : "string",
            "description" : "The reason of a warning set on the config. \n\nThe `NONE` means config has no warnings.",
            "enum" : [ "NONE" ],
            "readOnly" : true
          }
        },
        "required" : [ "description", "enabled", "monitoringStrategy", "name" ]
      },
      "MetricEventAlertingScope" : {
        "type" : "object",
        "description" : "A single filter for the alerting scope.\n\nThe actual set of fields depends on type of the filter. Find the list of actual objects in the description of the **filterType** field or see [Metric events anomaly detection API - JSON models](https://dt-url.net/ql63sap).",
        "discriminator" : {
          "propertyName" : "filterType"
        },
        "properties" : {
          "filterType" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `ENTITY_ID` -> EntityIdAlertingScope \n* `MANAGEMENT_ZONE` -> ManagementZoneAlertingScope \n* `TAG` -> TagFilterAlertingScope \n* `NAME` -> NameAlertingScope \n* `CUSTOM_DEVICE_GROUP_NAME` -> CustomDeviceGroupNameAlertingScope \n* `HOST_GROUP_NAME` -> HostGroupNameAlertingScope \n* `HOST_NAME` -> HostNameAlertingScope \n* `PROCESS_GROUP_ID` -> ProcessGroupIdAlertingScope \n* `PROCESS_GROUP_NAME` -> ProcessGroupNameAlertingScope \n",
            "enum" : [ "CUSTOM_DEVICE_GROUP_NAME", "ENTITY_ID", "HOST_GROUP_NAME", "HOST_NAME", "MANAGEMENT_ZONE", "NAME", "PROCESS_GROUP_ID", "PROCESS_GROUP_NAME", "TAG" ]
          }
        },
        "required" : [ "filterType" ]
      },
      "MetricEventAutoAdaptiveBaselineMonitoringStrategy" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventMonitoringStrategy"
        }, {
          "type" : "object",
          "properties" : {
            "alertCondition" : {
              "type" : "string",
              "description" : "The condition for the **threshold** value check: above or below.",
              "enum" : [ "ABOVE", "BELOW" ]
            },
            "alertingOnMissingData" : {
              "type" : "boolean",
              "description" : "If true, also one-minute samples without data are counted as violating samples."
            },
            "dealertingSamples" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The number of one-minute samples within the evaluation window that must go back to normal to close the event.",
              "minimum" : 3
            },
            "numberOfSignalFluctuations" : {
              "type" : "number",
              "format" : "double",
              "description" : "Defines the factor of how many signal fluctuations are valid. Values above the baseline plus the signal fluctuation times the number of tolerated signal fluctuations are alerted.",
              "maximum" : 10,
              "minimum" : 0
            },
            "samples" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The number of one-minute samples that form the sliding evaluation window.",
              "maximum" : 60,
              "minimum" : 3
            },
            "violatingSamples" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event.",
              "minimum" : 1
            }
          }
        } ],
        "description" : "An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time.",
        "required" : [ "alertCondition", "dealertingSamples", "numberOfSignalFluctuations", "samples", "type", "violatingSamples" ]
      },
      "MetricEventDimensions" : {
        "type" : "object",
        "description" : "A single filter for the metrics dimensions.\n\nThe actual set of fields depends on type of the filter. Find the list of actual objects in the description of the **filterType** field or see [Metric events anomaly detection API - JSON models](https://dt-url.net/ql63sap).",
        "discriminator" : {
          "propertyName" : "filterType"
        },
        "properties" : {
          "filterType" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `ENTITY` -> MetricEventEntityDimensions \n* `STRING` -> MetricEventStringDimensions \n",
            "enum" : [ "ENTITY", "STRING" ]
          },
          "key" : {
            "type" : "string",
            "description" : "The dimensions key on the metric."
          }
        },
        "required" : [ "filterType" ]
      },
      "MetricEventEntityDimensions" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventDimensions"
        }, {
          "type" : "object",
          "properties" : {
            "nameFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventDimensionsFilterOperatorDto"
            }
          }
        } ],
        "description" : "A filter for the metrics entity dimensions.",
        "required" : [ "filterType", "nameFilter" ]
      },
      "MetricEventMonitoringStrategy" : {
        "type" : "object",
        "description" : "A monitoring strategy for a metric event config.\n\nThis is the base version of the monitoring strategy, depending on the type, \nthe actual JSON may contain additional fields.",
        "discriminator" : {
          "mapping" : {
            "AUTO_ADAPTIVE_BASELINE" : "#/components/schemas/MetricEventAutoAdaptiveBaselineMonitoringStrategy",
            "STATIC_THRESHOLD" : "#/components/schemas/MetricEventStaticThresholdMonitoringStrategy"
          },
          "propertyName" : "type"
        },
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `STATIC_THRESHOLD` -> MetricEventStaticThresholdMonitoringStrategy \n* `AUTO_ADAPTIVE_BASELINE` -> MetricEventAutoAdaptiveBaselineMonitoringStrategy \n",
            "enum" : [ "AUTO_ADAPTIVE_BASELINE", "STATIC_THRESHOLD" ]
          }
        },
        "required" : [ "type" ]
      },
      "MetricEventStaticThresholdMonitoringStrategy" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventMonitoringStrategy"
        }, {
          "type" : "object",
          "properties" : {
            "alertCondition" : {
              "type" : "string",
              "description" : "The condition for the **threshold** value check: above or below.",
              "enum" : [ "ABOVE", "BELOW" ]
            },
            "alertingOnMissingData" : {
              "type" : "boolean",
              "description" : "If true, also one-minute samples without data are counted as violating samples."
            },
            "dealertingSamples" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The number of one-minute samples within the evaluation window that must go back to normal to close the event.",
              "minimum" : 3
            },
            "samples" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The number of one-minute samples that form the sliding evaluation window.",
              "maximum" : 60,
              "minimum" : 3
            },
            "threshold" : {
              "type" : "number",
              "format" : "double",
              "description" : "The value of the static threshold based on the specified unit."
            },
            "unit" : {
              "type" : "string",
              "description" : "The unit of the threshold, matching the metric definition.",
              "enum" : [ "AMPERE", "BILLION", "BIT", "BIT_PER_HOUR", "BIT_PER_MINUTE", "BIT_PER_SECOND", "BYTE", "BYTE_PER_HOUR", "BYTE_PER_MINUTE", "BYTE_PER_SECOND", "CORES", "COUNT", "DAY", "DECIBEL_MILLI_WATT", "GIBI_BYTE", "GIBI_BYTE_PER_HOUR", "GIBI_BYTE_PER_MINUTE", "GIBI_BYTE_PER_SECOND", "GIGA", "GIGA_BYTE", "GIGA_BYTE_PER_HOUR", "GIGA_BYTE_PER_MINUTE", "GIGA_BYTE_PER_SECOND", "HERTZ", "HOUR", "KIBI_BYTE", "KIBI_BYTE_PER_HOUR", "KIBI_BYTE_PER_MINUTE", "KIBI_BYTE_PER_SECOND", "KILO", "KILO_BYTE", "KILO_BYTE_PER_HOUR", "KILO_BYTE_PER_MINUTE", "KILO_BYTE_PER_SECOND", "KILO_METRE_PER_HOUR", "MEBI_BYTE", "MEBI_BYTE_PER_HOUR", "MEBI_BYTE_PER_MINUTE", "MEBI_BYTE_PER_SECOND", "MEGA", "MEGA_BYTE", "MEGA_BYTE_PER_HOUR", "MEGA_BYTE_PER_MINUTE", "MEGA_BYTE_PER_SECOND", "METRE_PER_HOUR", "METRE_PER_SECOND", "MICRO_SECOND", "MILLION", "MILLI_CORES", "MILLI_SECOND", "MILLI_SECOND_PER_MINUTE", "MINUTE", "MONTH", "MSU", "NANO_SECOND", "NANO_SECOND_PER_MINUTE", "NOT_APPLICABLE", "PERCENT", "PER_HOUR", "PER_MINUTE", "PER_SECOND", "PIXEL", "PROMILLE", "RATIO", "SECOND", "STATE", "TRILLION", "UNSPECIFIED", "VOLT", "WATT", "WEEK", "YEAR" ]
            },
            "violatingSamples" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event.",
              "minimum" : 1
            }
          }
        } ],
        "description" : "A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit.",
        "required" : [ "alertCondition", "dealertingSamples", "samples", "threshold", "type", "violatingSamples" ]
      },
      "MetricEventStringDimensions" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventDimensions"
        }, {
          "type" : "object",
          "properties" : {
            "textFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventDimensionsFilterOperatorDto"
            }
          }
        } ],
        "description" : "A filter for the metrics string dimensions.",
        "required" : [ "filterType", "textFilter" ]
      },
      "MetricEventTextFilterMetricEventDimensionsFilterOperatorDto" : {
        "type" : "object",
        "description" : "A filter for a string value based on the given operator.",
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "The operator to match on.",
            "enum" : [ "EQUALS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to match on.",
            "maxLength" : 1000,
            "minLength" : 1
          }
        },
        "required" : [ "operator", "value" ]
      },
      "MetricEventTextFilterMetricEventTextFilterOperatorDto" : {
        "type" : "object",
        "description" : "A filter for a string value based on the given operator.",
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "The operator to match on.",
            "enum" : [ "CONTAINS_CASE_INSENSITIVE", "CONTAINS_CASE_SENSITIVE", "EQUALS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to match on.",
            "maxLength" : 1000,
            "minLength" : 1
          }
        },
        "required" : [ "operator", "value" ]
      },
      "MobileCustomApdex" : {
        "type" : "object",
        "description" : "Apdex configuration of a mobile or custom application. \n\nA duration less than the **tolerable** threshold is considered satisfied.",
        "properties" : {
          "frustratedOnError" : {
            "type" : "boolean",
            "description" : "Apdex error condition: if `true` the user session is considered frustrated when an error is reported."
          },
          "frustratingThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Apdex **frustrated** threshold, in milliseconds: a duration greater than or equal to this value is considered frustrated."
          },
          "toleratedThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Apdex **tolerable** threshold, in milliseconds: a duration greater than or equal to this value is considered tolerable."
          }
        },
        "required" : [ "frustratedOnError", "frustratingThreshold", "toleratedThreshold" ]
      },
      "MobileCustomAppConfig" : {
        "type" : "object",
        "description" : "Configuration of an existing mobile or custom application.",
        "properties" : {
          "apdexSettings" : {
            "$ref" : "#/components/schemas/MobileCustomApdex"
          },
          "applicationId" : {
            "type" : "string",
            "description" : "The UUID of the application.\n\nIt is used only by OneAgent to send data to Dynatrace.",
            "readOnly" : true
          },
          "applicationType" : {
            "type" : "string",
            "description" : "The type of the application.",
            "enum" : [ "CUSTOM_APPLICATION", "MOBILE_APPLICATION" ],
            "readOnly" : true
          },
          "beaconEndpointType" : {
            "type" : "string",
            "description" : "The type of the beacon endpoint.",
            "enum" : [ "CLUSTER_ACTIVE_GATE", "ENVIRONMENT_ACTIVE_GATE", "INSTRUMENTED_WEB_SERVER" ]
          },
          "beaconEndpointUrl" : {
            "type" : "string",
            "description" : "The URL of the beacon endpoint.\n\nOnly applicable when the **beaconEndpointType** is set to `ENVIRONMENT_ACTIVE_GATE` or `INSTRUMENTED_WEB_SERVER`."
          },
          "costControlUserSessionPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The percentage of user sessions to be analyzed.",
            "maximum" : 100,
            "minimum" : 1
          },
          "iconType" : {
            "type" : "string",
            "description" : "Custom application icon.\n\nMobile apps always use the mobile device icon, so this icon can only be set for custom apps.",
            "enum" : [ "AMAZON_ECHO", "DESKTOP", "EMBEDDED", "IOT", "MICROSOFT_HOLOLENS", "UFO", "USERS" ]
          },
          "identifier" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the application.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the application."
          },
          "optInModeEnabled" : {
            "type" : "boolean",
            "description" : "The opt-in mode is enabled (`true`) or disabled (`false`).\n\nThis value is only applicable to mobile and not to custom apps."
          },
          "sessionReplayEnabled" : {
            "type" : "boolean",
            "description" : "The session replay is enabled (`true`) or disabled (`false`).\nThis value is only applicable to mobile and not to custom apps."
          },
          "sessionReplayOnCrashEnabled" : {
            "type" : "boolean",
            "description" : "**Deprecated**. Please use `sessionReplayEnabled` to enable or disable session replay for mobile apps."
          }
        },
        "required" : [ "apdexSettings", "beaconEndpointType", "costControlUserSessionPercentage", "name" ]
      },
      "MobilePlatformComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "ANDROID", "IOS", "LINUX", "MAC_OS", "OTHER", "TVOS", "WINDOWS" ]
            }
          }
        } ],
        "description" : "Comparison for `MOBILE_PLATFORM` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "MobileSessionUserActionProperty" : {
        "type" : "object",
        "description" : "Configuration of the mobile session or user action property.",
        "properties" : {
          "aggregation" : {
            "type" : "string",
            "description" : "The aggregation type of the property. \n\n  It defines how multiple values of the property are aggregated.",
            "enum" : [ "AVERAGE", "FIRST", "LAST", "MAX", "MIN", "SUM" ]
          },
          "cleanupRule" : {
            "type" : "string",
            "description" : "The cleanup rule of the property. \n\nDefines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the property."
          },
          "key" : {
            "type" : "string",
            "description" : "The unique key of the mobile session or user action property."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the reported value. \n\nOnly applicable when the **origin** is set to `API`."
          },
          "origin" : {
            "type" : "string",
            "description" : "The origin of the property",
            "enum" : [ "API", "SERVER_SIDE_REQUEST_ATTRIBUTE" ]
          },
          "serverSideRequestAttribute" : {
            "type" : "string",
            "description" : "The ID of the request attribute. \n\nOnly applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`."
          },
          "storeAsSessionProperty" : {
            "type" : "boolean",
            "description" : "If `true`, the property is stored as a session property"
          },
          "storeAsUserActionProperty" : {
            "type" : "boolean",
            "description" : "If `true`, the property is stored as a user action property"
          },
          "type" : {
            "type" : "string",
            "description" : "The data type of the property.",
            "enum" : [ "DOUBLE", "LONG", "STRING" ]
          }
        },
        "required" : [ "key", "origin", "type" ]
      },
      "MobileSessionUserActionPropertyList" : {
        "type" : "object",
        "description" : "Contains lists of short representations of mobile session properties and mobile user action properties.",
        "properties" : {
          "sessionProperties" : {
            "type" : "array",
            "description" : "A list of short representations of mobile session properties.",
            "items" : {
              "$ref" : "#/components/schemas/MobileSessionUserActionPropertyShort"
            }
          },
          "userActionProperties" : {
            "type" : "array",
            "description" : "A list of short representations of mobile user action properties.",
            "items" : {
              "$ref" : "#/components/schemas/MobileSessionUserActionPropertyShort"
            }
          }
        }
      },
      "MobileSessionUserActionPropertyShort" : {
        "type" : "object",
        "description" : "A short representation of mobile session or user action property.",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the session or user action property."
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the session or user action property."
          }
        },
        "required" : [ "key" ]
      },
      "MobileSessionUserActionPropertyUpd" : {
        "type" : "object",
        "description" : "An update of a mobile session or user action property.",
        "properties" : {
          "aggregation" : {
            "type" : "string",
            "description" : "The aggregation type of the property. \n\n  It defines how multiple values of the property are aggregated.",
            "enum" : [ "AVERAGE", "FIRST", "LAST", "MAX", "MIN", "SUM" ]
          },
          "cleanupRule" : {
            "type" : "string",
            "description" : "The cleanup rule of the property. \n\nDefines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the property."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the reported value. \n\nOnly applicable when the **origin** is set to `API`."
          },
          "origin" : {
            "type" : "string",
            "description" : "The origin of the property",
            "enum" : [ "API", "SERVER_SIDE_REQUEST_ATTRIBUTE" ]
          },
          "serverSideRequestAttribute" : {
            "type" : "string",
            "description" : "The ID of the request attribute. \n\nOnly applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`."
          },
          "storeAsSessionProperty" : {
            "type" : "boolean",
            "description" : "If `true`, the property is stored as a session property"
          },
          "storeAsUserActionProperty" : {
            "type" : "boolean",
            "description" : "If `true`, the property is stored as a user action property"
          },
          "type" : {
            "type" : "string",
            "description" : "The data type of the property.",
            "enum" : [ "DOUBLE", "LONG", "STRING" ]
          }
        },
        "required" : [ "origin", "type" ]
      },
      "MonitoredEntityFilter" : {
        "type" : "object",
        "description" : "A matching rule for Dynatrace entities.",
        "properties" : {
          "mzId" : {
            "type" : "string",
            "description" : "The ID of a management zone to which the matched entities must belong."
          },
          "tagCombination" : {
            "type" : "string",
            "description" : "The logic that applies when several tags are specified: AND/OR. \n\nIf not set, the OR logic is used.",
            "enum" : [ "AND", "OR" ]
          },
          "tags" : {
            "type" : "array",
            "description" : "The tag you want to use for matching. \n\nYou can use custom tags from the UI, AWS tags, Cloud Foundry tags, OpenShift/Kubernetes, and tags based on environment variables.",
            "items" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the Dynatrace entities (for example, hosts or services) you want to pick up by matching.",
            "enum" : [ "APM_SECURITY_GATEWAY", "APPLICATION", "APPLICATION_METHOD", "APPLICATION_METHOD_GROUP", "APPMON_SERVER", "APPMON_SYSTEM_PROFILE", "AUTO_SCALING_GROUP", "AUXILIARY_SYNTHETIC_TEST", "AWS_APPLICATION_LOAD_BALANCER", "AWS_AVAILABILITY_ZONE", "AWS_CREDENTIALS", "AWS_LAMBDA_FUNCTION", "AWS_NETWORK_LOAD_BALANCER", "AZURE_API_MANAGEMENT_SERVICE", "AZURE_APPLICATION_GATEWAY", "AZURE_APP_SERVICE_PLAN", "AZURE_COSMOS_DB", "AZURE_CREDENTIALS", "AZURE_EVENT_HUB", "AZURE_EVENT_HUB_NAMESPACE", "AZURE_FUNCTION_APP", "AZURE_IOT_HUB", "AZURE_LOAD_BALANCER", "AZURE_MGMT_GROUP", "AZURE_REDIS_CACHE", "AZURE_REGION", "AZURE_SERVICE_BUS_NAMESPACE", "AZURE_SERVICE_BUS_QUEUE", "AZURE_SERVICE_BUS_TOPIC", "AZURE_SQL_DATABASE", "AZURE_SQL_ELASTIC_POOL", "AZURE_SQL_SERVER", "AZURE_STORAGE_ACCOUNT", "AZURE_SUBSCRIPTION", "AZURE_TENANT", "AZURE_VM", "AZURE_VM_SCALE_SET", "AZURE_WEB_APP", "BROWSER", "CF_APPLICATION", "CF_FOUNDATION", "CINDER_VOLUME", "CLOUD_APPLICATION", "CLOUD_APPLICATION_INSTANCE", "CLOUD_APPLICATION_NAMESPACE", "CLOUD_NETWORK_INGRESS", "CLOUD_NETWORK_POLICY", "CONTAINER_GROUP", "CONTAINER_GROUP_INSTANCE", "CUSTOM_APPLICATION", "CUSTOM_DEVICE", "CUSTOM_DEVICE_GROUP", "DCRUM_APPLICATION", "DCRUM_SERVICE", "DCRUM_SERVICE_INSTANCE", "DEVICE_APPLICATION_METHOD", "DEVICE_APPLICATION_METHOD_GROUP", "DISK", "DOCKER_CONTAINER_GROUP", "DOCKER_CONTAINER_GROUP_INSTANCE", "DYNAMO_DB_TABLE", "EBS_VOLUME", "EC2_INSTANCE", "ELASTIC_LOAD_BALANCER", "ENVIRONMENT", "EXTERNAL_SYNTHETIC_TEST_STEP", "GCP_ZONE", "GEOLOCATION", "GEOLOC_SITE", "GOOGLE_COMPUTE_ENGINE", "HOST", "HOST_GROUP", "HTTP_CHECK", "HTTP_CHECK_STEP", "HYPERVISOR", "HYPERVISOR_CLUSTER", "HYPERVISOR_DISK", "KUBERNETES_CLUSTER", "KUBERNETES_NODE", "KUBERNETES_SERVICE", "MOBILE_APPLICATION", "MULTIPROTOCOL_MONITOR", "NETWORK_INTERFACE", "NEUTRON_SUBNET", "OPENSTACK_PROJECT", "OPENSTACK_REGION", "OPENSTACK_VM", "OS", "PROCESS_GROUP", "PROCESS_GROUP_INSTANCE", "QUEUE", "QUEUE_INSTANCE", "RELATIONAL_DATABASE_SERVICE", "S3BUCKET", "SERVICE", "SERVICE_INSTANCE", "SERVICE_METHOD", "SERVICE_METHOD_GROUP", "SWIFT_CONTAINER", "SYNTHETIC_LOCATION", "SYNTHETIC_TEST", "SYNTHETIC_TEST_STEP", "VCENTER", "VIRTUALMACHINE", "VMWARE_DATACENTER" ]
          }
        },
        "required" : [ "tags" ]
      },
      "MonitoringConfig" : {
        "type" : "object",
        "description" : "Monitoring configuration of OneAgent.",
        "properties" : {
          "autoInjectionEnabled" : {
            "type" : "boolean",
            "description" : "Code modules will be injected automatically into monitored applications if this setting is enabled. This setting won't apply if auto-injection is disabled via oneagentctl (see https://dt-url.net/oneagentctl)."
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the host where OneAgent is deployed.",
            "example" : "HOST-0123456789ABCDE",
            "readOnly" : true
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "monitoringEnabled" : {
            "type" : "boolean",
            "description" : "The monitoring is enabled (`true`) or disabled (`false`).",
            "example" : true
          },
          "monitoringMode" : {
            "type" : "string",
            "description" : "The monitoring mode for the host: full stack or infrastructure only.",
            "enum" : [ "CLOUD_INFRASTRUCTURE", "DISCOVERY", "FULL_STACK" ],
            "example" : "FULL_STACK"
          }
        },
        "required" : [ "monitoringEnabled", "monitoringMode" ]
      },
      "MonitoringSettings" : {
        "type" : "object",
        "description" : "Real user monitoring settings.",
        "properties" : {
          "addCrossOriginAnonymousAttribute" : {
            "type" : "boolean",
            "description" : "Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings."
          },
          "advancedJavaScriptTagSettings" : {
            "$ref" : "#/components/schemas/AdvancedJavaScriptTagSettings"
          },
          "angularPackageName" : {
            "type" : "string",
            "description" : "The name of the angular package."
          },
          "browserRestrictionSettings" : {
            "$ref" : "#/components/schemas/WebApplicationConfigBrowserRestrictionSettings"
          },
          "cacheControlHeaderOptimizations" : {
            "type" : "boolean",
            "description" : "Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled."
          },
          "contentCapture" : {
            "$ref" : "#/components/schemas/ContentCapture"
          },
          "cookiePlacementDomain" : {
            "type" : "string",
            "description" : "Domain for cookie placement.",
            "maxLength" : 150,
            "minLength" : 0
          },
          "correlationHeaderInclusionRegex" : {
            "type" : "string",
            "description" : "To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (x-dtc) to each such request to the respective endpoints in AWS.\n\nImportant: These endpoints must accept the x-dtc header, or the requests will fail.\n"
          },
          "customConfigurationProperties" : {
            "type" : "string",
            "description" : "Additional JavaScript tag properties that are specific to your application. To do this, type key=value pairs separated using a (|) symbol.",
            "maxLength" : 1000,
            "minLength" : 0
          },
          "excludeXhrRegex" : {
            "type" : "string",
            "description" : "You can exclude some actions from becoming XHR actions.\n\nPut a regular expression, matching all the required URLs, here.\n\nIf noting specified the feature is disabled."
          },
          "fetchRequests" : {
            "type" : "boolean",
            "description" : "`fetch()` request capture enabled/disabled."
          },
          "injectionMode" : {
            "type" : "string",
            "description" : "JavaScript injection mode.",
            "enum" : [ "CODE_SNIPPET", "CODE_SNIPPET_ASYNC", "INLINE_CODE", "JAVASCRIPT_TAG" ]
          },
          "instrumentedWebServer" : {
            "type" : "boolean",
            "description" : "Instrumented web or app server."
          },
          "ipAddressRestrictionSettings" : {
            "$ref" : "#/components/schemas/WebApplicationConfigIpAddressRestrictionSettings"
          },
          "javaScriptFrameworkSupport" : {
            "$ref" : "#/components/schemas/JavaScriptFrameworkSupport"
          },
          "javaScriptInjectionRules" : {
            "type" : "array",
            "description" : "Java script injection rules.",
            "items" : {
              "$ref" : "#/components/schemas/JavaScriptInjectionRules"
            }
          },
          "libraryFileLocation" : {
            "type" : "string",
            "description" : "The location of your application’s custom JavaScript library file. \n\n If nothing specified the root directory of your web server is used. \n\n **Required** for auto-injected applications, not supported by agentless applications.",
            "maxLength" : 512,
            "minLength" : 0
          },
          "monitoringDataPath" : {
            "type" : "string",
            "description" : "The location to send monitoring data from the JavaScript tag.\n\n Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS. \n\n **Required** for auto-injected applications, optional for agentless applications.",
            "maxLength" : 512,
            "minLength" : 0
          },
          "sameSiteCookieAttribute" : {
            "type" : "string",
            "description" : "Same site cookie attribute",
            "enum" : [ "LAX", "NONE", "STRICT" ]
          },
          "scriptTagCacheDurationInHours" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Time duration for the cache settings."
          },
          "secureCookieAttribute" : {
            "type" : "boolean",
            "description" : "Secure attribute usage for Dynatrace cookies enabled/disabled."
          },
          "serverRequestPathId" : {
            "type" : "string",
            "description" : "Path to identify the server’s request ID.",
            "maxLength" : 150,
            "minLength" : 0,
            "pattern" : "[a-zA-Z-~\\\\.]*"
          },
          "useCors" : {
            "type" : "boolean",
            "description" : "Send beacon data via CORS."
          },
          "xmlHttpRequest" : {
            "type" : "boolean",
            "description" : "`XmlHttpRequest` support enabled/disabled."
          }
        },
        "required" : [ "advancedJavaScriptTagSettings", "cacheControlHeaderOptimizations", "contentCapture", "customConfigurationProperties", "excludeXhrRegex", "fetchRequests", "injectionMode", "javaScriptFrameworkSupport", "secureCookieAttribute", "serverRequestPathId", "xmlHttpRequest" ]
      },
      "MzDimensionalRule" : {
        "type" : "object",
        "description" : "The dimensional rule of the management zone usage. It defines how the management zone applies. \n\n Each rule is evaluated independently of all other rules.",
        "properties" : {
          "appliesTo" : {
            "type" : "string",
            "description" : "The target of the rule.",
            "enum" : [ "ANY", "LOG", "METRIC" ]
          },
          "conditions" : {
            "type" : "array",
            "description" : "A list of conditions for the management zone. \n\n The management zone applies only if **all** conditions are fulfilled.",
            "items" : {
              "$ref" : "#/components/schemas/MzDimensionalRuleCondition"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "appliesTo", "conditions", "enabled" ]
      },
      "MzDimensionalRuleCondition" : {
        "type" : "object",
        "description" : "A condition of the management zone dimensional rule.",
        "properties" : {
          "conditionType" : {
            "type" : "string",
            "description" : "The type of the condition.",
            "enum" : [ "DIMENSION", "LOG_FILE_NAME", "METRIC_KEY" ]
          },
          "key" : {
            "type" : "string",
            "description" : "The reference value for comparison. \n\nFor conditions of the `DIMENSION` type, specify the key here."
          },
          "ruleMatcher" : {
            "type" : "string",
            "description" : "How we compare the values.",
            "enum" : [ "BEGINS_WITH", "EQUALS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the dimension. \n\nOnly applicable when the **conditionType** is set to `DIMENSION`."
          }
        },
        "required" : [ "conditionType", "key", "ruleMatcher" ]
      },
      "MzRule" : {
        "type" : "object",
        "description" : "The rule of the management zone usage. It defines how the management zone applies. \n\nEach rule is evaluated independently of all other rules.",
        "properties" : {
          "conditions" : {
            "type" : "array",
            "description" : "A list of matching rules for the management zone. \n\nThe management zone applies only if **all** conditions are fulfilled.",
            "items" : {
              "$ref" : "#/components/schemas/EntityRuleEngineCondition"
            },
            "maxItems" : 30,
            "minItems" : 1
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          },
          "propagationTypes" : {
            "type" : "array",
            "description" : "How to apply the management zone to underlying entities: \n\n* `SERVICE_TO_HOST_LIKE`: Apply to underlying hosts of matching services. \n* `SERVICE_TO_PROCESS_GROUP_LIKE`: Apply to underlying process groups of matching services. \n* `PROCESS_GROUP_TO_HOST`: Apply to underlying hosts of matching process groups. \n* `PROCESS_GROUP_TO_SERVICE`: Apply to all services provided by matching process groups. \n* `HOST_TO_PROCESS_GROUP_INSTANCE`: Apply to processes running on matching hosts. \n* `CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE`: Apply to custom devices in matching custom device groups. \n* `AZURE_TO_PG`: Apply to process groups connected to matching Azure entities. \n* `AZURE_TO_SERVICE`: Apply to services provided by matching Azure entities.",
            "items" : {
              "type" : "string",
              "enum" : [ "AZURE_TO_PG", "AZURE_TO_SERVICE", "CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE", "HOST_TO_PROCESS_GROUP_INSTANCE", "PROCESS_GROUP_TO_HOST", "PROCESS_GROUP_TO_SERVICE", "SERVICE_TO_HOST_LIKE", "SERVICE_TO_PROCESS_GROUP_LIKE" ]
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The type of Dynatrace entities the management zone can be applied to.",
            "enum" : [ "APPMON_SERVER", "APPMON_SYSTEM_PROFILE", "AWS_ACCOUNT", "AWS_APPLICATION_LOAD_BALANCER", "AWS_AUTO_SCALING_GROUP", "AWS_CLASSIC_LOAD_BALANCER", "AWS_NETWORK_LOAD_BALANCER", "AWS_RELATIONAL_DATABASE_SERVICE", "AZURE", "BROWSER_MONITOR", "CLOUD_APPLICATION", "CLOUD_APPLICATION_NAMESPACE", "CLOUD_FOUNDRY_FOUNDATION", "CUSTOM_APPLICATION", "CUSTOM_DEVICE", "CUSTOM_DEVICE_GROUP", "DATA_CENTER_SERVICE", "ENTERPRISE_APPLICATION", "ESXI_HOST", "EXTERNAL_MONITOR", "HOST", "HOST_GROUP", "HTTP_MONITOR", "KUBERNETES_CLUSTER", "KUBERNETES_SERVICE", "MOBILE_APPLICATION", "MULTIPROTOCOL_MONITOR", "OPENSTACK_ACCOUNT", "PROCESS_GROUP", "QUEUE", "SERVICE", "WEB_APPLICATION" ]
          }
        },
        "required" : [ "conditions", "enabled", "type" ]
      },
      "NameAlertingScope" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "nameFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventTextFilterOperatorDto"
            }
          }
        } ],
        "description" : "A scope filter for a monitored entity name.",
        "required" : [ "filterType", "nameFilter" ]
      },
      "NetworkDroppedPacketsDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of high number of dropped packets detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/NetworkDroppedPacketsThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "NetworkDroppedPacketsThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for dropped packets. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert.",
        "properties" : {
          "droppedPacketsPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Receive/transmit dropped packet percentage is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          },
          "totalPacketsRate" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total receive/transmit packets rate is higher than *X* packets per second in 3 out of 5 samples.",
            "maximum" : 10000,
            "minimum" : 1
          }
        },
        "required" : [ "droppedPacketsPercentage", "totalPacketsRate" ]
      },
      "NetworkErrorsDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of high number of network errors detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/NetworkErrorsThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "NetworkErrorsThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for network errors. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert.",
        "properties" : {
          "errorsPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Receive/transmit error packet percentage is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          },
          "totalPacketsRate" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total receive/transmit packets rate is higher than *X* packets per second in 3 out of 5 samples.",
            "maximum" : 10000,
            "minimum" : 1
          }
        },
        "required" : [ "errorsPercentage", "totalPacketsRate" ]
      },
      "NetworkHighRetransmissionDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of high retransmission rate detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/NetworkHighRetransmissionThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "NetworkHighRetransmissionThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for high retransmission rate. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert.",
        "properties" : {
          "retransmissionRatePercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Retransmission rate is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          },
          "retransmittedPacketsNumberPerMinute" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of retransmitted packets is higher than *X* packets per minute in 3 out of 5 samples.",
            "maximum" : 10000,
            "minimum" : 1
          }
        },
        "required" : [ "retransmissionRatePercentage", "retransmittedPacketsNumberPerMinute" ]
      },
      "NetworkTcpProblemsDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of TCP connectivity problems detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/NetworkTcpProblemsThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "NetworkTcpProblemsThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for TCP connection problems. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert.",
        "properties" : {
          "failedConnectionsNumberPerMinute" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of failed connections is higher than *X* connections per minute in 3 out of 5 samples.",
            "maximum" : 10000,
            "minimum" : 1
          },
          "newConnectionFailuresPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Percentage of new connection failures is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "failedConnectionsNumberPerMinute", "newConnectionFailuresPercentage" ]
      },
      "NewMobileCustomAppConfig" : {
        "type" : "object",
        "description" : "Configuration of a mobile or custom application to be created.",
        "properties" : {
          "apdexSettings" : {
            "$ref" : "#/components/schemas/MobileCustomApdex"
          },
          "applicationId" : {
            "type" : "string",
            "description" : "The UUID of the application.\n\nIt is used only by OneAgent to send data to Dynatrace."
          },
          "applicationType" : {
            "type" : "string",
            "description" : "The type of the application.",
            "enum" : [ "CUSTOM_APPLICATION", "MOBILE_APPLICATION" ]
          },
          "beaconEndpointType" : {
            "type" : "string",
            "description" : "The type of the beacon endpoint.",
            "enum" : [ "CLUSTER_ACTIVE_GATE", "ENVIRONMENT_ACTIVE_GATE", "INSTRUMENTED_WEB_SERVER" ]
          },
          "beaconEndpointUrl" : {
            "type" : "string",
            "description" : "The URL of the beacon endpoint.\n\nOnly applicable when the **beaconEndpointType** is set to `ENVIRONMENT_ACTIVE_GATE` or `INSTRUMENTED_WEB_SERVER`."
          },
          "costControlUserSessionPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The percentage of user sessions to be analyzed.",
            "maximum" : 100,
            "minimum" : 1
          },
          "iconType" : {
            "type" : "string",
            "description" : "Custom application icon.\n\nMobile apps always use the mobile device icon, so this icon can only be set for custom apps.",
            "enum" : [ "AMAZON_ECHO", "DESKTOP", "EMBEDDED", "IOT", "MICROSOFT_HOLOLENS", "UFO", "USERS" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the application."
          },
          "optInModeEnabled" : {
            "type" : "boolean",
            "description" : "The opt-in mode is enabled (`true`) or disabled (`false`).\n\nThis value is only applicable to mobile and not to custom apps."
          },
          "sessionReplayEnabled" : {
            "type" : "boolean",
            "description" : "The session replay is enabled (`true`) or disabled (`false`).\nThis value is only applicable to mobile and not to custom apps."
          },
          "sessionReplayOnCrashEnabled" : {
            "type" : "boolean",
            "description" : "**Deprecated**. Please use `sessionReplayEnabled` to enable or disable session replay for mobile apps."
          }
        },
        "required" : [ "applicationType", "name" ]
      },
      "NotificationConfig" : {
        "type" : "object",
        "description" : "Configuration of a notification. The actual set of fields depends on the `type` of the notification.\nSee [Notifications API - JSON models](https://dt-url.net/9qm3k5u) in Dynatrace Documentation for example models of every notification type.",
        "discriminator" : {
          "propertyName" : "type"
        },
        "example" : {
          "active" : true,
          "alertingProfile" : "4f5e00f4-39b3-455a-820b-3514843615f3",
          "description" : "{ProblemDetailsText}",
          "id" : "acbed0c4-4ef1-4303-991f-102510a69322",
          "issueType" : "Task",
          "name" : "REST example",
          "password" : "",
          "projectKey" : "DEV",
          "summary" : "Problem {ProblemID}: {ProblemTitle}",
          "type" : "JIRA",
          "url" : "https://my-jira.atlassian.net/rest/api/2/",
          "username" : "john.smith"
        },
        "properties" : {
          "active" : {
            "type" : "boolean",
            "description" : "The configuration is enabled (`true`) or disabled (`false`)."
          },
          "alertingProfile" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the associated alerting profile."
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the notification configuration."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the notification configuration.",
            "maxLength" : 100,
            "minLength" : 1
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `EMAIL` -> EmailNotificationConfig \n* `PAGER_DUTY` -> PagerDutyNotificationConfig \n* `WEBHOOK` -> WebHookNotificationConfig \n* `SLACK` -> SlackNotificationConfig \n* `VICTOROPS` -> VictorOpsNotificationConfig \n* `SERVICE_NOW` -> ServiceNowNotificationConfig \n* `XMATTERS` -> XMattersNotificationConfig \n* `ANSIBLETOWER` -> AnsibleTowerNotificationConfig \n* `OPS_GENIE` -> OpsGenieNotificationConfig \n* `JIRA` -> JiraNotificationConfig \n* `TRELLO` -> TrelloNotificationConfig \n",
            "enum" : [ "ANSIBLETOWER", "EMAIL", "JIRA", "OPS_GENIE", "PAGER_DUTY", "SERVICE_NOW", "SLACK", "TRELLO", "VICTOROPS", "WEBHOOK", "XMATTERS" ]
          }
        },
        "required" : [ "active", "alertingProfile", "name", "type" ]
      },
      "NotificationConfigStub" : {
        "type" : "object",
        "description" : "The short representation of a notification.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "A short description of the Dynatrace entity.",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the Dynatrace entity."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the notification.",
            "enum" : [ "ANSIBLETOWER", "EMAIL", "HIPCHAT", "JIRA", "OPS_GENIE", "PAGER_DUTY", "SERVICE_NOW", "SLACK", "TRELLO", "VICTOROPS", "WEBHOOK", "XMATTERS" ]
          }
        },
        "required" : [ "id" ]
      },
      "NotificationConfigStubListDto" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationConfigStub"
            }
          }
        }
      },
      "NumberComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "LOWER_THAN", "LOWER_THAN_OR_EQUAL" ]
            },
            "value" : {
              "type" : "number",
              "description" : "The value to compare to."
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "number",
                "description" : "The values to compare to."
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `NUMBER` attributes.",
        "required" : [ "comparison", "negate" ]
      },
      "NumberRequestAttributeComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "LOWER_THAN", "LOWER_THAN_OR_EQUAL" ]
            },
            "matchOnChildCalls" : {
              "type" : "boolean",
              "description" : "If `true`, the request attribute is matched on child service calls. \n\n  Default is `false`."
            },
            "requestAttribute" : {
              "type" : "string"
            },
            "source" : {
              "$ref" : "#/components/schemas/PropagationSource"
            },
            "value" : {
              "type" : "number",
              "description" : "The value to compare to."
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "number",
                "description" : "The values to compare to."
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `NUMBER_REQUEST_ATTRIBUTE` attributes, specifically of the generic **Number** type.",
        "required" : [ "comparison", "negate", "requestAttribute" ]
      },
      "OneAgentHostGroupConfig" : {
        "type" : "object",
        "description" : "Configuration of OneAgent in a host group.",
        "properties" : {
          "autoUpdateConfig" : {
            "$ref" : "#/components/schemas/HostGroupAutoUpdateConfig"
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the host group.",
            "example" : "HOST_GROUP-0123456789ABCDE",
            "readOnly" : true
          }
        }
      },
      "OpaqueAndExternalWebRequestRule" : {
        "type" : "object",
        "description" : "The service detection rule of the `OPAQUE_AND_EXTERNAL_WEB_REQUEST` type.",
        "example" : {
          "applicationId" : {
            "valueOverride" : "abc"
          },
          "conditions" : [ {
            "attributeType" : "URL_HOST_NAME",
            "compareOperations" : [ {
              "ignoreCase" : "false",
              "type" : "STRING_CONTAINS",
              "values" : [ "value1", "value2" ]
            } ]
          } ],
          "contextRoot" : {
            "segmentsToCopyFromUrlPath" : 2,
            "transformations" : [ {
              "delimiter" : "/",
              "type" : "BEFORE"
            } ]
          },
          "description" : "REST API example",
          "enabled" : true,
          "managementZones" : [ "zone1" ],
          "name" : "My sample rule",
          "port" : {
            "doNotUseForServiceId" : "true"
          },
          "publicDomainName" : {
            "copyFromHostName" : "true",
            "transformations" : [ {
              "delimiter" : "/",
              "type" : "BEFORE"
            } ]
          },
          "type" : "OPAQUE_AND_EXTERNAL_WEB_REQUEST"
        },
        "properties" : {
          "applicationId" : {
            "$ref" : "#/components/schemas/ApplicationId"
          },
          "conditions" : {
            "type" : "array",
            "description" : "A list of conditions of the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/ConditionsOpaqueAndExternalWebRequestAttributeTypeDto"
            },
            "maxItems" : 10,
            "minItems" : 0
          },
          "contextRoot" : {
            "$ref" : "#/components/schemas/ContextRoot"
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the rule."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled(`true`) or disabled (`false`)."
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the service detection rule."
          },
          "managementZones" : {
            "type" : "array",
            "description" : "The management zone (specified by the ID) of the process group for which this service detection rule should be created. \n\n You can specify only 1 management zone here.",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 1,
            "minItems" : 0
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the rule.",
            "minLength" : 1
          },
          "order" : {
            "type" : "string",
            "description" : "The order of the rule in the rules list. \n\n The rules are evaluated from top to bottom. The first matching rule applies.",
            "maxLength" : 2147483647,
            "minLength" : 1
          },
          "port" : {
            "$ref" : "#/components/schemas/Port"
          },
          "publicDomainName" : {
            "$ref" : "#/components/schemas/PublicDomainName"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the service detection rule."
          }
        },
        "required" : [ "enabled", "name", "type" ]
      },
      "OpaqueAndExternalWebServiceRule" : {
        "type" : "object",
        "description" : "The service detection rule of the `OPAQUE_AND_EXTERNAL_WEB_SERVICE` type",
        "example" : {
          "conditions" : [ {
            "attributeType" : "URL_PATH",
            "compareOperations" : [ {
              "ignoreCase" : "false",
              "invert" : "false",
              "type" : "STRING_CONTAINS",
              "values" : [ "value1", "value2" ]
            } ]
          } ],
          "description" : "REST API example",
          "detectAsWebRequestService" : false,
          "enabled" : true,
          "managementZones" : [ "zone 1" ],
          "name" : "My sample rule",
          "port" : {
            "doNotUseForServiceId" : "true"
          },
          "type" : "OPAQUE_AND_EXTERNAL_WEB_SERVICE",
          "urlPath" : {
            "valueOverride" : "abc"
          }
        },
        "properties" : {
          "conditions" : {
            "type" : "array",
            "description" : "A list of conditions of the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/ConditionsOpaqueAndExternalWebServiceAttributeTypeDto"
            },
            "maxItems" : 10,
            "minItems" : 0
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the rule."
          },
          "detectAsWebRequestService" : {
            "type" : "boolean",
            "description" : "Detect the matching requests as web services (`false`) or web request services (`true`). \n\nSetting this field to `true` prevents detecting of matching requests as opaque web services. An opaque web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate rule of the `OPAQUE_AND_EXTERNAL_WEB_REQUEST` type. \n\nDefault is `false`, detecting matching requests as opaque web services."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled(`true`) or disabled (`false`)."
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the service detection rule."
          },
          "managementZones" : {
            "type" : "array",
            "description" : "The management zone (specified by the ID) of the process group for which this service detection rule should be created. \n\n You can specify only 1 management zone here.",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 1,
            "minItems" : 0
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the rule.",
            "minLength" : 1
          },
          "order" : {
            "type" : "string",
            "description" : "The order of the rule in the rules list. \n\n The rules are evaluated from top to bottom. The first matching rule applies.",
            "maxLength" : 2147483647,
            "minLength" : 1
          },
          "port" : {
            "$ref" : "#/components/schemas/Port"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the service detection rule."
          },
          "urlPath" : {
            "$ref" : "#/components/schemas/UrlPath"
          }
        },
        "required" : [ "enabled", "name", "type" ]
      },
      "OpsGenieNotificationConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "apiKey" : {
              "type" : "string",
              "description" : "The API key to access OpsGenie.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "domain" : {
              "type" : "string",
              "description" : "The region domain of the OpsGenie.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "message" : {
              "type" : "string",
              "description" : "The content of the message.\n\n You can use the following placeholders: \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n",
              "maxLength" : 80,
              "minLength" : 1
            }
          }
        } ],
        "description" : "Configuration of the OpsGenie notification.",
        "required" : [ "active", "alertingProfile", "domain", "message", "name" ]
      },
      "OsArchitectureComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "ARM", "IA64", "PARISC", "PPC", "PPCLE", "S390", "SPARC", "X86", "ZOS" ]
            }
          }
        } ],
        "description" : "Comparison for `OS_ARCHITECTURE` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "OsTypeComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "AIX", "DARWIN", "HPUX", "LINUX", "SOLARIS", "WINDOWS", "ZOS" ]
            }
          }
        } ],
        "description" : "Comparison for `OS_TYPE` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "OutOfMemoryDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of Java out of memory problems detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/OutOfMemoryThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "OutOfMemoryThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for Java out of memory. If not set, automatic mode is used.",
        "properties" : {
          "outOfMemoryExceptionsNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if the number of Java out of memory exceptions is *X* per minute or higher.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "outOfMemoryExceptionsNumber" ]
      },
      "OutOfThreadsDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of Java out of threads problems detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/OutOfThreadsThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "OutOfThreadsThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for Java out of threads detection. If not set, automatic mode is used.",
        "properties" : {
          "outOfThreadsExceptionsNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if the number of Java out of threads exceptions is *X* per minute or higher.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "outOfThreadsExceptionsNumber" ]
      },
      "OverloadedStorageDetectionConfig" : {
        "type" : "object",
        "description" : "The cofiguration of the overloaded storage on physical storage device detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/OverloadedStorageThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "OverloadedStorageThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for overloaded storage on physical storage device. If not set then the automatic mode is used.",
        "properties" : {
          "commandAbortsNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if number of command aborts is higher than *X* in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 0
          }
        },
        "required" : [ "commandAbortsNumber" ]
      },
      "PaasTypeComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "AWS_ECS_EC2", "AWS_ECS_FARGATE", "AWS_LAMBDA", "AZURE_FUNCTIONS", "AZURE_WEBSITES", "CLOUD_FOUNDRY", "GOOGLE_APP_ENGINE", "GOOGLE_CLOUD_RUN", "HEROKU", "KUBERNETES", "OPENSHIFT" ]
            }
          }
        } ],
        "description" : "Comparison for `PAAS_TYPE` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "PagerDutyNotificationConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "account" : {
              "type" : "string",
              "description" : "The name of the PagerDuty account.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "serviceApiKey" : {
              "type" : "string",
              "description" : "The API key to access PagerDuty.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "serviceName" : {
              "type" : "string",
              "description" : "The name of the service.",
              "maxLength" : 1000,
              "minLength" : 1
            }
          }
        } ],
        "description" : "Configuration of the PagerDuty notification.",
        "required" : [ "account", "active", "alertingProfile", "name", "serviceName" ]
      },
      "PathDefinition" : {
        "type" : "object",
        "description" : "A filtering criterion for log path.",
        "properties" : {
          "definition" : {
            "type" : "string",
            "description" : "The path to the required log path. \n\n If the **type** is set to `WILDCARD`, it may contain wildcard characters (`*`).",
            "example" : "/var/log/sample.log",
            "minLength" : 1
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the log path **definition**: fixed or an expression with wildcards.",
            "enum" : [ "FIXED", "WILDCARD" ],
            "example" : "FIXED"
          }
        },
        "required" : [ "definition", "type" ]
      },
      "Placeholder" : {
        "type" : "object",
        "description" : "The custom placeholder to be used as a naming value pattern. \n\n It enables you to extract a request attribute value or other request attribute and use it in the naming pattern.",
        "properties" : {
          "aggregation" : {
            "type" : "string",
            "description" : "Which value of the request attribute must be used when it occurs across multiple child requests. \n\nOnly applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute, when **useFromChildCalls** is `true`. \n\nFor the `COUNT` aggregation, the **kind** field is not applicable.",
            "enum" : [ "COUNT", "FIRST", "LAST" ]
          },
          "attribute" : {
            "type" : "string",
            "description" : "The attribute to extract from. You can only use attributes of the **string** type.",
            "enum" : [ "ACTOR_SYSTEM", "AKKA_ACTOR_CLASS_NAME", "AKKA_ACTOR_MESSAGE_TYPE", "AKKA_ACTOR_PATH", "APPLICATION_BUILD_VERSION", "APPLICATION_ENVIRONMENT", "APPLICATION_NAME", "APPLICATION_RELEASE_VERSION", "AZURE_FUNCTIONS_FUNCTION_NAME", "AZURE_FUNCTIONS_SITE_NAME", "CICS_PROGRAM_NAME", "CICS_SYSTEM_ID", "CICS_TASK_ID", "CICS_TRANSACTION_ID", "CICS_USER_ID", "CPU_TIME", "CTG_GATEWAY_URL", "CTG_PROGRAM", "CTG_SERVER_NAME", "CTG_TRANSACTION_ID", "CUSTOMSERVICE_CLASS", "CUSTOMSERVICE_METHOD", "DATABASE_CHILD_CALL_COUNT", "DATABASE_CHILD_CALL_TIME", "DATABASE_HOST", "DATABASE_NAME", "DATABASE_STATEMENT", "DATABASE_TYPE", "DATABASE_URL", "DISK_IO_TIME", "ERROR_COUNT", "ESB_APPLICATION_NAME", "ESB_INPUT_TYPE", "ESB_LIBRARY_NAME", "ESB_MESSAGE_FLOW_NAME", "EXCEPTION_CLASS", "EXCEPTION_MESSAGE", "FAILED_STATE", "FAILURE_REASON", "FLAW_STATE", "HTTP_REQUEST_METHOD", "HTTP_STATUS", "HTTP_STATUS_CLASS", "IMS_PROGRAM_NAME", "IMS_TRANSACTION_ID", "IMS_USER_ID", "IO_TIME", "IS_KEY_REQUEST", "LAMBDA_COLDSTART", "LOCK_TIME", "MESSAGING_DESTINATION_TYPE", "MESSAGING_IS_TEMPORARY_QUEUE", "MESSAGING_QUEUE_NAME", "MESSAGING_QUEUE_VENDOR", "NETWORK_IO_TIME", "NON_DATABASE_CHILD_CALL_COUNT", "NON_DATABASE_CHILD_CALL_TIME", "PROCESS_GROUP_NAME", "PROCESS_GROUP_TAG", "REMOTE_ENDPOINT", "REMOTE_METHOD", "REMOTE_SERVICE_NAME", "REQUEST_NAME", "REQUEST_TYPE", "RESPONSE_TIME", "RESPONSE_TIME_CLIENT", "RMI_CLASS", "RMI_METHOD", "SERVICE_DISPLAY_NAME", "SERVICE_NAME", "SERVICE_PORT", "SERVICE_PUBLIC_DOMAIN_NAME", "SERVICE_REQUEST_ATTRIBUTE", "SERVICE_TAG", "SERVICE_TYPE", "SERVICE_WEB_APPLICATION_ID", "SERVICE_WEB_CONTEXT_ROOT", "SERVICE_WEB_SERVER_NAME", "SERVICE_WEB_SERVICE_NAME", "SERVICE_WEB_SERVICE_NAMESPACE", "SUSPENSION_TIME", "TOTAL_PROCESSING_TIME", "WAIT_TIME", "WEBREQUEST_QUERY", "WEBREQUEST_RELATIVE_URL", "WEBREQUEST_URL", "WEBREQUEST_URL_HOST", "WEBREQUEST_URL_PATH", "WEBREQUEST_URL_PORT", "WEBSERVICE_ENDPOINT", "WEBSERVICE_METHOD", "ZOS_CALL_TYPE" ]
          },
          "delimiterOrRegex" : {
            "type" : "string",
            "description" : "Depending on the **type** value: \n\n * `REGEX_EXTRACTION`: The regular expression. \n * `BETWEEN_DELIMITER`: The opening delimiter string to look for. \n * All other values: The delimiter string to look for."
          },
          "endDelimiter" : {
            "type" : "string",
            "description" : "The closing delimiter string to look for. \n\n Required if the **kind** value is `BETWEEN_DELIMITER`. Not applicable otherwise."
          },
          "kind" : {
            "type" : "string",
            "description" : "The type of extraction. \n\n Defines either usage of regular expression (`regex`) or the position of request attribute value to be extracted. \n\nWhen the **attribute** is `SERVICE_REQUEST_ATTRIBUTE` attribute and **aggregation** is `COUNT`, needs to be set to `ORIGINAL_TEXT`",
            "enum" : [ "AFTER_DELIMITER", "BEFORE_DELIMITER", "BETWEEN_DELIMITER", "ORIGINAL_TEXT", "REGEX_EXTRACTION" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the placeholder. Use it in the naming pattern as `{name}`."
          },
          "normalization" : {
            "type" : "string",
            "description" : "The format of the extracted string.",
            "enum" : [ "ORIGINAL", "TO_LOWER_CASE", "TO_UPPER_CASE" ]
          },
          "requestAttribute" : {
            "type" : "string",
            "description" : "The request attribute to extract from. \n\n Required if the **kind** value is `SERVICE_REQUEST_ATTRIBUTE`. Not applicable otherwise."
          },
          "source" : {
            "$ref" : "#/components/schemas/PropagationSource"
          },
          "useFromChildCalls" : {
            "type" : "boolean",
            "description" : "If `true` request attribute will be taken from a child service call. \n\n Only applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute. Defaults to `false`."
          }
        },
        "required" : [ "attribute", "kind", "name" ]
      },
      "Plugin" : {
        "type" : "object",
        "description" : "General configuration of a plugin.",
        "example" : {
          "id" : "custom.remote.python.demo",
          "metricGroup" : "custom.demo_metrics",
          "name" : "ActiveGate demo plugin",
          "properties" : [ {
            "defaultValue" : "127.0.0.1",
            "key" : "serverIp",
            "type" : "STRING"
          }, {
            "defaultValue" : "",
            "key" : "password",
            "type" : "PASSWORD"
          }, {
            "defaultValue" : "dynatrace",
            "key" : "username",
            "type" : "STRING"
          }, {
            "defaultValue" : "one",
            "dropdownValues" : [ "one", "two", "three" ],
            "key" : "dropdownProperty",
            "type" : "DROPDOWN"
          } ],
          "type" : "ActiveGate",
          "version" : "1.01"
        },
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the plugin, for example `custom.remote.python.demo`."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "metricGroup" : {
            "type" : "string",
            "description" : "The metric group of the plugin. All the metrics, captured by the plugin are children of this group."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the plugin, displayed in Dynatrace."
          },
          "properties" : {
            "type" : "array",
            "description" : "A list of plugin properties.",
            "items" : {
              "$ref" : "#/components/schemas/PluginProperty"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the plugin. It indicates the runtime environment of the plugin (for example, ActiveGate).",
            "enum" : [ "ActiveGate", "JMX", "OneAgent", "PMI" ]
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the plugin, displayed in Dynatrace."
          }
        }
      },
      "PluginProperty" : {
        "type" : "object",
        "description" : "A property of a plugin.",
        "properties" : {
          "defaultValue" : {
            "type" : "string",
            "description" : "The default value of the property."
          },
          "dropdownValues" : {
            "type" : "array",
            "description" : "The list of possible values of the property. \n\n If such a list is defined, only values from this list can be assigned to the property.",
            "items" : {
              "type" : "string"
            }
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the property."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the property."
          }
        }
      },
      "PluginState" : {
        "type" : "object",
        "description" : "The state of the plugin.",
        "properties" : {
          "endpointId" : {
            "type" : "string",
            "description" : "The ID of the endpoint where the state is detected - Active Gate only."
          },
          "hostId" : {
            "type" : "string",
            "description" : "The ID of the host on which the plugin runs."
          },
          "pluginId" : {
            "type" : "string",
            "description" : "The ID of the plugin."
          },
          "processId" : {
            "type" : "string",
            "description" : "The ID of the entity on which the plugin is active."
          },
          "state" : {
            "type" : "string",
            "description" : "The state of the plugin.",
            "enum" : [ "DISABLED", "ERROR_AUTH", "ERROR_COMMUNICATION_FAILURE", "ERROR_CONFIG", "ERROR_TIMEOUT", "ERROR_UNKNOWN", "INCOMPATIBLE", "LIMIT_REACHED", "NOTHING_TO_REPORT", "OK", "STATE_TYPE_UNKNOWN", "UNINITIALIZED", "UNSUPPORTED", "WAITING_FOR_STATE" ]
          },
          "stateDescription" : {
            "type" : "string",
            "description" : "A short description of the state."
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The timestamp when the state was detected, in UTC milliseconds."
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the plugin (for example `1.0.0`)."
          }
        }
      },
      "PluginStateList" : {
        "type" : "object",
        "description" : "A list of plugin states.",
        "example" : {
          "endpointId" : "-8213819843595439277",
          "pluginId" : "custom.remote.python.demo",
          "state" : "ERROR_AUTH",
          "stateDescription" : "Could not authorize",
          "timestamp" : 1556199097994,
          "version" : "1.0.0"
        },
        "properties" : {
          "states" : {
            "type" : "array",
            "description" : "A list of plugin states.",
            "items" : {
              "$ref" : "#/components/schemas/PluginState"
            }
          }
        }
      },
      "Port" : {
        "type" : "object",
        "description" : "The contribution to the service ID calculation from the port, where the web request has been detected.",
        "properties" : {
          "doNotUseForServiceId" : {
            "type" : "boolean",
            "description" : "The port is used (`false`) or isn't used (`true`) in the service ID calculation."
          }
        }
      },
      "ProblemTile" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "entitySelector" : {
              "type" : "string",
              "description" : "The entity scope of the problem tile. For further information please look at the Problems API v2 '/problems' endpoint."
            },
            "problemSelector" : {
              "type" : "string",
              "description" : "Defines the scope of the problem tile. Only problems matching the specified criteria are taken into account.\nFor further information please look at the Problems API v2 '/problems' endpoint."
            },
            "useBackgroundColor" : {
              "type" : "boolean",
              "description" : "Use background color based on problem status: Red if there are open problems, green otherwise."
            }
          }
        } ],
        "description" : "Configuration of a problem tile.",
        "required" : [ "bounds", "name", "tileType" ]
      },
      "ProcessGroupIdAlertingScope" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "processGroupId" : {
              "type" : "string",
              "description" : "The process groups id to match on."
            }
          }
        } ],
        "description" : "A scope filter for a process group identifier.",
        "required" : [ "filterType", "processGroupId" ]
      },
      "ProcessGroupNameAlertingScope" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "nameFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventTextFilterOperatorDto"
            }
          }
        } ],
        "description" : "A scope filter for the related process group name.",
        "required" : [ "filterType", "nameFilter" ]
      },
      "ProcessMetadataConditionKey" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConditionKey"
        }, {
          "type" : "object",
          "properties" : {
            "dynamicKey" : {
              "type" : "string",
              "description" : "The key of the attribute, which need dynamic keys. \n\nNot applicable otherwise, as the attibute itself acts as a key.",
              "enum" : [ "AEM_ENV_TYPE", "AEM_PROGRAM", "AEM_SERVICE", "AEM_TIER", "AMAZON_ECR_IMAGE_ACCOUNT_ID", "AMAZON_ECR_IMAGE_REGION", "AMAZON_LAMBDA_FUNCTION_NAME", "AMAZON_REGION", "APACHE_CONFIG_PATH", "APACHE_SPARK_MASTER_IP_ADDRESS", "ASP_DOT_NET_CORE_APPLICATION_PATH", "AWS_ECS_CLUSTER", "AWS_ECS_CONTAINERNAME", "AWS_ECS_FAMILY", "AWS_ECS_REVISION", "CASSANDRA_CLUSTER_NAME", "CATALINA_BASE", "CATALINA_HOME", "CLOUD_FOUNDRY_APP_ID", "CLOUD_FOUNDRY_APP_NAME", "CLOUD_FOUNDRY_INSTANCE_INDEX", "CLOUD_FOUNDRY_SPACE_ID", "CLOUD_FOUNDRY_SPACE_NAME", "COLDFUSION_JVM_CONFIG_FILE", "COLDFUSION_SERVICE_NAME", "COMMAND_LINE_ARGS", "CONTAINER_ID", "CONTAINER_IMAGE_NAME", "CONTAINER_IMAGE_VERSION", "CONTAINER_NAME", "DATASOURCE_MONITORING_CONFIG_ID", "DECLARATIVE_ID", "DOTNET_COMMAND", "DOTNET_COMMAND_PATH", "DYNATRACE_CLUSTER_ID", "DYNATRACE_NODE_ID", "ELASTICSEARCH_CLUSTER_NAME", "ELASTICSEARCH_NODE_NAME", "EQUINOX_CONFIG_PATH", "EXE_NAME", "EXE_PATH", "GLASS_FISH_DOMAIN_NAME", "GLASS_FISH_INSTANCE_NAME", "GOOGLE_APP_ENGINE_INSTANCE", "GOOGLE_APP_ENGINE_SERVICE", "GOOGLE_CLOUD_INSTANCE_ID", "GOOGLE_CLOUD_INSTANCE_REGION", "GOOGLE_CLOUD_PROJECT", "GOOGLE_CLOUD_RUN_SERVICE", "HYBRIS_BIN_DIRECTORY", "HYBRIS_CONFIG_DIRECTORY", "HYBRIS_DATA_DIRECTORY", "IBM_CICS_IMS_APPLID", "IBM_CICS_IMS_JOBNAME", "IBM_CICS_REGION", "IBM_CTG_NAME", "IBM_IMS_CONNECT_REGION", "IBM_IMS_CONTROL_REGION", "IBM_IMS_MESSAGE_PROCESSING_REGION", "IBM_IMS_SOAP_GW_NAME", "IBM_INTEGRATION_NODE_NAME", "IBM_INTEGRATION_SERVER_NAME", "IIS_APP_POOL", "IIS_ROLE_NAME", "JAVA_JAR_FILE", "JAVA_JAR_PATH", "JAVA_MAIN_CLASS", "JAVA_MAIN_MODULE", "JBOSS_HOME", "JBOSS_MODE", "JBOSS_SERVER_NAME", "KUBERNETES_BASE_POD_NAME", "KUBERNETES_CLUSTER_ID", "KUBERNETES_CONTAINER_NAME", "KUBERNETES_FULL_POD_NAME", "KUBERNETES_NAMESPACE", "KUBERNETES_POD_UID", "KUBERNETES_RULE_RESULT", "MSSQL_INSTANCE_NAME", "NODE_JS_APP_BASE_DIRECTORY", "NODE_JS_APP_NAME", "NODE_JS_SCRIPT_NAME", "ORACLE_SID", "PG_ID_CALC_INPUT_KEY_LINKAGE", "PHP_SCRIPT_PATH", "PHP_WORKING_DIRECTORY", "RKE2_TYPE", "RUBY_APP_ROOT_PATH", "RUBY_SCRIPT_PATH", "RULE_RESULT", "SOFTWAREAG_INSTALL_ROOT", "SOFTWAREAG_PRODUCTPROPNAME", "SPRINGBOOT_APP_NAME", "SPRINGBOOT_PROFILE_NAME", "SPRINGBOOT_STARTUP_CLASS", "TIBCO_BUSINESSWORKS_CE_APP_NAME", "TIBCO_BUSINESSWORKS_CE_VERSION", "TIBCO_BUSINESS_WORKS_APP_NODE_NAME", "TIBCO_BUSINESS_WORKS_APP_SPACE_NAME", "TIBCO_BUSINESS_WORKS_DOMAIN_NAME", "TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE", "TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH", "TIBCO_BUSINESS_WORKS_HOME", "VARNISH_INSTANCE_NAME", "WEBSPHERE_LIBERTY_SERVER_NAME", "WEB_LOGIC_CLUSTER_NAME", "WEB_LOGIC_DOMAIN_NAME", "WEB_LOGIC_HOME", "WEB_LOGIC_NAME", "WEB_SPHERE_CELL_NAME", "WEB_SPHERE_CLUSTER_NAME", "WEB_SPHERE_NODE_NAME", "WEB_SPHERE_SERVER_NAME", "Z_CM_VERSION" ]
            }
          }
        } ],
        "description" : "The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type.",
        "required" : [ "attribute", "dynamicKey" ]
      },
      "PropagationSource" : {
        "type" : "object",
        "description" : "Defines valid sources of request attributes for conditions or placeholders.",
        "properties" : {
          "managementZone" : {
            "type" : "string",
            "description" : "Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`"
          },
          "serviceTag" : {
            "$ref" : "#/components/schemas/UniversalTag"
          }
        }
      },
      "PublicCertificateCredentials" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Credentials"
        }, {
          "type" : "object",
          "properties" : {
            "certificate" : {
              "type" : "string",
              "description" : "The certificate in the string format."
            },
            "certificateFormat" : {
              "type" : "string",
              "description" : "The certificate format.",
              "enum" : [ "PEM", "PKCS12", "UNKNOWN" ]
            },
            "password" : {
              "type" : "string",
              "description" : "The password of the credential (not supported)."
            }
          }
        } ],
        "description" : "A credentials set of the `PUBLIC_CERTIFICATE` type.",
        "required" : [ "certificate", "certificateFormat", "name", "password", "scopes" ]
      },
      "PublicDomainName" : {
        "type" : "object",
        "description" : "The contribution to the service ID calculation from the domain name where the web request has been detected. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field.",
        "properties" : {
          "copyFromHostName" : {
            "type" : "boolean",
            "description" : "Use (`true`) or don't use (`false`) the detected host name as base for transformation. \n\n Not applicable if the override is specified."
          },
          "transformations" : {
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/TransformationBase"
            },
            "maxItems" : 10,
            "minItems" : 0
          },
          "valueOverride" : {
            "type" : "string",
            "description" : "The value to be used instead of the detected value."
          }
        }
      },
      "RdsHighCpuDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of the high CPU utilization on RDS detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/RdsHighCpuThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "RdsHighCpuThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for high CPU utilization on RDS. If not set, automatic mode is used.",
        "properties" : {
          "cpuUsagePercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if CPU usage is higher than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "cpuUsagePercentage" ]
      },
      "RdsHighLatencyThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for high RDS write/read latency. If not set, automatic mode is used",
        "properties" : {
          "writeReadLatency" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if read/write latency is higher than *X* milliseconds in 3 out of 5 samples.",
            "maximum" : 10000,
            "minimum" : 1
          }
        },
        "required" : [ "writeReadLatency" ]
      },
      "RdsHighMemoryDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of RDS running out of memory detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/RdsHighMemoryThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "RdsHighMemoryThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for RDS running out of memory. If not set, automatic mode is used. \n\n **All** conditions must be fulfilled to trigger an alert.",
        "properties" : {
          "freeMemory" : {
            "type" : "number",
            "description" : "Freeable memory is lower than *X* Megabytes in 3 out of 5 samples.",
            "exclusiveMinimum" : false,
            "maximum" : 1000,
            "minimum" : 0.01
          },
          "swapUsage" : {
            "type" : "number",
            "description" : "Swap usage is higher than *X* Gigabytes in 3 out of 5 samples.",
            "exclusiveMinimum" : false,
            "maximum" : 1000,
            "minimum" : 0.01
          }
        },
        "required" : [ "freeMemory", "swapUsage" ]
      },
      "RdsHighWriteReadLatencyDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of the high RDS write/read latency detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/RdsHighLatencyThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "RdsLowStorageDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of the low free storage space on RDS detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/RdsLowStorageThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "RdsLowStorageThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for low free storage space on RDS. If not set, automatic mode is used.",
        "properties" : {
          "freeStoragePercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if free storage space divided by allocated storage is lower than *X*% in 3 out of 5 samples.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "freeStoragePercentage" ]
      },
      "RdsRestartsSequenceDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of the restarts sequence on RDS detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/RdsRestartsThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "RdsRestartsThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for restarts sequence on RDS. If not set, automatic mode is used.",
        "properties" : {
          "restartsPerMinute" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if number of restarts is *X* per minute or higher in 3 out of 20 samples.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "restartsPerMinute" ]
      },
      "Recurrence" : {
        "type" : "object",
        "description" : "The recurrence of the maintenance window.",
        "properties" : {
          "dayOfMonth" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The day of the month for monthly maintenance. \n\nThe value of `31` is treated as the last day of the month for months that don't have a 31st day.\nThe value of `30` is also treated as the last day of the month for February.",
            "maximum" : 31,
            "minimum" : 1
          },
          "dayOfWeek" : {
            "type" : "string",
            "description" : "The day of the week for weekly maintenance. \n\nThe format is the full name of the day in upper case, for example `THURSDAY`.",
            "enum" : [ "FRIDAY", "MONDAY", "SATURDAY", "SUNDAY", "THURSDAY", "TUESDAY", "WEDNESDAY" ]
          },
          "durationMinutes" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The duration of the maintenance window in minutes.",
            "maximum" : 1440,
            "minimum" : 1
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time of the maintenance window in HH:mm format."
          }
        },
        "required" : [ "durationMinutes", "startTime" ]
      },
      "RemoteEnvironmentConfigDto" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the remote environment."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the configuration."
          },
          "networkScope" : {
            "type" : "string",
            "description" : "The network scope of the remote environment:\n* `EXTERNAL`: The remote environment is located in an another network. \n* `INTERNAL`: The remote environment is located in the same network. \n* `CLUSTER`: The remote environment is located in the same cluster. \n\nDynatrace SaaS can only use `EXTERNAL`.\n\nIf not set, `EXTERNAL` is used.",
            "enum" : [ "CLUSTER", "EXTERNAL", "INTERNAL" ],
            "example" : "EXTERNAL"
          },
          "token" : {
            "type" : "string",
            "description" : "The API token granting access to the remote environment. \n\nThe token must have the **Fetch data from a remote environment** (`RestRequestForwarding`) scope. \n\nFor security reasons, GET requests return this field as `null`."
          },
          "uri" : {
            "type" : "string",
            "description" : "The URI of the remote environment.",
            "maxLength" : 1000,
            "minLength" : 1
          }
        },
        "required" : [ "displayName", "uri" ]
      },
      "RemoteEnvironmentConfigListDto" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RemoteEnvironmentConfigStub"
            }
          }
        }
      },
      "RemoteEnvironmentConfigStub" : {
        "type" : "object",
        "description" : "The short representation of a remote environment.",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "networkScope" : {
            "type" : "string",
            "description" : "The network scope of the remote environment:\n* `EXTERNAL`: The remote environment is located in an another network. \n* `INTERNAL`: The remote environment is located in the same network. \n* `CLUSTER`: The remote environment is located in the same cluster. \n\nDynatrace SaaS can only use `EXTERNAL`.\n\nIf not set, `EXTERNAL` is used.",
            "enum" : [ "CLUSTER", "EXTERNAL", "INTERNAL" ]
          },
          "uri" : {
            "type" : "string",
            "description" : "The display name of the remote environment.",
            "maxLength" : 1000,
            "minLength" : 1
          }
        },
        "required" : [ "id" ]
      },
      "RemotePluginEndpoint" : {
        "type" : "object",
        "description" : "Configuration of a plugin endpoint.",
        "example" : {
          "activeGatePluginModule" : {
            "id" : "-8844900174269363000"
          },
          "enabled" : true,
          "id" : "-2183662974968812535",
          "name" : "Demo endpoint",
          "pluginId" : "custom.remote.python.demo",
          "properties" : {
            "dropdownProperty" : "two",
            "password" : "",
            "serverIp" : "127.0.0.1",
            "username" : "dynatrace"
          }
        },
        "properties" : {
          "activeGatePluginModule" : {
            "$ref" : "#/components/schemas/EntityShortRepresentation"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The endpoint is enabled (`true`) or disabled (`false`)."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the endpoint."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the endpoint, displayed in Dynatrace."
          },
          "pluginId" : {
            "type" : "string",
            "description" : "The ID of the plugin to which the endpoint belongs."
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The list of endpoint parameters. \n\n Each parameter is a property-value pair."
            },
            "description" : "The list of endpoint parameters. \n\n Each parameter is a property-value pair."
          }
        },
        "required" : [ "activeGatePluginModule" ]
      },
      "RemoveCreditCardNumbersTransformation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        } ],
        "description" : "The transformation of the `REMOVE_CREDIT_CARDS` type. \n\nThe transformation automatically detects and removes credit card numbers. No additional parameters needed."
      },
      "RemoveIBANsTransformation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        } ],
        "description" : "The transformation of the `REMOVE_IBANS` type. \n\nThe transformation automatically detects and removes International Bank Account Numbers (IBAN). No additional parameters needed."
      },
      "RemoveIPsTransformation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        } ],
        "description" : "The transformation of the `REMOVE_IPS` type. \n\nThe transformation automatically detects and removes IP addresses. No additional parameters needed."
      },
      "RemoveNumbersTransformation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "includeHexNumbers" : {
              "type" : "boolean",
              "description" : "Remove (`true`) or keep (`false`) hexadecimal numbers. \n\n If not set, then `false` is used, keeping hexadecimal numbers."
            },
            "minDigitCount" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Remove numbers that contain at least *X* digits.",
              "minimum" : 1
            }
          }
        } ],
        "description" : "The transformation of the `REMOVE_NUMBERS` type. \n\nThe transformation removes any numbers from the detected value.",
        "required" : [ "minDigitCount" ]
      },
      "ReplaceBetweenTransformation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "after" : {
              "type" : "string",
              "description" : "The starting delimiter. The transformation replaces everything from here until ending delimiter. The delimiter itself remain intact."
            },
            "before" : {
              "type" : "string",
              "description" : "The ending delimiter. The transformation replaces everything from starting delimiter until here. The delimiter itself remain intact."
            },
            "replacement" : {
              "type" : "string",
              "description" : "The value to be used instead of the content between delimiters."
            }
          }
        } ],
        "description" : "The transformation of the `REPLACE_BETWEEN` type. \n\nThe transformation replaces the content in between specified delimiters with the specified value. The rest of the string remains intact.",
        "required" : [ "after", "before", "replacement" ]
      },
      "ReportStubList" : {
        "type" : "object",
        "description" : "A list of short representations of reports.",
        "example" : {
          "values" : [ {
            "dashboardId" : "9eee7ed6-a125-4d9d-bfa7-afdb3404cb36",
            "id" : "337d883e-98c3-4dac-b8f2-1a9cdbd05969",
            "type" : "DASHBOARD"
          }, {
            "dashboardId" : "26ccd360-828c-4d83-a65e-040ddc31e8f6",
            "id" : "b059e372-0b35-4d44-869b-95c326748848",
            "type" : "DASHBOARD"
          } ]
        },
        "properties" : {
          "values" : {
            "type" : "array",
            "description" : "A list of reports.",
            "items" : {
              "$ref" : "#/components/schemas/DashboardReportStub"
            }
          }
        },
        "required" : [ "values" ]
      },
      "ReportSubscriptions" : {
        "type" : "object",
        "description" : "Configuration of a report subscription.",
        "example" : {
          "recipients" : [ "demo@email.com", "demo2@email.com" ],
          "schedule" : "WEEK"
        },
        "properties" : {
          "recipients" : {
            "type" : "array",
            "description" : "A list of the recipients. \n\nYou can specify email addresses or Dynatrace user IDs here.",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "schedule" : {
            "type" : "string",
            "description" : "The schedule of the subscription. \n\n * Weekly subscribers receive the report every Monday at midnight. \n * Monthly subscribers receive the report on the first Monday of the month at midnight.",
            "enum" : [ "MONTH", "WEEK" ]
          }
        },
        "required" : [ "recipients", "schedule" ]
      },
      "RequestAttribute" : {
        "type" : "object",
        "example" : {
          "aggregation" : "ALL_DISTINCT_VALUES",
          "confidential" : false,
          "dataSources" : [ {
            "capturingAndStorageLocation" : "CAPTURE_AND_STORE_ON_SERVER",
            "enabled" : true,
            "parameterName" : "query",
            "scope" : {
              "tagOfProcessGroup" : "SearchFrontend"
            },
            "source" : "QUERY_PARAMETER"
          } ],
          "dataType" : "STRING",
          "enabled" : true,
          "name" : "Query Term",
          "normalization" : "TO_LOWER_CASE",
          "skipPersonalDataMasking" : false
        },
        "properties" : {
          "aggregation" : {
            "type" : "string",
            "description" : "Aggregation type for the request values.",
            "enum" : [ "ALL_DISTINCT_VALUES", "AVERAGE", "COUNT_DISTINCT_VALUES", "COUNT_VALUES", "FIRST", "LAST", "MAXIMUM", "MINIMUM", "SUM" ]
          },
          "confidential" : {
            "type" : "boolean",
            "description" : "Confidential data flag. Set `true` to treat the captured data as confidential."
          },
          "dataSources" : {
            "type" : "array",
            "description" : "The list of data sources.",
            "items" : {
              "$ref" : "#/components/schemas/DataSource"
            },
            "maxItems" : 2000,
            "minItems" : 1
          },
          "dataType" : {
            "type" : "string",
            "description" : "The data type of the request attribute.",
            "enum" : [ "DOUBLE", "INTEGER", "STRING" ]
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The request attribute is enabled (`true`) or disabled (`false`)."
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the request attribute."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the request attribute.",
            "minLength" : 1
          },
          "normalization" : {
            "type" : "string",
            "description" : "String values transformation. \n\n If the **dataType** is not `string`, set the `Original` here.",
            "enum" : [ "ORIGINAL", "TO_LOWER_CASE", "TO_UPPER_CASE" ]
          },
          "skipPersonalDataMasking" : {
            "type" : "boolean",
            "description" : "Personal data masking flag. Set `true` to skip masking. \n\n Warning: This will potentially access personalized data."
          }
        },
        "required" : [ "aggregation", "confidential", "dataSources", "dataType", "enabled", "name", "normalization", "skipPersonalDataMasking" ]
      },
      "RequestNaming" : {
        "type" : "object",
        "description" : "The request naming rule.",
        "example" : {
          "conditions" : [ {
            "attribute" : "WEBREQUEST_URL_PATH",
            "comparisonInfo" : {
              "caseSensitive" : false,
              "comparison" : "BEGINS_WITH",
              "negate" : false,
              "type" : "STRING",
              "value" : "/url"
            }
          } ],
          "enabled" : true,
          "namingPattern" : "renamed request"
        },
        "properties" : {
          "conditions" : {
            "type" : "array",
            "description" : "The set of conditions for the request naming rule usage. \n\n You can specify several conditions. The request has to match **all** the specified conditions for the rule to trigger.",
            "items" : {
              "$ref" : "#/components/schemas/Condition"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The ID of the request naming rule."
          },
          "managementZones" : {
            "type" : "array",
            "description" : "Specifies the management zones for which this rule should be applied.",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 1,
            "minItems" : 0
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "namingPattern" : {
            "type" : "string",
            "description" : "The name to be assigned to matching requests.",
            "maxLength" : 1000,
            "minLength" : 3
          },
          "order" : {
            "type" : "string",
            "description" : "The order string. Sorting request namings alphabetically by their order string determines their relative ordering.\n\nTypically this is managed by Dynatrace internally and will not be present in GET responses nor used if present in PUT/POST requests, except where noted otherwise.",
            "maxLength" : 2147483647,
            "minLength" : 1
          },
          "placeholders" : {
            "type" : "array",
            "description" : "The list of custom placeholders to be used in the naming pattern. \n\n It enables you to extract a request attribute value or other request attribute and use it in the request naming pattern.",
            "items" : {
              "$ref" : "#/components/schemas/Placeholder"
            }
          }
        },
        "required" : [ "conditions", "enabled", "namingPattern" ]
      },
      "ResourceNaming" : {
        "type" : "object",
        "description" : "The resource naming rule.",
        "example" : {
          "binary" : [ ".exe", ".zip" ],
          "image" : [ ".jpg", ".png", ".gif", ".jpeg", ".bmp", ".svg", ".ico", ".woff", ".ttf", ".otf" ]
        },
        "properties" : {
          "binary" : {
            "type" : "array",
            "description" : "The list of binary extensions that will be renamed to `Binary`.",
            "items" : {
              "type" : "string"
            }
          },
          "image" : {
            "type" : "array",
            "description" : "The list of image extensions that will be renamed to `Image`.",
            "items" : {
              "type" : "string"
            }
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          }
        },
        "required" : [ "binary", "image" ]
      },
      "ResourceProvider" : {
        "type" : "object",
        "description" : "A rule for the content provider.",
        "properties" : {
          "brandIconUrl" : {
            "type" : "string",
            "description" : "The URL of the provider's icon."
          },
          "domainNamePatterns" : {
            "type" : "array",
            "description" : "A list of domain patterns of the provider.",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 2147483647,
            "minItems" : 1
          },
          "resourceName" : {
            "type" : "string",
            "description" : "The name of the provider.",
            "maxLength" : 50,
            "minLength" : 0
          },
          "resourceType" : {
            "type" : "string",
            "description" : "The type of the provider.",
            "enum" : [ "CDN_RESOURCES", "FIRST_PARTY_RESOURCES", "THIRD_PARTY_RESOURCES" ]
          }
        },
        "required" : [ "domainNamePatterns", "resourceName", "resourceType" ]
      },
      "ResourceTimingSettings" : {
        "type" : "object",
        "description" : "Settings for resource timings capture.",
        "properties" : {
          "nonW3cResourceTimings" : {
            "type" : "boolean",
            "description" : "Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled."
          },
          "nonW3cResourceTimingsInstrumentationDelay" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings. \n\nValid values range from 0 to 9999.\n\nOnly effective if **nonW3cResourceTimings** is enabled.",
            "maximum" : 9999,
            "minimum" : 0
          },
          "resourceTimingCaptureType" : {
            "type" : "string",
            "description" : "Defines how detailed resource timings are captured.\n\nOnly effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled.",
            "enum" : [ "CAPTURE_ALL_SUMMARIES", "CAPTURE_FULL_DETAILS", "CAPTURE_LIMITED_SUMMARIES" ]
          },
          "resourceTimingsDomainLimit" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Limits the number of domains for which W3C resource timings are captured.\n\nOnly effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`."
          },
          "w3cResourceTimings" : {
            "type" : "boolean",
            "description" : "W3C resource timings for third party/CDN enabled/disabled."
          }
        },
        "required" : [ "nonW3cResourceTimings", "nonW3cResourceTimingsInstrumentationDelay", "w3cResourceTimings" ]
      },
      "ResourceType" : {
        "type" : "object",
        "description" : "A rule for the resource type.",
        "properties" : {
          "primaryResourceType" : {
            "type" : "string",
            "description" : "The primary type of the resource.",
            "enum" : [ "CSS", "IMAGE", "OTHER", "SCRIPT" ]
          },
          "regularExpression" : {
            "type" : "string",
            "description" : "The regular expression to detect the resource."
          },
          "secondaryResourceType" : {
            "type" : "string",
            "description" : "The secondary type of the resource."
          }
        },
        "required" : [ "primaryResourceType", "regularExpression" ]
      },
      "ResourceUrlCleanupRule" : {
        "type" : "object",
        "description" : "A rule for the URL cleanup rule.",
        "properties" : {
          "regularExpression" : {
            "type" : "string",
            "description" : "The pattern (regular expression) to look for."
          },
          "replaceWith" : {
            "type" : "string",
            "description" : "The text to replace the found pattern with."
          },
          "resourceName" : {
            "type" : "string",
            "description" : "The name of the rule."
          }
        },
        "required" : [ "regularExpression", "replaceWith", "resourceName" ]
      },
      "ResponseTimeDegradationAutodetectionConfig" : {
        "type" : "object",
        "description" : "Parameters of the response time degradation auto-detection. Required if the **detectionMode** is `DETECT_AUTOMATICALLY`. Not applicable otherwise. \n\nViolation of **any** criterion triggers an alert.",
        "properties" : {
          "loadThreshold" : {
            "type" : "string",
            "description" : "Minimal service load to detect response time degradation. \n\n Response time degradation of services with smaller load won't trigger alerts.",
            "enum" : [ "FIFTEEN_REQUESTS_PER_MINUTE", "FIVE_REQUESTS_PER_MINUTE", "ONE_REQUEST_PER_MINUTE", "TEN_REQUESTS_PER_MINUTE" ]
          },
          "responseTimeDegradationMilliseconds" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if the response time degrades beyond *X* milliseconds.",
            "maximum" : 100000,
            "minimum" : 0
          },
          "responseTimeDegradationPercent" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if the response time degrades beyond *X* %.",
            "maximum" : 1000,
            "minimum" : 0
          },
          "slowestResponseTimeDegradationMilliseconds" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if the response time of the slowest 10% degrades beyond *X* milliseconds.",
            "maximum" : 100000,
            "minimum" : 0
          },
          "slowestResponseTimeDegradationPercent" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if the response time of the slowest 10% degrades beyond *X* %.",
            "maximum" : 1000,
            "minimum" : 0
          }
        },
        "required" : [ "loadThreshold", "responseTimeDegradationMilliseconds", "responseTimeDegradationPercent", "slowestResponseTimeDegradationMilliseconds", "slowestResponseTimeDegradationPercent" ]
      },
      "ResponseTimeDegradationDetectionConfig" : {
        "type" : "object",
        "description" : "Configuration of response time degradation detection.",
        "properties" : {
          "automaticDetection" : {
            "$ref" : "#/components/schemas/ResponseTimeDegradationAutodetectionConfig"
          },
          "detectionMode" : {
            "type" : "string",
            "description" : "How to detect response time degradation: automatically, or based on fixed thresholds, or do not detect.",
            "enum" : [ "DETECT_AUTOMATICALLY", "DETECT_USING_FIXED_THRESHOLDS", "DONT_DETECT" ]
          },
          "thresholds" : {
            "$ref" : "#/components/schemas/ResponseTimeDegradationThresholdConfig"
          }
        },
        "required" : [ "detectionMode" ]
      },
      "ResponseTimeDegradationThresholdConfig" : {
        "type" : "object",
        "description" : "Fixed thresholds for response time degradation detection. \n\n Required if **detectionMode** is `DETECT_USING_FIXED_THRESHOLDS`. Not applicable otherwise.",
        "properties" : {
          "loadThreshold" : {
            "type" : "string",
            "description" : "Minimal service load to detect response time degradation. \n\n Response time degradation of services with smaller load won't trigger alerts.",
            "enum" : [ "FIFTEEN_REQUESTS_PER_MINUTE", "FIVE_REQUESTS_PER_MINUTE", "ONE_REQUEST_PER_MINUTE", "TEN_REQUESTS_PER_MINUTE" ]
          },
          "responseTimeThresholdMilliseconds" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Response time during any 5-minute period to trigger an alert, in milliseconds.",
            "maximum" : 100000,
            "minimum" : 0
          },
          "sensitivity" : {
            "type" : "string",
            "description" : "Sensitivity of the threshold. \n\nWith `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts. \n\nWith `high` sensitivity, no statistical confidence is used. Each violation triggers an alert.",
            "enum" : [ "HIGH", "LOW", "MEDIUM" ]
          },
          "slowestResponseTimeThresholdMilliseconds" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Response time of the 10% slowest during any 5-minute period to trigger an alert, in milliseconds.",
            "maximum" : 100000,
            "minimum" : 0
          }
        },
        "required" : [ "loadThreshold", "responseTimeThresholdMilliseconds", "sensitivity", "slowestResponseTimeThresholdMilliseconds" ]
      },
      "RoleBasedAuthentication" : {
        "type" : "object",
        "description" : "The credentials for the role-based authentication.",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "description" : "The ID of the Amazon account.",
            "minLength" : 1
          },
          "externalId" : {
            "type" : "string",
            "description" : "The external ID token for setting an IAM role. \n\n You can obtain it with the `GET /aws/iamExternalId` request.",
            "readOnly" : true
          },
          "iamRole" : {
            "type" : "string",
            "description" : "The IAM role to be used by Dynatrace to get monitoring data.",
            "minLength" : 1
          }
        },
        "required" : [ "accountId", "iamRole" ]
      },
      "ScalableListTile" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "chartVisible" : {
              "type" : "boolean"
            },
            "customFilterId" : {
              "type" : "string",
              "description" : "The ID of the custom filter."
            },
            "entitySpecificTileType" : {
              "type" : "string",
              "description" : "The type of the entity specific tile.",
              "enum" : [ "APPLICATION", "APPLICATIONS", "APPLICATIONS_MOST_ACTIVE", "APPLICATION_WORLDMAP", "AWS", "BOUNCE_RATE", "CUSTOM_APPLICATION", "CUSTOM_CHARTING", "DATABASE", "DATABASES_OVERVIEW", "DATA_EXPLORER", "DCRUM_SERVICES", "DEM_KEY_USER_ACTION", "DOCKER", "DTAQL", "HEADER", "HOST", "HOSTS", "IMAGE", "LOGS_EVENTS_QUERY", "LOG_ANALYTICS", "LOG_QUERY", "MARKDOWN", "MOBILE_APPLICATION", "NETWORK", "NETWORK_MEDIUM", "OPEN_PROBLEMS", "PROCESS_GROUPS_ONE", "PURE_MODEL", "RESOURCES", "SCALABLE_LIST", "SERVICES", "SERVICE_VERSATILE", "SESSION_METRICS", "SLO", "SYNTHETIC_HTTP_MONITOR", "SYNTHETIC_SINGLE_EXT_TEST", "SYNTHETIC_SINGLE_WEBCHECK", "SYNTHETIC_TESTS", "THIRD_PARTY_MOST_ACTIVE", "UEM_ACTIVE_SESSIONS", "UEM_CONVERSIONS_OVERALL", "UEM_CONVERSIONS_PER_GOAL", "UEM_JSERRORS_OVERALL", "UEM_KEY_USER_ACTIONS", "USERS", "VIRTUALIZATION" ]
            }
          }
        } ],
        "description" : "Configuration of a tile with the built-in custom filter id. This is only for internal usage.",
        "required" : [ "bounds", "name", "tileType" ]
      },
      "Schedule" : {
        "type" : "object",
        "description" : "The schedule of the maintenance window.",
        "properties" : {
          "end" : {
            "type" : "string",
            "description" : "The end date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format."
          },
          "recurrence" : {
            "$ref" : "#/components/schemas/Recurrence"
          },
          "recurrenceType" : {
            "type" : "string",
            "description" : "The type of the schedule recurrence.",
            "enum" : [ "DAILY", "MONTHLY", "ONCE", "WEEKLY" ]
          },
          "start" : {
            "type" : "string",
            "description" : "The start date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format."
          },
          "zoneId" : {
            "type" : "string",
            "description" : "The time zone of the start and end time. Default time zone is UTC. \n\nYou can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)."
          }
        },
        "required" : [ "end", "recurrenceType", "start", "zoneId" ]
      },
      "Scope" : {
        "type" : "object",
        "description" : "The scope of the maintenance window. \n\n The scope restricts the alert/problem detection suppression to certain Dynatrace entities. It can contain a list of entities and/or matching rules for dynamic formation of the scope. \n\n If no scope is specified, the alert/problem detection suppression applies to the entire environment.",
        "properties" : {
          "entities" : {
            "type" : "array",
            "description" : "A list of Dynatrace entities (for example, hosts or services) to be included in the scope. \n\nAllowed values are Dynatrace entity IDs.",
            "items" : {
              "type" : "string"
            }
          },
          "matches" : {
            "type" : "array",
            "description" : "A list of matching rules for dynamic scope formation. \n\nIf several rules are set, the OR logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/MonitoredEntityFilter"
            }
          }
        },
        "required" : [ "entities", "matches" ]
      },
      "ScopeConditions" : {
        "type" : "object",
        "description" : "Conditions for data capturing.",
        "properties" : {
          "hostGroup" : {
            "type" : "string",
            "description" : "Only applies to this host group."
          },
          "processGroup" : {
            "type" : "string",
            "description" : "Only applies to this process group. Note that this can't be transferred between different clusters or environments."
          },
          "serviceTechnology" : {
            "type" : "string",
            "description" : "Only applies to this service technology.",
            "enum" : [ "ACTIVEMQ_CLIENT", "ACTIVE_MQ", "ACTIVE_MQ_ARTEMIS", "ADOBE_EXPERIENCE_MANAGER", "ADO_NET", "AIX", "AKKA", "AMAZON_REDSHIFT", "AMQP", "APACHE_CAMEL", "APACHE_CASSANDRA", "APACHE_COUCH_DB", "APACHE_DERBY", "APACHE_HTTP_CLIENT_ASYNC", "APACHE_HTTP_CLIENT_SYNC", "APACHE_HTTP_SERVER", "APACHE_KAFKA", "APACHE_LOG4J", "APACHE_SOLR", "APACHE_STORM", "APACHE_SYNAPSE", "APACHE_TOMCAT", "APPARMOR", "APPLICATION_INSIGHTS_SDK", "ASP_DOTNET", "ASP_DOTNET_CORE", "ASP_DOTNET_CORE_SIGNALR", "ASP_DOTNET_SIGNALR", "ASYNC_HTTP_CLIENT", "AWS_DYNAMO_DB", "AWS_LAMBDA", "AWS_RDS", "AWS_SERVICE", "AXIS", "AZURE_FUNCTIONS", "AZURE_SERVICE_BUS", "AZURE_SERVICE_FABRIC", "AZURE_STORAGE", "BOSHBPM", "CICS_FILE_ACCESS", "CITRIX", "CITRIX_COMMON", "CITRIX_DESKTOP_DELIVERY_CONTROLLERS", "CITRIX_DIRECTOR", "CITRIX_LICENSE_SERVER", "CITRIX_PROVISIONING_SERVICES", "CITRIX_STOREFRONT", "CITRIX_VIRTUAL_DELIVERY_AGENT", "CITRIX_WORKSPACE_ENVIRONMENT_MANAGEMENT", "CITRIX_XEN", "CLOUDFOUNDRY", "CLOUDFOUNDRY_AUCTIONEER", "CLOUDFOUNDRY_BOSH", "CLOUDFOUNDRY_GOROUTER", "CODEIGNITER", "COLDFUSION", "CONFLUENT_KAFKA_CLIENT", "CONTAINERD", "CORE_DNS", "COSMOSDB", "COUCHBASE", "CRIO", "CXF", "DATASTAX", "DB2", "DIEGO_CELL", "DOCKER", "DOTNET", "DOTNET_REMOTING", "DRUPAL", "DYNATRACE", "ELASTIC_SEARCH", "ENVOY", "ERLANG", "ETCD", "F5_LTM", "FSHARP", "GARDEN", "GLASSFISH", "GO", "GOOGLE_CLOUD_FUNCTIONS", "GRAAL_TRUFFLE", "GRAPH_QL", "GRPC", "GRSECURITY", "HADOOP", "HADOOP_HDFS", "HADOOP_YARN", "HAPROXY", "HEAT", "HESSIAN", "HORNET_Q", "IBM_CICS_REGION", "IBM_CICS_TRANSACTION_GATEWAY", "IBM_IMS_CONNECT_REGION", "IBM_IMS_CONTROL_REGION", "IBM_IMS_MESSAGE_PROCESSING_REGION", "IBM_IMS_SOAP_GATEWAY", "IBM_INTEGRATION_BUS", "IBM_MQ", "IBM_MQ_CLIENT", "IBM_WEBSHPRERE_APPLICATION_SERVER", "IBM_WEBSHPRERE_LIBERTY", "IBM_WEBSPHERE_APPLICATION_SERVER", "IBM_WEBSPHERE_LIBERTY", "IIS", "IIS_APP_POOL", "ISTIO", "JAVA", "JAVA_HTTPURLCONNETION", "JAX_WS", "JBOSS", "JBOSS_EAP", "JBOSS_LOGMANAGER", "JDK_HTTP_CLIENT", "JDK_HTTP_SERVER", "JERSEY", "JETTY", "JRUBY", "JYTHON", "KUBERNETES", "LAMINAS", "LARAVEL", "LIBC", "LIBVIRT", "LINKERD", "LINUX_SYSTEM", "MAGENTO", "MARIADB", "MEMCACHED", "MICRONAUT", "MICROSOFT_SQL_SERVER", "MONGODB", "MSSQL_CLIENT", "MULE_ESB", "MYSQL", "MYSQL_CONNECTOR", "NETFLIX_SERVO", "NETTY", "NGINX", "NODE_JS", "OK_HTTP_CLIENT", "ONEAGENT_SDK", "OPENCENSUS", "OPENSHIFT", "OPENSTACK_COMPUTE", "OPENSTACK_CONTROLLER", "OPENTELEMETRY", "OPENTRACING", "OPEN_LIBERTY", "ORACLE_DATABASE", "ORACLE_WEBLOGIC", "OWIN", "PERL", "PHP", "PHP_FPM", "PLAY", "PODMAN", "POSTGRE_SQL", "POSTGRE_SQL_DOTNET_DATA_PROVIDER", "POWER_DNS", "PROGRESS", "PYTHON", "QOS_LOGBACK", "QUARKUS", "RABBIT_MQ", "REACTOR_CORE", "REDIS", "RESTEASY", "RESTLET", "RIAK", "RKE2", "RSOCKET", "RUBY", "RUNC", "RXJAVA", "SAG_WEBMETHODS_IS", "SAP", "SAP_HANADB", "SAP_HYBRIS", "SAP_MAXDB", "SAP_SYBASE", "SCALA", "SELINUX", "SHAREPOINT", "SLIM", "SPARK", "SPRING", "SQLITE", "SYMFONY", "THRIFT", "TIBCO", "TIBCO_BUSINESS_WORKS", "TIBCO_EMS", "UNDERTOW_IO", "VARNISH_CACHE", "VERTX", "VIM2", "VIOS", "VIRTUAL_MACHINE_KVM", "VIRTUAL_MACHINE_QEMU", "WILDFLY", "WINDOWS_CONTAINERS", "WINDOWS_SYSTEM", "WINK", "WORDPRESS", "ZERO_MQ", "ZOS_CONNECT" ]
          },
          "tagOfProcessGroup" : {
            "type" : "string",
            "description" : "Only apply to process groups matching this tag."
          }
        }
      },
      "ServerName" : {
        "type" : "object",
        "description" : "The contribution to the service ID calculation from the detected server name. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field.",
        "properties" : {
          "transformations" : {
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/TransformationBase"
            },
            "maxItems" : 10,
            "minItems" : 0
          },
          "valueOverride" : {
            "type" : "string",
            "description" : "The value to be used instead of the detected value."
          }
        }
      },
      "ServiceAnomalyDetectionConfig" : {
        "type" : "object",
        "description" : "Dynatrace automatically detects service-related performance anomalies such as response time degradations and failure rate increases. Use these settings to configure detection sensitivity, set alert thresholds, or disable alerting for certain services.",
        "example" : {
          "failureRateIncrease" : {
            "detectionMode" : "DETECT_USING_FIXED_THRESHOLDS",
            "thresholds" : {
              "sensitivity" : "LOW",
              "threshold" : 10
            }
          },
          "loadDrop" : {
            "enabled" : true,
            "loadDropPercent" : 40,
            "minAbnormalStateDurationInMinutes" : 5
          },
          "loadSpike" : {
            "enabled" : false
          },
          "metadata" : {
            "clusterVersion" : "Mock version",
            "configurationVersions" : [ 4, 2 ]
          },
          "responseTimeDegradation" : {
            "automaticDetection" : {
              "loadThreshold" : "ONE_REQUEST_PER_MINUTE",
              "responseTimeDegradationMilliseconds" : 250,
              "responseTimeDegradationPercent" : 90,
              "slowestResponseTimeDegradationMilliseconds" : 500,
              "slowestResponseTimeDegradationPercent" : 200
            },
            "detectionMode" : "DETECT_AUTOMATICALLY"
          }
        },
        "properties" : {
          "failureRateIncrease" : {
            "$ref" : "#/components/schemas/FailureRateIncreaseDetectionConfig"
          },
          "loadDrop" : {
            "$ref" : "#/components/schemas/LoadDropDetectionConfig"
          },
          "loadSpike" : {
            "$ref" : "#/components/schemas/LoadSpikeDetectionConfig"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "responseTimeDegradation" : {
            "$ref" : "#/components/schemas/ResponseTimeDegradationDetectionConfig"
          }
        },
        "required" : [ "failureRateIncrease", "responseTimeDegradation" ]
      },
      "ServiceNowNotificationConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "instanceName" : {
              "type" : "string",
              "description" : "The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL. \n\n This field is mutually exclusive with the **url** field. You can only use one of them.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "message" : {
              "type" : "string",
              "description" : "The content of the ServiceNow description.\n\n\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
              "maxLength" : 160,
              "minLength" : 1
            },
            "password" : {
              "type" : "string",
              "description" : "The username to the ServiceNow account",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "sendEvents" : {
              "type" : "boolean",
              "description" : "Send events into ServiceNow ITOM (`true`)."
            },
            "sendIncidents" : {
              "type" : "boolean",
              "description" : "Send incidents into ServiceNow ITSM (`true`)."
            },
            "url" : {
              "type" : "string",
              "description" : "The URL of the on-premise ServiceNow installation. \n\n This field is mutually exclusive with the **instanceName** field. You can only use one of them.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "username" : {
              "type" : "string",
              "description" : "The username of the ServiceNow account. \n\n Make sure that your user account has the `rest_service`, `web_request_admin`, and `x_dynat_ruxit.Integration` roles.",
              "maxLength" : 1000,
              "minLength" : 1
            }
          }
        } ],
        "description" : "Configuration of the ServiceNow notification.",
        "required" : [ "active", "alertingProfile", "message", "name", "sendEvents", "sendIncidents", "username" ]
      },
      "ServiceTopologyComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "EXTERNAL_SERVICE", "FULLY_MONITORED", "OPAQUE_SERVICE" ]
            }
          }
        } ],
        "description" : "Comparison for `SERVICE_TOPOLOGY` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "ServiceTypeComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "BACKGROUND_ACTIVITY", "CICS_SERVICE", "CUSTOM_SERVICE", "DATABASE_SERVICE", "ENTERPRISE_SERVICE_BUS_SERVICE", "EXTERNAL", "IBM_INTEGRATION_BUS_SERVICE", "IMS_SERVICE", "MESSAGING_SERVICE", "QUEUE_LISTENER_SERVICE", "RMI_SERVICE", "RPC_SERVICE", "UNIFIED", "WEB_REQUEST_SERVICE", "WEB_SERVICE", "ZOS_CONNECT" ]
            }
          }
        } ],
        "description" : "Comparison for `SERVICE_TYPE` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "ServiceTypeComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "BACKGROUND_ACTIVITY", "CICS_SERVICE", "CUSTOM_SERVICE", "DATABASE_SERVICE", "ENTERPRISE_SERVICE_BUS_SERVICE", "EXTERNAL", "IBM_INTEGRATION_BUS_SERVICE", "IMS_SERVICE", "MESSAGING_SERVICE", "RMI_SERVICE", "RPC_SERVICE", "SPAN_SERVICE", "UNIFIED_SERVICE", "WEB_REQUEST_SERVICE", "WEB_SERVICE", "ZOS_CONNECT_SERVICE" ]
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "BACKGROUND_ACTIVITY", "CICS_SERVICE", "CUSTOM_SERVICE", "DATABASE_SERVICE", "ENTERPRISE_SERVICE_BUS_SERVICE", "EXTERNAL", "IBM_INTEGRATION_BUS_SERVICE", "IMS_SERVICE", "MESSAGING_SERVICE", "RMI_SERVICE", "RPC_SERVICE", "SPAN_SERVICE", "UNIFIED_SERVICE", "WEB_REQUEST_SERVICE", "WEB_SERVICE", "ZOS_CONNECT_SERVICE" ]
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `SERVICE_TYPE` attributes.",
        "required" : [ "comparison", "negate" ]
      },
      "SessionReplayContentMaskingSettings" : {
        "type" : "object",
        "description" : "Content masking settings for Session Replay. \n\nFor more details, see [Configure Session Replay](https://dt-url.net/0m03slq) in Dynatrace Documentation.",
        "properties" : {
          "playbackMaskingSettings" : {
            "$ref" : "#/components/schemas/SessionReplayMaskingSetting"
          },
          "recordingMaskingSettings" : {
            "$ref" : "#/components/schemas/SessionReplayMaskingSetting"
          },
          "recordingMaskingSettingsVersion" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The version of the content masking. \n\nYou can use this API only with the version 2. \n\nIf you're using version 1, set this field to `2` in the PUT request to switch to version 2.",
            "example" : 2
          }
        },
        "required" : [ "recordingMaskingSettingsVersion" ]
      },
      "SessionReplayDataPrivacySettings" : {
        "type" : "object",
        "description" : "Data privacy settings for Session Replay.",
        "properties" : {
          "contentMaskingSettings" : {
            "$ref" : "#/components/schemas/SessionReplayContentMaskingSettings"
          },
          "optInModeEnabled" : {
            "type" : "boolean",
            "description" : "If `true`, session recording is disabled until JavaScriptAPI `dtrum.enableSessionReplay()` is called."
          },
          "urlExclusionRules" : {
            "type" : "array",
            "description" : "A list of URLs to be excluded from recording.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SessionReplayMaskingSetting" : {
        "type" : "object",
        "description" : "Configuration of the Session Replay masking.",
        "properties" : {
          "maskingPreset" : {
            "type" : "string",
            "description" : "The type of the masking: \n\n* `MASK_ALL`: Mask all texts, user input, and images. \n* `MASK_USER_INPUT`: Mask all data that is provided through user input \n* `ALLOW_LIST`: Only elements, specified in **maskingRules** are shown, everything else is masked. \n* `BLOCK_LIST`: Elements, specified in **maskingRules** are masked, everything else is shown.",
            "enum" : [ "ALLOW_LIST", "BLOCK_LIST", "MASK_ALL", "MASK_USER_INPUT" ]
          },
          "maskingRules" : {
            "type" : "array",
            "description" : "A list of masking rules.",
            "items" : {
              "$ref" : "#/components/schemas/MaskingRule"
            }
          }
        },
        "required" : [ "maskingPreset" ]
      },
      "SessionReplaySetting" : {
        "type" : "object",
        "description" : "Session replay settings",
        "properties" : {
          "costControlPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Session replay sampling rating in percentage.",
            "maximum" : 100,
            "minimum" : 0
          },
          "cssResourceCapturingExclusionRules" : {
            "type" : "array",
            "description" : "A list of URLs to be excluded from CSS resource capturing.",
            "items" : {
              "type" : "string"
            }
          },
          "enableCssResourceCapturing" : {
            "type" : "boolean",
            "description" : "Capture (`true`) or don't capture (`false`) CSS resources from the session."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "SessionReplay Enabled."
          }
        },
        "required" : [ "costControlPercentage", "enabled" ]
      },
      "SimpleHostTech" : {
        "type" : "object",
        "description" : "The value to compare to.",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Predefined technology, if technology is not predefined, then the verbatim type must be set",
            "enum" : [ "APPARMOR", "BOSH", "BOSHBPM", "CLOUDFOUNDRY", "CONTAINERD", "CRIO", "DIEGO_CELL", "DOCKER", "GARDEN", "GRSECURITY", "KUBERNETES", "OPENSHIFT", "OPENSTACK_COMPUTE", "OPENSTACK_CONTROLLER", "SELINUX" ]
          },
          "verbatimType" : {
            "type" : "string",
            "description" : "Non-predefined technology, use for custom technologies.",
            "maxLength" : 128,
            "minLength" : 0
          }
        }
      },
      "SimpleHostTechComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "$ref" : "#/components/schemas/SimpleHostTech"
            }
          }
        } ],
        "description" : "Comparison for `SIMPLE_HOST_TECH` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "SimpleTech" : {
        "type" : "object",
        "description" : "The value to compare to.",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Predefined technology, if technology is not predefined, then the verbatim type must be set",
            "enum" : [ "ACTIVEMQ_CLIENT", "ACTIVE_MQ", "ACTIVE_MQ_ARTEMIS", "ADOBE_EXPERIENCE_MANAGER", "ADO_NET", "AIX", "AKKA", "AMAZON_REDSHIFT", "AMQP", "APACHE_CAMEL", "APACHE_CASSANDRA", "APACHE_COUCH_DB", "APACHE_DERBY", "APACHE_HTTP_CLIENT_ASYNC", "APACHE_HTTP_CLIENT_SYNC", "APACHE_HTTP_SERVER", "APACHE_KAFKA", "APACHE_LOG4J", "APACHE_SOLR", "APACHE_STORM", "APACHE_SYNAPSE", "APACHE_TOMCAT", "APPARMOR", "APPLICATION_INSIGHTS_SDK", "ASP_DOTNET", "ASP_DOTNET_CORE", "ASP_DOTNET_CORE_SIGNALR", "ASP_DOTNET_SIGNALR", "ASYNC_HTTP_CLIENT", "AWS_DYNAMO_DB", "AWS_LAMBDA", "AWS_RDS", "AWS_SERVICE", "AXIS", "AZURE_FUNCTIONS", "AZURE_SERVICE_BUS", "AZURE_SERVICE_FABRIC", "AZURE_STORAGE", "BOSHBPM", "CICS_FILE_ACCESS", "CITRIX", "CITRIX_COMMON", "CITRIX_DESKTOP_DELIVERY_CONTROLLERS", "CITRIX_DIRECTOR", "CITRIX_LICENSE_SERVER", "CITRIX_PROVISIONING_SERVICES", "CITRIX_STOREFRONT", "CITRIX_VIRTUAL_DELIVERY_AGENT", "CITRIX_WORKSPACE_ENVIRONMENT_MANAGEMENT", "CITRIX_XEN", "CLOUDFOUNDRY", "CLOUDFOUNDRY_AUCTIONEER", "CLOUDFOUNDRY_BOSH", "CLOUDFOUNDRY_GOROUTER", "CODEIGNITER", "COLDFUSION", "CONFLUENT_KAFKA_CLIENT", "CONTAINERD", "CORE_DNS", "COSMOSDB", "COUCHBASE", "CRIO", "CXF", "DATASTAX", "DB2", "DIEGO_CELL", "DOCKER", "DOTNET", "DOTNET_REMOTING", "DRUPAL", "DYNATRACE", "ELASTIC_SEARCH", "ENVOY", "ERLANG", "ETCD", "F5_LTM", "FSHARP", "GARDEN", "GLASSFISH", "GO", "GOOGLE_CLOUD_FUNCTIONS", "GRAAL_TRUFFLE", "GRAPH_QL", "GRPC", "GRSECURITY", "HADOOP", "HADOOP_HDFS", "HADOOP_YARN", "HAPROXY", "HEAT", "HESSIAN", "HORNET_Q", "IBM_CICS_REGION", "IBM_CICS_TRANSACTION_GATEWAY", "IBM_IMS_CONNECT_REGION", "IBM_IMS_CONTROL_REGION", "IBM_IMS_MESSAGE_PROCESSING_REGION", "IBM_IMS_SOAP_GATEWAY", "IBM_INTEGRATION_BUS", "IBM_MQ", "IBM_MQ_CLIENT", "IBM_WEBSHPRERE_APPLICATION_SERVER", "IBM_WEBSHPRERE_LIBERTY", "IBM_WEBSPHERE_APPLICATION_SERVER", "IBM_WEBSPHERE_LIBERTY", "IIS", "IIS_APP_POOL", "ISTIO", "JAVA", "JAVA_HTTPURLCONNETION", "JAX_WS", "JBOSS", "JBOSS_EAP", "JBOSS_LOGMANAGER", "JDK_HTTP_CLIENT", "JDK_HTTP_SERVER", "JERSEY", "JETTY", "JRUBY", "JYTHON", "KUBERNETES", "LAMINAS", "LARAVEL", "LIBC", "LIBVIRT", "LINKERD", "LINUX_SYSTEM", "MAGENTO", "MARIADB", "MEMCACHED", "MICRONAUT", "MICROSOFT_SQL_SERVER", "MONGODB", "MSSQL_CLIENT", "MULE_ESB", "MYSQL", "MYSQL_CONNECTOR", "NETFLIX_SERVO", "NETTY", "NGINX", "NODE_JS", "OK_HTTP_CLIENT", "ONEAGENT_SDK", "OPENCENSUS", "OPENSHIFT", "OPENSTACK_COMPUTE", "OPENSTACK_CONTROLLER", "OPENTELEMETRY", "OPENTRACING", "OPEN_LIBERTY", "ORACLE_DATABASE", "ORACLE_WEBLOGIC", "OWIN", "PERL", "PHP", "PHP_FPM", "PLAY", "PODMAN", "POSTGRE_SQL", "POSTGRE_SQL_DOTNET_DATA_PROVIDER", "POWER_DNS", "PROGRESS", "PYTHON", "QOS_LOGBACK", "QUARKUS", "RABBIT_MQ", "REACTOR_CORE", "REDIS", "RESTEASY", "RESTLET", "RIAK", "RKE2", "RSOCKET", "RUBY", "RUNC", "RXJAVA", "SAG_WEBMETHODS_IS", "SAP", "SAP_HANADB", "SAP_HYBRIS", "SAP_MAXDB", "SAP_SYBASE", "SCALA", "SELINUX", "SHAREPOINT", "SLIM", "SPARK", "SPRING", "SQLITE", "SYMFONY", "THRIFT", "TIBCO", "TIBCO_BUSINESS_WORKS", "TIBCO_EMS", "UNDERTOW_IO", "VARNISH_CACHE", "VERTX", "VIM2", "VIOS", "VIRTUAL_MACHINE_KVM", "VIRTUAL_MACHINE_QEMU", "WILDFLY", "WINDOWS_CONTAINERS", "WINDOWS_SYSTEM", "WINK", "WORDPRESS", "ZERO_MQ", "ZOS_CONNECT" ]
          },
          "verbatimType" : {
            "type" : "string",
            "description" : "Non-predefined technology, use for custom technologies.",
            "maxLength" : 128,
            "minLength" : 0
          }
        }
      },
      "SimpleTechComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "$ref" : "#/components/schemas/SimpleTech"
            }
          }
        } ],
        "description" : "Comparison for `SIMPLE_TECH` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "SingleValueSettings" : {
        "type" : "object",
        "description" : "Settings for single value visualization",
        "properties" : {
          "linkTileColorToThreshold" : {
            "type" : "boolean"
          },
          "showSparkLine" : {
            "type" : "boolean"
          },
          "showTrend" : {
            "type" : "boolean"
          }
        }
      },
      "SlackNotificationConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "channel" : {
              "type" : "string",
              "description" : "The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "title" : {
              "type" : "string",
              "description" : "The content of the message.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
              "minLength" : 1
            },
            "url" : {
              "type" : "string",
              "description" : "The URL of the Slack WebHook.\n\n This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests.",
              "maxLength" : 1000,
              "minLength" : 1
            }
          }
        } ],
        "description" : "Configuration of the Slack notification.",
        "required" : [ "active", "alertingProfile", "channel", "name", "title" ]
      },
      "SlowPhysicalStorageDetectionConfig" : {
        "type" : "object",
        "description" : "The configuraiton of the physical storage device running slow detection.",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/SlowPhysicalStorageThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "SlowPhysicalStorageThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for slow running physical storage device. If not set then the automatic mode is used. \n\n Fulfillment of **any** condition triggers an alert.",
        "properties" : {
          "avgReadWriteLatency" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Read/write latency is higher than *X* milliseconds in 4 out of 5 samples.",
            "maximum" : 10000,
            "minimum" : 1
          },
          "peakReadWriteLatency" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Peak value for read/write latency is higher than *X* milliseconds in 4 out of 5 samples.",
            "maximum" : 10000,
            "minimum" : 1
          }
        },
        "required" : [ "avgReadWriteLatency", "peakReadWriteLatency" ]
      },
      "SplitSelectTransformation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "delimiter" : {
              "type" : "string",
              "description" : "The delimiter for splitting the detected value. The delimiter itself is not kept."
            },
            "itemIndex" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The index of the element in the split array to be used. Indexing starts with `1`.",
              "minimum" : 1
            }
          }
        } ],
        "description" : "The transformation of the `SPLIT_SELECT` type. \n\nThe transformation splits the detected value into an array and keeps the specified element of the array.",
        "required" : [ "delimiter", "itemIndex" ]
      },
      "StartsWithCompareOperation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **starts with** into **does not start with**. \n\n If not set, then `false` is used."
            },
            "values" : {
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "type" : "string"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The condition of the `STARTS_WITH` type. \n\nThe condition checks whether the string value starts with the specified text.",
        "required" : [ "values" ]
      },
      "StaticConditionKey" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConditionKey"
        } ],
        "description" : "Key for attributes without dynamic key. Some fields are inherited from the parent `ConditionKey` model.",
        "required" : [ "attribute" ]
      },
      "StringComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "caseSensitive" : {
              "type" : "boolean",
              "description" : "The comparison is case-sensitive (`true`) or insensitive (`false`)."
            },
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS", "EXISTS", "REGEX_MATCHES" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to."
            }
          }
        } ],
        "description" : "Comparison for `STRING` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "StringComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "caseSensitive" : {
              "type" : "boolean",
              "description" : "The comparison is case-sensitive (`true`) or not case-sensitive (`false`)."
            },
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "BEGINS_WITH", "BEGINS_WITH_ANY_OF", "CONTAINS", "ENDS_WITH", "ENDS_WITH_ANY_OF", "EQUALS", "EQUALS_ANY_OF", "EXISTS", "REGEX_MATCHES" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to."
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to."
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `STRING` attributes.",
        "required" : [ "comparison", "negate" ]
      },
      "StringConditionKey" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConditionKey"
        }, {
          "type" : "object",
          "properties" : {
            "dynamicKey" : {
              "type" : "string",
              "description" : "The key of the attribute, which need dynamic keys. \n\nNot applicable otherwise, as the attibute itself acts as a key."
            }
          }
        } ],
        "description" : "The key for dynamic attributes of the `STRING` type.",
        "required" : [ "attribute", "dynamicKey" ]
      },
      "StringContainsCompareOperation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **contains** into **does not contain**. \n\n If not set, then `false` is used."
            },
            "values" : {
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "type" : "string"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The condition of the `STRING_CONTAINS` type. \n\nThe condition checks whether the string value contains the specified text.",
        "required" : [ "values" ]
      },
      "StringEqualsCompareOperation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **equals** into **does not equal**. \n\n If not set, then `false` is used."
            },
            "values" : {
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "type" : "string"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The condition of the `STRING_EQUALS` type. \n\nThe condition checks whether the string value equals the specified text.",
        "required" : [ "values" ]
      },
      "StringRequestAttributeComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "caseSensitive" : {
              "type" : "boolean",
              "description" : "The comparison is case-sensitive (`true`) or not case-sensitive (`false`)."
            },
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "BEGINS_WITH", "BEGINS_WITH_ANY_OF", "CONTAINS", "ENDS_WITH", "ENDS_WITH_ANY_OF", "EQUALS", "EQUALS_ANY_OF", "EXISTS", "REGEX_MATCHES" ]
            },
            "matchOnChildCalls" : {
              "type" : "boolean",
              "description" : "If `true`, the request attribute is matched on child service calls. \n\n Default is `false`."
            },
            "requestAttribute" : {
              "type" : "string"
            },
            "source" : {
              "$ref" : "#/components/schemas/PropagationSource"
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to."
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to."
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `STRING_REQUEST_ATTRIBUTE` attributes, specifically of the **String** type.",
        "required" : [ "comparison", "negate", "requestAttribute" ]
      },
      "StubList" : {
        "type" : "object",
        "description" : "An ordered list of short representations of Dynatrace entities.",
        "example" : {
          "values" : [ {
            "description" : "Dynatrace entity 1 for the REST API example",
            "id" : "6a98d7bc-abb9-44f8-ae6a-73e68e71812a",
            "name" : "Dynatrace entity 1"
          }, {
            "id" : "ee70f7d3-9a4e-4f5f-94d2-c9d6156f1618",
            "name" : "Dynatrace entity 2"
          }, {
            "id" : "8cdabe77-9e1a-4be8-b3df-269dd6fa9d7f"
          } ]
        },
        "properties" : {
          "values" : {
            "type" : "array",
            "description" : "An ordered list of short representations of Dynatrace entities.",
            "items" : {
              "$ref" : "#/components/schemas/EntityShortRepresentation"
            }
          }
        },
        "required" : [ "values" ]
      },
      "SupportedVersion" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "description" : "The supported iOS file format version."
          }
        }
      },
      "SymbolFile" : {
        "type" : "object",
        "properties" : {
          "appId" : {
            "$ref" : "#/components/schemas/AppIdentifier"
          },
          "applicationName" : {
            "type" : "string",
            "description" : "The name of the application to which the file belongs to."
          },
          "pinned" : {
            "type" : "boolean",
            "description" : "Whether the file pinned and therefore cannot be deleted."
          },
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The size of the file, in KB."
          },
          "uploadTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The timestamp of the file upload, in UTC milliseconds"
          }
        }
      },
      "SymbolFileClientLinkDto" : {
        "type" : "object",
        "properties" : {
          "dssClientUrl" : {
            "type" : "string",
            "description" : "A download link for the latest compatible version of the DTXDssClient."
          }
        },
        "required" : [ "dssClientUrl" ]
      },
      "SymbolFileList" : {
        "type" : "object",
        "properties" : {
          "symbolFiles" : {
            "type" : "array",
            "description" : "A list of symbol files.",
            "items" : {
              "$ref" : "#/components/schemas/SymbolFile"
            }
          }
        }
      },
      "SymbolFilePinning" : {
        "type" : "object",
        "properties" : {
          "pinned" : {
            "type" : "boolean",
            "description" : "The pinning status of the file: `true` to pin the file, `false` to unpin the file."
          }
        },
        "required" : [ "pinned" ]
      },
      "SymbolFileStorageInfo" : {
        "type" : "object",
        "properties" : {
          "availableStorage" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The available storage space for symbol files, in KB. Has the value of `-1` for an unlimited quota."
          },
          "fileCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "storageQuota" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The total storage quota for symbol files, in KB. Has the value of `-1` for an unlimited quota."
          },
          "usedStorage" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The size of the used storage by symbol files, in KB."
          }
        }
      },
      "SyntheticEngineTypeComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "CLASSIC", "CUSTOM" ]
            }
          }
        } ],
        "description" : "Comparison for `SYNTHETIC_ENGINE_TYPE` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "SyntheticMetricDimension" : {
        "type" : "object",
        "description" : "Dimension of the calculated synthetic metric.",
        "properties" : {
          "dimension" : {
            "type" : "string",
            "description" : "The dimension of the metric.",
            "enum" : [ "Event", "Location", "ResourceOrigin" ]
          },
          "topX" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of top values to be calculated.",
            "maximum" : 100,
            "minimum" : 1
          }
        },
        "required" : [ "dimension" ]
      },
      "SyntheticMetricFilter" : {
        "type" : "object",
        "description" : "Filter of the calculated synthetic metric.",
        "properties" : {
          "actionType" : {
            "type" : "string",
            "description" : "Only user actions of the specified type are included in the metric calculation.",
            "enum" : [ "Custom", "Load", "Xhr" ]
          },
          "errorCode" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Only executions finished with the specified error code are included in the metric calculation."
          },
          "event" : {
            "type" : "string",
            "description" : "Only the specified browser clickpath event is included in the metric calculation. \n\n Specify the Dynatrace entity ID of the event here. You can fetch the list of clickpath events of the monitor with the [GET a synthetic monitor](https://dt-url.net/4oe3kka) request from the Environment API"
          },
          "hasError" : {
            "type" : "boolean",
            "description" : "The execution status of the monitors to be included in the metric calculation: \n\n* `true`: Only failed executions are included. \n\n * `false`: All executions are included."
          },
          "location" : {
            "type" : "string",
            "description" : "Only executions from the specified location are included in the metric calculation. \n\n Specify the Dynatrace entity ID of the location here. You can fetch the list of locations the monitor is running from with the [GET a synthetic monitor](https://dt-url.net/4oe3kka) request from the Environment API."
          }
        }
      },
      "SyntheticMetricUpdate" : {
        "type" : "object",
        "description" : "The update of the calculated synthetic metric.",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          }
        }
      },
      "SyntheticSingleWebcheckTile" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "assignedEntities" : {
              "type" : "array",
              "description" : "The list of Dynatrace entities, assigned to the tile.",
              "items" : {
                "type" : "string"
              }
            },
            "excludeMaintenanceWindows" : {
              "type" : "boolean",
              "description" : "Include (`false') or exclude (`true`) maintenance windows from availability calculations."
            }
          }
        } ],
        "description" : "Configuration of the Browser monitor tile.",
        "required" : [ "assignedEntities", "bounds", "name", "tileType" ]
      },
      "TableSettings" : {
        "type" : "object",
        "description" : "Settings for table visualization",
        "properties" : {
          "hiddenColumns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "isThresholdBackgroundAppliedToCell" : {
            "type" : "boolean"
          }
        }
      },
      "TagCompareOperation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "compareKeyOnly" : {
              "type" : "boolean",
              "description" : "If `true` ignores the tag values and only validates that the tag key is matching.\nDefaults to `false`."
            },
            "tags" : {
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "$ref" : "#/components/schemas/TagInfo"
              },
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "The condition of the `TAG` type. \n\nThe condition checks if the process group of the potential service is tagged with a specific tag.",
        "required" : [ "tags" ]
      },
      "TagComparison" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "TAG_KEY_EQUALS" ]
            },
            "value" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          }
        } ],
        "description" : "Comparison for `TAG` attributes.",
        "required" : [ "negate", "operator" ]
      },
      "TagComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "TAG_KEY_EQUALS", "TAG_KEY_EQUALS_ANY_OF" ]
            },
            "value" : {
              "$ref" : "#/components/schemas/TagInfo"
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "$ref" : "#/components/schemas/TagInfo"
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `TAG` attributes.",
        "required" : [ "comparison", "negate" ]
      },
      "TagFilter" : {
        "type" : "object",
        "description" : "A tag-based filter of monitored entities.",
        "properties" : {
          "context" : {
            "type" : "string",
            "description" : "The origin of the tag, such as AWS or Cloud Foundry. \n\nCustom tags use the `CONTEXTLESS` value.",
            "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_CLOUD", "KUBERNETES" ]
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the tag. \n\nCustom tags have the tag value here.",
            "minLength" : 1
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the tag. \n\n Not applicable to custom tags."
          }
        },
        "required" : [ "context", "key" ]
      },
      "TagFilterAlertingScope" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "tagFilter" : {
              "$ref" : "#/components/schemas/TagFilter"
            }
          }
        } ],
        "description" : "A scope filter for tags on entities.",
        "required" : [ "filterType", "tagFilter" ]
      },
      "TagInfo" : {
        "type" : "object",
        "description" : "Tag of a Dynatrace entity.",
        "properties" : {
          "context" : {
            "type" : "string",
            "description" : "The origin of the tag, such as AWS or Cloud Foundry. \n\n Custom tags use the `CONTEXTLESS` value.",
            "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_CLOUD", "KUBERNETES" ]
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the tag. \n\n Custom tags have the tag value here.",
            "maxLength" : 2000,
            "minLength" : 1
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the tag. \n\n Not applicable to custom tags.",
            "maxLength" : 2000,
            "minLength" : 0
          }
        },
        "required" : [ "context", "key" ]
      },
      "TakeSegmentsTransformation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "delimiter" : {
              "type" : "string",
              "description" : "The delimiter for splitting the detected value. The delimiter itself is not kept."
            },
            "segmentCount" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The number of elements to be kept.",
              "minimum" : 1
            },
            "takeFromEnd" : {
              "type" : "boolean",
              "description" : "Keeps the first (`false`) or last (`true`) elements. \n\n If not set, then `false` is used, keeping the first elements."
            }
          }
        } ],
        "description" : "The transformation of the `TAKE_SEGMENTS` type. \n\nThe transformation splits the detected value into an array and keeps the specified number of first or last elements.",
        "required" : [ "delimiter", "segmentCount" ]
      },
      "TechMonitoringList" : {
        "type" : "object",
        "description" : "A list of technology monitoring configurations.",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "technologies" : {
            "type" : "array",
            "description" : "A list of technology monitoring configurations.",
            "items" : {
              "$ref" : "#/components/schemas/Technology"
            }
          }
        },
        "required" : [ "technologies" ]
      },
      "Technology" : {
        "type" : "object",
        "description" : "Configuration of technology monitoring.",
        "properties" : {
          "monitoringEnabled" : {
            "type" : "boolean",
            "description" : "The monitoring of the technology is enabled (`true`) or disabled (`false`).",
            "example" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "The validity of the configuration: \n\n* `HOST`: The setting is valid for OneAgent on host only. Other OneAgents, connected to the same Dynatrace server may have different setting. \n* `ENVIRONMENT`: The setting is valid for all OneAgents, connected to the Dynatrace server.",
            "enum" : [ "ENVIRONMENT", "HOST" ],
            "example" : "ENVIRONMENT"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the technology.",
            "enum" : [ "AIX_KERNEL_EXT", "APACHE", "CIM_V2", "DOCKER", "DOCKER_WIN", "DOT_NET", "DOT_NET_CORE", "EXTENSIONS", "EXTENSIONS_DS_GENERIC", "EXTENSIONS_STATSD", "GARDEN", "GO", "GO_STATIC", "IBM_INTEGRATION_BUS", "IIS", "JAVA", "LOG_ANALYTICS", "NETTRACER", "NETWORK", "NGINX", "NODE_JS", "OPENTRACINGNATIVE", "PHP", "PHP_81", "PHP_CGI", "PHP_CLI", "PHP_CLI_SERVER", "PHP_WIN", "PROCESS", "RUBY", "SDK", "VARNISH", "Z_OS" ],
            "example" : "JAVA"
          }
        },
        "required" : [ "monitoringEnabled", "type" ]
      },
      "Tile" : {
        "type" : "object",
        "description" : "Configuration of a tile. \n\nThe actual set of fields depends on the type of the tile. Find the list of actual objects in the description of the **tileType** field or see [Dashboards API - Tile JSON models](https://dt-url.net/2wc3spx).",
        "discriminator" : {
          "propertyName" : "tileType"
        },
        "properties" : {
          "bounds" : {
            "$ref" : "#/components/schemas/TileBounds"
          },
          "configured" : {
            "type" : "boolean",
            "description" : "The tile is configured and ready to use (`true`) or just placed on the dashboard (`false`)."
          },
          "isAutoRefreshDisabled" : {
            "type" : "boolean",
            "description" : "The tile auto refresh is disabled. Only works for certain tile types."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the tile."
          },
          "nameSize" : {
            "type" : "string",
            "description" : "The size of the tile name. Default value is null.",
            "enum" : [ "small", "medium", "large" ]
          },
          "tileFilter" : {
            "$ref" : "#/components/schemas/TileFilter"
          },
          "tileType" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `DATA_EXPLORER` -> DataExplorerTile \n* `CUSTOM_CHARTING` -> CustomChartingTile \n* `DTAQL` -> UserSessionQueryTile \n* `MARKDOWN` -> MarkdownTile \n* `IMAGE` -> ImageTile \n* `HOSTS` -> FilterableEntityTile \n* `APPLICATIONS` -> FilterableEntityTile \n* `SERVICES` -> FilterableEntityTile \n* `DATABASES_OVERVIEW` -> FilterableEntityTile \n* `SYNTHETIC_TESTS` -> FilterableEntityTile \n* `APPLICATION_WORLDMAP` -> AssignedEntitiesWithMetricTile \n* `RESOURCES` -> AssignedEntitiesWithMetricTile \n* `THIRD_PARTY_MOST_ACTIVE` -> AssignedEntitiesWithMetricTile \n* `UEM_CONVERSIONS_PER_GOAL` -> AssignedEntitiesWithMetricTile \n* `HOST` -> AssignedEntitiesWithMetricTile \n* `PROCESS_GROUPS_ONE` -> AssignedEntitiesWithMetricTile \n* `SYNTHETIC_SINGLE_WEBCHECK` -> SyntheticSingleWebcheckTile \n* `APPLICATION` -> AssignedEntitiesTile \n* `VIRTUALIZATION` -> AssignedEntitiesTile \n* `AWS` -> AssignedEntitiesTile \n* `SERVICE_VERSATILE` -> AssignedEntitiesTile \n* `SESSION_METRICS` -> AssignedEntitiesTile \n* `USERS` -> AssignedEntitiesTile \n* `UEM_KEY_USER_ACTIONS` -> AssignedEntitiesTile \n* `BOUNCE_RATE` -> AssignedEntitiesTile \n* `UEM_CONVERSIONS_OVERALL` -> AssignedEntitiesTile \n* `UEM_JSERRORS_OVERALL` -> AssignedEntitiesTile \n* `MOBILE_APPLICATION` -> AssignedEntitiesTile \n* `SYNTHETIC_SINGLE_EXT_TEST` -> AssignedEntitiesTile \n* `SYNTHETIC_HTTP_MONITOR` -> AssignedEntitiesTile \n* `DATABASE` -> AssignedEntitiesTile \n* `CUSTOM_APPLICATION` -> AssignedEntitiesTile \n* `APPLICATION_METHOD` -> AssignedEntitiesTile \n* `LOG_ANALYTICS` -> AssignedEntitiesTile \n* `OPENSTACK` -> AssignedEntitiesTile \n* `OPENSTACK_PROJECT` -> AssignedEntitiesTile \n* `OPENSTACK_AV_ZONE` -> AssignedEntitiesTile \n* `DEVICE_APPLICATION_METHOD` -> AssignedEntitiesTile \n* `DEM_KEY_USER_ACTION` -> AssignedEntitiesTile \n* `SLO` -> AssignedEntitiesWithMetricTile \n* `SCALABLE_LIST` -> ScalableListTile \n* `HEADER` -> Tile \n* `OPEN_PROBLEMS` -> ProblemTile \n* `PURE_MODEL` -> Tile \n* `DOCKER` -> Tile \n* `NETWORK_MEDIUM` -> Tile \n* `APPLICATIONS_MOST_ACTIVE` -> Tile \n* `NETWORK` -> Tile \n* `UEM_ACTIVE_SESSIONS` -> Tile \n* `DCRUM_SERVICES` -> Tile \n",
            "enum" : [ "APPLICATION", "APPLICATIONS", "APPLICATIONS_MOST_ACTIVE", "APPLICATION_METHOD", "APPLICATION_WORLDMAP", "AWS", "BOUNCE_RATE", "CUSTOM_APPLICATION", "CUSTOM_CHARTING", "DATABASE", "DATABASES_OVERVIEW", "DATA_EXPLORER", "DCRUM_SERVICES", "DEM_KEY_USER_ACTION", "DEVICE_APPLICATION_METHOD", "DOCKER", "DTAQL", "HEADER", "HOST", "HOSTS", "IMAGE", "LOG_ANALYTICS", "MARKDOWN", "MOBILE_APPLICATION", "NETWORK", "NETWORK_MEDIUM", "OPENSTACK", "OPENSTACK_AV_ZONE", "OPENSTACK_PROJECT", "OPEN_PROBLEMS", "PROCESS_GROUPS_ONE", "PURE_MODEL", "RESOURCES", "SCALABLE_LIST", "SERVICES", "SERVICE_VERSATILE", "SESSION_METRICS", "SLO", "SYNTHETIC_HTTP_MONITOR", "SYNTHETIC_SINGLE_EXT_TEST", "SYNTHETIC_SINGLE_WEBCHECK", "SYNTHETIC_TESTS", "THIRD_PARTY_MOST_ACTIVE", "UEM_ACTIVE_SESSIONS", "UEM_CONVERSIONS_OVERALL", "UEM_CONVERSIONS_PER_GOAL", "UEM_JSERRORS_OVERALL", "UEM_KEY_USER_ACTIONS", "USERS", "VIRTUALIZATION" ]
          }
        },
        "required" : [ "bounds", "name", "tileType" ]
      },
      "TileBounds" : {
        "type" : "object",
        "description" : "The position and size of a tile.",
        "properties" : {
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The height of the tile, in pixels."
          },
          "left" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The horizontal distance from the top left corner of the dashboard to the top left corner of the tile, in pixels."
          },
          "top" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The vertical distance from the top left corner of the dashboard to the top left corner of the tile, in pixels."
          },
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The width of the tile, in pixels."
          }
        }
      },
      "TileFilter" : {
        "type" : "object",
        "description" : "A filter applied to a tile. \n\n It overrides dashboard's filter.",
        "properties" : {
          "managementZone" : {
            "$ref" : "#/components/schemas/EntityShortRepresentation"
          },
          "timeframe" : {
            "type" : "string",
            "description" : "The default timeframe of the tile."
          }
        }
      },
      "TimeoutSettings" : {
        "type" : "object",
        "description" : "Settings for timed action capture.",
        "properties" : {
          "temporaryActionLimit" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3."
          },
          "temporaryActionTotalTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The total timeout of all cascaded timeouts that should still be able to create a temporary action"
          },
          "timedActionSupport" : {
            "type" : "boolean",
            "description" : "Timed action support enabled/disabled. \n\nEnable to detect actions that trigger sending of XHRs via *setTimout* methods."
          }
        },
        "required" : [ "temporaryActionLimit", "temporaryActionTotalTimeout", "timedActionSupport" ]
      },
      "TokenCredentials" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Credentials"
        }, {
          "type" : "object",
          "properties" : {
            "externalVault" : {
              "$ref" : "#/components/schemas/ExternalVault"
            },
            "token" : {
              "type" : "string",
              "description" : "Token in the string format."
            }
          }
        } ],
        "description" : "A credentials set of the `TOKEN` type.",
        "required" : [ "name", "scopes" ]
      },
      "TrafficDropDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of traffic drops detection.",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "trafficDropPercent" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if the observed traffic is less than *X* % of the expected value.",
            "maximum" : 100,
            "minimum" : 0
          }
        },
        "required" : [ "enabled" ]
      },
      "TrafficSpikeDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of traffic spikes detection.",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "trafficSpikePercent" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Alert if the observed traffic is more than *X* % of the expected value.",
            "maximum" : 1000,
            "minimum" : 100
          }
        },
        "required" : [ "enabled" ]
      },
      "TransformationBase" : {
        "type" : "object",
        "description" : "Configuration of transformation of the detected value. \n\nIf several transformations are specified, they are handled sequentially from top to bottom. Each transformation is applied to the result of the preceding transformation. For example, the second transformation is applied to the result of the first transformation. \n\nThe actual set of fields depends on the type of the transformation. Find the list of actual objects in the description of the **type** field or see [Service detection API - JSON models](https://dt-url.net/2ie3slq).",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `BEFORE` -> BeforeTransformation \n* `AFTER` -> AfterTransformation \n* `BETWEEN` -> BetweenTransformation \n* `REPLACE_BETWEEN` -> ReplaceBetweenTransformation \n* `REMOVE_NUMBERS` -> RemoveNumbersTransformation \n* `REMOVE_CREDIT_CARDS` -> RemoveCreditCardNumbersTransformation \n* `REMOVE_IBANS` -> RemoveIBANsTransformation \n* `REMOVE_IPS` -> RemoveIPsTransformation \n* `SPLIT_SELECT` -> SplitSelectTransformation \n* `TAKE_SEGMENTS` -> TakeSegmentsTransformation \n",
            "enum" : [ "AFTER", "BEFORE", "BETWEEN", "REMOVE_CREDIT_CARDS", "REMOVE_IBANS", "REMOVE_IPS", "REMOVE_NUMBERS", "REPLACE_BETWEEN", "SPLIT_SELECT", "TAKE_SEGMENTS" ]
          }
        },
        "required" : [ "type" ]
      },
      "TrelloNotificationConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "applicationKey" : {
              "type" : "string",
              "description" : "The application key for the Trello account.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "authorizationToken" : {
              "type" : "string",
              "description" : "The application token for the Trello account.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "boardId" : {
              "type" : "string",
              "description" : "The Trello board to which the card should be assigned.",
              "minLength" : 1
            },
            "description" : {
              "type" : "string",
              "description" : "The description of the Trello card. \n\n You can use same placeholders as in card text.",
              "minLength" : 1
            },
            "listId" : {
              "type" : "string",
              "description" : "The Trello list to which the card should be assigned.",
              "minLength" : 1
            },
            "resolvedListId" : {
              "type" : "string",
              "description" : "The Trello list to which the card of the resolved problem should be assigned.",
              "minLength" : 1
            },
            "text" : {
              "type" : "string",
              "description" : "The text of the generated Trello card.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://dt-url.net/1yk3kkq) string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
              "minLength" : 1
            }
          }
        } ],
        "description" : "Configuration of the Trello notification.",
        "required" : [ "active", "alertingProfile", "applicationKey", "boardId", "description", "listId", "name", "resolvedListId", "text" ]
      },
      "UndersizedStorageDetectionConfig" : {
        "type" : "object",
        "description" : "Undersized storage device detection cofing",
        "properties" : {
          "customThresholds" : {
            "$ref" : "#/components/schemas/UndersizedStorageThresholds"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          }
        },
        "required" : [ "enabled" ]
      },
      "UndersizedStorageThresholds" : {
        "type" : "object",
        "description" : "Custom thresholds for undersized storage device. If not set then the automatic mode is used. \n\n Fulfillment of **any** condition triggers an alert.",
        "properties" : {
          "averageQueueCommandLatency" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Average queue command latency is higher than *X* milliseconds in 3 out of 5 samples.",
            "maximum" : 10000,
            "minimum" : 1
          },
          "peakQueueCommandLatency" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Peak queue command latency is higher than *X* milliseconds in 3 out of 5 samples.",
            "maximum" : 10000,
            "minimum" : 1
          }
        },
        "required" : [ "averageQueueCommandLatency", "peakQueueCommandLatency" ]
      },
      "UniversalTag" : {
        "type" : "object",
        "description" : "Use only request attributes from services that have this tag. Use either this or `managementZone`",
        "properties" : {
          "context" : {
            "type" : "string",
            "description" : "The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. \n\nThe context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set.",
            "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_COMPUTE_ENGINE", "KUBERNETES" ]
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the tag. For custom tags, put the tag value here.\n\nThe key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags."
          },
          "tagKey" : {
            "$ref" : "#/components/schemas/UniversalTagKey"
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the tag. Not applicable to custom tags. \n\nIf a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used."
          }
        },
        "required" : [ "key" ]
      },
      "UniversalTagKey" : {
        "type" : "object",
        "properties" : {
          "context" : {
            "type" : "string",
            "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_COMPUTE_ENGINE", "KUBERNETES" ]
          },
          "key" : {
            "type" : "string"
          }
        }
      },
      "UpdateWindow" : {
        "type" : "object",
        "description" : "Basic information about one maintenance window",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Identifier of maintenance window",
            "example" : "vu9U3hXa3q0AAAABADdkeW5hdHJhY2Uuc2V0dGluZ3MuZGVwbG95bWVudC5tYW5h",
            "minLength" : 1
          },
          "name" : {
            "type" : "string",
            "description" : "The name of maintenance window",
            "example" : "Daily maintenance window",
            "readOnly" : true
          }
        },
        "required" : [ "id" ]
      },
      "UpdateWindowsConfig" : {
        "type" : "object",
        "description" : "Basic information about all configured maintenance windows",
        "properties" : {
          "windows" : {
            "type" : "array",
            "description" : "List of maintenance windows when the OneAgent update can start. If there is no value and update should be performed, the update will start at earliest convenience.",
            "items" : {
              "$ref" : "#/components/schemas/UpdateWindow"
            },
            "maxItems" : 1,
            "minItems" : 0
          }
        },
        "required" : [ "windows" ]
      },
      "UrlPath" : {
        "type" : "object",
        "description" : "The contribution from the URL, where the web request has been detected, into service ID calculation. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field.",
        "properties" : {
          "transformations" : {
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/TransformationBase"
            },
            "maxItems" : 10,
            "minItems" : 0
          },
          "valueOverride" : {
            "type" : "string",
            "description" : "The value to be used instead of the detected value."
          }
        }
      },
      "UserActionAndSessionProperties" : {
        "type" : "object",
        "description" : "Defines userAction and session custom defined properties settings of an application.",
        "properties" : {
          "aggregation" : {
            "type" : "string",
            "description" : "The aggregation type of the property. \n\n  It defines how multiple values of the property are aggregated.",
            "enum" : [ "AVERAGE", "FIRST", "LAST", "MAXIMUM", "MINIMUM", "SUM" ]
          },
          "cleanupRule" : {
            "type" : "string",
            "description" : "The cleanup rule of the property. \n\nDefines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the property."
          },
          "ignoreCase" : {
            "type" : "boolean",
            "description" : "If true, the value of this property will always be stored in lower case. Defaults to false."
          },
          "key" : {
            "type" : "string",
            "description" : "Key of the property"
          },
          "longStringLength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "If the type is LONG_STRING, the max length for this property. Must be a multiple of 100. Defaults to 200.",
            "maximum" : 1000,
            "minimum" : 200
          },
          "metadataId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "If the origin is META_DATA, metaData id of the property"
          },
          "origin" : {
            "type" : "string",
            "description" : "The origin of the property",
            "enum" : [ "JAVASCRIPT_API", "META_DATA", "SERVER_SIDE_REQUEST_ATTRIBUTE" ]
          },
          "serverSideRequestAttribute" : {
            "type" : "string",
            "description" : "The ID of the request attribute. \n\nOnly applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`."
          },
          "storeAsSessionProperty" : {
            "type" : "boolean",
            "description" : "If `true`, the property is stored as a session property"
          },
          "storeAsUserActionProperty" : {
            "type" : "boolean",
            "description" : "If `true`, the property is stored as a user action property"
          },
          "type" : {
            "type" : "string",
            "description" : "The data type of the property.",
            "enum" : [ "DATE", "DOUBLE", "LONG", "LONG_STRING", "STRING" ]
          },
          "uniqueId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Unique id among all userTags and properties of this application",
            "minimum" : 1
          }
        },
        "required" : [ "key", "origin", "type", "uniqueId" ]
      },
      "UserActionDetails" : {
        "type" : "object",
        "description" : "Configuration of a user action-based conversion goal.",
        "properties" : {
          "actionType" : {
            "type" : "string",
            "description" : "Type of the action to which the rule applies.",
            "enum" : [ "Custom", "Load", "Xhr" ]
          },
          "caseSensitive" : {
            "type" : "boolean",
            "description" : "The match is case-sensitive (`true`) or (`false`)."
          },
          "matchEntity" : {
            "type" : "string",
            "description" : "The type of the entity to which the rule applies.",
            "enum" : [ "ActionName", "PageUrl" ]
          },
          "matchType" : {
            "type" : "string",
            "description" : "The operator of the match.",
            "enum" : [ "Begins", "Contains", "Ends" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to be matched to hit the conversion goal."
          }
        }
      },
      "UserActionFilter" : {
        "type" : "object",
        "description" : "User actions filter of the calculated web application metric. \n\nOnly user actions matching the provided criteria are used for metric calculation. \n\nA user action must match **all** the criteria.",
        "properties" : {
          "actionDurationFromMilliseconds" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation."
          },
          "actionDurationToMilliseconds" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation."
          },
          "apdex" : {
            "type" : "string",
            "description" : "Only actions with the specified Apdex score are included in the metric calculation.",
            "enum" : [ "Frustrated", "Satisfied", "Tolerating", "Unknown" ]
          },
          "browserFamily" : {
            "type" : "string",
            "description" : "Only user actions coming from the specified browser family are included in the metric calculation.  \n\n The EQUALS operator applies."
          },
          "browserType" : {
            "type" : "string",
            "description" : "Only user actions coming from the specified browser type are included in the metric calculation.  \n\n The EQUALS operator applies."
          },
          "browserVersion" : {
            "type" : "string",
            "description" : "Only user actions coming from the specified browser version are included in the metric calculation.  \n\n The EQUALS operator applies."
          },
          "city" : {
            "type" : "string",
            "description" : "Only actions of users from this city are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "continent" : {
            "type" : "string",
            "description" : "Only actions of users from this continent are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "country" : {
            "type" : "string",
            "description" : "Only actions of users from this country are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "customAction" : {
            "type" : "boolean",
            "description" : "The status of custom actions in the metric calculation: \n\n* `true`: Custom actions are included. \n* `false`: All actions are included."
          },
          "customErrorName" : {
            "type" : "string",
            "description" : "The custom error name of the actions to be included in the metric calculation."
          },
          "customErrorType" : {
            "type" : "string",
            "description" : "The custom error type of the actions to be included in the metric calculation."
          },
          "domain" : {
            "type" : "string",
            "description" : "Only user actions coming from the specified domain are included in the metric calculation. \n\n The EQUALS operator applies."
          },
          "hasAnyError" : {
            "type" : "boolean",
            "description" : "The error status of the actions to be included in the metric calculation: \n\n* `true`: Only actions that have any errors are included. \n* `false`: All actions are included."
          },
          "hasCustomErrors" : {
            "type" : "boolean",
            "description" : "The custom error status of the actions to be included in the metric calculation: \n\n* `true`: Only actions with custom errors are included. \n* `false`: All actions are included."
          },
          "hasHttpErrors" : {
            "type" : "boolean",
            "description" : "The request error status of the actions to be included in the metric calculation: \n\n* `true`: Only actions with request errors (HTTP errors, failed images, CSP rule violations) are included. \n* `false`: All actions are included."
          },
          "hasJavascriptErrors" : {
            "type" : "boolean",
            "description" : "The JavaScript error status of the actions to be included in the metric calculation: \n\n* `true`: Only actions with JavaScript errors are included. \n* `false`: All actions are included."
          },
          "httpErrorCode" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The HTTP error status code of the actions to be included in the metric calculation."
          },
          "httpErrorCodeTo" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Can be used in combination with `httpErrorCode` to define a range of error codes that will be included in the metric calculation."
          },
          "httpPath" : {
            "type" : "string",
            "description" : "The request path that has been determined to be the origin of an HTTP error of the actions to be included in the metric calculation."
          },
          "ip" : {
            "type" : "string",
            "description" : "Only actions coming from this IP address are included in the metric calculation. \n\n  The EQUALS operator applies."
          },
          "ipV6Traffic" : {
            "type" : "boolean",
            "description" : "The IPv6 status of the actions to be included in the metric calculation: \n\n* `true`: Only actions coming from IPv6 are included. \n* `false`: All actions are included."
          },
          "loadAction" : {
            "type" : "boolean",
            "description" : "The status of load actions in the metric calculation: \n\n* `true`: Load actions are included. \n* `false`: All actions are included."
          },
          "osFamily" : {
            "type" : "string",
            "description" : "Only actions coming from this OS family are included in the metric calculation. \n\n Specify the OS ID here."
          },
          "osVersion" : {
            "type" : "string",
            "description" : "Only actions coming from this OS version are included in the metric calculation. \n\n Specify the OS ID here."
          },
          "realUser" : {
            "type" : "boolean",
            "description" : "The status of actions coming from real users in the metric calculation: \n\n* `true`: Only actions from real users are included. \n* `false`: All actions are included."
          },
          "region" : {
            "type" : "string",
            "description" : "Only actions of users from this region are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "robot" : {
            "type" : "boolean",
            "description" : "The status of actions coming from robots in the metric calculation: \n\n* `true`: Only actions from robots are included. \n* `false`: All actions are included."
          },
          "synthetic" : {
            "type" : "boolean",
            "description" : "The status of actions coming from synthetic monitors in the metric calculation: \n\n* `true`: Only actions from synthetic monitors are included. \n* `false`: All actions are included."
          },
          "targetViewGroup" : {
            "type" : "string",
            "description" : "Only actions on the specified group of views are included in the metric calculation."
          },
          "targetViewGroupNameMatchType" : {
            "type" : "string",
            "description" : "Specifies the match type of the view group filter, e.g. using `Contains` or `Equals`. Defaults to `Equals`.",
            "enum" : [ "Contains", "Equals" ]
          },
          "targetViewName" : {
            "type" : "string",
            "description" : "Only actions on the specified view are included in the metric calculation."
          },
          "targetViewNameMatchType" : {
            "type" : "string",
            "description" : "Specifies the match type of the view name filter, e.g. using `Contains` or `Equals`. Defaults to `Equals`.",
            "enum" : [ "Contains", "Equals" ]
          },
          "userActionName" : {
            "type" : "string",
            "description" : "Only actions with this name are included in the metric calculation. \n\n The EQUALS operator applies."
          },
          "userActionProperties" : {
            "type" : "array",
            "description" : "Only actions with the specified properties are included in the metric calculation.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionPropertyFilter"
            },
            "maxItems" : 10,
            "minItems" : 0
          },
          "xhrAction" : {
            "type" : "boolean",
            "description" : "The status of XHR actions in the metric calculation: \n\n* `true`: XHR actions are included. \n* `false`: All actions are included."
          },
          "xhrRouteChangeAction" : {
            "type" : "boolean",
            "description" : "The status of route change actions in the metric calculation: \n\n* `true`: Route change actions are included. \n* `false`: All actions are included."
          }
        }
      },
      "UserActionNamingPlaceholder" : {
        "type" : "object",
        "description" : "The placeholder settings.",
        "properties" : {
          "input" : {
            "type" : "string",
            "description" : "Input.",
            "enum" : [ "ELEMENT_IDENTIFIER", "INPUT_TYPE", "METADATA", "PAGE_TITLE", "PAGE_URL", "SOURCE_URL", "TOP_XHR_URL", "XHR_URL" ]
          },
          "metadataId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Id of the metadata."
          },
          "name" : {
            "type" : "string",
            "description" : "Placeholder name.",
            "maxLength" : 50,
            "minLength" : 1
          },
          "processingPart" : {
            "type" : "string",
            "description" : "Part.",
            "enum" : [ "ALL", "ANCHOR", "PATH" ]
          },
          "processingSteps" : {
            "type" : "array",
            "description" : "Processing actions.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionNamingPlaceholderProcessingStep"
            }
          },
          "useGuessedElementIdentifier" : {
            "type" : "boolean",
            "description" : "Use the element identifier that was selected by Dynatrace."
          }
        },
        "required" : [ "input", "name", "processingPart", "useGuessedElementIdentifier" ]
      },
      "UserActionNamingPlaceholderProcessingStep" : {
        "type" : "object",
        "description" : "The processing step settings.",
        "properties" : {
          "fallbackToInput" : {
            "type" : "boolean",
            "description" : "If set to true: Returns the input if **patternBefore** or **patternAfter** cannot be found and the **type** is `SUBSTRING`. \n\n Returns the input if **regularExpression** doesn't match and **type** is `EXTRACT_BY_REGULAR_EXPRESSION`. \n\n Otherwise null is returned."
          },
          "patternAfter" : {
            "type" : "string",
            "description" : "The pattern after the required value. It will be removed."
          },
          "patternAfterSearchType" : {
            "type" : "string",
            "description" : "The required occurrence of **patternAfter**.",
            "enum" : [ "FIRST", "LAST" ]
          },
          "patternBefore" : {
            "type" : "string",
            "description" : "The pattern before the required value. It will be removed."
          },
          "patternBeforeSearchType" : {
            "type" : "string",
            "description" : "The required occurrence of **patternBefore**.",
            "enum" : [ "FIRST", "LAST" ]
          },
          "patternToReplace" : {
            "type" : "string",
            "description" : "The pattern to be replaced. \n\n Only applicable if the **type** is `REPLACE_WITH_PATTERN`."
          },
          "regularExpression" : {
            "type" : "string",
            "description" : "A regular expression for the string to be extracted or replaced. \n\n Only applicable if the **type** is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`."
          },
          "replacement" : {
            "type" : "string",
            "description" : "Replacement for the original value."
          },
          "type" : {
            "type" : "string",
            "description" : "An action to be taken by the processing: \n\n* `SUBSTRING`: Extracts the string between **patternBefore** and **patternAfter**. \n* `REPLACEMENT`: Replaces the string between **patternBefore** and **patternAfter** with the specified **replacement**.\n* `REPLACE_WITH_PATTERN`: Replaces the **patternToReplace** with the specified **replacement**. \n* `EXTRACT_BY_REGULAR_EXPRESSION`: Extracts the part of the string that matches the **regularExpression**. \n* `REPLACE_WITH_REGULAR_EXPRESSION`: Replaces all occurrences that match **regularExpression** with the specified **replacement**. \n* `REPLACE_IDS`: Replaces all IDs and UUIDs with the specified **replacement**.",
            "enum" : [ "EXTRACT_BY_REGULAR_EXPRESSION", "REPLACEMENT", "REPLACE_IDS", "REPLACE_WITH_PATTERN", "REPLACE_WITH_REGULAR_EXPRESSION", "SUBSTRING" ]
          }
        },
        "required" : [ "type" ]
      },
      "UserActionNamingRule" : {
        "type" : "object",
        "description" : "The settings of naming rule.",
        "properties" : {
          "conditions" : {
            "type" : "array",
            "description" : "Defines the conditions when the naming rule should apply.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionNamingRuleCondition"
            }
          },
          "template" : {
            "type" : "string",
            "description" : "Naming pattern. Use Curly brackets `{}` to select placeholders.",
            "minLength" : 1
          },
          "useOrConditions" : {
            "type" : "boolean",
            "description" : "If set to `true` the conditions will be connected by logical OR instead of logical AND."
          }
        },
        "required" : [ "template" ]
      },
      "UserActionNamingRuleCondition" : {
        "type" : "object",
        "description" : "The settings of conditions for user action naming.",
        "properties" : {
          "operand1" : {
            "type" : "string",
            "description" : "Must be a defined placeholder wrapped in curly braces",
            "minLength" : 1
          },
          "operand2" : {
            "type" : "string",
            "description" : "Must be null if operator is \"IS_EMPTY\", a regex if operator is \"MATCHES_REGULAR_ERPRESSION\". In all other cases the value can be a freetext or a placeholder wrapped in curly braces"
          },
          "operator" : {
            "type" : "string",
            "description" : "The operator of the condition",
            "enum" : [ "CONTAINS", "ENDS_WITH", "EQUALS", "IS_EMPTY", "IS_NOT_EMPTY", "MATCHES_REGULAR_EXPRESSION", "NOT_CONTAINS", "NOT_ENDS_WITH", "NOT_EQUALS", "NOT_MATCHES_REGULAR_EXPRESSION", "NOT_STARTS_WITH", "STARTS_WITH" ]
          }
        },
        "required" : [ "operand1", "operator" ]
      },
      "UserActionNamingSettings" : {
        "type" : "object",
        "description" : "The settings of user action naming.",
        "properties" : {
          "customActionNamingRules" : {
            "type" : "array",
            "description" : "User action naming rules for custom actions.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionNamingRule"
            }
          },
          "ignoreCase" : {
            "type" : "boolean",
            "description" : "Case insensitive naming."
          },
          "loadActionNamingRules" : {
            "type" : "array",
            "description" : "User action naming rules for loading actions.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionNamingRule"
            }
          },
          "placeholders" : {
            "type" : "array",
            "description" : "User action placeholders.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionNamingPlaceholder"
            }
          },
          "queryParameterCleanups" : {
            "type" : "array",
            "description" : "List of parameters that should be removed from the query before using the query in the user action name.",
            "items" : {
              "type" : "string"
            }
          },
          "splitUserActionsByDomain" : {
            "type" : "boolean",
            "description" : "Deactivate this setting if different domains should not result in separate user actions."
          },
          "useFirstDetectedLoadAction" : {
            "type" : "boolean",
            "description" : "First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used"
          },
          "xhrActionNamingRules" : {
            "type" : "array",
            "description" : "User action naming rules for xhr actions.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionNamingRule"
            }
          }
        }
      },
      "UserActionPropertyFilter" : {
        "type" : "object",
        "description" : "User action property filter.",
        "properties" : {
          "from" : {
            "type" : "number",
            "format" : "double",
            "description" : "Only actions that have a value greater than or equal to this are included in the metric calculation. \n\n Only applicable to numerical values."
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the action property we're checking."
          },
          "matchType" : {
            "type" : "string",
            "description" : "Specifies the match type of a string filter, e.g. using `Contains` or `Equals`. \n\n Only applicable to string values.",
            "enum" : [ "Contains", "Equals" ]
          },
          "to" : {
            "type" : "number",
            "format" : "double",
            "description" : "Only actions that have a value less than or equal to this are included in the metric calculation. \n\n Only applicable to numerical values."
          },
          "value" : {
            "type" : "string",
            "description" : "Only actions that have this value in the specified property are included in the metric calculation. \n\n Only applicable to string values."
          }
        }
      },
      "UserPasswordCredentials" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Credentials"
        }, {
          "type" : "object",
          "properties" : {
            "externalVault" : {
              "$ref" : "#/components/schemas/ExternalVault"
            },
            "password" : {
              "type" : "string",
              "description" : "The password of the credential."
            },
            "user" : {
              "type" : "string",
              "description" : "The username of the credentials set."
            }
          }
        } ],
        "description" : "A credentials set of the `USERNAME_PASSWORD` type.",
        "required" : [ "name", "scopes" ]
      },
      "UserSessionQueryTile" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "customName" : {
              "type" : "string",
              "description" : "The name of the tile, set by user."
            },
            "limit" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "The limit of the results, if not set will use the default value of the system"
            },
            "query" : {
              "type" : "string",
              "description" : "A [user session query](https://dt-url.net/dtusql) executed by the tile."
            },
            "timeFrameShift" : {
              "type" : "string",
              "description" : "The comparison timeframe of the query. \n\n If specified, you additionally get the results of the same query with the specified time shift."
            },
            "type" : {
              "type" : "string",
              "description" : "The visualization of the tile.",
              "enum" : [ "COLUMN_CHART", "FUNNEL", "LINE_CHART", "NOT_CONFIGURED", "PIE_CHART", "SINGLE_VALUE", "TABLE" ]
            },
            "visualizationConfig" : {
              "$ref" : "#/components/schemas/UserSessionQueryTileConfiguration"
            }
          }
        } ],
        "description" : "Configuration of a User session query tile.",
        "required" : [ "bounds", "customName", "name", "query", "tileType", "type" ]
      },
      "UserSessionQueryTileConfiguration" : {
        "type" : "object",
        "description" : "Configuration of a User session query visualization tile.",
        "properties" : {
          "hasAxisBucketing" : {
            "type" : "boolean",
            "description" : "The axis bucketing when enabled groups similar series in the same virtual axis."
          }
        }
      },
      "UserTag" : {
        "type" : "object",
        "description" : "Defines UserTags settings of an application.",
        "properties" : {
          "cleanupRule" : {
            "type" : "string",
            "description" : "Cleanup rule expression of the userTag"
          },
          "ignoreCase" : {
            "type" : "boolean",
            "description" : "If true, the value of this tag will always be stored in lower case. Defaults to false."
          },
          "metadataId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "If it's of type metaData, metaData id of the userTag"
          },
          "serverSideRequestAttribute" : {
            "type" : "string",
            "description" : "requestAttribute Id of the userTag"
          },
          "uniqueId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "uniqueId, unique among all userTags and properties of this application",
            "minimum" : 1
          }
        },
        "required" : [ "uniqueId" ]
      },
      "VMwareAnomalyDetectionConfig" : {
        "type" : "object",
        "description" : "The configuration of the anomaly detection for VMware.",
        "example" : {
          "droppedPacketsDetection" : {
            "customThresholds" : {
              "droppedPacketsPerSecond" : 4
            },
            "enabled" : true
          },
          "esxiHighCpuSaturation" : {
            "customThresholds" : {
              "cpuPeakPercentage" : 90,
              "cpuUsagePercentage" : 80,
              "vmCpuReadyPercentage" : 10
            },
            "enabled" : true
          },
          "esxiHighMemoryDetection" : {
            "customThresholds" : {
              "compressionDecompressionRate" : 120
            },
            "enabled" : true
          },
          "lowDatastoreSpaceDetection" : {
            "customThresholds" : {
              "freeSpacePercentage" : 5
            },
            "enabled" : true
          },
          "metadata" : {
            "clusterVersion" : "Mock version",
            "configurationVersions" : [ 4, 2 ]
          },
          "overloadedStorageDetection" : {
            "customThresholds" : {
              "commandAbortsNumber" : 1
            },
            "enabled" : true
          },
          "slowPhysicalStorageDetection" : {
            "customThresholds" : {
              "avgReadWriteLatency" : 150,
              "peakReadWriteLatency" : 400
            },
            "enabled" : true
          },
          "undersizedStorageDetection" : {
            "customThresholds" : {
              "averageQueueCommandLatency" : 15,
              "peakQueueCommandLatency" : 160
            },
            "enabled" : true
          }
        },
        "properties" : {
          "droppedPacketsDetection" : {
            "$ref" : "#/components/schemas/DroppedPacketsDetectionConfig"
          },
          "esxiHighCpuSaturation" : {
            "$ref" : "#/components/schemas/EsxiHighCpuSaturationConfig"
          },
          "esxiHighMemoryDetection" : {
            "$ref" : "#/components/schemas/EsxiHighMemoryDetectionConfig"
          },
          "guestCpuLimitReached" : {
            "$ref" : "#/components/schemas/GuestCPULimitReachedConfig"
          },
          "lowDatastoreSpaceDetection" : {
            "$ref" : "#/components/schemas/LowDatastoreSpaceDetectionConfig"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "overloadedStorageDetection" : {
            "$ref" : "#/components/schemas/OverloadedStorageDetectionConfig"
          },
          "slowPhysicalStorageDetection" : {
            "$ref" : "#/components/schemas/SlowPhysicalStorageDetectionConfig"
          },
          "undersizedStorageDetection" : {
            "$ref" : "#/components/schemas/UndersizedStorageDetectionConfig"
          }
        },
        "required" : [ "droppedPacketsDetection", "esxiHighCpuSaturation", "esxiHighMemoryDetection", "lowDatastoreSpaceDetection", "overloadedStorageDetection", "slowPhysicalStorageDetection", "undersizedStorageDetection" ]
      },
      "ValueCondition" : {
        "type" : "object",
        "description" : "IBM integration bus label node name condition for which the value is captured.",
        "properties" : {
          "negate" : {
            "type" : "boolean",
            "description" : "Negate the comparison."
          },
          "operator" : {
            "type" : "string",
            "description" : "Operator comparing the extracted value to the comparison value.",
            "enum" : [ "BEGINS_WITH", "BEGINS_WITH_ANY_OF", "CONTAINS", "ENDS_WITH", "ENDS_WITH_ANY_OF", "EQUALS", "EQUALS_ANY_OF" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to."
          }
        },
        "required" : [ "negate", "operator", "value" ]
      },
      "ValueProcessing" : {
        "type" : "object",
        "description" : "Process values as specified.",
        "properties" : {
          "extractSubstring" : {
            "$ref" : "#/components/schemas/ExtractSubstring"
          },
          "splitAt" : {
            "type" : "string",
            "description" : "Split (preprocessed) string values at this separator."
          },
          "trim" : {
            "type" : "boolean",
            "description" : "Prune Whitespaces. Defaults to false."
          },
          "valueCondition" : {
            "$ref" : "#/components/schemas/ValueCondition"
          },
          "valueExtractorRegex" : {
            "type" : "string",
            "description" : "Extract value from captured data per regex."
          }
        },
        "required" : [ "trim" ]
      },
      "VictorOpsNotificationConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "apiKey" : {
              "type" : "string",
              "description" : "The API key for the target VictorOps account.",
              "maxLength" : 1000,
              "minLength" : 1
            },
            "message" : {
              "type" : "string",
              "description" : "The content of the message.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n",
              "minLength" : 1
            },
            "routingKey" : {
              "type" : "string",
              "description" : "The routing key, defining the group to be notified.",
              "maxLength" : 1000,
              "minLength" : 1
            }
          }
        } ],
        "description" : "Configuration of the VictorOps notification.",
        "required" : [ "active", "alertingProfile", "message", "name", "routingKey" ]
      },
      "VisitDurationDetails" : {
        "type" : "object",
        "description" : "Configuration of a visit duration-based conversion goal.",
        "properties" : {
          "durationInMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The duration of session to hit the conversion goal, in milliseconds."
          }
        },
        "required" : [ "durationInMillis" ]
      },
      "VisitNumActionDetails" : {
        "type" : "object",
        "description" : "Configuration of a number of user actions-based conversion goal.",
        "properties" : {
          "numUserActions" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of user actions to hit the conversion goal."
          }
        }
      },
      "VisualizationConfiguration" : {
        "type" : "object",
        "description" : "Configuration of a visualization.",
        "properties" : {
          "axes" : {
            "$ref" : "#/components/schemas/Axes"
          },
          "global" : {
            "$ref" : "#/components/schemas/VisualizationGlobalProperties"
          },
          "graphChartSettings" : {
            "$ref" : "#/components/schemas/GraphChartSettings"
          },
          "heatmapSettings" : {
            "$ref" : "#/components/schemas/HeatmapSettings"
          },
          "honeycombSettings" : {
            "$ref" : "#/components/schemas/HoneycombSettings"
          },
          "rules" : {
            "type" : "array",
            "description" : "Rules for Visualization",
            "items" : {
              "$ref" : "#/components/schemas/VisualizationRule"
            }
          },
          "singleValueSettings" : {
            "$ref" : "#/components/schemas/SingleValueSettings"
          },
          "tableSettings" : {
            "$ref" : "#/components/schemas/TableSettings"
          },
          "thresholds" : {
            "type" : "array",
            "description" : "Thresholds for Visualization",
            "items" : {
              "$ref" : "#/components/schemas/VisualizationThreshold"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The id of the query",
            "enum" : [ "GRAPH_CHART", "HEATMAP", "HONEYCOMB", "PIE_CHART", "SINGLE_VALUE", "STACKED_AREA", "STACKED_COLUMN", "TABLE", "TOP_LIST" ]
          }
        },
        "required" : [ "rules", "type" ]
      },
      "VisualizationGlobalProperties" : {
        "type" : "object",
        "description" : "Visualization global configuration",
        "properties" : {
          "hasTrendline" : {
            "type" : "boolean"
          },
          "hideLegend" : {
            "type" : "boolean"
          },
          "seriesType" : {
            "type" : "string",
            "enum" : [ "AREA", "COLUMN", "LINE", "STACKED_AREA", "STACKED_COLUMN" ]
          },
          "theme" : {
            "type" : "string",
            "enum" : [ "BLUE", "DEFAULT", "GRAY", "GREEN", "ORANGE", "PURPLE", "RED", "ROYALBLUE", "TURQUOISE", "YELLOW" ]
          },
          "threshold" : {
            "$ref" : "#/components/schemas/VisualizationThreshold"
          }
        }
      },
      "VisualizationProperties" : {
        "type" : "object",
        "properties" : {
          "alias" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "seriesType" : {
            "type" : "string",
            "enum" : [ "AREA", "COLUMN", "LINE", "STACKED_AREA", "STACKED_COLUMN" ]
          }
        }
      },
      "VisualizationRule" : {
        "type" : "object",
        "description" : "Rules for Visualization",
        "properties" : {
          "matcher" : {
            "type" : "string"
          },
          "properties" : {
            "$ref" : "#/components/schemas/VisualizationProperties"
          },
          "seriesOverrides" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VisualizationSerieOverride"
            }
          },
          "unitTransform" : {
            "type" : "string"
          },
          "valueFormat" : {
            "type" : "string"
          }
        },
        "required" : [ "matcher", "properties" ]
      },
      "VisualizationSerieOverride" : {
        "type" : "object",
        "properties" : {
          "color" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "color", "name" ]
      },
      "VisualizationThreshold" : {
        "type" : "object",
        "description" : "Thresholds for Visualization",
        "properties" : {
          "axisTarget" : {
            "type" : "string",
            "enum" : [ "LEFT", "RIGHT" ]
          },
          "columnId" : {
            "type" : "string"
          },
          "queryId" : {
            "type" : "string"
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VisualizationThresholdRule"
            }
          },
          "visible" : {
            "type" : "boolean"
          }
        },
        "required" : [ "rules" ]
      },
      "VisualizationThresholdRule" : {
        "type" : "object",
        "properties" : {
          "color" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "required" : [ "color" ]
      },
      "VisuallyComplete2Settings" : {
        "type" : "object",
        "description" : "Settings for VisuallyComplete2",
        "properties" : {
          "excludeUrlRegex" : {
            "type" : "string",
            "description" : "A RegularExpression used to exclude images and iframes from being detected by the VC module."
          },
          "ignoredMutationsList" : {
            "type" : "string",
            "description" : "Query selector for mutation nodes to ignore in VC and SI calculation"
          },
          "inactivityTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000.",
            "maximum" : 30000,
            "minimum" : 0
          },
          "mutationTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50.",
            "maximum" : 5000,
            "minimum" : 0
          },
          "threshold" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50.",
            "maximum" : 10000,
            "minimum" : 0
          }
        }
      },
      "WaterfallSettings" : {
        "type" : "object",
        "description" : "These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources.",
        "properties" : {
          "resourceBrowserCachingThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Warn about resources with a lower browser cache rate above *X*%.",
            "maximum" : 100,
            "minimum" : 1
          },
          "resourcesThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Warn about resources larger than *X* bytes.",
            "maximum" : 99999000,
            "minimum" : 0
          },
          "slowCdnResourcesThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Warn about slow CDN resources with a response time above *X* ms.",
            "maximum" : 99999000,
            "minimum" : 0
          },
          "slowFirstPartyResourcesThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Warn about slow 1st party resources with a response time above *X* ms.",
            "maximum" : 99999000,
            "minimum" : 0
          },
          "slowThirdPartyResourcesThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Warn about slow 3rd party resources with a response time above *X* ms.",
            "maximum" : 99999000,
            "minimum" : 0
          },
          "speedIndexVisuallyCompleteRatioThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Warn if Speed index exceeds *X* % of Visually complete.",
            "maximum" : 99,
            "minimum" : 1
          },
          "uncompressedResourcesThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Warn about uncompressed resources larger than *X* bytes.",
            "maximum" : 99999,
            "minimum" : 0
          }
        },
        "required" : [ "resourceBrowserCachingThreshold", "resourcesThreshold", "slowCdnResourcesThreshold", "slowFirstPartyResourcesThreshold", "slowThirdPartyResourcesThreshold", "speedIndexVisuallyCompleteRatioThreshold", "uncompressedResourcesThreshold" ]
      },
      "WebApplicationConfig" : {
        "type" : "object",
        "description" : "Configuration of a web application.",
        "example" : {
          "conversionGoals" : [ {
            "destinationDetails" : {
              "caseSensitive" : false,
              "matchType" : "Begins",
              "urlOrPath" : "url or path"
            },
            "name" : "conversionGoalName",
            "type" : "UserAction",
            "userActionDetails" : {
              "actionType" : "Load",
              "caseSensitive" : true,
              "matchEntity" : "ActionName",
              "matchType" : "Ends",
              "value" : "value to match"
            },
            "visitDurationDetails" : {
              "durationInMillis" : 1
            },
            "visitNumActionDetails" : {
              "numUserActions" : 2
            }
          } ],
          "costControlUserSessionPercentage" : 100,
          "customActionApdexSettings" : {
            "frustratingFallbackThreshold" : 12000,
            "frustratingThreshold" : 12000,
            "toleratedFallbackThreshold" : 3000,
            "toleratedThreshold" : 3000
          },
          "loadActionApdexSettings" : {
            "frustratingFallbackThreshold" : 12000,
            "frustratingThreshold" : 12000,
            "toleratedFallbackThreshold" : 3000,
            "toleratedThreshold" : 3000
          },
          "loadActionKeyPerformanceMetric" : "VISUALLY_COMPLETE",
          "metaDataCaptureSettings" : [ {
            "capturingName" : "variableName",
            "name" : "display name",
            "type" : "JAVA_SCRIPT_VARIABLE"
          } ],
          "monitoringSettings" : {
            "advancedJavaScriptTagSettings" : {
              "additionalEventHandlers" : {
                "blurEventHandler" : false,
                "changeEventHandler" : false,
                "clickEventHandler" : false,
                "maxDomNodesToInstrument" : 5000,
                "mouseupEventHandler" : false,
                "toStringMethod" : false,
                "userMouseupEventForClicks" : false
              },
              "eventWrapperSettings" : {
                "blur" : false,
                "change" : false,
                "click" : false,
                "mouseUp" : false,
                "touchEnd" : false,
                "touchStart" : false
              },
              "globalEventCaptureSettings" : {
                "additionalEventCapturedAsUserInput" : "",
                "click" : true,
                "doubleClick" : true,
                "keyDown" : true,
                "keyUp" : true,
                "mouseDown" : true,
                "mouseUp" : true,
                "scroll" : true
              },
              "instrumentUnsupportedAjaxFrameworks" : false,
              "maxActionNameLength" : 100,
              "maxErrorsToCapture" : 10,
              "specialCharactersToEscape" : "",
              "syncBeaconFirefox" : false,
              "syncBeaconInternetExplorer" : false
            },
            "browserRestrictionSettings" : {
              "browserRestrictions" : [ {
                "browserType" : "INTERNET_EXPLORER",
                "browserVersion" : "0",
                "comparator" : "EQUALS",
                "platform" : "ALL"
              } ],
              "mode" : "EXCLUDE"
            },
            "cacheControlHeaderOptimizations" : true,
            "contentCapture" : {
              "javaScriptErrors" : true,
              "resourceTimingSettings" : {
                "nonW3cResourceTimings" : false,
                "nonW3cResourceTimingsInstrumentationDelay" : 50,
                "w3cResourceTimings" : true
              },
              "timeoutSettings" : {
                "temporaryActionLimit" : 0,
                "temporaryActionTotalTimeout" : 100,
                "timedActionSupport" : false
              },
              "visuallyCompleteAndSpeedIndex" : true
            },
            "cookiePlacementDomain" : "",
            "correlationHeaderInclusionRegex" : "",
            "customConfigurationProperties" : "",
            "excludeXhrRegex" : "",
            "fetchRequests" : true,
            "injectionMode" : "JAVASCRIPT_TAG",
            "ipAddressRestrictionSettings" : {
              "ipAddressRestrictions" : [ {
                "address" : "10.0.0.1",
                "subnetMask" : 3
              }, {
                "address" : "10.0.0.1",
                "addressTo" : "10.0.0.2"
              } ],
              "mode" : "EXCLUDE"
            },
            "javaScriptFrameworkSupport" : {
              "activeXObject" : false,
              "angular" : true,
              "dojo" : false,
              "extJS" : false,
              "icefaces" : false,
              "jQuery" : true,
              "mooTools" : false,
              "prototype" : true
            },
            "javaScriptInjectionRules" : [ {
              "enabled" : true,
              "htmlPattern" : "</title>",
              "rule" : "AFTER_SPECIFIC_HTML",
              "urlOperator" : "CONTAINS",
              "urlPattern" : "/lorem/ipsum.jsp"
            } ],
            "libraryFileLocation" : "",
            "monitoringDataPath" : "",
            "secureCookieAttribute" : false,
            "serverRequestPathId" : "",
            "xmlHttpRequest" : true
          },
          "name" : "application name",
          "realUserMonitoringEnabled" : true,
          "sessionReplayConfig" : {
            "costControlPercentage" : 100,
            "cssResourceCapturingExclusionRules" : [ "rule" ],
            "enableCssResourceCapturing" : true,
            "enabled" : true
          },
          "type" : "AUTO_INJECTED",
          "userActionNamingSettings" : {
            "ignoreCase" : true,
            "loadActionNamingRules" : [ {
              "conditions" : [ {
                "operand1" : "{myPlaceholder}",
                "operand2" : "foo",
                "operator" : "CONTAINS"
              } ],
              "template" : "Loading of {myPlaceholder}"
            } ],
            "placeholders" : [ {
              "input" : "PAGE_URL",
              "name" : "myPlaceholder",
              "processingPart" : "ALL",
              "processingSteps" : [ {
                "patternAfter" : ".*a",
                "patternAfterSearchType" : "LAST",
                "patternBefore" : ".*b",
                "patternBeforeSearchType" : "FIRST",
                "replacement" : "value",
                "type" : "SUBSTRING"
              } ],
              "useGuessedElementIdentifier" : false
            } ],
            "splitUserActionsByDomain" : true,
            "xhrActionNamingRules" : [ {
              "conditions" : [ {
                "operand1" : "{myPlaceholder}",
                "operand2" : "foo",
                "operator" : "CONTAINS"
              } ],
              "template" : "Loading of {myPlaceholder}"
            } ]
          },
          "waterfallSettings" : {
            "resourceBrowserCachingThreshold" : 50,
            "resourcesThreshold" : 100000,
            "slowCdnResourcesThreshold" : 200000,
            "slowFirstPartyResourcesThreshold" : 200000,
            "slowThirdPartyResourcesThreshold" : 200000,
            "speedIndexVisuallyCompleteRatioThreshold" : 50,
            "uncompressedResourcesThreshold" : 860
          },
          "xhrActionApdexSettings" : {
            "frustratingFallbackThreshold" : 12000,
            "frustratingThreshold" : 10000,
            "toleratedFallbackThreshold" : 3000,
            "toleratedThreshold" : 2500
          },
          "xhrActionKeyPerformanceMetric" : "ACTION_DURATION"
        },
        "properties" : {
          "conversionGoals" : {
            "type" : "array",
            "description" : "A list of conversion goals of the application.",
            "items" : {
              "$ref" : "#/components/schemas/ConversionGoal"
            }
          },
          "costControlUserSessionPercentage" : {
            "type" : "number",
            "description" : "Analize *X*% of user sessions.",
            "maximum" : 100,
            "minimum" : 0
          },
          "customActionApdexSettings" : {
            "$ref" : "#/components/schemas/Apdex"
          },
          "identifier" : {
            "type" : "string",
            "description" : "Dynatrace entity ID of the web application.",
            "readOnly" : true
          },
          "loadActionApdexSettings" : {
            "$ref" : "#/components/schemas/Apdex"
          },
          "loadActionKeyPerformanceMetric" : {
            "type" : "string",
            "description" : "The key performance metric of load actions.",
            "enum" : [ "ACTION_DURATION", "CUMULATIVE_LAYOUT_SHIFT", "DOM_INTERACTIVE", "FIRST_INPUT_DELAY", "LARGEST_CONTENTFUL_PAINT", "LOAD_EVENT_END", "LOAD_EVENT_START", "RESPONSE_END", "RESPONSE_START", "SPEED_INDEX", "VISUALLY_COMPLETE" ]
          },
          "metaDataCaptureSettings" : {
            "type" : "array",
            "description" : "Java script agent meta data capture settings.",
            "items" : {
              "$ref" : "#/components/schemas/MetaDataCapturing"
            }
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "monitoringSettings" : {
            "$ref" : "#/components/schemas/MonitoringSettings"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the web application, displayed in the UI.",
            "maxLength" : 255,
            "minLength" : 0
          },
          "realUserMonitoringEnabled" : {
            "type" : "boolean",
            "description" : "Real user monitoring enabled/disabled."
          },
          "sessionReplayConfig" : {
            "$ref" : "#/components/schemas/SessionReplaySetting"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the web application.",
            "enum" : [ "AUTO_INJECTED", "BROWSER_EXTENSION_INJECTED", "MANUALLY_INJECTED" ]
          },
          "urlInjectionPattern" : {
            "type" : "string",
            "description" : "Url injection pattern for manual web application."
          },
          "userActionAndSessionProperties" : {
            "type" : "array",
            "description" : "User action and session properties settings. Empty List means no change",
            "items" : {
              "$ref" : "#/components/schemas/UserActionAndSessionProperties"
            }
          },
          "userActionNamingSettings" : {
            "$ref" : "#/components/schemas/UserActionNamingSettings"
          },
          "userTags" : {
            "type" : "array",
            "description" : "User tags settings.",
            "items" : {
              "$ref" : "#/components/schemas/UserTag"
            }
          },
          "waterfallSettings" : {
            "$ref" : "#/components/schemas/WaterfallSettings"
          },
          "xhrActionApdexSettings" : {
            "$ref" : "#/components/schemas/Apdex"
          },
          "xhrActionKeyPerformanceMetric" : {
            "type" : "string",
            "description" : "The key performance metric of XHR actions.",
            "enum" : [ "ACTION_DURATION", "RESPONSE_END", "RESPONSE_START", "VISUALLY_COMPLETE" ]
          }
        },
        "required" : [ "costControlUserSessionPercentage", "customActionApdexSettings", "loadActionApdexSettings", "loadActionKeyPerformanceMetric", "monitoringSettings", "name", "realUserMonitoringEnabled", "waterfallSettings", "xhrActionApdexSettings", "xhrActionKeyPerformanceMetric" ]
      },
      "WebApplicationConfigBrowserRestriction" : {
        "type" : "object",
        "description" : "Browser exclusion rules for the browsers that are to be excluded.",
        "properties" : {
          "browserType" : {
            "type" : "string",
            "description" : "The type of the browser that is used.",
            "enum" : [ "ANDROID_WEBKIT", "BOTS_SPIDERS", "CHROME", "EDGE", "FIREFOX", "INTERNET_EXPLORER", "OPERA", "SAFARI" ]
          },
          "browserVersion" : {
            "type" : "string",
            "description" : "The version of the browser that is used."
          },
          "comparator" : {
            "type" : "string",
            "description" : "Compares different browsers together.",
            "enum" : [ "EQUALS", "GREATER_THAN_OR_EQUAL", "LOWER_THAN_OR_EQUAL" ]
          },
          "platform" : {
            "type" : "string",
            "description" : "The platform on which the browser is being used.",
            "enum" : [ "ALL", "DESKTOP", "MOBILE" ]
          }
        },
        "required" : [ "browserType" ]
      },
      "WebApplicationConfigBrowserRestrictionSettings" : {
        "type" : "object",
        "description" : "Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode.",
        "properties" : {
          "browserRestrictions" : {
            "type" : "array",
            "description" : "A list of browser restrictions.",
            "items" : {
              "$ref" : "#/components/schemas/WebApplicationConfigBrowserRestriction"
            }
          },
          "mode" : {
            "type" : "string",
            "description" : "The mode of the list of browser restrictions.",
            "enum" : [ "EXCLUDE", "INCLUDE" ]
          }
        },
        "required" : [ "mode" ]
      },
      "WebApplicationConfigIpAddressRestrictionSettings" : {
        "type" : "object",
        "description" : "Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode.",
        "properties" : {
          "ipAddressRestrictions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IpAddressRange"
            }
          },
          "mode" : {
            "type" : "string",
            "description" : "The mode of the list of ip address restrictions.",
            "enum" : [ "EXCLUDE", "INCLUDE" ]
          }
        },
        "required" : [ "mode" ]
      },
      "WebApplicationDimensionDefinition" : {
        "type" : "object",
        "description" : "Dimension of the calculated web application metrics.",
        "properties" : {
          "dimension" : {
            "type" : "string",
            "description" : "The dimension of the metric.",
            "enum" : [ "ApdexType", "Browser", "ErrorContext", "ErrorOrigin", "ErrorType", "GeoLocation", "StringProperty", "UserActionType" ]
          },
          "propertyKey" : {
            "type" : "string",
            "description" : "The key of the user action property. \n\n Only applicable for the `StringProperty` dimension."
          },
          "topX" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of top values to be calculated.",
            "maximum" : 200,
            "minimum" : 1
          }
        },
        "required" : [ "dimension", "topX" ]
      },
      "WebApplicationMetric" : {
        "type" : "object",
        "description" : "Descriptor of the calculated web application metric.",
        "example" : {
          "applicationIdentifier" : "APPLICATION-1234",
          "dimensions" : [ {
            "dimension" : "GeoLocation",
            "topX" : 20
          } ],
          "enabled" : true,
          "metricDefinition" : {
            "metric" : "UserActionDuration"
          },
          "metricKey" : "calc:apps.web.mymetric",
          "name" : "MyMetric",
          "userActionFilter" : {
            "browserType" : "BROWSER-1234",
            "country" : "GEOLOCATION-1234",
            "loadAction" : true
          }
        },
        "properties" : {
          "applicationIdentifier" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the application to which the metric belongs."
          },
          "dimensions" : {
            "type" : "array",
            "description" : "A list of metric dimensions.",
            "items" : {
              "$ref" : "#/components/schemas/WebApplicationDimensionDefinition"
            },
            "maxItems" : 2,
            "minItems" : 0
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          },
          "metricDefinition" : {
            "$ref" : "#/components/schemas/WebApplicationMetricDefinition"
          },
          "metricKey" : {
            "type" : "string",
            "description" : "The unique key of the metric. \n\n The key must have the `calc:apps` prefix."
          },
          "name" : {
            "type" : "string",
            "description" : "The displayed name of the metric.",
            "maxLength" : 100,
            "minLength" : 0
          },
          "userActionFilter" : {
            "$ref" : "#/components/schemas/UserActionFilter"
          }
        },
        "required" : [ "applicationIdentifier", "enabled", "metricDefinition", "metricKey", "name" ]
      },
      "WebApplicationMetricDefinition" : {
        "type" : "object",
        "description" : "Definition of the web application metric.",
        "properties" : {
          "metric" : {
            "type" : "string",
            "description" : "The type of the web application metric.",
            "enum" : [ "Apdex", "ApplicationCache", "Callback", "CumulativeLayoutShift", "DNSLookup", "DOMComplete", "DOMContentLoaded", "DOMInteractive", "DoubleProperty", "ErrorCount", "FirstContentfulPaint", "FirstInputDelay", "FirstInputStart", "FirstPaint", "HTMLDownloaded", "LargestContentfulPaint", "LoadEventEnd", "LoadEventStart", "LongProperty", "LongTasksTime", "NavigationStart", "OnDOMContentLoaded", "OnLoad", "Processing", "RedirectTime", "Request", "RequestStart", "Response", "SecureConnect", "SpeedIndex", "TCPConnect", "TimeToFirstByte", "UserActionDuration", "VisuallyComplete" ]
          },
          "propertyKey" : {
            "type" : "string",
            "description" : "The key of the user action property. \n\n Only applicable for `DoubleProperty` and `LongProperty` metrics."
          }
        },
        "required" : [ "metric" ]
      },
      "WebApplicationMetricUpdate" : {
        "type" : "object",
        "description" : "The update of the calculated web application metric.",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          }
        }
      },
      "WebHookNotificationConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "acceptAnyCertificate" : {
              "type" : "boolean",
              "description" : "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates."
            },
            "headers" : {
              "type" : "array",
              "description" : "A list of the additional HTTP headers.",
              "items" : {
                "$ref" : "#/components/schemas/HttpHeader"
              }
            },
            "notifyEventMergesEnabled" : {
              "type" : "boolean",
              "description" : "Call webhook if new events merge into existing problems."
            },
            "payload" : {
              "type" : "string",
              "description" : "The content of the notification message.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string. \n* `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://dt-url.net/1yk3kkq) string. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
              "minLength" : 1
            },
            "url" : {
              "type" : "string",
              "description" : "The URL of the WebHook endpoint.",
              "maxLength" : 1000,
              "minLength" : 0
            }
          }
        } ],
        "description" : "Configuration of the custom WebHook notification.",
        "required" : [ "acceptAnyCertificate", "active", "alertingProfile", "name", "payload", "url" ]
      },
      "WebServiceName" : {
        "type" : "object",
        "description" : "The contribution to the service ID calculation from the detected web service name. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field.",
        "properties" : {
          "transformations" : {
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/TransformationBase"
            },
            "maxItems" : 10,
            "minItems" : 0
          },
          "valueOverride" : {
            "type" : "string",
            "description" : "The value to be used instead of the detected value."
          }
        }
      },
      "WebServiceNameSpace" : {
        "type" : "object",
        "description" : "The contribution to the service ID calculation from the detected web service name space. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field.",
        "properties" : {
          "transformations" : {
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/TransformationBase"
            },
            "maxItems" : 10,
            "minItems" : 0
          },
          "valueOverride" : {
            "type" : "string",
            "description" : "The value to be used instead of the detected value."
          }
        }
      },
      "XMattersNotificationConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "acceptAnyCertificate" : {
              "type" : "boolean",
              "description" : "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates."
            },
            "headers" : {
              "type" : "array",
              "description" : "A list of the additional HTTP headers.",
              "items" : {
                "$ref" : "#/components/schemas/HttpHeader"
              }
            },
            "payload" : {
              "type" : "string",
              "description" : "The content of the message.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string. \n* `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://dt-url.net/1yk3kkq) string. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
              "maxLength" : 600,
              "minLength" : 1
            },
            "url" : {
              "type" : "string",
              "description" : "The URL of the xMatters WebHook.",
              "maxLength" : 1000,
              "minLength" : 1
            }
          }
        } ],
        "description" : "Configuration of the xMatters notification.",
        "required" : [ "acceptAnyCertificate", "active", "alertingProfile", "name", "payload", "url" ]
      },
      "YAxis" : {
        "type" : "object",
        "description" : "y Axes configuration",
        "properties" : {
          "defaultAxis" : {
            "type" : "boolean"
          },
          "displayName" : {
            "type" : "string"
          },
          "max" : {
            "type" : "string"
          },
          "min" : {
            "type" : "string"
          },
          "position" : {
            "type" : "string",
            "enum" : [ "LEFT", "RIGHT" ]
          },
          "queryIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "visible" : {
            "type" : "boolean"
          }
        },
        "required" : [ "max", "min", "position", "queryIds" ]
      },
      "ZosComparisonInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "CTG", "DPL", "EXPLICIT_ADK", "HTTP", "IMS_CONNECT", "IMS_CONNECT_API", "IMS_ITRA", "IMS_MSC", "IMS_PGM_SWITCH", "IMS_SHARED_QUEUES", "IMS_TRANS_EXEC", "MQ", "SOAP", "START", "TTX", "TX", "UNKNOWN", "ZOS_CONNECT" ]
            },
            "values" : {
              "type" : "array",
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "CTG", "DPL", "EXPLICIT_ADK", "HTTP", "IMS_CONNECT", "IMS_CONNECT_API", "IMS_ITRA", "IMS_MSC", "IMS_PGM_SWITCH", "IMS_SHARED_QUEUES", "IMS_TRANS_EXEC", "MQ", "SOAP", "START", "TTX", "TX", "UNKNOWN", "ZOS_CONNECT" ]
              },
              "maxItems" : 50,
              "minItems" : 0,
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "uniqueItems" : true
            }
          }
        } ],
        "description" : "Comparison for `ZOS_CALL_TYPE` attributes.",
        "required" : [ "comparison", "negate" ]
      }
    },
    "securitySchemes" : {
      "Api-Token" : {
        "description" : "Dynatrace API Token\n\n The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.",
        "in" : "header",
        "name" : "Authorization",
        "type" : "apiKey"
      }
    }
  }
}