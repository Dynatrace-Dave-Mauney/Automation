{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Dynatrace Configuration API",
    "description" : "Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "https://xxxxxxxx.live.dynatrace.com/api/config/v1",
    "variables" : { }
  } ],
  "tags" : [ {
    "name" : "RUM - Application detection rules",
    "description" : "Manage application detection rules"
  }, {
    "name" : "RUM - Application detection rules - Host detection",
    "description" : "Manage configuration of host detection headers"
  }, {
    "name" : "RUM - Geographic regions - IP address mapping",
    "description" : "Manage the IP address mapping rules for geographic regions"
  }, {
    "name" : "RUM - Geographic regions - custom client IP headers",
    "description" : "Manage the list of custom client IP headers"
  }, {
    "name" : "RUM - Content resources",
    "description" : "Manage content resource rules"
  }, {
    "name" : "AWS credentials configuration",
    "description" : "Manage AWS credentials and monitoring options"
  }, {
    "name" : "Azure credentials configuration",
    "description" : "Manage Azure app-level credentials and monitoring options"
  }, {
    "name" : "RUM - Web application configuration",
    "description" : "Manage web applications"
  }, {
    "name" : "RUM - Allowed beacon origins for CORS",
    "description" : "Manage allowed beacon origins for CORS requests"
  }, {
    "name" : "RUM - Mobile and custom application configuration",
    "description" : "Manage mobile and custom applications"
  }, {
    "name" : "Service - Request attributes",
    "description" : "Manage request attributes"
  }, {
    "name" : "Data privacy and security",
    "description" : "Manage global data privacy and security settings"
  }, {
    "name" : "Anomaly detection - Hosts",
    "description" : "Manage anomaly detection configuration for hosts"
  }, {
    "name" : "Anomaly detection - Services",
    "description" : "Manage anomaly detection configuration for services"
  }, {
    "name" : "Anomaly detection - Database services",
    "description" : "Manage anomaly detection configuration for database services"
  }, {
    "name" : "Anomaly detection - Applications",
    "description" : "Manage anomaly detection configuration for applications"
  }, {
    "name" : "Anomaly detection - Disk events",
    "description" : "Manage anomaly detection configuration for disk events"
  }, {
    "name" : "Anomaly detection - AWS",
    "description" : "Manage anomaly detection configuration for AWS"
  }, {
    "name" : "Anomaly detection - VMware",
    "description" : "Manage anomaly detection configuration for VMware"
  }, {
    "name" : "Anomaly detection - Metric events",
    "description" : "Manage anomaly detection configuration for metric events"
  }, {
    "name" : "Service - Custom services",
    "description" : "Manage custom services"
  }, {
    "name" : "Anomaly detection - Process groups",
    "description" : "Manage anomaly detection configuration for process groups"
  }, {
    "name" : "Service - Request naming",
    "description" : "Manage request naming rules"
  }, {
    "name" : "Automatically applied tags",
    "description" : "Manage automatically applied tags"
  }, {
    "name" : "Management zones",
    "description" : "Manage management zones"
  }, {
    "name" : "Maintenance windows",
    "description" : "Deprecated. Use the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:alerting.maintenance-window`."
  }, {
    "name" : "OneAgent on a host",
    "description" : "Manage configuration of OneAgent on a host"
  }, {
    "name" : "OneAgent in a host group",
    "description" : "Manage configuration of OneAgent in a host group"
  }, {
    "name" : "OneAgent - Environment-wide configuration",
    "description" : "Manage configuration of OneAgents for the environment"
  }, {
    "name" : "Service - IBM MQ tracing",
    "description" : "Deprecated. Manage IBM MQ tracing settings via the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaIds `builtin:ibmmq.ims-bridges` and `builtin:ibmmq.queue-managers` instead."
  }, {
    "name" : "Cloud Foundry credentials configuration",
    "description" : "Manage Cloud Foundry foundation credentials"
  }, {
    "name" : "Calculated metrics - Services",
    "description" : "Manage metric subscriptions for services"
  }, {
    "name" : "Calculated metrics - Web applications",
    "description" : "Manage calculated metrics for web applications"
  }, {
    "name" : "Calculated metrics - Synthetic",
    "description" : "Manage calculated metrics for synthetic monitors"
  }, {
    "name" : "Calculated metrics - Mobile & custom applications",
    "description" : "Manage calculated metrics for mobile & custom apps"
  }, {
    "name" : "Calculated metrics - Log monitoring",
    "description" : "Manage calculated metrics for Log Monitoring"
  }, {
    "name" : "Service - Detection full web service",
    "description" : "Manage full web service detection rules"
  }, {
    "name" : "Service - Detection full web request",
    "description" : "Manage full web request service detection rules"
  }, {
    "name" : "Service - Detection opaque and external web service",
    "description" : "Manage opaque and external web service detection rules"
  }, {
    "name" : "Service - Detection opaque and external web request",
    "description" : "Manage opaque and external web request service detection rules"
  }, {
    "name" : "Reports",
    "description" : "Manage reports"
  }, {
    "name" : "Dashboards",
    "description" : "Manage dashboards"
  }, {
    "name" : "Kubernetes credentials configuration",
    "description" : "Manage Kubernetes cluster credentials"
  }, {
    "name" : "Plugins",
    "description" : "Manage plugins and their configurations"
  }, {
    "name" : "Extensions",
    "description" : "Manage extensions and their configurations"
  }, {
    "name" : "Frequent issue detection",
    "description" : "Deprecated. Use the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:anomaly-detection.frequent-issues`."
  }, {
    "name" : "Notifications",
    "description" : "Deprecated. Use the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:problem.notifications`."
  }, {
    "name" : "Remote environments",
    "description" : "Manage remote Dynatrace environments"
  }, {
    "name" : "AWS PrivateLink",
    "description" : "AWS PrivateLink allowlisting"
  }, {
    "name" : "Alerting Profiles",
    "description" : "Deprecated. Use the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:alerting.profile`."
  }, {
    "name" : "Conditional naming",
    "description" : "Manage conditional naming rules"
  }, {
    "name" : "Credential vault",
    "description" : "Manage credentials for Synthetic monitors"
  }, {
    "name" : "Service - Failure detection parameter sets",
    "description" : "Manage failure detection parameter sets"
  }, {
    "name" : "Service - Failure detection rules",
    "description" : "Manage failure detection rules"
  } ],
  "paths" : {
    "/alertingProfiles" : {
      "get" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Lists all alerting profiles available in your environment",
        "operationId" : "getAlertingProfiles",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Creates a new alerting profile",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createAlertingProfile",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new alerting profile.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertingProfile"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new alerting profile has been created. The response contains the ID of the new alerting profile.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/alertingProfiles/{id}" : {
      "get" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Gets the properties of the specified alerting profile",
        "operationId" : "getAlertingProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required alerting profile.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertingProfile"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Updates an existing alerting profile",
        "description" : "If an alerting profile with the specified ID doesn't exist, a new one is created.",
        "operationId" : "createOrUpdateAlertingProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the alerting profile to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the alerting profile.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertingProfile"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The alerting profile has been updated. Response doesn't have a body."
          },
          "201" : {
            "description" : "Success. The new alerting profile has been created. The response contains the ID of the new alerting profile.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Deletes the specified alerting profile",
        "description" : "The default alerting profile cannot be deleted.",
        "operationId" : "deleteAlertingProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the alerting profile to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The alerting profile has been deleted. Response doesn't have a body."
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/alertingProfiles/validator" : {
      "post" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Validates the payload the `POST /alertingProfiles` request",
        "operationId" : "validateCreateAlertingProfile",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the alerting profile to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertingProfile"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted alerting profile is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/alertingProfiles/{id}/validator" : {
      "post" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Validates the payload the `PUT /alertingProfiles/{id}` request",
        "operationId" : "validateCreateOrUpdateAlertingProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the alerting profile to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the alerting profile to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertingProfile"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted alerting profile is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/applications" : {
      "get" : {
        "tags" : [ "Anomaly detection - Applications" ],
        "summary" : "Gets the configuration of anomaly detection for applications",
        "operationId" : "getApplicationAnomalyDetectionConfig",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationAnomalyDetectionConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - Applications" ],
        "summary" : "Updates the configuration of anomaly detection for applications",
        "operationId" : "updateApplicationAnomalyDetectionConfig",
        "requestBody" : {
          "description" : "The JSON body of the request, containing parameters of the application anomaly detection configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/applications/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Applications" ],
        "summary" : "Validates the configuration of anomaly detection for applications for the `PUT /anomalyDetection/applications` request",
        "operationId" : "validateApplicationAnomalyDetectionConfig",
        "requestBody" : {
          "description" : "The JSON body of the request, containing parameters of the application anomaly detection configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/aws" : {
      "get" : {
        "tags" : [ "Anomaly detection - AWS" ],
        "summary" : "Gets the configuration of anomaly detection for AWS",
        "operationId" : "getAwsAnomalyDetectionConfig",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsAnomalyDetectionConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - AWS" ],
        "summary" : "Updates the configuration of anomaly detection for AWS",
        "operationId" : "updateAwsAnomalyDetectionConfig",
        "requestBody" : {
          "description" : "JSON body of the request, containing parameters of the AWS anomaly detection configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/aws/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - AWS" ],
        "summary" : "Validates the configuration of anomaly detection for AWS for the `PUT /anomalyDetection/aws` request",
        "operationId" : "validateAwsAnomalyDetectionConfig",
        "requestBody" : {
          "description" : "JSON body of the request, containing parameters of the AWS anomaly detection configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/databaseServices" : {
      "get" : {
        "tags" : [ "Anomaly detection - Database services" ],
        "summary" : "Gets the configuration of anomaly detection for database services",
        "operationId" : "getDatabaseServiceAnomalyDetectionConfig",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatabaseAnomalyDetectionConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - Database services" ],
        "summary" : "Updates the configuration of anomaly detection for database services",
        "operationId" : "updateDatabaseServiceAnomalyDetectionConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the database service anomaly detection configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DatabaseAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/databaseServices/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Database services" ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/databaseServices` request",
        "operationId" : "validateDatabaseServiceAnomalyDetectionConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the database service anomaly detection configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DatabaseAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/diskEvents" : {
      "get" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Lists all existing disk event rules | maturity=EARLY_ADOPTER",
        "operationId" : "listDiskEventConfigs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Creates a new disk event rule | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createDiskEventConfig",
        "requestBody" : {
          "description" : "JSON body of the request. Contains parameters of the new disk event rule.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiskEventAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new disk event rule has been created. The ID of the new disk event rule is returned.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/diskEvents/{id}" : {
      "get" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Gets the properties of the specified disk event rule | maturity=EARLY_ADOPTER",
        "operationId" : "getDiskEventConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required disk event rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiskEventAnomalyDetectionConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Updates or creates a disk event rule | maturity=EARLY_ADOPTER",
        "description" : "If a disk event rule with the specified ID does not exist, a new rule is created.",
        "operationId" : "updateDiskEventConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the disk event rule to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request. Contains updated disk event rule parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiskEventAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new disk event rule has been created. The ID of the new disk event rule is returned.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The disk event rule has been updated. Response doesn't have a body."
          },
          "403" : {
            "description" : "Failed. The specified ID is reserved for internal use."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Deletes the specified disk event rule | maturity=EARLY_ADOPTER",
        "operationId" : "deleteDiskEventConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the disk event rule to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The disk event rule has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/diskEvents/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Validates the payload for the `POST /anomalyDetection/diskEvents` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateCreateDiskEventConfig",
        "requestBody" : {
          "description" : "JSON body of the request. Contains the disk event rule to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiskEventAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted disk event rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/diskEvents/{id}/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/diskEvents/{id}` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateUpdateDiskEventConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the disk event rule to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request. Contains the disk event rule to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiskEventAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted disk event rule is valid. Response doesn't have a body."
          },
          "403" : {
            "description" : "Failed. The specified ID is reserved for internal use."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/hosts" : {
      "get" : {
        "tags" : [ "Anomaly detection - Hosts" ],
        "summary" : "Gets the configuration of anomaly detection for hosts",
        "operationId" : "getHostEventsConfig",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostsAnomalyDetectionConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - Hosts" ],
        "summary" : "Updates the configuration of anomaly detection for hosts",
        "operationId" : "updateHostEventsConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the host anomaly detection configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostsAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/hosts/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Hosts" ],
        "summary" : "Validates the configuration of anomaly detection for hosts for the `PUT /anomalyDetection/hosts` request",
        "operationId" : "validateHostEventsConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the host anomaly detection configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostsAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/metricEvents" : {
      "get" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Lists all configured metric events",
        "operationId" : "listMetricEventConfigs",
        "parameters" : [ {
          "name" : "includeEntityFilterMetricEvents",
          "in" : "query",
          "description" : "Flag to include metric events with associated entities to the response. \n\n Metric events with **entity** filters aren't compatible across environments. If set to `false`, metric events with entity filters will be removed.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Creates a new metric event",
        "description" : "The response contains the ID of the newly created metric event.",
        "operationId" : "createMetricEvent",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new metric event.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MetricEvent"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The metric event has been created. The response contains the ID and name of the newly created metric event",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/metricEvents/{id}" : {
      "get" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Gets the properties of the specified metric event",
        "operationId" : "getMetricEventConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required metric event.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricEvent"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Updates an existing metric event or creates a new one",
        "description" : "If the metric event with the specified ID does not exist, a new metric event will be created. \n\n You can't update the **type** of the metric event.",
        "operationId" : "updateMetricEvent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the metric event to be updated.\n\n If you also set the ID in the body, it must match this ID.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 0,
            "pattern" : "^[a-zA-Z0-9\\.\\-_:%]+$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the metric event.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MetricEvent"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new metric event has been created. The response contains the ID of the newly created metric event",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The metric event has been updated. The response is empty."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Deletes the specified metric event",
        "description" : "You can't delete events created by plugins.",
        "operationId" : "deleteMetricEvent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the metric event to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/metricEvents/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Validates the payload for the `POST /anomalyDetection/metricEvents` request",
        "operationId" : "validateCreateMetricEvent",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the metric event configuration to validate.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MetricEvent"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/metricEvents/{id}/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/metricEvents/{id}` request",
        "operationId" : "validateUpdateMetricEvent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the metric event to be validated.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 0,
            "pattern" : "^[a-zA-Z0-9\\.\\-_:%]+$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the metric event configuration to validate.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MetricEvent"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/processGroups/{id}" : {
      "get" : {
        "tags" : [ "Anomaly detection - Process groups" ],
        "summary" : "Gets the configuration of anomaly detection for the specified process group | maturity=EARLY_ADOPTER",
        "operationId" : "getLocalAvailabilityConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required process group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnomalyDetectionPG"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Process group doesn't exist",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - Process groups" ],
        "summary" : "Updates the configuration of anomaly detection for the specified process group | maturity=EARLY_ADOPTER",
        "operationId" : "setLocalAvailabilityConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required process group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of anomaly detection for a process group.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnomalyDetectionPG"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Anomaly detection - Process groups" ],
        "summary" : "Switches off anomaly detection for the specified process group | maturity=EARLY_ADOPTER",
        "operationId" : "deleteLocalAvailabilityConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required process group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Process group doesn't exist",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/processGroups/{id}/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Process groups" ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/processGroups/{id}` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateLocalPgAvailabilityAlertingEvent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required process group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains anomaly detection configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnomalyDetectionPG"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/services" : {
      "get" : {
        "tags" : [ "Anomaly detection - Services" ],
        "summary" : "Gets the service anomaly detection configuration",
        "operationId" : "getServiceAnomalyDetectionConfig",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceAnomalyDetectionConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - Services" ],
        "summary" : "Updates the service anomaly detection configuration",
        "operationId" : "updateServiceAnomalyDetectionConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the service anomaly detection configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/services/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Services" ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/services` request",
        "operationId" : "validateServiceAnomalyDetectionConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the service anomaly detection configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/vmware" : {
      "get" : {
        "tags" : [ "Anomaly detection - VMware" ],
        "summary" : "Gets the configuration of anomaly detection for VMware",
        "operationId" : "getVMwareAnomalyDetectionConfig",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VMwareAnomalyDetectionConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - VMware" ],
        "summary" : "Updates the configuration of anomaly detection for VMware",
        "operationId" : "updateVMwareAnomalyDetectionConfig",
        "requestBody" : {
          "description" : "JSON body of the request, containing parameters of the VMware anomaly detection configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/VMwareAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/anomalyDetection/vmware/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - VMware" ],
        "summary" : "Validates the configuration of anomaly detection for VMware for the `PUT /anomalyDetection/vmware` request",
        "operationId" : "validateVMwareAnomalyDetectionConfig",
        "requestBody" : {
          "description" : "JSON body of the request, containing parameters of the VMware anomaly detection configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/VMwareAnomalyDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/mobile" : {
      "get" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Lists all existing mobile and custom applications",
        "operationId" : "listMobileApplicationConfigs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Creates a new mobile or custom application",
        "description" : "The body must not provide an identifier. An identifier is assigned automatically by Dynatrace. \n\nYou can, however, provide your own applicationId. If you don't specify an applicationId, it is assigned automatically by Dynatrace.",
        "operationId" : "createMobileApplicationConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the parameters of the new mobile or custom application.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewMobileCustomAppConfig"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The application has been created. The response contains the identifier and name of the new application.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "409" : {
            "description" : "Failed. The applicationId is already used by another application.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/mobile/{id}" : {
      "get" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Gets the configuration of the specified mobile or custom application",
        "operationId" : "getMobileApplicationConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required mobile or custom application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileCustomAppConfig"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Updates the configuration of the specified mobile or custom application",
        "description" : "You can't change applicationId and applicationType with this request.\n\nAll other values must be included in the body, depending on the applicationType.",
        "operationId" : "updateMobileApplicationConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the application to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated configuration of the mobile or custom application. \n\nDo not set the identifier in the body.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileCustomAppConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The application has been updated. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Deletes the specified mobile or custom application",
        "operationId" : "deleteMobileApplicationConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the application to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The application has been deleted. The response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/mobile/validator" : {
      "post" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Validates the payload for the `POST /applications/mobile` request",
        "operationId" : "validateCreateMobileApplicationConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the mobile or custom application configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewMobileCustomAppConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/mobile/{id}/validator" : {
      "post" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Validates the payload for the `PUT /applications/mobile/{id}` request.",
        "operationId" : "validateUpdateMobileApplicationConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the mobile or custom application to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the mobile or custom application configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileCustomAppConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/mobile/{applicationId}/userActionAndSessionProperties" : {
      "get" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Lists all mobile session and user action properties for the specified application",
        "operationId" : "listSessionProperties",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The ID of the required application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileSessionUserActionPropertyList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Creates a new mobile session or user action property for the specified application",
        "operationId" : "createSessionProperty",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The ID of the required application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of the property.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileSessionUserActionProperty"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The property has been created. The response contains the ID of the new property.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileSessionUserActionPropertyShort"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/mobile/{applicationId}/userActionAndSessionProperties/{key}" : {
      "get" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Gets the specified mobile session or user action property of an application",
        "operationId" : "getSessionProperty",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The ID of the required application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "The key of the required mobile session or user action property.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileSessionUserActionProperty"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Updates the specified mobile session or user action property for an application",
        "description" : "If the property with the specified ID does not exist, a new property is created.",
        "operationId" : "updateSessionProperty",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The ID of the required application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "The key of the required mobile session or user action property.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of the property.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileSessionUserActionPropertyUpd"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The property has been created. The response contains the ID of the new property.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileSessionUserActionPropertyShort"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The property has been updated. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Deletes the specified mobile session or user action property for an application",
        "operationId" : "deleteSessionProperty",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The ID of the required application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "The key of the required mobile session or user action property.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The property has been deleted. The response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/mobile/{applicationId}/userActionAndSessionProperties/validator" : {
      "post" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Validates the payload for the `POST /applications/mobile/{applicationId}/userActionAndSessionProperties` request",
        "operationId" : "validateCreateSessionProperty",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The ID of the required application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of the property to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileSessionUserActionProperty"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/mobile/{applicationId}/userActionAndSessionProperties/{key}/validator" : {
      "post" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Validates the payload for the `PUT /applications/mobile/{applicationId}/userActionAndSessionProperties/{key}` request",
        "operationId" : "validateUpdateSessionProperty",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The ID of the required application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "The key of the required mobile session or user action property.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of the property to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileSessionUserActionPropertyUpd"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/mobile/{applicationId}/keyUserActions/{actionName}" : {
      "post" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Marks the user action as a key user action in the specified application",
        "operationId" : "createMobileKeyUserAction",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The ID of the required application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionName",
          "in" : "path",
          "description" : "The name of the user action to be marked as a key user action.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The action has been marked as a key user action. The response contains its name.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyUserActionMobile"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          },
          "409" : {
            "description" : "Failed. The max number of key user actions has been reached for the application."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Removes the specified user action from the list of key user actions in the specified application",
        "operationId" : "deleteMobileKeyUserAction",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The ID of the required application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionName",
          "in" : "path",
          "description" : "The ID of the user action to be removed from the key user actions list.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The user action has been removed from the list of key user actions. The response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/mobile/{applicationId}/keyUserActions" : {
      "get" : {
        "tags" : [ "RUM - Mobile and custom application configuration" ],
        "summary" : "Gets the list of key user actions in the specified application",
        "operationId" : "listMobileKeyUserActions",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The ID of the required application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyUserActionMobileList"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/applications/web/{id}/keyUserActions" : {
      "get" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Gets the list of key user actions in the specified web application",
        "operationId" : "listKeyUserActions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required web application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyUserActionList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Marks the user action as a key user action in the specified web application",
        "operationId" : "createKeyUserAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required web application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the action to be marked as a key user action.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyUserAction"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The action has been marked as a key user action. The response contains its ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/web/default" : {
      "get" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Gets the configuration of the default web application",
        "description" : "Default application is pre-configured in your Dynatrace environment. By default all traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one.",
        "operationId" : "getDefaultApplication",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebApplicationConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Updates the configuration of the default web application",
        "description" : "Default application is pre-configured in your Dynatrace environment. By default all traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one.",
        "operationId" : "createOrUpdateDefaultConfiguration",
        "requestBody" : {
          "description" : "JSON body of the request, containing the new parameters of the default web application.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/web" : {
      "get" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Lists all existing web applications",
        "operationId" : "listWebApplicationConfigs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Creates a new web application",
        "description" : "The body must not provide an ID as that will be automatically assigned by Dynatrace server.",
        "operationId" : "createWebApplicationConfig",
        "requestBody" : {
          "description" : "JSON body of the request, containing parameters of the new web application configuraiton.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationConfig"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The response body contains the ID and name of the new web application.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/web/{id}/keyUserActions/{keyUserActionId}" : {
      "delete" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Removes the specified user action from the list of key user actions in the specified web application",
        "operationId" : "deleteKeyUserAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required web application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "keyUserActionId",
          "in" : "path",
          "description" : "The ID of the user action to be removed from the key user actions list.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The user action has been removed from the list of key user actions. The response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/web/{id}" : {
      "get" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Gets the configuration of the specified web application",
        "operationId" : "getWebApplicationConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the requested web application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebApplicationConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Updates the configuration of the specified web application or creates a new one",
        "description" : "If the application with the specified ID does not exist, a new application will be created.",
        "operationId" : "updateWebApplicationConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the web application to update. \n\nIf you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing updated configuration of the web application.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationConfig"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new configuration has been created. The response body contains the ID and name of the new web application.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Deletes the specified web application",
        "operationId" : "deleteWebApplicationConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the web application to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The application has been deleted. The response does not have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/web/{id}/errorRules" : {
      "get" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Gets the configuration of error rules in the specified application",
        "operationId" : "getApplicationErrorConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required web application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationErrorRules"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Updates the configuration of error rules in the specified application",
        "operationId" : "updateApplicationErrorConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required web application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the updated configuration of error rules.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationErrorRules"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/web/{id}/dataPrivacy" : {
      "get" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Gets the data privacy settings of the specified web application",
        "operationId" : "getDataPrivacySettings",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the web application where you want to check data privacy settings.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationDataPrivacy"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Updates the data privacy settings of the specified web application",
        "operationId" : "updateDataPrivacySettings",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the web application, where you want to update data privacy settings.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing new data privacy settings.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDataPrivacy"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Data privacy settings have been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataPrivacy` (Change data privacy settings)" ]
      }
    },
    "/applications/web/default/dataPrivacy" : {
      "get" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Gets the data privacy settings of the default web application",
        "description" : "Default application is pre-configured in your Dynatrace environment. By default all the traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one.",
        "operationId" : "getDefaultApplicationDataPrivacySettings",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationDataPrivacy"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Updates the data privacy settings of the default web application",
        "description" : "Default application is pre-configured in your Dynatrace environment. By default all traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one.",
        "operationId" : "updateDefaultApplicationDataPrivacySettings",
        "requestBody" : {
          "description" : "JSON body of the request, containing new data privacy settings.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDataPrivacy"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Data privacy settings have been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataPrivacy` (Change data privacy settings)" ]
      }
    },
    "/applications/web/dataPrivacy" : {
      "get" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Lists data privacy settings of all web applications",
        "operationId" : "listDataPrivacySettings",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationDataPrivacyList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/applications/web/validator" : {
      "post" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Validates the configuration of the web application for the `POST /applications/web` request",
        "operationId" : "validateCreateWebApplicationConfig",
        "requestBody" : {
          "description" : "JSON body of the request, containing the web application configuration to validate.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/web/{id}/dataPrivacy/validator" : {
      "post" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Validates data privacy settings for the `PUT /applications/web/{id}/dataPrivacy` request",
        "operationId" : "validateDataPrivacySettings",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the web application, where you want to validate data privacy settings.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing new data privacy settings.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDataPrivacy"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataPrivacy` (Change data privacy settings)" ]
      }
    },
    "/applications/web/default/dataPrivacy/validator" : {
      "post" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Validates data privacy settings of the default web application for the `PUT /applications/web/default/dataPrivacy` request",
        "operationId" : "validateDefaultApplicationDataPrivacySettings",
        "requestBody" : {
          "description" : "JSON body of the request, containing the data privacy settings to validate.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDataPrivacy"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataPrivacy` (Change data privacy settings)" ]
      }
    },
    "/applications/web/default/validator" : {
      "post" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Validates the configuration of the default web application for the `PUT /applications/web/default` request",
        "operationId" : "validateDefaultConfiguration",
        "requestBody" : {
          "description" : "JSON body of the request, containing web application configuration to validate.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applications/web/{id}/validator" : {
      "post" : {
        "tags" : [ "RUM - Web application configuration" ],
        "summary" : "Validates the configuration of the web application for the `PUT /applications/web/{id}` request.",
        "operationId" : "validateUpdateWebApplicationConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the web application to validate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing the web application configuration to validate.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applicationDetectionRules" : {
      "get" : {
        "tags" : [ "RUM - Application detection rules" ],
        "summary" : "Lists all available application detection rules",
        "operationId" : "listApplicationDetectionConfigs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "RUM - Application detection rules" ],
        "summary" : "Creates a new application detection rule",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server. \n\nYou can only create detection rules for an existing application. If you need to create a rule for an application that doesn't exist yet, [create an application first](https://dt-url.net/vt03khh) and then configure detection rules for it.",
        "operationId" : "createApplicationDetectionConfig",
        "parameters" : [ {
          "name" : "position",
          "in" : "query",
          "description" : "The position of the new rule: \n\n * `APPEND`: at the bottom of the rule list. \n * `PREPEND`: at the top of the rule list. \n\n If not set, the `APPEND` is used.",
          "schema" : {
            "type" : "string",
            "enum" : [ "APPEND", "PREPEND" ]
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains configuration of the new application detection rule. \n\n You must not specify the ID of the rule. \n\nThe **order** field is ignored in this request. To enforce a particular order use the `PUT /applicationDetectionRules/order` request.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDetectionRuleConfig"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The application detection rule has been created. Response contains the ID of the new rule.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applicationDetectionRules/{id}" : {
      "get" : {
        "tags" : [ "RUM - Application detection rules" ],
        "summary" : "Gets the parameters of the specified application detection rule",
        "operationId" : "getApplicationDetectionConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required application detection rule.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationDetectionRuleConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "RUM - Application detection rules" ],
        "summary" : "Updates the specified application detection rule",
        "description" : "If the application detection rule with the specified ID doesn't exist, a new application is created and appended to the end of the rule list. \n\nIf the **order** parameter is set for an existing rule, the request uses this value. Otherwise it keeps the existing order of rules.",
        "operationId" : "updateApplicationDetectionConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the application detection rule to be updated. \n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the application detection rule. \n\n If the **order** parameter is set, the rule is placed to this position.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDetectionRuleConfig"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. Application detection rule has been created. Response contains the ID of the new rule.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. Application detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "RUM - Application detection rules" ],
        "summary" : "Deletes the specified application detection rule",
        "operationId" : "deleteApplicationDetectionConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the application detection rule to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applicationDetectionRules/order" : {
      "put" : {
        "tags" : [ "RUM - Application detection rules" ],
        "summary" : "Reorders the application detection rules",
        "description" : "This request reorders the application detection rules according to the submitted list of IDs. Application detection rules not present in the body of the request will retain their relative ordering but are placed *after* all those present in the request.",
        "operationId" : "orderApplicationDetectionConfigs",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the IDs of the application detection rules in the desired order. Any further properties (**name**, **description**) are ignored.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Application detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applicationDetectionRules/validator" : {
      "post" : {
        "tags" : [ "RUM - Application detection rules" ],
        "summary" : "Validates the payload for the `POST /applicationDetection` request",
        "operationId" : "validateCreateApplicationDetectionConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the application detection rule to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDetectionRuleConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applicationDetectionRules/{id}/validator" : {
      "post" : {
        "tags" : [ "RUM - Application detection rules" ],
        "summary" : "Validate the payload for the `PUT /applicationDetection/{id}` request",
        "operationId" : "validateUpdateApplicationDetectionConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the application detection rule to be validated. \n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the application detection rule to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDetectionRuleConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applicationDetectionRules/hostDetection" : {
      "get" : {
        "tags" : [ "RUM - Application detection rules - Host detection" ],
        "summary" : "Gets the configuration of host detection headers",
        "operationId" : "getHostDetectionConfig",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationDetectionRulesHostDetectionSettings"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "RUM - Application detection rules - Host detection" ],
        "summary" : "Updates the configuration of host detection headers",
        "description" : "The request overwrites the existing configuration. Any headers not presented in the payload will be lost.",
        "operationId" : "updateHostDetectionConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of host detection headers.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDetectionRulesHostDetectionSettings"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/applicationDetectionRules/hostDetection/validator" : {
      "post" : {
        "tags" : [ "RUM - Application detection rules - Host detection" ],
        "summary" : "Validate the payload for `PUT /applicationDetection/hostDetection` request.",
        "operationId" : "validateHostDetectionConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of host detection headers to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationDetectionRulesHostDetectionSettings"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/autoTags" : {
      "get" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Lists all configured auto-tags",
        "operationId" : "listAutoTags",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Creates a new auto-tag",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createAutoTag",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new auto-tag.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AutoTag"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The auto-tag has been created. The response body contains the ID of the new auto-tag.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/autoTags/{id}" : {
      "get" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Gets the properties of the specified auto-tag",
        "operationId" : "getAutoTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required auto-tag.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "includeProcessGroupReferences",
          "in" : "query",
          "description" : "Flag to include process group references to the response. \n\n Process group references aren't compatible across environments. \n\nWhen this flag is set to `false`, conditions with process group references are removed. If that results in a rule having no conditions, the entire rule is removed.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AutoTag"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Updates an existing auto-tag",
        "description" : "If the auto-tag with the specified ID does not exist, a new auto-tag is created.",
        "operationId" : "updateAutoTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the auto-tag to be updated.\n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the auto-tag.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AutoTag"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new auto-tag has been created. The response body contains the ID of the new auto-tag.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The auto-tag has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Deletes the specified auto-tag",
        "operationId" : "deleteAutoTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the auto-tag to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/autoTags/validator" : {
      "post" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Validates the payload for the `POST /autoTags` request",
        "operationId" : "validateCreateAutoTag",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains auto-tag configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AutoTag"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/autoTags/{id}/validator" : {
      "post" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Validates the payload for the `PUT /autoTags/{id}` request",
        "operationId" : "validateUpdateAutoTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the auto-tag to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains auto-tag configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AutoTag"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/hosts/autoupdate" : {
      "get" : {
        "tags" : [ "OneAgent - Environment-wide configuration" ],
        "summary" : "Gets the environment-wide configuration of OneAgents auto-update",
        "operationId" : "getAutoUpdateConfig",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnvironmentAutoUpdateConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "OneAgent - Environment-wide configuration" ],
        "summary" : "Updates the environment-wide configuration of OneAgents auto-update",
        "description" : "OneAgents are updated several minutes after the change of configuration. \n\nThe process can take more time depending on number of OneAgents in the update queue.",
        "operationId" : "setAutoUpdateConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains OneAgent auto-update parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnvironmentAutoUpdateConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/hosts/autoupdate/validator" : {
      "post" : {
        "tags" : [ "OneAgent - Environment-wide configuration" ],
        "summary" : "Validates the payload for the `PUT /hosts/autoupdate` request",
        "operationId" : "validateAutoUpdateConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains OneAgent auto-update parameters to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnvironmentAutoUpdateConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/allowedBeaconOriginsForCors" : {
      "get" : {
        "tags" : [ "RUM - Allowed beacon origins for CORS" ],
        "summary" : "Gets the configuration of the allowed beacon origins for CORS requests",
        "operationId" : "getAllowedBeaconOriginsConfig",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllowedBeaconOrigins"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "RUM - Allowed beacon origins for CORS" ],
        "summary" : "Updates the configuration of the allowed beacon origins for CORS requests",
        "description" : "The request overwrites the existing configuration. Any rules not presented in the payload will be lost.",
        "operationId" : "putAllowedBeaconOriginsConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of the allowed beacon origins for CORS requests.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AllowedBeaconOrigins"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/allowedBeaconOriginsForCors/validator" : {
      "post" : {
        "tags" : [ "RUM - Allowed beacon origins for CORS" ],
        "summary" : "Validates the payload for the `PUT /allowedBeaconOriginsForCors` request",
        "operationId" : "validateAllowedBeaconOriginsConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of the allowed beacon origins for CORS requests.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AllowedBeaconOrigins"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/conditionalNaming/{type}" : {
      "get" : {
        "tags" : [ "Conditional naming" ],
        "summary" : "Lists all configured naming rules of the specified type",
        "operationId" : "listNamingRules",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Conditional naming" ],
        "summary" : "Creates a new naming rule",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createNamingRule",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new naming rule. \n\nDo not specify the **id** of the rule. \n\nThe value of the **type** field must match the **type** path parameter.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConditionalNamingRule"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The naming rule has been created. The response contains the ID of the new rule",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/conditionalNaming/{type}/{id}" : {
      "get" : {
        "tags" : [ "Conditional naming" ],
        "summary" : "Lists the parameters of the specified naming rule",
        "operationId" : "getNamingRule",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required naming rule.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConditionalNamingRule"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Conditional naming" ],
        "summary" : "Updates the specified naming rule",
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created at the end of the rules list and will be the last to evaluate.",
        "operationId" : "updateNamingRule",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the naming rule to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the naming rule. \n\nThe value of the **type** field must match the **type** path parameter.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConditionalNamingRule"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The naming rule has been created. The response contains the ID of the new rule.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The naming rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Conditional naming" ],
        "summary" : "Deletes the specified naming rule",
        "operationId" : "deleteNamingRule",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the naming rule to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/conditionalNaming/{type}/validator" : {
      "post" : {
        "tags" : [ "Conditional naming" ],
        "summary" : "Validates the payload for the `POST /conditionalNaming/{type}` request",
        "operationId" : "validateCreateNamingRule",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the naming rule parameters to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConditionalNamingRule"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/conditionalNaming/{type}/{id}/validator" : {
      "post" : {
        "tags" : [ "Conditional naming" ],
        "summary" : "Validates the payload for the `PUT /conditionalNaming/{type}/{id}` request",
        "operationId" : "validateUpdateNamingRule",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "The type of the rule, defined by the type of Dynatrace entities to which the rule applies.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "processGroup", "host", "service" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the naming rule to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the naming rule parameters to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConditionalNamingRule"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/contentResources" : {
      "get" : {
        "tags" : [ "RUM - Content resources" ],
        "summary" : "Gets the configuration of content resources",
        "operationId" : "getContentConfig",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentResources"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "RUM - Content resources" ],
        "summary" : "Updates the configuration of content resources",
        "operationId" : "putContentResourceConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of content resources.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentResources"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/contentResources/validator" : {
      "post" : {
        "tags" : [ "RUM - Content resources" ],
        "summary" : "Validates the payload for the `PUT /contentResources` request",
        "operationId" : "validateContentResourceConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of content resources to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentResources"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/credentials" : {
      "get" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Lists all sets of credentials for synthetic monitors stored in your environment",
        "operationId" : "listCredentials",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Filters the result by the specified credentials type.",
          "schema" : {
            "type" : "string",
            "enum" : [ "CERTIFICATE", "USERNAME_PASSWORD", "TOKEN" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialsList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`credentialVault.read` (Read credential vault entries)" ]
      },
      "post" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Creates a new credentials set",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createCredentials",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new credentials set.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Credentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new credentials set has been created. The response contains the ID of the set.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialsResponseElement"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`credentialVault.write` (Write credential vault entries)" ]
      }
    },
    "/credentials/{id}" : {
      "get" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Gets the metadata of the specified credentials set",
        "description" : "The credentials set itself (username/certificate and password) is not included in the response.",
        "operationId" : "getCredentials",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required credentials set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the metadata of the credentials set.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialsResponseElement"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`credentialVault.read` (Read credential vault entries)" ]
      },
      "put" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Updates the specified credentials set",
        "operationId" : "updateCredentials",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the credentials set to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the credentials set.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Credentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new credentials set has been created. The response contains the ID of the set.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialsResponseElement"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The credentials set has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`credentialVault.write` (Write credential vault entries)" ]
      },
      "delete" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Deletes the specified credentials set",
        "operationId" : "removeCredentials",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the credentials set to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The credentials set has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`credentialVault.write` (Write credential vault entries)" ]
      }
    },
    "/service/customServices/{technology}" : {
      "get" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Lists all custom services of the specified technology",
        "operationId" : "listCustomServices",
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the required custom services.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Creates a custom service",
        "description" : "In the body of the request, neither custom service nor its rules can have the ID. All IDs will be generated automatically by Dynatrace.",
        "operationId" : "createCustomService",
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the new custom service.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        }, {
          "name" : "position",
          "in" : "query",
          "description" : "Order of the new custom service. Set to `PREPEND` to prepend it to the list, `APPEND` to append it. Defaults to `APPEND`.",
          "schema" : {
            "type" : "string",
            "enum" : [ "APPEND", "PREPEND" ],
            "default" : "APPEND"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request containing definition of the new custom service. \n\nYou must not specify the IDs for the custom service or any of its rules. The *order* field is not allowed either.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomService"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The custom service has been created. Response contains the new service's ID and name.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/customServices/{technology}/{id}" : {
      "get" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Gets the definition of the specified custom service",
        "operationId" : "getCustomService",
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the custom service you're inquiring.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the custom service you're inquiring.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "includeProcessGroupReferences",
          "in" : "query",
          "description" : "Flag to include process group references to the response. \n\n Process group references aren't compatible across environments. \n\n`false` is used if the value is not set.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomService"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Updates the specified custom service or create a new one.",
        "description" : "Will use the config's ´order´ attribute if supplied, otherwise keeps the order of the existing config or appends if no existing config with the supplied ID was found.",
        "operationId" : "updateCustomService",
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the custom service to update.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the custom service to update.\n\n The ID of the custom service in the body of the request must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request containing updated definition of the custom service. If *order* is present, it will be used.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomService"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. Custom service has been created. Response contains the new service's ID and name.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. Custom service has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Deletes the specified custom service",
        "operationId" : "deleteCustomService",
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the custom service to delete.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the custom service to delete.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/customServices/{technology}/order" : {
      "put" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Reorders the custom services of the specified technology",
        "description" : "This request reorders the custom services of the specified technology according to the given list of IDs. Custom services not present in the body of the request will retain their relative ordering but will be ordered *after* all those present in the request.",
        "operationId" : "orderCustomServices",
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of custom services to update.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request containing the IDs of the custom services in the desired order. Any further properties (*name*, *description*) will be ignored.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Custom services have been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/customServices/{technology}/validator" : {
      "post" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Validate the new custom service for the `POST /customServices/{technology}` request",
        "operationId" : "validateCreateCustomService",
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the custom service to validate.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request containing definition of the custom service to validate.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomService"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/customServices/{technology}/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Validate the new custom service for the `PUT /customServices/{technology}/{id}` request",
        "operationId" : "validateUpdateCustomService",
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the custom service to validate.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "dotNet", "go", "java", "nodeJS", "php" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the custom service to validate.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request containing definition of the custom service to validate.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomService"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/dashboards" : {
      "get" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Lists all dashboards of the environment",
        "operationId" : "getDashboardStubsList",
        "parameters" : [ {
          "name" : "owner",
          "in" : "query",
          "description" : "The owner of the dashboard.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "description" : "A list of tags applied to the dashboard. \n\n The dashboard must match **all** the specified tags.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DashboardList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Creates a dashboard",
        "description" : "The body must not provide an ID. An ID is assigned automatically by Dynatrace.",
        "operationId" : "createDashboard",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new dashboard.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Dashboard"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new dashboard has been created. The response body contains the generated ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/dashboards/{id}" : {
      "get" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Gets the properties of the specified dashboard",
        "operationId" : "getDashboard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required dashboard.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response body contains parameters of the dashboard.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Dashboard"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Updates the specified dashboard",
        "description" : "If the dashboard with the specified ID doesn't exist, a new dashboard is created",
        "operationId" : "updateDashboard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the dashboard to be updated. \n\n The ID in the request body must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the dashboard.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Dashboard"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new dashboard has been created. Response doesn't have a body.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The dashboard has been updated. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Deletes the specified dashboard",
        "operationId" : "deleteDashboard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the dashboard to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The dashboard has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/dashboards/{id}/shareSettings" : {
      "get" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Gets the sharing configuration of the specified dashboard | maturity=EARLY_ADOPTER",
        "operationId" : "getDashboardSharingSettings",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required dashboard.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DashboardSharing"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Updates the sharing configuration of the specified dashboard | maturity=EARLY_ADOPTER",
        "operationId" : "updateShareSettings",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required dashboard.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the dashboard sharing.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DashboardSharing"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/dashboards/validator" : {
      "post" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Validates the payload for the 'POST /dashboards' request",
        "description" : "The body must not provide an ID.",
        "operationId" : "validateDashboardCreation",
        "requestBody" : {
          "description" : "The JSON body of the request. Containing the dashboard to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Dashboard"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted dashboard is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/dashboards/{id}/validator" : {
      "post" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Validates the payload for the 'PUT /dashboards/{id}' request",
        "operationId" : "validateDashboardUpdate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the dashboard to be validated. \n\n The ID in the request body must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the dashboard to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Dashboard"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted dashboard is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/dashboards/{id}/shareSettings/validator" : {
      "post" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Validates the payload for the 'PUT /dashboards/{id}/shareSettings' request | maturity=EARLY_ADOPTER",
        "operationId" : "validateShareSettingsUpdate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the dashboard to be validated. \n\n The ID in the request body must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the dashboard sharing to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DashboardSharing"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted dashboard share setting is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/dataPrivacy" : {
      "get" : {
        "tags" : [ "Data privacy and security" ],
        "summary" : "Lists the global data privacy and security settings",
        "operationId" : "getDataPrivacySettings_1",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataPrivacyAndSecurity"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Data privacy and security" ],
        "summary" : "Updates the global data privacy and security settings",
        "description" : "This request updates global settings, affecting all your applications. \n\n To update application-specific data privacy settings, use the [**PUT data privacy of a web application**](https://dt-url.net/q403sv9) request.",
        "operationId" : "updateDataPrivacySettings_1",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataPrivacyAndSecurity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataPrivacy` (Change data privacy settings)" ]
      }
    },
    "/dataPrivacy/validator" : {
      "post" : {
        "tags" : [ "Data privacy and security" ],
        "summary" : "Validates the payload for the `PUT /dataPrivacy` request",
        "operationId" : "validateDataPrivacySettings_1",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataPrivacyAndSecurity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DataPrivacy` (Change data privacy settings)" ]
      }
    },
    "/hosts/{id}/autoupdate" : {
      "get" : {
        "tags" : [ "OneAgent on a host" ],
        "summary" : "Gets the configuration of OneAgent auto-update on the specified host",
        "operationId" : "getAutoUpdateConfig_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostAutoUpdateConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "OneAgent on a host" ],
        "summary" : "Updates the configuration of OneAgent auto-update on the specified host",
        "description" : "OneAgent is updated several minutes after the change of configuration. \n\nThe process can take more time depending on number of OneAgents in the update queue.",
        "operationId" : "updateAutoUpdateConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains OneAgent auto-update parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostAutoUpdateConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/hosts/{id}/autoupdate/validator" : {
      "post" : {
        "tags" : [ "OneAgent on a host" ],
        "summary" : "Validates the payload for the `PUT /hosts/{id}/autoupdate` request",
        "operationId" : "validateAutoUpdateConfig_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains OneAgent auto-update parameters to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostAutoUpdateConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/hosts/{id}" : {
      "get" : {
        "tags" : [ "OneAgent on a host" ],
        "summary" : "Gets the OneAgent configuration on the specified host",
        "operationId" : "getHostConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/hosts/{id}/monitoring" : {
      "get" : {
        "tags" : [ "OneAgent on a host" ],
        "summary" : "Deprecated. Manage host monitoring settings via the environment API v2 settings endpoint with schemaId 'builtin:host.monitoring' instead.",
        "description" : "Deprecated. Manage host monitoring settings via the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:host.monitoring` instead.\n\nGets the monitoring configuration of OneAgent on the specified host",
        "operationId" : "getMonitoringConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonitoringConfig"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "OneAgent on a host" ],
        "summary" : "Deprecated. Manage host monitoring settings via the environment API v2 settings endpoint with schemaId 'builtin:host.monitoring' instead.",
        "description" : "Deprecated. Manage host monitoring settings via the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:host.monitoring` instead.\n\nUpdates the monitoring configuration of OneAgent on the specified host. The monitoring mode of OneAgent is updated several minutes after the change of configuration.",
        "operationId" : "updateMonitoringConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains OneAgent monitoring parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonitoringConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/hosts/{id}/monitoring/validator" : {
      "post" : {
        "tags" : [ "OneAgent on a host" ],
        "summary" : "Deprecated. Manage host monitoring settings via the environment API v2 settings endpoint with schemaId 'builtin:host.monitoring' instead.",
        "description" : "Deprecated. Manage host monitoring settings via the [Settings endpoint](index.jsp?urls.primaryName=Environment%20API%20v2#/Settings%20-%20Objects) with schemaId `builtin:host.monitoring` instead.\n\nValidates the payload for the `PUT /hosts/{id}/monitoring` request",
        "operationId" : "validateMonitoringConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains OneAgent monitoring parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonitoringConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/hosts/{id}/technologies" : {
      "get" : {
        "tags" : [ "OneAgent on a host" ],
        "summary" : "Gets the configuration of monitored technologies on the specified host",
        "operationId" : "getTechHostConfigs",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TechMonitoringList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/extensions/{id}/instances" : {
      "get" : {
        "tags" : [ "Extensions" ],
        "summary" : "Returns list of all local configuration instances for given extension | maturity=EARLY_ADOPTER",
        "operationId" : "getExtensionConfigurations",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required extension.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of results per result page. Must be between 1 and 500",
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 200
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionConfigurationList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Extensions" ],
        "summary" : "Creates instance of local configuration for given extension | maturity=EARLY_ADOPTER",
        "operationId" : "createLocalExtensionConfiguration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the extension",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains new configuration of the extension.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtensionConfigurationDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The extension configuration has been created. Response contains the ID of the new configuration.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/extensions/{id}" : {
      "get" : {
        "tags" : [ "Extensions" ],
        "summary" : "Lists the properties of the specified extension | maturity=EARLY_ADOPTER",
        "operationId" : "getExtension",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required extension.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "delete" : {
        "tags" : [ "Extensions" ],
        "summary" : "Deletes the ZIP file of the specified extension | maturity=EARLY_ADOPTER",
        "description" : "Deletion of the extension file uninstalls the extension, making it unavailable for use.",
        "operationId" : "deleteExtension",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the extension to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/extensions/{id}/instances/{configurationId}" : {
      "get" : {
        "tags" : [ "Extensions" ],
        "summary" : "Returns instance of local configuration for given extension | maturity=EARLY_ADOPTER",
        "operationId" : "getLocalExtensionConfiguration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the extension.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configurationId",
          "in" : "path",
          "description" : "The ID of the configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionConfigurationDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Extensions" ],
        "summary" : "Updates instance of local configuration for given extension | maturity=EARLY_ADOPTER",
        "operationId" : "updateLocalExtensionConfiguration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the extension where you want to update the configuration. \n\nIf you set the extension ID in the body as well, it must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configurationId",
          "in" : "path",
          "description" : "The ID of the configuration to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the extension configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtensionConfigurationDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Extensions" ],
        "summary" : "Deletes an existing configuration of the extension | maturity=EARLY_ADOPTER",
        "operationId" : "deleteLocalExtensionConfiguration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the extension where you want to delete the configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configurationId",
          "in" : "path",
          "description" : "The ID of the configuration to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/extensions/{id}/binary" : {
      "get" : {
        "tags" : [ "Extensions" ],
        "summary" : "Downloads the ZIP file of the specified extension | maturity=EARLY_ADOPTER",
        "operationId" : "getExtensionBinary",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the extension you want to download.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ZIP file of the extension"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/extensions/{id}/global" : {
      "get" : {
        "tags" : [ "Extensions" ],
        "summary" : "Get the global configuration of the specified OneAgent or JMX extension | maturity=EARLY_ADOPTER",
        "operationId" : "getExtensionGlobalConfiguration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the extension to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Global configuration of given extension.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GlobalExtensionConfiguration"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Extensions" ],
        "summary" : "Updates the configuration of the specified OneAgent or JMX extension | maturity=EARLY_ADOPTER",
        "operationId" : "updateGlobalExtensionConfiguration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the extension to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated configuration of the extension.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/GlobalExtensionConfiguration"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Extension configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/extensions/{id}/states" : {
      "get" : {
        "tags" : [ "Extensions" ],
        "summary" : "Lists the states of the specified extension | maturity=EARLY_ADOPTER",
        "operationId" : "getExtensionStates",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required extension.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of results per result page. Must be between 1 and 500",
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 200
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Extension state to filter.",
          "schema" : {
            "type" : "string",
            "enum" : [ "DISABLED", "ERROR_AUTH", "ERROR_COMMUNICATION_FAILURE", "ERROR_CONFIG", "ERROR_TIMEOUT", "ERROR_UNKNOWN", "INCOMPATIBLE", "LIMIT_REACHED", "NOTHING_TO_REPORT", "OK", "STATE_TYPE_UNKNOWN", "UNINITIALIZED", "UNSUPPORTED", "WAITING_FOR_STATE" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionStateList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/extensions" : {
      "get" : {
        "tags" : [ "Extensions" ],
        "summary" : "Lists all uploaded extensions | maturity=EARLY_ADOPTER",
        "operationId" : "getExtensions",
        "parameters" : [ {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of results per result page. Must be between 1 and 500",
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 200
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionListDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Extensions" ],
        "summary" : "Uploads a ZIP extension file | maturity=EARLY_ADOPTER",
        "operationId" : "uploadExtension",
        "parameters" : [ {
          "name" : "overrideAlerts",
          "in" : "query",
          "description" : "Use extension-defined thresholds for alerts (`true`) or user-defined thresholds (`false`). \n\n Extension-defined thresholds are stored in the `plugin.json` file. \n\nIf not set, user-defined thresholds are used.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "Extension ZIP file to be uploaded. \n\n File name must match the **name** field in the `plugin.json` file. \n\nFor example, for the extension whose **name** is `custom.remote.python.demo`, the name of the extension file must be `custom.remote.python.demo.zip`.",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. Extension has been uploaded. Response contains the ID of the extension.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/extensions/{technology}/availableHosts" : {
      "get" : {
        "tags" : [ "Extensions" ],
        "summary" : "Lists all available hosts that have specified technology running | maturity=EARLY_ADOPTER",
        "operationId" : "getHostsForTechnology",
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Name of requested technology",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ACTIVE_MQ", "ACTIVE_MQ_ARTEMIS", "ADO_NET", "AIX", "AKKA", "AMAZON_REDSHIFT", "AMQP", "APACHE_CAMEL", "APACHE_CASSANDRA", "APACHE_COUCH_DB", "APACHE_DERBY", "APACHE_HTTP_CLIENT_ASYNC", "APACHE_HTTP_CLIENT_SYNC", "APACHE_HTTP_SERVER", "APACHE_KAFKA", "APACHE_LOG4J", "APACHE_SOLR", "APACHE_STORM", "APACHE_SYNAPSE", "APACHE_TOMCAT", "APPARMOR", "APPLICATION_INSIGHTS_SDK", "ASP_DOTNET", "ASP_DOTNET_CORE", "ASP_DOTNET_CORE_SIGNALR", "ASP_DOTNET_SIGNALR", "ASYNC_HTTP_CLIENT", "AWS_DYNAMO_DB", "AWS_LAMBDA", "AWS_RDS", "AWS_SERVICE", "AXIS", "AZURE_FUNCTIONS", "AZURE_SERVICE_BUS", "AZURE_SERVICE_FABRIC", "AZURE_STORAGE", "BOSHBPM", "CITRIX", "CITRIX_COMMON", "CITRIX_DESKTOP_DELIVERY_CONTROLLERS", "CITRIX_DIRECTOR", "CITRIX_LICENSE_SERVER", "CITRIX_PROVISIONING_SERVICES", "CITRIX_STOREFRONT", "CITRIX_VIRTUAL_DELIVERY_AGENT", "CITRIX_WORKSPACE_ENVIRONMENT_MANAGEMENT", "CITRIX_XEN", "CLOUDFOUNDRY", "CLOUDFOUNDRY_AUCTIONEER", "CLOUDFOUNDRY_BOSH", "CLOUDFOUNDRY_GOROUTER", "COLDFUSION", "CONFLUENT_KAFKA_CLIENT", "CONTAINERD", "CORE_DNS", "COUCHBASE", "CRIO", "CXF", "DATASTAX", "DB2", "DIEGO_CELL", "DOCKER", "DOTNET", "DOTNET_REMOTING", "ELASTIC_SEARCH", "ENVOY", "ERLANG", "ETCD", "F5_LTM", "FSHARP", "GARDEN", "GLASSFISH", "GO", "GOOGLE_CLOUD_FUNCTIONS", "GRAAL_TRUFFLE", "GRPC", "GRSECURITY", "HADOOP", "HADOOP_HDFS", "HADOOP_YARN", "HAPROXY", "HEAT", "HESSIAN", "HORNET_Q", "IBM_CICS_REGION", "IBM_CICS_TRANSACTION_GATEWAY", "IBM_IMS_CONNECT_REGION", "IBM_IMS_CONTROL_REGION", "IBM_IMS_MESSAGE_PROCESSING_REGION", "IBM_IMS_SOAP_GATEWAY", "IBM_INTEGRATION_BUS", "IBM_MQ", "IBM_MQ_CLIENT", "IBM_WEBSHPRERE_APPLICATION_SERVER", "IBM_WEBSHPRERE_LIBERTY", "IBM_WEBSPHERE_APPLICATION_SERVER", "IBM_WEBSPHERE_LIBERTY", "IIS", "IIS_APP_POOL", "ISTIO", "JAVA", "JAX_WS", "JBOSS", "JBOSS_EAP", "JDK_HTTP_SERVER", "JERSEY", "JETTY", "JRUBY", "JYTHON", "KUBERNETES", "LIBC", "LIBVIRT", "LINKERD", "LINUX_SYSTEM", "MARIADB", "MEMCACHED", "MICROSOFT_SQL_SERVER", "MONGODB", "MSSQL_CLIENT", "MULE_ESB", "MYSQL", "MYSQL_CONNECTOR", "NETFLIX_SERVO", "NETTY", "NGINX", "NODE_JS", "OK_HTTP_CLIENT", "ONEAGENT_SDK", "OPENCENSUS", "OPENSHIFT", "OPENSTACK_COMPUTE", "OPENSTACK_CONTROLLER", "OPENTELEMETRY", "OPENTRACING", "OPEN_LIBERTY", "ORACLE_DATABASE", "ORACLE_WEBLOGIC", "OWIN", "PERL", "PHP", "PHP_FPM", "PLAY", "POSTGRE_SQL", "POSTGRE_SQL_DOTNET_DATA_PROVIDER", "POWER_DNS", "PROGRESS", "PYTHON", "QOS_LOGBACK", "RABBIT_MQ", "REACTOR_CORE", "REDIS", "RESTEASY", "RESTLET", "RIAK", "RSOCKET", "RUBY", "RUNC", "RXJAVA", "SAG_WEBMETHODS_IS", "SAP", "SAP_HANADB", "SAP_HYBRIS", "SAP_MAXDB", "SAP_SYBASE", "SCALA", "SELINUX", "SHAREPOINT", "SPARK", "SPRING", "SQLITE", "THRIFT", "TIBCO", "TIBCO_BUSINESS_WORKS", "TIBCO_EMS", "UNDERTOW_IO", "VARNISH_CACHE", "VERTX", "VIM2", "VIOS", "VIRTUAL_MACHINE_KVM", "VIRTUAL_MACHINE_QEMU", "WILDFLY", "WINDOWS_CONTAINERS", "WINDOWS_SYSTEM", "WINK", "ZERO_MQ", "ZOS_CONNECT" ]
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the specified tag. \n\n You can specify several tags in the following format: `tag=tag1&tag=tag2`. The host has to match **all** the specified tags.",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "managementZone",
          "in" : "query",
          "description" : "Only return hosts that are part of the specified management zone.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "hostGroupId",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the specified host group. \n\n Specify the Dynatrace IDs of the host group you're interested in.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostGroupName",
          "in" : "query",
          "description" : "Filters the resulting set of hosts by the specified host group. \n\n Specify the name of the host group you're interested in.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of results per result page. Must be between 1 and 500",
          "schema" : {
            "maximum" : 500,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 200
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/extensions/activeGateExtensionModules" : {
      "get" : {
        "tags" : [ "Extensions" ],
        "summary" : "List available ActiveGate extension modules | maturity=EARLY_ADOPTER",
        "operationId" : "getRemoteExtensionModules",
        "responses" : {
          "200" : {
            "description" : "Success. The response contains IDs of ActiveGate extension modules. Use them to configure ActiveGate extension endpoints.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/extensions/validator" : {
      "post" : {
        "tags" : [ "Extensions" ],
        "summary" : "Validates a ZIP extension file for `POST/extensions` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateExtension",
        "parameters" : [ {
          "name" : "jsonOnly",
          "in" : "query",
          "description" : "Validate only the `plugin.json` file (`true`) or the entire extension structure (`false`). \n\n If not set, the entire extension is validated. ",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The ZIP extension file to be uploaded. \n\n The file name must match the ID of the extension. Example: `custom.remote.python.demo.zip`",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted extension is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/extensions/{id}/instances/validator" : {
      "post" : {
        "tags" : [ "Extensions" ],
        "summary" : "Validates the payload for the `POST /extensions/{id}/instances` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateLocalExtensionConfiguration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the extension.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains new configuration of the extension to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtensionConfigurationDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/failureDetection/parameterSelection/parameterSets/{id}/changeId" : {
      "put" : {
        "tags" : [ "Service - Failure detection parameter sets" ],
        "summary" : "Changes the ID of the specified failure detection parameter set | maturity=EARLY_ADOPTER",
        "description" : "Rules that use the set will be automatically adapted to the new ID.",
        "operationId" : "changeFdpId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required failure detection parameter set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the new ID of the set. All other fields are ignored.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityShortRepresentation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/failureDetection/parameterSelection/parameterSets" : {
      "get" : {
        "tags" : [ "Service - Failure detection parameter sets" ],
        "summary" : "Lists all available failure detection parameter sets | maturity=EARLY_ADOPTER",
        "operationId" : "getAllFdps",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Service - Failure detection parameter sets" ],
        "summary" : "Creates a new failure detection parameter set | maturity=EARLY_ADOPTER",
        "operationId" : "createFdp",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the new failure detection parameter set. \n\nDynatrace will generate a random UUID for you, if you don't specify an ID.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionParameterSet"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new failure detection parameter set has been created. The response contains the ID of the new set.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/failureDetection/parameterSelection/parameterSets/{id}" : {
      "get" : {
        "tags" : [ "Service - Failure detection parameter sets" ],
        "summary" : "Gets the specified failure detection parameter set | maturity=EARLY_ADOPTER",
        "operationId" : "getFdp",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required failure detection parameter set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FailureDetectionParameterSet"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Service - Failure detection parameter sets" ],
        "summary" : "Updates the specified failure detection parameter set | maturity=EARLY_ADOPTER",
        "description" : "If a set with the specified ID doesn't exist, a new one is created.",
        "operationId" : "createOrUpdateFdp",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required failure detection parameter set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the updated failure detection parameter set. \n\nYou can't update the ID with this request. Use the change ID request instead.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionParameterSet"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new failure detection parameter set has been created. The response contains the ID of the new set.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The failure detection parameter set has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Service - Failure detection parameter sets" ],
        "summary" : "Deletes the specified failure detection parameter set | maturity=EARLY_ADOPTER",
        "description" : "You cannot delete the set that is used by any failure detection rule. \n\nIf you need to delete such a set, switch the rule to a new set or delete the rule first.",
        "operationId" : "deleteFdp",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required failure detection parameter set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The failure detection parameter set has been deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/failureDetection/parameterSelection/parameterSets/validator" : {
      "post" : {
        "tags" : [ "Service - Failure detection parameter sets" ],
        "summary" : "Validates the payload for the `POST /service/failureDetection/parameterSelection/parameterSets` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateCreateFdp",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the failure detection parameter set to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionParameterSet"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/failureDetection/parameterSelection/parameterSets/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Failure detection parameter sets" ],
        "summary" : "Validates the payload for the `PUT /service/failureDetection/parameterSelection/parameterSets/{id}` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateUpdateFdp",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required failure detection parameter set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the failure detection parameter set to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionParameterSet"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/failureDetection/parameterSelection/rules/{id}/changeId" : {
      "put" : {
        "tags" : [ "Service - Failure detection rules" ],
        "summary" : "Changes the ID of the specified rule | maturity=EARLY_ADOPTER",
        "operationId" : "changeRuleId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required failure detection rule. ",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the new ID of the rule. All other fields are ignored.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityShortRepresentation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/failureDetection/parameterSelection/rules/{id}" : {
      "get" : {
        "tags" : [ "Service - Failure detection rules" ],
        "summary" : "Gets the properties of the specified rule | maturity=EARLY_ADOPTER",
        "operationId" : "getRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required failure detection rule. ",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FailureDetectionRule"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Service - Failure detection rules" ],
        "summary" : "Updates the specified failure detection rule rule | maturity=EARLY_ADOPTER",
        "description" : "If a rule with the specified ID doesn't exist, a new one is created and appended to the end of the rule list. \n\nRules are evaluated from top to bottom, the first matching rule applies.To enforce a particular order use the reorder request. \n\nThe failure detection parameter set used by the rule must exist at the time of rule creation.",
        "operationId" : "createOrUpdateRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required failure detection rule. ",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the updated configuration of the failure detection rule. \n\nYou can't update the ID with this request. Use the change ID request instead.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionRule"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new failure detection rule has been created. The response contains the ID of the new rule.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The failure detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Service - Failure detection rules" ],
        "summary" : "Deletes the specified failure detection rule | maturity=EARLY_ADOPTER",
        "operationId" : "deleteRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required failure detection rule. ",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The failure detection rule has been deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The specified entity doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/failureDetection/parameterSelection/rules" : {
      "get" : {
        "tags" : [ "Service - Failure detection rules" ],
        "summary" : "Lists all available failure detection rules | maturity=EARLY_ADOPTER",
        "operationId" : "getAllRules",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Service - Failure detection rules" ],
        "summary" : "Creates a new failure detection rule | maturity=EARLY_ADOPTER",
        "description" : "The new rule is appended to the end of the rule list. \n\nRules are evaluated from top to bottom, the first matching rule applies.To enforce a particular order use the reorder request. \n\nThe failure detection parameter set used by the rule must exist at the time of rule creation.",
        "operationId" : "createRule",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of the new failure detection rule. \n\nDynatrace will generate a random UUID for you, if you don't specify an ID.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionRule"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new failure detection rule has been created. The response contains the ID of the new rule.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/failureDetection/parameterSelection/rules/reorderRules" : {
      "put" : {
        "tags" : [ "Service - Failure detection rules" ],
        "summary" : "Reorders failure detection rules | maturity=EARLY_ADOPTER",
        "description" : "Rules are evaluated from top to bottom, the first matching rule applies.",
        "operationId" : "reorderRules",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the failure detection rules in the required order.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FdpSelectionRuleOrder"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/failureDetection/parameterSelection/rules/validator" : {
      "post" : {
        "tags" : [ "Service - Failure detection rules" ],
        "summary" : "Validates the payload for the `POST /service/failureDetection/parameterSelection/rules` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateCreateRule",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the parameters of the failure detection rule to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionRule"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/failureDetection/parameterSelection/rules/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Failure detection rules" ],
        "summary" : "Validates the payload for the `PUT /service/failureDetection/parameterSelection/rules/{id}` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateUpdateRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required failure detection rule. ",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of the failure detection rule to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailureDetectionRule"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/frequentIssueDetection" : {
      "get" : {
        "tags" : [ "Frequent issue detection" ],
        "summary" : "Gets the configuration of frequent issue detection",
        "operationId" : "getFrequentIssueDetectionConfig",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FrequentIssueDetectionConfig"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Frequent issue detection" ],
        "summary" : "Updates the configuration of frequent issue detection",
        "operationId" : "updateFrequentIssueDetectionConfig",
        "requestBody" : {
          "description" : "The JSON body of the request, containing parameters of the frequent issue detection configuration",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FrequentIssueDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/frequentIssueDetection/validator" : {
      "post" : {
        "tags" : [ "Frequent issue detection" ],
        "summary" : "Validates the payload for the `PUT /frequentIssueDetection` request",
        "operationId" : "validateFrequentIssueDetectionConfig",
        "requestBody" : {
          "description" : "The JSON body of the request, containing parameters of the frequent issue detection configuration",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FrequentIssueDetectionConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/geographicRegions/ipAddressMappings" : {
      "get" : {
        "tags" : [ "RUM - Geographic regions - IP address mapping" ],
        "summary" : "Gets the configuration of mapping between IP address and geographic regions",
        "operationId" : "getGeolocationRegionsIpAddress",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IpAddressMappings"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "RUM - Geographic regions - IP address mapping" ],
        "summary" : "Updates the configuration of mapping between IP address and geographic regions",
        "description" : "The request overwrites the existing configuration. Any rules not presented in the payload will be lost.",
        "operationId" : "putGeolocationRegionsIpAddress",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of the IP address mapping.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/IpAddressMappings"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/geographicRegions/ipAddressMappings/validator" : {
      "post" : {
        "tags" : [ "RUM - Geographic regions - IP address mapping" ],
        "summary" : "Validates the payload for the `PUT /geographicRegions/ipAddressMappings` request",
        "operationId" : "validateGeolocationRegionsIpAddress",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of the IP address.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/IpAddressMappings"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/geographicRegions/ipDetectionHeaders" : {
      "get" : {
        "tags" : [ "RUM - Geographic regions - custom client IP headers" ],
        "summary" : "Gets the configuration of custom client IP headers",
        "operationId" : "getGeolocationRegionsIpHeaders",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IpDetectionHeaders"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "RUM - Geographic regions - custom client IP headers" ],
        "summary" : "Updates the configuration of custom client IP headers",
        "description" : "The request overwrites the existing configuration. Any headers not presented in the payload will be lost.",
        "operationId" : "putGeolocationRegionsIpHeaders",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of the custom client IP headers.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/IpDetectionHeaders"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/geographicRegions/ipDetectionHeaders/validator" : {
      "post" : {
        "tags" : [ "RUM - Geographic regions - custom client IP headers" ],
        "summary" : "Validates the payload for the `PUT /geographicRegions/ipDetectionHeaders` request",
        "operationId" : "validateGeolocationRegionsIpHeaders",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the configuration of the custom client IP headers to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/IpDetectionHeaders"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/hostgroups/{id}/autoupdate" : {
      "get" : {
        "tags" : [ "OneAgent in a host group" ],
        "summary" : "Gets the configuration of OneAgent auto-update in the specified host group",
        "operationId" : "getAutoUpdateConfig_2",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostGroupAutoUpdateConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "OneAgent in a host group" ],
        "summary" : "Updates the configuration of OneAgent auto-update in the specified host group",
        "description" : "OneAgents are updated several minutes after the change of configuration. \n\nThe process can take more time depending on number of OneAgents in the update queue.",
        "operationId" : "updateAutoUpdateConfig_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains OneAgent auto-update parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroupAutoUpdateConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/hostgroups/{id}/autoupdate/validator" : {
      "post" : {
        "tags" : [ "OneAgent in a host group" ],
        "summary" : "Validates the payload for the `PUT /hostgroups/{id}/autoupdate` request",
        "operationId" : "validateAutoUpdateConfig_2",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains OneAgent auto-update parameters to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroupAutoUpdateConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/hostgroups/{id}" : {
      "get" : {
        "tags" : [ "OneAgent in a host group" ],
        "summary" : "Gets the OneAgent configuration in the specified host group",
        "operationId" : "getHostGroupConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required host group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OneAgentHostGroupConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/service/ibmMQTracing/imsEntryQueue" : {
      "get" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Lists all IBM IMS entry queues",
        "description" : "This endpoint is used to provide Dynatrace with all IBM MQ queues (defined by QueueManagerName and QueueName) which are used to send messages to IBM IMS on the mainframe. \n\n This is required to facilitate end to end tracing for messages sent via IBM MQ to IBM IMS.",
        "operationId" : "getAllImsEntryQueues",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Creates an IBM IMS entry queue",
        "description" : "The body must not provide an ID as it will be automatically assigned by the Dynatrace server.",
        "operationId" : "createImsEntryQueue",
        "requestBody" : {
          "description" : "JSON body of the request, containing parameters of the new IBM IMS entry queue.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/IbmMQImsEntryQueue"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The IBM IMS entry queue has been created. The response body contains the generated ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/ibmMQTracing/imsEntryQueue/{id}" : {
      "get" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Gets the properties of the specified IBM IMS entry queue",
        "operationId" : "getImsEntryQueue",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required IBM IMS entry queue.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IbmMQImsEntryQueue"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Updates an existing IBM IMS entry queue or creates a new one",
        "description" : "If the IBM IMS entry queue with the specified ID does not exist, a new IBM IMS entry queue will be created.",
        "operationId" : "createOrUpdateImsEntryQueue",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the IBM IMS entry queue to update.\n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing updated parameters of the IBM IMS entry queue.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/IbmMQImsEntryQueue"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new IBM IMS entry queue has been created. The response body contains the ID and name of the created IBM IMS entry queue.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The IBM IMS entry queue has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Deletes the specified IBM IMS entry queue",
        "operationId" : "deleteImsEntryQueue",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the IBM IMS entry queue to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/ibmMQTracing/queueManager/{name}" : {
      "get" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Gets the parameters of the specified queue manager",
        "operationId" : "getQueueManager",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the queue manager you're inquiring.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueManager"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Updates the specified queue manager or creates a new one",
        "description" : "If the queue manager with the specified ID doesn’t exist, a new queue manager will be created.",
        "operationId" : "putQueueManager",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the queue manager to be updated. \n\n The name of the queue manager in the body of the request must match this name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request containing updated parameters of the queue manager.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueueManager"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new queue manager has been created. Response contains the name of the queue manager.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The queue manager has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid. See the response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Deletes the specified queue manager",
        "operationId" : "deleteQueueManager",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the queue manager to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/ibmMQTracing/queueManager" : {
      "get" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Lists all available queue managers",
        "description" : "This endpoint is used to provide Dynatrace with your IBM MQ setup regarding alias, remote and cluster queues. \n\n This is required to facilitate end to end tracing for messages send via IBM MQ where sender and receiver use different queue names. Without this information Dynatrace would still trace all requests, but would not be able to stitch service calls that use these IBM MQ features.",
        "operationId" : "getQueueManagers",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/service/ibmMQTracing/imsEntryQueue/validator" : {
      "post" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Validates new IBM IMS entry queues for the `POST /service/ibmMQTracing/imsEntryQueue` request",
        "operationId" : "validateImsEntryQueueForPost",
        "requestBody" : {
          "description" : "JSON body of the request, containing IBM IMS entry queue configuration to validate.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/IbmMQImsEntryQueue"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/ibmMQTracing/imsEntryQueue/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Validates update of existing IBM IMS entry queues for the `PUT /service/ibmMQTracing/imsEntryQueue/{id}` request",
        "operationId" : "validateImsEntryQueueForPut",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the IBM IMS entry queue to validate.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing IBM IMS entry queue configuration to validate.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/IbmMQImsEntryQueue"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/ibmMQTracing/queueManager/{name}/validator" : {
      "post" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Validates the queue manager update for the `PUT /service/ibmMQTracing/queueManager/{name}` request",
        "operationId" : "validateQueueManager",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the queue manager to be validated. \n\n The name of the queue manager in the body of the request must match this name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request containing updated parameters of the queue manager.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueueManager"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid. See the response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/managementZones" : {
      "get" : {
        "tags" : [ "Management zones" ],
        "summary" : "Lists all configured management zones",
        "operationId" : "listManagementZones",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Management zones" ],
        "summary" : "Creates a new management zone",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createManagementZone",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new management zone.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementZone"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The management zone has been created. The response contains the ID of the new zone.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/managementZones/{id}" : {
      "get" : {
        "tags" : [ "Management zones" ],
        "summary" : "Lists the parameters of the specified management zone",
        "operationId" : "getManagementZone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required management zone.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeProcessGroupReferences",
          "in" : "query",
          "description" : "Flag to include process group references to the response. \n\n Process group references aren't compatible across environments. When this flag is set to false, conditions with process group references will be removed. If that leads to a rule having no conditions, the entire rule will be removed.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagementZone"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Management zones" ],
        "summary" : "Updates the specified management zone",
        "description" : "If a management zone with the specified ID doesn't exist, a new one is created.",
        "operationId" : "updateManagementZone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the management zone to be updated.\n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the management zone.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementZone"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The management zone has been created. The response contains the ID of the new zone.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The management zone has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Management zones" ],
        "summary" : "Deletes the specified management zone",
        "operationId" : "deleteManagementZone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the management zone to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/managementZones/validator" : {
      "post" : {
        "tags" : [ "Management zones" ],
        "summary" : "Validates a new management zone for the `POST /managementZones` request",
        "operationId" : "validateCreateManagementZone",
        "requestBody" : {
          "description" : "The JSON body of the request, containing the management zone parameters to validate.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementZone"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/managementZones/{id}/validator" : {
      "post" : {
        "tags" : [ "Management zones" ],
        "summary" : "Validate updates of existing management zone for the `PUT /managementZones/{id}` request",
        "operationId" : "validateUpdateManagementZone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the management zone to validate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request, containing the management zone parameters to validate.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementZone"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/log/{metricKey}" : {
      "get" : {
        "tags" : [ "Calculated metrics - Log monitoring" ],
        "summary" : "Gets the definition of the specified custom log metric | maturity=EARLY_ADOPTER",
        "operationId" : "getLogMetricConfig",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the required custom log metric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogMetricConfig"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Calculated metrics - Log monitoring" ],
        "summary" : "Creates a new custom log metric | maturity=EARLY_ADOPTER",
        "description" : "If the metric definition with the specified key already exists, it is updated.",
        "operationId" : "updateOrCreateLogMetricConfig",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The required key of the custom log metric. The key must have the `calc:log.` prefix. \n\n The key in the body of the request must match this key.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the definition of the custom log metric.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/LogMetricConfig"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new metric definition has been created. The response body contains the key and the name of the new metric.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The metric definition has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Calculated metrics - Log monitoring" ],
        "summary" : "Deletes the specified custom log metric definition | maturity=EARLY_ADOPTER",
        "operationId" : "deleteLogMetricConfig",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the custom log metric to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/log" : {
      "get" : {
        "tags" : [ "Calculated metrics - Log monitoring" ],
        "summary" : "Lists all custom log metrics configured in your environment | maturity=EARLY_ADOPTER",
        "operationId" : "listLogMetricConfigs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/calculatedMetrics/log/{metricKey}/validator" : {
      "post" : {
        "tags" : [ "Calculated metrics - Log monitoring" ],
        "summary" : "Validates the payload for the `PUT /calculatedMetrics/log/{metricKey}` request. | maturity=EARLY_ADOPTER",
        "operationId" : "validateMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the custom log metric to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains definition of the custom log metric to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/LogMetricConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. See the response body for details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/mobile" : {
      "get" : {
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "summary" : "Lists all calculated metrics for mobile and custom apps configured in your environment",
        "operationId" : "listMobileMetrics",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "summary" : "Creates a new calculated metric for a mobile or custom app",
        "operationId" : "createMobileMetric",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the definition of the new calculated metric for mobile or custom app.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedMobileMetric"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The calculated mobile metric has been created. Response contains its key and name.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/mobile/{metricKey}" : {
      "get" : {
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "summary" : "Gets the descriptor of the specified calculated metric for mobile or custom app",
        "operationId" : "getMobileMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the required metric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CalculatedMobileMetric"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "summary" : "Updates the specified calculated metric for a mobile or custom app",
        "operationId" : "updateMobileMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the metric to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the updated definition of the calculated mobile metric.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedMobileMetricUpdate"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The metric has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "summary" : "Deletes the specified calculated metric for mobile or custom app",
        "operationId" : "deleteMobileMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the metric to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/mobile/validator" : {
      "post" : {
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "summary" : "Validates the payload for the `POST /calculatedMetrics/mobile` request",
        "operationId" : "validateCreateMobileMetric",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the definition of the metric to be validated. \n\nThe key of the metric must be omitted.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedMobileMetric"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted metric is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/mobile/{metricKey}/validator" : {
      "post" : {
        "tags" : [ "Calculated metrics - Mobile & custom applications" ],
        "summary" : "Validates the payload for the `PUT /calculatedMetrics/mobile/{metricKey}` request",
        "operationId" : "validateUpdateMobileMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the metric to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the definition of the metric to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedMobileMetricUpdate"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted metric is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/rum" : {
      "get" : {
        "tags" : [ "Calculated metrics - Web applications" ],
        "summary" : "Lists all calculated web application metrics",
        "operationId" : "listRumMetrics",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Calculated metrics - Web applications" ],
        "summary" : "Creates a new calculated web application metric",
        "operationId" : "createRumMetric",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the descriptor of the new calculated web application metric.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationMetric"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The metric has been created. Response contains its key and name.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/rum/{metricKey}" : {
      "get" : {
        "tags" : [ "Calculated metrics - Web applications" ],
        "summary" : "Gets the descriptor of the specified calculated web application metric",
        "operationId" : "getRumMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the required metric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebApplicationMetric"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Calculated metrics - Web applications" ],
        "summary" : "Updates the specified calculated web application metric",
        "operationId" : "updateRumMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the calculated web application metric to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the updated parameters of the calculated web application metric.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationMetricUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The metric has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Calculated metrics - Web applications" ],
        "summary" : "Deletes the specified calculated web application metric",
        "operationId" : "deleteRumMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the metric to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/rum/validator" : {
      "post" : {
        "tags" : [ "Calculated metrics - Web applications" ],
        "summary" : "Validates the payload for the `POST /calculatedMetrics/rum` request",
        "description" : "The body must not provide an ID.",
        "operationId" : "validateCreateRumMetric",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the descriptor of the metric to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationMetric"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted metric is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/rum/{metricKey}/validator" : {
      "post" : {
        "tags" : [ "Calculated metrics - Web applications" ],
        "summary" : "Validates the payload for the `PUT /calculatedMetrics/rum/{metricKey}` request",
        "operationId" : "validateUpdateRumMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the calculated web application metric to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the descriptor of the metric to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebApplicationMetricUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted metric is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/service" : {
      "get" : {
        "tags" : [ "Calculated metrics - Services" ],
        "summary" : "Lists all calculated service metrics configured in your environment",
        "operationId" : "listServiceMetrics",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Calculated metrics - Services" ],
        "summary" : "Creates a new calculated service metric",
        "operationId" : "createServiceMetric",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new calculated service metric.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedServiceMetric"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The calculated service metric has been created. Response contains the key of the new metric.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/service/{metricKey}" : {
      "get" : {
        "tags" : [ "Calculated metrics - Services" ],
        "summary" : "Gets the descriptor of the specified calculated service metric",
        "operationId" : "getServiceMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the required calculated service metric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CalculatedServiceMetric"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Calculated metrics - Services" ],
        "summary" : "Updates the specified calculated service metric",
        "description" : "If the calculated service metric with the specified key doesn't exist, a new metric is created.",
        "operationId" : "updateServiceMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the calculated service metric to be updated. \n\n The key of the calculated service metric in the body of the request must match this key.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the calculated service metric.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedServiceMetric"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new calculated service metric has been created. Response contains the key of the new metric.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The calculated service metric has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Calculated metrics - Services" ],
        "summary" : "Deletes the specified calculated service metric",
        "operationId" : "deleteServiceMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the calculated service metric to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The calculated service metric has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/service/validator" : {
      "post" : {
        "tags" : [ "Calculated metrics - Services" ],
        "summary" : "Validates the payload for the `POST /calculatedMetric/service` request",
        "operationId" : "validateCreateServiceMetric",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the calculated service metric to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedServiceMetric"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/service/{metricKey}/validator" : {
      "post" : {
        "tags" : [ "Calculated metrics - Services" ],
        "summary" : "Validates the payload for the `PUT /calculatedMetric/service/{id}` request",
        "operationId" : "validateUpdateServiceMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the calculated service metric to be validated .\n\n The key of the metric in the body of the request must match this key.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the calculated service metric to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedServiceMetric"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/synthetic" : {
      "get" : {
        "tags" : [ "Calculated metrics - Synthetic" ],
        "summary" : "Lists all calculated synthetic metrics available in your environment | maturity=EARLY_ADOPTER",
        "operationId" : "listSyntheticMetrics",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Calculated metrics - Synthetic" ],
        "summary" : "Creates a new calculated synthetic metric | maturity=EARLY_ADOPTER",
        "operationId" : "createSyntheticMetric",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains definition of the new calculated synthetic metric.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedSyntheticMetric"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The calculated synthetic metric has been created. Response contains its key and name.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/synthetic/{metricKey}" : {
      "get" : {
        "tags" : [ "Calculated metrics - Synthetic" ],
        "summary" : "Gets the descriptor of the specified calculated synthetic metric | maturity=EARLY_ADOPTER",
        "operationId" : "getSyntheticMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the required calculated synthetic metric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CalculatedSyntheticMetric"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Calculated metrics - Synthetic" ],
        "summary" : "Updates the specified calculated synthetic metric | maturity=EARLY_ADOPTER",
        "operationId" : "updateSyntheticMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the calculated synthetic metric to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the update to the calculated synthetic metric.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticMetricUpdate"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The calculated synthetic metric has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Calculated metrics - Synthetic" ],
        "summary" : "Deletes the specified calculated synthetic metric | maturity=EARLY_ADOPTER",
        "operationId" : "deleteSyntheticMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the calculated synthetic metric to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/synthetic/validator" : {
      "post" : {
        "tags" : [ "Calculated metrics - Synthetic" ],
        "summary" : "Validates the payload for the `POST /calculatedMetrics/synthetic` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateCreateSyntheticMetric",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the definition of the metric to be validated. \n\nThe key of the metric must be omitted.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculatedSyntheticMetric"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted calculated synthetic metric is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/calculatedMetrics/synthetic/{metricKey}/validator" : {
      "post" : {
        "tags" : [ "Calculated metrics - Synthetic" ],
        "summary" : "Validates the payload for the `PUT /calculatedMetrics/synthetic/{metricKey}` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateUpdateSyntheticMetric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the metric to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the update to the metric to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticMetricUpdate"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted calculated synthetic metric is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/notifications" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Lists all notification configurations available in your environment",
        "operationId" : "listNotificationConfigs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationConfigStubListDto"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Creates a new notification configuration",
        "operationId" : "createNotificationConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new notification configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new notification configuration has been created. The response contains the ID of the new notification configuration."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/notifications/{id}" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Gets the properties of the specified notification configuration",
        "operationId" : "getNotificationConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required notification configuration.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationConfig"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Notifications" ],
        "summary" : "Updates an existing notification configuration or creates a new one",
        "description" : "If a notification configuration with the specified ID doesn't exist, a new configuration is created.",
        "operationId" : "updateNotificationConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the notification configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the notification configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new notification configuration has been created. The response contains the ID of the new notification configuration.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationConfigStub"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The notification configuration has been updated. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Notifications" ],
        "summary" : "Deletes the specified notification configuration",
        "operationId" : "deleteNotificationConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the notification configuration to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The notification configuration has been deleted. The response doesn't have a body."
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/notifications/validator" : {
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Validates the payload for the `POST /notifications` request",
        "operationId" : "validateCreateNotificationConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the notification configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/notifications/{id}/validator" : {
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Validates the payload the `PUT /notifications/{id}` request",
        "operationId" : "validateUpdateNotificationConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the notification configuration to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the notification configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/plugins/{id}/endpoints" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Lists endpoints of the specified ActiveGate plugin",
        "operationId" : "getRemotePluginEndpoints",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required plugin.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Creates a new endpoint for the specified ActiveGate plugin",
        "description" : "The body must not provide an ID of the endpoint, as IDs are automatically assigned.",
        "operationId" : "createRemotePluginEndpoint",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the plugin where you want to create an endpoint.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new plugin endpoint.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemotePluginEndpoint"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The plugin endpoint has been created. Response contains the ID of the new endpoint.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/plugins/{id}/binary" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Downloads the ZIP file of the specified plugin",
        "operationId" : "getPluginBinary",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the plugin you want to download.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "delete" : {
        "tags" : [ "Plugins" ],
        "summary" : "Deletes the ZIP file of the specified plugin",
        "description" : "Deletion of the plugin file uninstalls the plugin, making it unavailable for use.",
        "operationId" : "deletePlugin",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the plugin to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/plugins/{id}/endpoints/{endpointId}" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Gets parameters of the specified endpoint of the ActiveGate plugin",
        "operationId" : "getRemotePluginEndpoint",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required plugin.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endpointId",
          "in" : "path",
          "description" : "The ID of the required endpoint.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemotePluginEndpoint"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Plugins" ],
        "summary" : "Updates an existing endpoint of the ActiveGate plugin",
        "operationId" : "updateRemotePluginEndpoint",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the plugin where you want to update an endpoint. \n\nIf you set the plugin ID in the body as well, it must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endpointId",
          "in" : "path",
          "description" : "The ID of the endpoint to be updated. \n\nIf you set the endpoint ID in the body as well, it must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the plugin endpoint.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemotePluginEndpoint"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The endpoint has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Plugins" ],
        "summary" : "Deletes an existing endpoint of the ActiveGate plugin",
        "operationId" : "deleteRemotePluginEndpoint",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the plugin where you want to delete an endpoint.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endpointId",
          "in" : "path",
          "description" : "The ID of the endpoint to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/plugins/{id}" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Lists the properties of the specified plugin",
        "operationId" : "getPlugin",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required plugin.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Plugin"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/plugins/{id}/states" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Lists the states of the specified plugin",
        "operationId" : "getPluginStates",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required plugin.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PluginStateList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/plugins" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Lists all uploaded plugins",
        "operationId" : "getPlugins",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Uploads a ZIP plugin file",
        "operationId" : "uploadPlugin",
        "parameters" : [ {
          "name" : "overrideAlerts",
          "in" : "query",
          "description" : "Use plugin-defined thresholds for alerts (`true`) or user-defined thresholds (`false`). \n\n Plugin-defined thresholds are stored in the `plugin.json` file. \n\nIf not set, user-defined thresholds are used.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "Plugin ZIP file to be uploaded. \n\n File name must match the **name** field in the `plugin.json` file. \n\nFor example, for the plugin whose **name** is `custom.remote.python.demo`, the name of the plugin file must be `custom.remote.python.demo.zip`.",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. Plugin has been uploaded. Response contains the ID of the plugin.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/plugins/activeGatePluginModules" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "List available ActiveGate plugin modules",
        "operationId" : "getRemotePluginModules",
        "responses" : {
          "200" : {
            "description" : "Success. The response contains IDs of ActiveGate plugin modules. Use them to configure plugin endpoints.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/plugins/validator" : {
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Validates a ZIP plugin file for `POST/plugins` request",
        "operationId" : "validatePlugin",
        "parameters" : [ {
          "name" : "jsonOnly",
          "in" : "query",
          "description" : "Validate only the `plugin.json` file (`true`) or the entire plugin structure (`false`). \n\n If not set, the entire plugin is validated. ",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The ZIP plugin file to be uploaded. \n\n The file name must match the ID of the plugin. Example: `custom.remote.python.demo.zip`",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted plugin is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/plugins/{id}/endpoints/validator" : {
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Validates the payload for the `POST /plugins/{id}/endpoints` request",
        "operationId" : "validateRemotePluginEndpoint",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required plugin.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new plugin endpoint.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemotePluginEndpoint"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/remoteEnvironments" : {
      "get" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Lists all remote environment configurations | maturity=EARLY_ADOPTER",
        "operationId" : "listRemoteEnvironmentConfigs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteEnvironmentConfigListDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Creates a new remote environment configuration | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server. \n\nBe sure to prepare a token with the **Fetch data from a remote environment** (`RestRequestForwarding`) scope. You can create such a token via [Tokens API](https://dt-url.net/ff23kmx).",
        "operationId" : "createRemoteEnvironmentConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new remote environment configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteEnvironmentConfigDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. A new remote environment configuration has been created. The response contains the ID of the new configuration.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteEnvironmentConfigStub"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/remoteEnvironments/{id}" : {
      "get" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Gets the properties of the specified remote environment configuration | maturity=EARLY_ADOPTER",
        "operationId" : "getRemoteEnvironmentConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteEnvironmentConfigDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Updates an existing remote environment configuration or creates a new one | maturity=EARLY_ADOPTER",
        "description" : "If a remote environment configuration with the specified ID doesn't exist, a new configuration is created.",
        "operationId" : "updateRemoteEnvironmentConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the remote environment configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteEnvironmentConfigDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. A new remote environment configuration has been created. The response contains the ID of the new configuration.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteEnvironmentConfigStub"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The configuration has been updated. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Deletes the specified remote environment configuration | maturity=EARLY_ADOPTER",
        "operationId" : "deleteRemoteEnvironmentConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the configuration to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been deleted. The response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/remoteEnvironments/validator" : {
      "post" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Validates the payload for the `POST /remoteEnvironments` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateCreateRemoteEnvironmentConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the remote environment configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteEnvironmentConfigDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/remoteEnvironments/{id}/validator" : {
      "post" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Validates the payload for the `PUT /remoteEnvironments/{id}` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateUpdateRemoteEnvironmentConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the remote environment configuration to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the remote environment configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteEnvironmentConfigDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/reports/{id}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Gets the properties of the specified report | maturity=EARLY_ADOPTER",
        "operationId" : "getReport",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required report.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response body contains parameters of the report.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DashboardReport"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Reports" ],
        "summary" : "Updates an existing report | maturity=EARLY_ADOPTER",
        "description" : "If a report with the specified ID doesn't exist, a new report is created.",
        "operationId" : "createOrUpdateReport",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the report to be updated. \n\n The ID in the request body must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the report.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DashboardReport"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new report has been created. The response contains the ID of the new report.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The report has been updated. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Reports" ],
        "summary" : "Deletes the specified report | maturity=EARLY_ADOPTER",
        "operationId" : "deleteReport",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the report to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The report has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/reports" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Lists all reports available in your environment | maturity=EARLY_ADOPTER",
        "operationId" : "listReports",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Type of a report.",
          "schema" : {
            "type" : "string",
            "enum" : [ "DASHBOARD" ]
          }
        }, {
          "name" : "sourceId",
          "in" : "query",
          "description" : "Referencing source entity of a report (e.g. dashboard).",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportStubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Creates a report | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createReport",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new report.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DashboardReport"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new report has been created. The response contains the ID of the new report.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/reports/{id}/subscribe" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Subscribes to the specified report | maturity=EARLY_ADOPTER",
        "operationId" : "subscribeReport",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the report to subscribe to.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains a list of new subscribers.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportSubscriptions"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new subscriptions have been created. The response body contains the report ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/reports/{id}/unsubscribe" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Unsubscribes from the specified report | maturity=EARLY_ADOPTER",
        "operationId" : "unsubscribeReport",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the report to unsubscribe from.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains a list of recipients to be unsubscribed.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportSubscriptions"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The subscriptions have been revoked. The response body contains the report ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/reports/{id}/validator" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Validates the payload for the `PUT /reports/{id}` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateCreateOrUpdateReport",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the report to be validated. \n\n The ID in the request body must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the report to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DashboardReport"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted report is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/reports/validator" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Validates the payload for the `POST /reports` request | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID.",
        "operationId" : "validateCreateReport",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the report to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/DashboardReport"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted report is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/requestAttributes" : {
      "get" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Lists all available request attributes",
        "operationId" : "listRequestAttributesConfigs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Creates a new request attribute",
        "description" : "The body must not provide an ID as IDs are automatically assigned.",
        "operationId" : "createRequestAttributesConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestAttribute"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. Request attribute has been created. The ID of the new configuration is returned.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`CaptureRequestData` (Capture request data)" ]
      }
    },
    "/service/requestAttributes/{id}" : {
      "get" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Shows the properties of the specified request attribute",
        "operationId" : "getRequestAttributesConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required request attribute.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "includeProcessGroupReferences",
          "in" : "query",
          "description" : "Flag to include process group references to the response. \n\n Process Group group references aren't compatible across environments.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestAttribute"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Updates an existing request attribute or creates a new one",
        "operationId" : "updateRequestAttributesConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request attribute to be updated.\n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestAttribute"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The request attribute with the specified ID has been created. The ID of the new configuration is returned.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. Request attribute has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`CaptureRequestData` (Capture request data)" ]
      },
      "delete" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Deletes the specified request attribute",
        "operationId" : "deleteRequestAttributesConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request attribute to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`CaptureRequestData` (Capture request data)" ]
      }
    },
    "/service/requestAttributes/validator" : {
      "post" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Validates new request attributes for the `POST /requestAttributes` request",
        "operationId" : "validateCreateRequestAttributesConfig",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestAttribute"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`CaptureRequestData` (Capture request data)" ]
      }
    },
    "/service/requestAttributes/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Validate updates of existing request attribute for the `PUT /requestAttributes/{id}` request",
        "operationId" : "validateUpdateRequestAttributesConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request attribute to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestAttribute"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`CaptureRequestData` (Capture request data)" ]
      }
    },
    "/service/requestNaming" : {
      "get" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Lists all request naming rules along with their parameters",
        "operationId" : "listRequestNaming",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Creates a new request naming rule",
        "description" : "The new rule goes to the end of the rules list and will be the last to evaluate. Existing rules remain unaffected.",
        "operationId" : "createRequestNaming",
        "parameters" : [ {
          "name" : "position",
          "in" : "query",
          "description" : "Order of the new request naming rule. Set to `PREPEND` to prepend it to the list, `APPEND` to append it. Defaults to `APPEND`.",
          "schema" : {
            "type" : "string",
            "enum" : [ "APPEND", "PREPEND" ],
            "default" : "APPEND"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request containing parameters of the new request naming rule. \n\n You must not specify the ID of the rule!",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestNaming"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The request naming has been created. Response contains the new service's ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/requestNaming/{id}" : {
      "get" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Gets the parameters of the specified request naming rule",
        "operationId" : "getRequestNaming",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request naming rule you're inquiring.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestNaming"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Updates the specified request naming rule",
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created at the end of the rules list and will be the last to evaluate.",
        "operationId" : "updateRequestNaming",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request naming to be updated.\n\n The ID of the request naming in the body of the request must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request containing updated parameters of the request naming.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestNaming"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. Request naming rule has been created. Response contains the new request naming rule's ID and name.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. Request naming rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Deletes the specified request naming rule",
        "operationId" : "deleteRequestNaming",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request naming rule to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The rule has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/requestNaming/order" : {
      "put" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Reorders the request namings",
        "description" : "This request reorders the request namings according to the given list of IDs. Request namings not present in the body of the request will retain their relative ordering but will be ordered *after* all those present in the request.",
        "operationId" : "orderRequestNaming",
        "requestBody" : {
          "description" : "JSON body of the request containing the IDs of the request naming rules in the desired order. Any further properties (*name*, *description*) will be ignored.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Request namings have been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/requestNaming/validator" : {
      "post" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Validates the new request naming rule for the `POST /requestNaming` request",
        "operationId" : "validateCreateRequestNaming",
        "requestBody" : {
          "description" : "The JSON body of the request containing parameters of the new request naming rule. \n\n You must not specify the ID of the rule!",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestNaming"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/requestNaming/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Validates the new request naming for the `PUT /requestNaming/{id}` request",
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created at the end of the rules list and will be the last to evaluate.",
        "operationId" : "validateUpdateRequestNaming",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request naming to be updated.\n\n The ID of the request naming in the body of the request must match this ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request containing updated parameters of the request naming.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestNaming"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/resourceNaming" : {
      "get" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Lists the global service resource requests.",
        "description" : "Lists all extensions which currently are renamed to e.g., `Image`",
        "operationId" : "get",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceNaming"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Updates the global service resource requests.",
        "description" : "Update all extensions which are renamed to `Image` or `Binary`",
        "operationId" : "put",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceNaming"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The configuration is updated. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid. See the response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/resourceNaming/validator" : {
      "post" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Validates new resource requests settings for the `PUT /service/resourceRequest` request.",
        "operationId" : "validate",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResourceNaming"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid. See the response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST" : {
      "get" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Lists all full web request service detection rules",
        "operationId" : "listRequestDetectionRules",
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the ordered list of rules.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Creates a new service detection rule",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createRequestDetectionRule",
        "parameters" : [ {
          "name" : "position",
          "in" : "query",
          "description" : "The position of the new rule: \n\n * `APPEND`: at the bottom of the rule list. \n * `PREPEND`: at the top of the rule list. \n\n If not set, the `APPEND` is used.",
          "schema" : {
            "type" : "string",
            "enum" : [ "APPEND", "PREPEND" ],
            "default" : "APPEND"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new service detection rule. \n\n You must not specify the ID of the rule! \n\nThe **order** field is ignored in this request. To enforce a particular order, use the `PUT /service/detectionRules/FULL_WEB_REQUEST/reorder` request.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebRequestRule"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response body contains the ID of the rule.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST/{id}" : {
      "get" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Gets the properties of the specified service detection rule",
        "operationId" : "getRequestDetectionRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required service detection rule.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains properties of the specified rule.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FullWebRequestRule"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Updates an existing service detection rule",
        "description" : "If a rule with the specified ID doesn't exist, a new rule is created and appended to the end of the rule list. \n\n The request keeps the existing order of rules, unless the **order** parameter is set.",
        "operationId" : "updateRequestDetectionRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the rule to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the service detection rule.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebRequestRule"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response body contains the ID of the rule.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The service detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Deletes the specified service detection rule",
        "operationId" : "deleteRequestDetectionRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST/order" : {
      "put" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Reorders the service detection rules of the specified type",
        "description" : "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request.",
        "operationId" : "orderRequestDetectionRules",
        "requestBody" : {
          "description" : "The JSON body of the request containing the service detection rules in the required order.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Service detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST/validator" : {
      "post" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Validates the payload for the `POST /ruleBasedServiceDetection/FULL_WEB_REQUEST` request",
        "operationId" : "validateCreateRequestDetectionRule",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the service detection rule to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebRequestRule"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Validates the payload for the `PUT /service/detectionRules/FULL_WEB_REQUEST/{id}` request",
        "operationId" : "validateUpdateRequestDetectionRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the service detection rule to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebRequestRule"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE" : {
      "get" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Lists all full web service detection rules",
        "operationId" : "listServiceDetectionRules",
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the ordered list of rules.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Creates a new service detection rule",
        "description" : "The body must not provide an ID as it will be automatically assigned.",
        "operationId" : "createServiceDetectionRule",
        "parameters" : [ {
          "name" : "position",
          "in" : "query",
          "description" : "The position of the new rule: \n\n * `APPEND`: at the end of the rule list. \n * `PREPEND`: on top of the rule list. \n\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "APPEND", "PREPEND" ],
            "default" : "APPEND"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request containing parameters of the new service detection rule. \n\n You must not specify the ID of the rule! \n\nThe **order** field is ignored in this request. To enforce a particular order use the `PUT /ruleBasedServiceDetection/FULL_WEB_SERVICE/reorder` request.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebServiceRule"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE/{id}" : {
      "get" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Shows the properties of the specified service detection rule",
        "operationId" : "getServiceDetectionRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required service detection rule.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains properties of the specified rule.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FullWebServiceRule"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Updates an existing service detection rule",
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created and appended to the end of the rule list. \n\n The request keeps an existing order of rules, unless the **order** parameter is set.",
        "operationId" : "updateServiceDetectionRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the rule to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request containing updated parameters of the service detection rule.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebServiceRule"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The service detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Deletes the specified service detection rule",
        "operationId" : "deleteServiceDetectionRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE/order" : {
      "put" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Reorders the service detection rules of the specified type",
        "description" : "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request.",
        "operationId" : "orderServiceDetectionRules",
        "requestBody" : {
          "description" : "The JSON body of the request containing the service detection rules in the required order.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Service detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE/validator" : {
      "post" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Validates the payload for the `POST /ruleBasedServiceDetection/FULL_WEB_SERVICE` request",
        "operationId" : "validateCreateServiceDetectionRule",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebServiceRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Validate the payload for the `PUT /ruleBasedServiceDetection/FULL_WEB_SERVICE/{id}` request",
        "operationId" : "validateUpdateServiceDetectionRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/FullWebServiceRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST" : {
      "get" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Lists all opaque and external web request service detection rules",
        "operationId" : "listOpaqueAndExternalWebRequestDetectionRules",
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the ordered list of rules.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Creates a new service detection rule",
        "description" : "The body must not provide an ID as it will be automatically assigned.",
        "operationId" : "createOpaqueAndExternalWebRequestDetectionRule",
        "parameters" : [ {
          "name" : "position",
          "in" : "query",
          "description" : "The position of the new rule: \n\n * `APPEND`: at the end of the rule list. \n * `PREPEND`: on top of the rule list. \n\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "APPEND", "PREPEND" ],
            "default" : "APPEND"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request containing parameters of the new service detection rule. \n\n You must not specify the ID of the rule! \n\nThe **order** field is ignored in this request. To enforce a particular order use the `PUT /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_REQUEST/reorder` request.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebRequestRule"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}" : {
      "get" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Shows the properties of the specified service detection rule",
        "operationId" : "getOpaqueAndExternalWebRequestDetectionRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required service detection rule.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains properties of the specified rule.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OpaqueAndExternalWebRequestRule"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Updates an existing service detection rule",
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created and appended to the end of the rule list. \n\n The request keeps an existing order of rules, unless the **order** parameter is set.",
        "operationId" : "updateOpaqueAndExternalWebRequestDetectionRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the rule to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request containing updated parameters of the service detection rule.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebRequestRule"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The service detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Deletes the specified service detection rule",
        "operationId" : "deleteOpaqueAndExternalWebRequestDetectionRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/order" : {
      "put" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Reorders the service detection rules of the specified type",
        "description" : "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request.",
        "operationId" : "orderOpaqueAndExternalWebRequestDetectionRules",
        "requestBody" : {
          "description" : "The JSON body of the request containing the service detection rules in the required order.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Service detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/validator" : {
      "post" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Validates the payload for the `POST /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_REQUEST` request",
        "operationId" : "validateCreateOpaqueAndExternalWebRequestDetectionRule",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebRequestRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Validate the payload for the `PUT /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}` request",
        "operationId" : "validateUpdateOpaqueAndExternalWebRequestDetectionRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebRequestRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE" : {
      "get" : {
        "tags" : [ "Service - Detection opaque and external web service" ],
        "summary" : "Lists all opaque and external web service detection rules",
        "operationId" : "listOpaqueAndExternalWebServiceRules",
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the ordered list of rules.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Service - Detection opaque and external web service" ],
        "summary" : "Creates a new service detection rule",
        "description" : "The body must not provide an ID as it will be automatically assigned.",
        "operationId" : "createOpaqueAndExternalWebServiceRule",
        "parameters" : [ {
          "name" : "position",
          "in" : "query",
          "description" : "The position of the new rule: \n\n * `APPEND`: at the end of the rule list. \n * `PREPEND`: on top of the rule list. \n\n",
          "schema" : {
            "type" : "string",
            "enum" : [ "APPEND", "PREPEND" ],
            "default" : "APPEND"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request containing parameters of the new service detection rule. \n\n You must not specify the ID of the rule! \n\nThe **order** field is ignored in this request. To enforce a particular order use the `PUT /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_SERVICE/reorder` request.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebServiceRule"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/{id}" : {
      "get" : {
        "tags" : [ "Service - Detection opaque and external web service" ],
        "summary" : "Shows the properties of the specified service detection rule",
        "operationId" : "getOpaqueAndExternalWebServiceRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required service detection rule.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains properties of the specified rule.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OpaqueAndExternalWebServiceRule"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Service - Detection opaque and external web service" ],
        "summary" : "Updates an existing service detection rule",
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created and appended to the end of the rule list. \n\n The request keeps an existing order of rules, unless the **order** parameter is set.",
        "operationId" : "updateOpaqueAndExternalWebServiceRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the rule to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request containing updated parameters of the service detection rule.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebServiceRule"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The service detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Service - Detection opaque and external web service" ],
        "summary" : "Deletes the specified service detection rule",
        "operationId" : "deleteOpaqueAndExternalWebServiceRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/order" : {
      "put" : {
        "tags" : [ "Service - Detection opaque and external web service" ],
        "summary" : "Reorders the service detection rules of the specified type",
        "description" : "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request.",
        "operationId" : "orderOpaqueAndExternalWebServiceRules",
        "requestBody" : {
          "description" : "The JSON body of the request containing the service detection rules in the required order.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/StubList"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Service detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/validator" : {
      "post" : {
        "tags" : [ "Service - Detection opaque and external web service" ],
        "summary" : "Validates the payload for the `POST /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_SERVICE` request",
        "operationId" : "validateCreateOpaqueAndExternalWebServiceRule",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebServiceRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Detection opaque and external web service" ],
        "summary" : "Validate the payload for the `PUT /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_SERVICE/{id}` request",
        "operationId" : "validateUpdateOpaqueAndExternalWebServiceRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/OpaqueAndExternalWebServiceRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/symfiles/{applicationId}/{packageName}/{os}/{versionCode}/{versionName}" : {
      "get" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Gets the metadata of the symbolication file belonging to the specified app version. There always can exist only one file per os and version",
        "operationId" : "getSingle",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace for the mobile application to be queried",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "packageName",
          "in" : "path",
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app to be queried",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "os",
          "in" : "path",
          "description" : "The operating system for which the file should be displayed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ANDROID", "IOS", "TVOS" ]
          }
        }, {
          "name" : "versionCode",
          "in" : "path",
          "description" : "The version code (Android) / CFBundleVersion (iOS) of the file to be retrieved",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) of the file to be retrieved",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SymbolFile"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DssFileManagement` (Mobile symbolication file management)" ]
      },
      "put" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Upload a symbolication file. Either a ProGuard file for Android or a zip file containing all the iOS dSYM files. ",
        "operationId" : "createOrUpdate",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace of the app this file belongs to",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "packageName",
          "in" : "path",
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the uploaded file",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "os",
          "in" : "path",
          "description" : "The operating system the file belongs to",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ANDROID", "IOS", "TVOS" ]
          }
        }, {
          "name" : "versionCode",
          "in" : "path",
          "description" : "The version code (Android) / CFBundleVersion (iOS) the file belongs to",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "content-type",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The file to be uploaded. A proguard file (*.txt) for Android or the zip file produced by the DTXDssClient provided with the OneAgent for iOS. ",
          "content" : {
            "application/x-compressed" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            },
            "application/x-zip-compressed" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            },
            "application/zip" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            },
            "text/plain" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The file has been uploaded and stored. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "413" : {
            "description" : "Failed. The symbol file storage quota is exhausted.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DssFileManagement` (Mobile symbolication file management)" ]
      },
      "delete" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Delete the symbolication file belonging to the given application, os and version",
        "operationId" : "deleteSingleFile",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace of the mobile application where a file should be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "packageName",
          "in" : "path",
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the file to be deleted",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "os",
          "in" : "path",
          "description" : "The operating system the file belongs to",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ANDROID", "IOS", "TVOS" ]
          }
        }, {
          "name" : "versionCode",
          "in" : "path",
          "description" : "The version code (Android) / CFBundleVersion (iOS) of the file to be deleted",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) of the file to be deleted",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The file has been deleted successfully. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DssFileManagement` (Mobile symbolication file management)" ]
      }
    },
    "/symfiles/{applicationId}/{packageName}/{os}/{versionCode}/{versionName}/pinning" : {
      "put" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Pin or unpin all symbolication files of a app version. A pinned file will not be deleted automtically, when running out of space.",
        "operationId" : "createOrUpdatePinning",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace of the app which should be (un)pinned",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "packageName",
          "in" : "path",
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the files to be (un)pinned",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "os",
          "in" : "path",
          "description" : "The operating system for which the files will be (un)pinned",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ANDROID", "IOS", "TVOS" ]
          }
        }, {
          "name" : "versionCode",
          "in" : "path",
          "description" : "The version code (Android) / CFBundleVersion (iOS) the file belongs to",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing the pinning status to set.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SymbolFilePinning"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The pinning status of the filed has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DssFileManagement` (Mobile symbolication file management)" ]
      }
    },
    "/symfiles/{applicationId}" : {
      "get" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Lists the metadata of all symbolication files (ProGuard files for Android or dSYM files for iOS Apps) for one single mobile application from the Symbol File Store of this tenant.",
        "operationId" : "getAllPerApplication",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace for the mobile application to be queried",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SymbolFileList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DssFileManagement` (Mobile symbolication file management)" ]
      },
      "delete" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Deletes all symbolication file belonging to the Dynatrace App specified",
        "operationId" : "deleteApp",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace of the mobile application the files will be deleted",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. All files belonging to the given Dynatrace mobile application have been deleted successfully. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DssFileManagement` (Mobile symbolication file management)" ]
      }
    },
    "/symfiles" : {
      "get" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Lists the metadata of all symbolication files (ProGuard files for Android or dSYM files for iOS Apps) from the Symbol File Store.",
        "operationId" : "getAll",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SymbolFileList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DssFileManagement` (Mobile symbolication file management)" ]
      }
    },
    "/symfiles/dtxdss-download" : {
      "get" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Gets a download link for the latest version of the DTXDssClient.",
        "operationId" : "getDssClientUrl",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SymbolFileClientLinkDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DssFileManagement` (Mobile symbolication file management)" ]
      }
    },
    "/symfiles/info" : {
      "get" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Retrieves information about used/empty diskspace, number of stored files,....",
        "operationId" : "getInfo",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SymbolFileStorageInfo"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DssFileManagement` (Mobile symbolication file management)" ]
      }
    },
    "/symfiles/ios/supportedversion" : {
      "get" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Returns the supported file format version for iOS symbol files.",
        "operationId" : "getSupportedVersion",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupportedVersion"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DssFileManagement` (Mobile symbolication file management)" ]
      }
    },
    "/symfiles/{applicationId}/{packageName}/{os}/{versionCode}/{versionName}/pinning/validator" : {
      "put" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Validate updates of existing request attribute for the `PUT /{applicationId}/{packageName}/{os}/{versionName}/pinning` request.",
        "operationId" : "validatePinning",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace of the app which should be (un)pinned",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "packageName",
          "in" : "path",
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the files to be (un)pinned",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "os",
          "in" : "path",
          "description" : "The operating system for which the files will be (un)pinned",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ANDROID", "IOS", "TVOS" ]
          }
        }, {
          "name" : "versionCode",
          "in" : "path",
          "description" : "The version code (Android) / CFBundleVersion (iOS) the file belongs to",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to",
          "required" : true,
          "schema" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing the pinning status to set.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SymbolFilePinning"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted body is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`DssFileManagement` (Mobile symbolication file management)" ]
      }
    },
    "/technologies" : {
      "get" : {
        "tags" : [ "OneAgent - Environment-wide configuration" ],
        "summary" : "Gets the global monitoring configuration of technologies.",
        "operationId" : "getTechGlobalConfigs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TechMonitoringList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/aws/supportedServices" : {
      "get" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Gets the list of AWS supported services",
        "description" : "You can use this list for adding services to AWS credentials",
        "operationId" : "getSupportedServices",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudSupportedServicesList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/aws/iamExternalId" : {
      "get" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Gets the external ID token for setting an IAM role",
        "description" : "You'll need it for the role-based AWS authentication.",
        "operationId" : "readIamExternalIdToken",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsIamToken"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/aws/credentials" : {
      "get" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Lists all available AWS credentials configurations",
        "operationId" : "listAwsCredentialConfigs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EntityShortRepresentation"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Creates a new AWS credentials configuration",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createAwsCredentialsConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new AWS credentials configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsCredentialsConfig"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new AWS credentials configuration has been created. The response body contains the ID of the configuration. \n\n Check the connection status for these credentials after 10 minutes with the `GET /aws/credentials/{id}` request.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/aws/credentials/{id}" : {
      "get" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Gets the configuration of the specified AWS credentials",
        "operationId" : "getAwsCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the specified AWS credentials configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsCredentialsConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Updates an existing AWS credentials configuration",
        "operationId" : "updateAwsCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the AWS credentials configuration to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the AWS credentials configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsCredentialsConfig"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new AWS credentials configuration has been created. The response body contains the ID of the configuration. \n\n Check the connection status for these credentials after 10 minutes with the `GET /aws/credentials/{id}` request.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The AWS credentials configuration has been updated. Response doesn't have a body. \n\n Check the connection status for these credentials after 10 minutes with the `GET /aws/credentials/{id}` request."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Deletes the specified AWS credentials configuration",
        "operationId" : "deleteAwsCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of AWS credentials configuration to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The AWS credentials configuration has been deleted. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/aws/credentials/validator" : {
      "post" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Validates the payload for the `POST /aws/credentials` request",
        "operationId" : "validateCreateAwsCredentialsConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the AWS credentials configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsCredentialsConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/aws/credentials/{id}/validator" : {
      "post" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Validates the payload for the `PUT /aws/credentials/{id}` request",
        "operationId" : "validateUpdateAwsCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the AWS credentials configuration to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the AWS credentials configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsCredentialsConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/aws/credentials/{id}/services" : {
      "get" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Gets the monitored services configuration of the specified AWS credentials",
        "operationId" : "getAwsServicesConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the specified AWS credentials configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsMonitoredServicesDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Replace an existing monitored services configuration of the specified AWS credentials",
        "operationId" : "updateAwsServicesConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the AWS credentials to be updated with new monitored services configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated monitored services configuration for AWS credentials.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsMonitoredServicesDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The AWS credentials configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/aws/credentials/{id}/services/validator" : {
      "post" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Validates the payload for the `PUT /aws/credentials/{id}/services` request",
        "operationId" : "validateUpdateAwsServicesConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the AWS credentials for which the monitored services configuration is going to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains a monitored services configuration for AWS credentials to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsMonitoredServicesDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/aws/privateLink/allowlistedAccounts" : {
      "get" : {
        "tags" : [ "AWS PrivateLink" ],
        "summary" : "Gets the information about all allowlisted accounts in AWS PrivateLink",
        "description" : "Lists the account ids of all allowlisted accounts in AWS PrivateLink for this tenant",
        "operationId" : "getAllAllowlistedAccounts",
        "responses" : {
          "200" : {
            "description" : "Success. The list is provided in the response body.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllowlistedAwsAccountList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/aws/privateLink" : {
      "get" : {
        "tags" : [ "AWS PrivateLink" ],
        "summary" : "Gets the configuration information about AWS PrivateLink",
        "description" : "Gets all configuration settings for AWS PrivateLink for this tenant",
        "operationId" : "getPrivateLinkConfig",
        "responses" : {
          "200" : {
            "description" : "Success. The result is provided in the response body.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsPrivateLinkConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "AWS PrivateLink" ],
        "summary" : "Updates the configuration information about AWS PrivateLink",
        "description" : "Updates the configuration settings for AWS PrivateLink for this tenant",
        "operationId" : "putPrivateLinkConfig",
        "requestBody" : {
          "description" : "The AWS PrivateLink configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AwsPrivateLinkConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The configuration settings have been updated.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsPrivateLinkConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/aws/privateLink/allowlistedAccounts/{id}" : {
      "put" : {
        "tags" : [ "AWS PrivateLink" ],
        "summary" : "Updates the given AWS account id in the allowlist in AWS PrivateLink",
        "description" : "Updates the given AWS account id in the allowlisted accounts in AWS PrivateLink for this tenant",
        "operationId" : "putAllowlistedAccount",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The AWS account id to be updated in the AWS PrivateLink allowlist, has to match the id in the provided payload.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The AWS account id to be updated in the AWS PrivateLink allowlist, has to match the id in the path.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AllowlistedAwsAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The account id has been added to the PrivateLink allowlist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllowlistedAwsAccount"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The account id already exists in the PrivateLink allowlist."
          },
          "400" : {
            "description" : "Error. Wrong format of the provided AWS account id (length = 12 characters, only digits).",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "AWS PrivateLink" ],
        "summary" : "Removes one AWS account from the allowlist in AWS PrivateLink",
        "description" : "Removes the given AWS account id from the allowlisted accounts in AWS PrivateLink for this tenant",
        "operationId" : "removeAllowlistedAccount",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The AWS account id to be deleted from the AWS PrivateLink allowlist",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The account id has been removed from the PrivateLink allowlist."
          },
          "400" : {
            "description" : "Error. Wrong format of the provided AWS account id (length = 12 characters, only digits).",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/azure/supportedServices" : {
      "get" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Gets the list of Azure supported services",
        "description" : "You can use this list for adding services to Azure credentials",
        "operationId" : "getSupportedServices_1",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudSupportedServicesList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      }
    },
    "/azure/credentials" : {
      "get" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Lists all available Azure credentials configurations",
        "operationId" : "listAzureCredentialsConfigs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Creates a new Azure credentials configuration",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createAzureCredentialsConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new Azure credentials configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureCredentialsCreation"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new Azure credentials configuration has been created. The response body contains the ID of the configuration.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/azure/credentials/{id}" : {
      "get" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Gets the configuration of the specified Azure credentials",
        "operationId" : "getAzureCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required Azure credentials configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AzureCredentials"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Updates an existing Azure credentials configuration",
        "description" : "* You can't change the Application ID or Directory ID of an Azure configuration. If you need to change them, create a new credentials configuration. \n* If a configuration with the specified ID doesn't exist, a new configuration is created.",
        "operationId" : "updateAzureCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Azure credentials configuration to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the Azure credentials configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureCredentials"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new Azure credentials configuration has been created. The response body contains the ID of the configuration.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The Azure credentials configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Deletes the specified Azure credentials configuration",
        "operationId" : "deleteAzureCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Azure credentials configuration to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/azure/credentials/validator" : {
      "post" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Validates the payload for the `POST /azure/credentials` request",
        "operationId" : "validateAzureCredentialsConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the Azure credentials configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureCredentials"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/azure/credentials/{id}/validator" : {
      "post" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Validates the payload for the `PUT /azure/credentials/{id}` request",
        "operationId" : "validateConfigurationUpdate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Azure credentials configuration to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the Azure credentials configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureCredentials"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/azure/credentials/{id}/services" : {
      "get" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Gets the monitored services configuration of the specified Azure credentials",
        "operationId" : "getAzureServicesConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required Azure credentials configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AzureMonitoredServicesDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Replace an existing monitored services configuration of the specified Azure credentials",
        "operationId" : "updateAzureServicesConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Azure credentials to be updated with new monitored services configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated monitored services configuration for Azure credentials.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureMonitoredServicesDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The Azure credentials configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/azure/credentials/{id}/services/validator" : {
      "post" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Validates the payload for the `PUT /azure/credentials/{id}/services` request",
        "operationId" : "validateAzureServicesConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Azure credentials for which the monitored services configuration is going to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains a monitored services configuration for Azure credentials to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureMonitoredServicesDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/cloudFoundry/credentials" : {
      "get" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "List all the Cloud Foundry foundations credentials. | maturity=EARLY_ADOPTER",
        "operationId" : "listCloudFoundryCredentialsConfigs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "Create new credentials for a single foundation. | maturity=EARLY_ADOPTER",
        "operationId" : "createCloudFoundryCredentialsConfig",
        "requestBody" : {
          "description" : "`name`, `apiUrl` and `loginUrl` must be unique.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloudFoundryCredentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. Cloud Foundry foundation credentials have been created. The ID and name of the new credentials are returned.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/cloudFoundry/credentials/{id}" : {
      "get" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "Show the properties for the specified Cloud Foundry foundation credentials. | maturity=EARLY_ADOPTER",
        "operationId" : "getCloudFoundryCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required Cloud Foundry foundation credentials.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudFoundryCredentials"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "Create or update credentials for a single Cloud Foundry foundation. | maturity=EARLY_ADOPTER",
        "operationId" : "updateCloudFoundryCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Cloud Foundry foundation credentials.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "`name` must be unique. `password` can be omitted for updates, the existing one will be used. `apiUrl` and `loginUrl` must be set and may not differ from the existing config if it exists.\nUse this endpoint for copying credentials between environments while keeping their IDs and for updating existing credentials. You can *not* use this to create new credentials with an arbitrary ID, use POST instead.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloudFoundryCredentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. Cloud Foundry foundation credentials have been created. The ID and name of the new credentials are returned.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. Cloud Foundry foundation credentials have been successfully updated."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "Delete the specified Cloud Foundry foundation credentials. | maturity=EARLY_ADOPTER",
        "operationId" : "deleteCloudFoundryCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Cloud Foundry foundation credentials to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/cloudFoundry/credentials/validator" : {
      "post" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "Validate that creating credentials would be successful. | maturity=EARLY_ADOPTER",
        "operationId" : "validateCreateCloudFoundryCredentialsConfig",
        "requestBody" : {
          "description" : "`name`, `apiUrl` and `loginUrl` must be unique.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloudFoundryCredentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted credentials are valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/cloudFoundry/credentials/{id}/validator" : {
      "post" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "Validate that updating or creating credentials would be successful. | maturity=EARLY_ADOPTER",
        "operationId" : "validateUpdateCloudFoundryCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Cloud Foundry foundation credentials.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "`name` must be unique. `password` can be omitted for updates. See the constraints for the PUT /cloudFoundry/credentials/{id} request.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloudFoundryCredentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted credentials are valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/kubernetes/credentials" : {
      "get" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Lists all available Kubernetes credentials configurations | maturity=EARLY_ADOPTER",
        "operationId" : "listKubernetesCredentialsConfigs",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KubernetesConfigStubListDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Creates a new Kubernetes credentials configuration | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID as it will be automatically assigned by the Dynatrace server.",
        "operationId" : "createKubernetesCredentialsConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new Kubernetes credentials configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/KubernetesCredentials"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new Kubernetes credentials configuration has been created. The response body contains the ID of the configuration.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/kubernetes/credentials/{id}" : {
      "get" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Gets the configuration of the specified Kubernetes credentials | maturity=EARLY_ADOPTER",
        "operationId" : "getKubernetesCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required Kubernetes credentials configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KubernetesCredentials"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Updates an existing Kubernetes credentials configuration | maturity=EARLY_ADOPTER",
        "description" : "You can't change the URL of the Kubernetes cluster. \n\nIf a configuration with the specified ID doesn't exist, a new configuration is created.\n\nIDs of entities are computed server side upon creation. If you want to create a new entity, use the POST method without an ID. To update an existing entity, use the PUT method with an existing, valid ID. To re-create an entity under a specific ID, a valid ID must be provided with the PUT method.",
        "operationId" : "updateKubernetesCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Kubernetes credentials configuration to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the Kubernetes credentials configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/KubernetesCredentials"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new Kubernetes credentials configuration has been created. The response body contains the ID of the configuration.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The Kubernetes credentials configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Deletes the specified Kubernetes credentials configuration | maturity=EARLY_ADOPTER",
        "operationId" : "deleteKubernetesCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Kubernetes credentials configuration be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/kubernetes/credentials/validator" : {
      "post" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Validates the payload for the `POST /kubernetes/credentials` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateCreateKubernetesCredentialsConfig",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the Kubernetes credentials configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/KubernetesCredentials"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/kubernetes/credentials/{id}/validator" : {
      "post" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Validates the payload for the `PUT /kubernetes/credentials/{id}` request | maturity=EARLY_ADOPTER",
        "operationId" : "validateUpdateKubernetesCredentialsConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Kubernetes credentials configuration to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the Kubernetes credentials configuration to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/KubernetesCredentials"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/maintenanceWindows" : {
      "get" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Lists all available maintenance windows",
        "operationId" : "listMaintenanceWindows",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StubList"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "post" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Creates a new maintenance window",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createMaintenanceWindow",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new maintenance window.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MaintenanceWindow"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new maintenance window has been created. The response body contains its ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/maintenanceWindows/{id}" : {
      "get" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Gets the properties of the specified maintenance window",
        "operationId" : "getMaintenanceWindow",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required maintenance window.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`ReadConfig` (Read configuration)" ]
      },
      "put" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Updates an existing maintenance window",
        "description" : "If a maintenance window with the specified ID doesn't exist, a new one is created.",
        "operationId" : "updateMaintenanceWindow",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the maintenance window to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the maintenance window.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MaintenanceWindow"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new maintenance window has been created. The response body contains its ID.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The maintenance window has been updated. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      },
      "delete" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Deletes the specified maintenance window",
        "operationId" : "deleteMaintenanceWindow",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the maintenance window to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The maintenance window has been deleted. Response doesn't have a body."
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/maintenanceWindows/validator" : {
      "post" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Validates the payload for the `POST /maintenancewindow` request",
        "operationId" : "validateCreateMaintenanceWindow",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the maintenance window be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MaintenanceWindow"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    },
    "/maintenanceWindows/{id}/validator" : {
      "post" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Validates the payload for the `PUT /maintenancewindow/{id}` request",
        "operationId" : "validateUpdateMaintenanceWindow",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the maintenance window to be validated.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the maintenance window to be validated.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MaintenanceWindow"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "`WriteConfig` (Write configuration)" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "EntityShortRepresentation" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the Dynatrace entity."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity.",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the Dynatrace entity.",
            "readOnly" : true
          }
        },
        "description" : "The short representation of a Dynatrace entity.",
        "example" : {
          "id" : "6a98d7bc-abb9-44f8-ae6a-73e68e71812a",
          "name" : "Dynatrace entity",
          "description" : "Dynatrace entity for the REST API example"
        }
      },
      "ConstraintViolation" : {
        "type" : "object",
        "properties" : {
          "parameterLocation" : {
            "type" : "string",
            "enum" : [ "PATH", "PAYLOAD_BODY", "QUERY" ]
          },
          "location" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          }
        },
        "description" : "A list of constraint violations"
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "constraintViolations" : {
            "type" : "array",
            "description" : "A list of constraint violations",
            "items" : {
              "$ref" : "#/components/schemas/ConstraintViolation"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "The error message"
          },
          "code" : {
            "type" : "integer",
            "description" : "The HTTP status code",
            "format" : "int32"
          }
        }
      },
      "ErrorEnvelope" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/Error"
          }
        }
      },
      "AlertingCustomEventFilter" : {
        "type" : "object",
        "properties" : {
          "customTitleFilter" : {
            "$ref" : "#/components/schemas/AlertingCustomTextFilter"
          },
          "customDescriptionFilter" : {
            "$ref" : "#/components/schemas/AlertingCustomTextFilter"
          }
        },
        "description" : "Configuration of a custom event filter. \n\nFilters custom events by title or description. If both specified, the AND logic applies."
      },
      "AlertingCustomTextFilter" : {
        "required" : [ "caseInsensitive", "enabled", "negate", "operator", "value" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The filter is enabled (`true`) or disabled (`false`)."
          },
          "value" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The value to compare to."
          },
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparison. \n\n You can reverse it by setting **negate** to `true`.",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "CONTAINS_REGEX", "ENDS_WITH", "EQUALS" ]
          },
          "negate" : {
            "type" : "boolean",
            "description" : "Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**."
          },
          "caseInsensitive" : {
            "type" : "boolean",
            "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\n If not set, then `false` is used, making the condition case sensitive."
          }
        },
        "description" : "Configuration of a matching filter."
      },
      "AlertingEventTypeFilter" : {
        "type" : "object",
        "properties" : {
          "predefinedEventFilter" : {
            "$ref" : "#/components/schemas/AlertingPredefinedEventFilter"
          },
          "customEventFilter" : {
            "$ref" : "#/components/schemas/AlertingCustomEventFilter"
          }
        },
        "description" : "Configuration of the event filter for the alerting profile. \n\nYou have two mutually exclusive options: \n* Select an event type from the list of the predefined events. Specify it in the **predefinedEventFilter** field. \n* Set a rule for custom events. Specify it in the **customEventFilter** field."
      },
      "AlertingPredefinedEventFilter" : {
        "required" : [ "eventType", "negate" ],
        "type" : "object",
        "properties" : {
          "eventType" : {
            "type" : "string",
            "description" : "The type of the predefined event.",
            "enum" : [ "APPLICATION_ERROR_RATE_INCREASED", "APPLICATION_SLOWDOWN", "APPLICATION_UNEXPECTED_HIGH_LOAD", "APPLICATION_UNEXPECTED_LOW_LOAD", "AWS_LAMBDA_HIGH_ERROR_RATE", "CUSTOM_APPLICATION_ERROR_RATE_INCREASED", "CUSTOM_APPLICATION_SLOWDOWN", "CUSTOM_APPLICATION_UNEXPECTED_HIGH_LOAD", "CUSTOM_APPLICATION_UNEXPECTED_LOW_LOAD", "CUSTOM_APP_CRASH_RATE_INCREASED", "DATABASE_CONNECTION_FAILURE", "DATA_CENTER_SERVICE_PERFORMANCE_DEGRADATION", "DATA_CENTER_SERVICE_UNAVAILABLE", "EBS_VOLUME_HIGH_LATENCY", "EC2_HIGH_CPU", "ELB_HIGH_BACKEND_ERROR_RATE", "ENTERPRICE_APPLICATION_PERFORMANCE_DEGRADATION", "ENTERPRISE_APPLICATION_UNAVAILABLE", "ESXI_GUEST_ACTIVE_SWAP_WAIT", "ESXI_GUEST_CPU_LIMIT_REACHED", "ESXI_HOST_CPU_SATURATION", "ESXI_HOST_DATASTORE_LOW_DISK_SPACE", "ESXI_HOST_DISK_QUEUE_SLOW", "ESXI_HOST_DISK_SLOW", "ESXI_HOST_MEMORY_SATURATION", "ESXI_HOST_NETWORK_PROBLEMS", "ESXI_HOST_OVERLOADED_STORAGE", "ESXI_VM_IMPACT_HOST_CPU_SATURATION", "ESXI_VM_IMPACT_HOST_MEMORY_SATURATION", "EXTERNAL_SYNTHETIC_TEST_OUTAGE", "EXTERNAL_SYNTHETIC_TEST_SLOWDOWN", "HOST_OF_SERVICE_UNAVAILABLE", "HTTP_CHECK_GLOBAL_OUTAGE", "HTTP_CHECK_LOCAL_OUTAGE", "HTTP_CHECK_TEST_LOCATION_SLOWDOWN", "MOBILE_APPLICATION_ERROR_RATE_INCREASED", "MOBILE_APPLICATION_SLOWDOWN", "MOBILE_APPLICATION_UNEXPECTED_HIGH_LOAD", "MOBILE_APPLICATION_UNEXPECTED_LOW_LOAD", "MOBILE_APP_CRASH_RATE_INCREASED", "MONITORING_UNAVAILABLE", "OSI_DISK_LOW_INODES", "OSI_GRACEFULLY_SHUTDOWN", "OSI_HIGH_CPU", "OSI_HIGH_MEMORY", "OSI_LOW_DISK_SPACE", "OSI_NIC_DROPPED_PACKETS_HIGH", "OSI_NIC_ERRORS_HIGH", "OSI_NIC_UTILIZATION_HIGH", "OSI_SLOW_DISK", "OSI_UNEXPECTEDLY_UNAVAILABLE", "PGI_OF_SERVICE_UNAVAILABLE", "PGI_UNAVAILABLE", "PG_LOW_INSTANCE_COUNT", "PROCESS_CRASHED", "PROCESS_HIGH_GC_ACTIVITY", "PROCESS_MEMORY_RESOURCE_EXHAUSTED", "PROCESS_NA_HIGH_CONN_FAIL_RATE", "PROCESS_NA_HIGH_LOSS_RATE", "PROCESS_THREADS_RESOURCE_EXHAUSTED", "RDS_HIGH_CPU", "RDS_HIGH_LATENCY", "RDS_LOW_MEMORY", "RDS_LOW_STORAGE_SPACE", "RDS_OF_SERVICE_UNAVAILABLE", "RDS_RESTART_SEQUENCE", "SERVICE_ERROR_RATE_INCREASED", "SERVICE_SLOWDOWN", "SERVICE_UNEXPECTED_HIGH_LOAD", "SERVICE_UNEXPECTED_LOW_LOAD", "SYNTHETIC_GLOBAL_OUTAGE", "SYNTHETIC_LOCAL_OUTAGE", "SYNTHETIC_NODE_OUTAGE", "SYNTHETIC_PRIVATE_LOCATION_OUTAGE", "SYNTHETIC_TEST_LOCATION_SLOWDOWN" ]
          },
          "negate" : {
            "type" : "boolean",
            "description" : "The alert triggers when the problem of specified severity arises while the specified event **is** happening (`false`) or while the specified event is **not** happening (`true`). \n\n For example, if you chose the Slowdown (`PERFORMANCE`) severity and Unexpected high traffic (`APPLICATION_UNEXPECTED_HIGH_LOAD`) event with **negate** set to `true`, the alerting profile will trigger only when the slowdown problem is raised while there is no unexpected high traffic event. \n\nConsider the following use case as an example. The Slowdown (`PERFORMANCE`) severity rule is set. Depending on the configuration of the event filter (Unexpected high traffic (`APPLICATION_UNEXPECTED_HIGH_LOAD`) event is used as an example), the behavior of the alerting profile is one of the following:* **negate** is set to `false`: The alert triggers when the slowdown problem is raised while unexpected high traffic event is happening. \n* **negate** is set to `true`: The alert triggers when the slowdown problem is raised while there is no unexpected high traffic event. \n\n* no event rule is set: The alert triggers when the slowdown problem is raised, regardless of any events."
          }
        },
        "description" : "Configuration of a predefined event filter."
      },
      "AlertingProfile" : {
        "required" : [ "displayName" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the alerting profile.",
            "format" : "uuid",
            "example" : "12345678-abcd-1234-abcd-1234567890ab"
          },
          "displayName" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the alerting profile, displayed in the UI."
          },
          "rules" : {
            "maxItems" : 20,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of severity rules. \n\n The rules are evaluated from top to bottom. The first matching rule applies and further evaluation stops.\n\n If you specify both severity rule and event filter, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/AlertingProfileSeverityRule"
            }
          },
          "mzId" : {
            "type" : "string",
            "description" : "The ID of the management zone to which the alerting profile applies."
          },
          "eventTypeFilters" : {
            "maxItems" : 20,
            "minItems" : 0,
            "type" : "array",
            "description" : "The list of event filters. \n\nFor all filters that are *negated* inside of these event filters, that is all \"Predefined\" as well as \"Custom\" (Title and/or Description) ones the AND logic applies.\nFor all *non-negated* ones the OR logic applies.\nBetween these two groups, negated and non-negated, the AND logic applies.\n\n If you specify both severity rule and event filter, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/AlertingEventTypeFilter"
            }
          }
        },
        "description" : "Configuration of an alerting profile.",
        "example" : {
          "id" : "12345678-abcd-1234-abcd-1234567890ab",
          "displayName" : "sampleAlertingProfile",
          "mzId" : "1",
          "rules" : [ {
            "severityLevel" : "AVAILABILITY",
            "tagFilter" : {
              "includeMode" : "INCLUDE_ALL",
              "tagFilters" : [ {
                "context" : "AWS",
                "key" : "tagKey",
                "value" : "tagValue"
              } ]
            },
            "delayInMinutes" : 60
          } ],
          "eventTypeFilters" : [ {
            "predefinedEventFilter" : {
              "eventType" : "OSI_HIGH_CPU",
              "negate" : true
            }
          }, {
            "customEventFilter" : {
              "customTitleFilter" : {
                "enabled" : true,
                "value" : "filterValue",
                "operator" : "EQUALS",
                "negate" : false,
                "caseInsensitive" : true
              },
              "customDescriptionFilter" : {
                "enabled" : false,
                "value" : "filterValue",
                "operator" : "CONTAINS",
                "negate" : true,
                "caseInsensitive" : false
              }
            }
          } ]
        }
      },
      "AlertingProfileSeverityRule" : {
        "required" : [ "delayInMinutes", "severityLevel", "tagFilter" ],
        "type" : "object",
        "properties" : {
          "severityLevel" : {
            "type" : "string",
            "description" : "The severity level to trigger the alert.",
            "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "MONITORING_UNAVAILABLE", "PERFORMANCE", "RESOURCE_CONTENTION" ]
          },
          "tagFilter" : {
            "$ref" : "#/components/schemas/AlertingProfileTagFilter"
          },
          "delayInMinutes" : {
            "maximum" : 10000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Send a notification if a problem remains open longer than *X* minutes.",
            "format" : "int32"
          }
        },
        "description" : "A severity rule of the alerting profile. \n\n A severity rule defines the level of severity that must be met before an alert is sent our for a detected problem. Additionally it restricts the alerting to certain monitored entities."
      },
      "AlertingProfileTagFilter" : {
        "required" : [ "includeMode" ],
        "type" : "object",
        "properties" : {
          "includeMode" : {
            "type" : "string",
            "description" : "The filtering mode: \n* `INCLUDE_ANY`: The rule applies to monitored entities that have at least one of the specified tags. You can specify up to 100 tags. \n* `INCLUDE_ALL`: The rule applies to monitored entities that have **all** of the specified tags. You can specify up to 10 tags. \n* `NONE`: The rule applies to all monitored entities.",
            "enum" : [ "INCLUDE_ALL", "INCLUDE_ANY", "NONE" ]
          },
          "tagFilters" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of required tags.",
            "items" : {
              "$ref" : "#/components/schemas/TagFilter"
            }
          }
        },
        "description" : "Configuration of the tag filtering of the alerting profile."
      },
      "ConfigurationMetadata" : {
        "type" : "object",
        "properties" : {
          "currentConfigurationVersions" : {
            "type" : "array",
            "description" : "A sorted list of version numbers of the configuration.",
            "example" : [ "1.0.4", "1.23" ],
            "items" : {
              "type" : "string"
            }
          },
          "clusterVersion" : {
            "type" : "string",
            "description" : "Dynatrace version.",
            "example" : "1.192.1"
          },
          "configurationVersions" : {
            "type" : "array",
            "description" : "A sorted list of the version numbers of the configuration.",
            "example" : [ 4, 2 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        },
        "description" : "Metadata useful for debugging",
        "readOnly" : true
      },
      "TagFilter" : {
        "required" : [ "context", "key" ],
        "type" : "object",
        "properties" : {
          "context" : {
            "type" : "string",
            "description" : "The origin of the tag, such as AWS or Cloud Foundry. \n\nCustom tags use the `CONTEXTLESS` value.",
            "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_CLOUD", "KUBERNETES" ]
          },
          "key" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The key of the tag. \n\nCustom tags have the tag value here."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the tag. \n\n Not applicable to custom tags."
          }
        },
        "description" : "A tag-based filter of monitored entities."
      },
      "StubList" : {
        "required" : [ "values" ],
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "description" : "An ordered list of short representations of Dynatrace entities.",
            "items" : {
              "$ref" : "#/components/schemas/EntityShortRepresentation"
            }
          }
        },
        "description" : "An ordered list of short representations of Dynatrace entities.",
        "example" : {
          "values" : [ {
            "id" : "6a98d7bc-abb9-44f8-ae6a-73e68e71812a",
            "name" : "Dynatrace entity 1",
            "description" : "Dynatrace entity 1 for the REST API example"
          }, {
            "id" : "ee70f7d3-9a4e-4f5f-94d2-c9d6156f1618",
            "name" : "Dynatrace entity 2"
          }, {
            "id" : "8cdabe77-9e1a-4be8-b3df-269dd6fa9d7f"
          } ]
        }
      },
      "ApplicationAnomalyDetectionConfig" : {
        "required" : [ "failureRateIncrease", "responseTimeDegradation", "trafficDrop", "trafficSpike" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "responseTimeDegradation" : {
            "$ref" : "#/components/schemas/ResponseTimeDegradationDetectionConfig"
          },
          "trafficDrop" : {
            "$ref" : "#/components/schemas/TrafficDropDetectionConfig"
          },
          "trafficSpike" : {
            "$ref" : "#/components/schemas/TrafficSpikeDetectionConfig"
          },
          "failureRateIncrease" : {
            "$ref" : "#/components/schemas/FailureRateIncreaseDetectionConfig"
          }
        },
        "description" : "The configuration of anomaly detection for applications.",
        "example" : {
          "responseTimeDegradation" : {
            "detectionMode" : "DETECT_AUTOMATICALLY",
            "automaticDetection" : {
              "responseTimeDegradationMilliseconds" : 250,
              "responseTimeDegradationPercent" : 90,
              "slowestResponseTimeDegradationMilliseconds" : 500,
              "slowestResponseTimeDegradationPercent" : 200,
              "loadThreshold" : "ONE_REQUEST_PER_MINUTE"
            }
          },
          "trafficDrop" : {
            "enabled" : true,
            "trafficDropPercent" : 95
          },
          "trafficSpike" : {
            "enabled" : false
          },
          "failureRateIncrease" : {
            "detectionMode" : "DETECT_USING_FIXED_THRESHOLDS",
            "thresholds" : {
              "threshold" : 10,
              "sensitivity" : "LOW"
            }
          }
        }
      },
      "FailureRateIncreaseAutodetectionConfig" : {
        "required" : [ "failingServiceCallPercentageIncreaseAbsolute", "failingServiceCallPercentageIncreaseRelative" ],
        "type" : "object",
        "properties" : {
          "failingServiceCallPercentageIncreaseAbsolute" : {
            "maximum" : 1000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Absolute increase of failing service calls to trigger an alert, %.",
            "format" : "int32"
          },
          "failingServiceCallPercentageIncreaseRelative" : {
            "maximum" : 1000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Relative increase of failing service calls to trigger an alert, %.",
            "format" : "int32"
          }
        },
        "description" : "Parameters of failure rate increase auto-detection. Required if **detectionMode** is `DETECT_AUTOMATICALLY`. Not applicable otherwise. \n\nThe absolute and relative thresholds **both** must exceed to trigger an alert. \n\nExample: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be: \nAbsolute: 1.5% + **1%** = 2.5% \nRelative: 1.5% + 1.5% * **50%** = 2.25%"
      },
      "FailureRateIncreaseDetectionConfig" : {
        "required" : [ "detectionMode" ],
        "type" : "object",
        "properties" : {
          "detectionMode" : {
            "type" : "string",
            "description" : "How to detect failure rate increase: automatically, or based on fixed thresholds, or do not detect.",
            "enum" : [ "DETECT_AUTOMATICALLY", "DETECT_USING_FIXED_THRESHOLDS", "DONT_DETECT" ]
          },
          "automaticDetection" : {
            "$ref" : "#/components/schemas/FailureRateIncreaseAutodetectionConfig"
          },
          "thresholds" : {
            "$ref" : "#/components/schemas/FailureRateIncreaseThresholdConfig"
          }
        },
        "description" : "Configuration of failure rate increase detection."
      },
      "FailureRateIncreaseThresholdConfig" : {
        "required" : [ "sensitivity", "threshold" ],
        "type" : "object",
        "properties" : {
          "threshold" : {
            "maximum" : 1000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Failure rate during any 5-minute period to trigger an alert, %.",
            "format" : "int32"
          },
          "sensitivity" : {
            "type" : "string",
            "description" : "Sensitivity of the threshold. \n\nWith `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts. \n\nWith `high` sensitivity, no statistical confidence is used. Each violation triggers alert.",
            "enum" : [ "HIGH", "LOW", "MEDIUM" ]
          }
        },
        "description" : "Fixed thresholds for failure rate increase detection. \n\n Required if **detectionMode** is `DETECT_USING_FIXED_THRESHOLDS`. Not applicable otherwise."
      },
      "ResponseTimeDegradationAutodetectionConfig" : {
        "required" : [ "loadThreshold", "responseTimeDegradationMilliseconds", "responseTimeDegradationPercent", "slowestResponseTimeDegradationMilliseconds", "slowestResponseTimeDegradationPercent" ],
        "type" : "object",
        "properties" : {
          "responseTimeDegradationMilliseconds" : {
            "maximum" : 100000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Alert if the response time degrades beyond *X* milliseconds.",
            "format" : "int32"
          },
          "responseTimeDegradationPercent" : {
            "maximum" : 1000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Alert if the response time degrades beyond *X* %.",
            "format" : "int32"
          },
          "slowestResponseTimeDegradationMilliseconds" : {
            "maximum" : 100000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Alert if the response time of the slowest 10% degrades beyond *X* milliseconds.",
            "format" : "int32"
          },
          "slowestResponseTimeDegradationPercent" : {
            "maximum" : 1000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Alert if the response time of the slowest 10% degrades beyond *X* %.",
            "format" : "int32"
          },
          "loadThreshold" : {
            "type" : "string",
            "description" : "Minimal service load to detect response time degradation. \n\n Response time degradation of services with smaller load won't trigger alerts.",
            "enum" : [ "FIFTEEN_REQUESTS_PER_MINUTE", "FIVE_REQUESTS_PER_MINUTE", "ONE_REQUEST_PER_MINUTE", "TEN_REQUESTS_PER_MINUTE" ]
          }
        },
        "description" : "Parameters of the response time degradation auto-detection. Required if the **detectionMode** is `DETECT_AUTOMATICALLY`. Not applicable otherwise. \n\nViolation of **any** criterion triggers an alert."
      },
      "ResponseTimeDegradationDetectionConfig" : {
        "required" : [ "detectionMode" ],
        "type" : "object",
        "properties" : {
          "detectionMode" : {
            "type" : "string",
            "description" : "How to detect response time degradation: automatically, or based on fixed thresholds, or do not detect.",
            "enum" : [ "DETECT_AUTOMATICALLY", "DETECT_USING_FIXED_THRESHOLDS", "DONT_DETECT" ]
          },
          "automaticDetection" : {
            "$ref" : "#/components/schemas/ResponseTimeDegradationAutodetectionConfig"
          },
          "thresholds" : {
            "$ref" : "#/components/schemas/ResponseTimeDegradationThresholdConfig"
          }
        },
        "description" : "Configuration of response time degradation detection."
      },
      "ResponseTimeDegradationThresholdConfig" : {
        "required" : [ "loadThreshold", "responseTimeThresholdMilliseconds", "sensitivity", "slowestResponseTimeThresholdMilliseconds" ],
        "type" : "object",
        "properties" : {
          "responseTimeThresholdMilliseconds" : {
            "maximum" : 100000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Response time during any 5-minute period to trigger an alert, in milliseconds.",
            "format" : "int32"
          },
          "slowestResponseTimeThresholdMilliseconds" : {
            "maximum" : 100000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Response time of the 10% slowest during any 5-minute period to trigger an alert, in milliseconds.",
            "format" : "int32"
          },
          "loadThreshold" : {
            "type" : "string",
            "description" : "Minimal service load to detect response time degradation. \n\n Response time degradation of services with smaller load won't trigger alerts.",
            "enum" : [ "FIFTEEN_REQUESTS_PER_MINUTE", "FIVE_REQUESTS_PER_MINUTE", "ONE_REQUEST_PER_MINUTE", "TEN_REQUESTS_PER_MINUTE" ]
          },
          "sensitivity" : {
            "type" : "string",
            "description" : "Sensitivity of the threshold. \n\nWith `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts. \n\nWith `high` sensitivity, no statistical confidence is used. Each violation triggers an alert.",
            "enum" : [ "HIGH", "LOW", "MEDIUM" ]
          }
        },
        "description" : "Fixed thresholds for response time degradation detection. \n\n Required if **detectionMode** is `DETECT_USING_FIXED_THRESHOLDS`. Not applicable otherwise."
      },
      "TrafficDropDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "trafficDropPercent" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Alert if the observed traffic is less than *X* % of the expected value.",
            "format" : "int32"
          }
        },
        "description" : "The configuration of traffic drops detection."
      },
      "TrafficSpikeDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "trafficSpikePercent" : {
            "maximum" : 1000,
            "minimum" : 100,
            "type" : "integer",
            "description" : "Alert if the observed traffic is more than *X* % of the expected value.",
            "format" : "int32"
          }
        },
        "description" : "The configuration of traffic spikes detection."
      },
      "AwsAnomalyDetectionConfig" : {
        "required" : [ "elbHighConnectionErrorsDetection", "lambdaHighErrorRateDetection", "rdsHighCpuDetection", "rdsHighMemoryDetection", "rdsHighWriteReadLatencyDetection", "rdsLowStorageDetection", "rdsRestartsSequenceDetection" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "rdsHighCpuDetection" : {
            "$ref" : "#/components/schemas/RdsHighCpuDetectionConfig"
          },
          "rdsHighWriteReadLatencyDetection" : {
            "$ref" : "#/components/schemas/RdsHighWriteReadLatencyDetectionConfig"
          },
          "rdsLowStorageDetection" : {
            "$ref" : "#/components/schemas/RdsLowStorageDetectionConfig"
          },
          "rdsHighMemoryDetection" : {
            "$ref" : "#/components/schemas/RdsHighMemoryDetectionConfig"
          },
          "elbHighConnectionErrorsDetection" : {
            "$ref" : "#/components/schemas/ElbHighConnectionErrorsDetectionConfig"
          },
          "rdsRestartsSequenceDetection" : {
            "$ref" : "#/components/schemas/RdsRestartsSequenceDetectionConfig"
          },
          "lambdaHighErrorRateDetection" : {
            "$ref" : "#/components/schemas/LambdaHighErrorRateDetectionConfig"
          },
          "ec2CandidateCpuSaturationDetection" : {
            "$ref" : "#/components/schemas/Ec2CandidateCpuSaturationDetectionConfig"
          }
        },
        "description" : "The configuration of anomaly detection for AWS.",
        "example" : {
          "metadata" : {
            "configurationVersions" : [ 4, 2 ],
            "clusterVersion" : "Mock version"
          },
          "rdsHighCpuDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "cpuUsagePercentage" : 99
            }
          },
          "rdsHighWriteReadLatencyDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "writeReadLatency" : 800
            }
          },
          "rdsLowStorageDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "freeStoragePercentage" : 7
            }
          },
          "rdsHighMemoryDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "freeMemory" : 96.99,
              "swapUsage" : 5.5
            }
          },
          "elbHighConnectionErrorsDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "connectionErrorsPerMinute" : 4
            }
          },
          "rdsRestartsSequenceDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "restartsPerMinute" : 3
            }
          },
          "lambdaHighErrorRateDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "failedInvocationsRate" : 2
            }
          },
          "ec2CandidateCpuSaturationDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "cpuUsagePercentage" : 98
            }
          }
        }
      },
      "Ec2CandidateCpuSaturationDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/Ec2CandidateCpuSaturationThresholds"
          }
        },
        "description" : "The configuration of the high CPU saturation on EC2 without installed agent (monitoring candidate). If null, then this configuration won't be changed."
      },
      "Ec2CandidateCpuSaturationThresholds" : {
        "required" : [ "cpuUsagePercentage" ],
        "type" : "object",
        "properties" : {
          "cpuUsagePercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if CPU usage is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for high CPU saturation on EC2 monitoring candidate. If not set, automatic mode is used."
      },
      "ElbHighConnectionErrorsDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/ElbHighConnectionErrorsThresholds"
          }
        },
        "description" : "The configuration of the high number of backend connection errors on ELB detection."
      },
      "ElbHighConnectionErrorsThresholds" : {
        "required" : [ "connectionErrorsPerMinute" ],
        "type" : "object",
        "properties" : {
          "connectionErrorsPerMinute" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if number of backend connection errors is higher than *X* per minute in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for high number of backend connection errors on ELB. If not set, automatic mode is used."
      },
      "LambdaHighErrorRateDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/LambdaHighErrorRateThresholds"
          }
        },
        "description" : "The configuration of the AWS Lambda high error rate detection."
      },
      "LambdaHighErrorRateThresholds" : {
        "required" : [ "failedInvocationsRate" ],
        "type" : "object",
        "properties" : {
          "failedInvocationsRate" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Alert if failed invocations rate is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for AWS Lambda high error rate. If not set, automatic mode is used."
      },
      "RdsHighCpuDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/RdsHighCpuThresholds"
          }
        },
        "description" : "The configuration of the high CPU utilization on RDS detection."
      },
      "RdsHighCpuThresholds" : {
        "required" : [ "cpuUsagePercentage" ],
        "type" : "object",
        "properties" : {
          "cpuUsagePercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if CPU usage is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for high CPU utilization on RDS. If not set, automatic mode is used."
      },
      "RdsHighLatencyThresholds" : {
        "required" : [ "writeReadLatency" ],
        "type" : "object",
        "properties" : {
          "writeReadLatency" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if read/write latency is higher than *X* milliseconds in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for high RDS write/read latency. If not set, automatic mode is used"
      },
      "RdsHighMemoryDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/RdsHighMemoryThresholds"
          }
        },
        "description" : "The configuration of RDS running out of memory detection."
      },
      "RdsHighMemoryThresholds" : {
        "required" : [ "freeMemory", "swapUsage" ],
        "type" : "object",
        "properties" : {
          "freeMemory" : {
            "maximum" : 1000,
            "minimum" : 0.01,
            "exclusiveMinimum" : false,
            "type" : "number",
            "description" : "Freeable memory is lower than *X* Megabytes in 3 out of 5 samples."
          },
          "swapUsage" : {
            "maximum" : 1000,
            "minimum" : 0.01,
            "exclusiveMinimum" : false,
            "type" : "number",
            "description" : "Swap usage is higher than *X* Gigabytes in 3 out of 5 samples."
          }
        },
        "description" : "Custom thresholds for RDS running out of memory. If not set, automatic mode is used. \n\n **All** conditions must be fulfilled to trigger an alert."
      },
      "RdsHighWriteReadLatencyDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/RdsHighLatencyThresholds"
          }
        },
        "description" : "The configuration of the high RDS write/read latency detection."
      },
      "RdsLowStorageDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/RdsLowStorageThresholds"
          }
        },
        "description" : "The configuration of the low free storage space on RDS detection."
      },
      "RdsLowStorageThresholds" : {
        "required" : [ "freeStoragePercentage" ],
        "type" : "object",
        "properties" : {
          "freeStoragePercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if free storage space divided by allocated storage is lower than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for low free storage space on RDS. If not set, automatic mode is used."
      },
      "RdsRestartsSequenceDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/RdsRestartsThresholds"
          }
        },
        "description" : "The configuration of the restarts sequence on RDS detection."
      },
      "RdsRestartsThresholds" : {
        "required" : [ "restartsPerMinute" ],
        "type" : "object",
        "properties" : {
          "restartsPerMinute" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if number of restarts is *X* per minute or higher in 3 out of 20 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for restarts sequence on RDS. If not set, automatic mode is used."
      },
      "DatabaseAnomalyDetectionConfig" : {
        "required" : [ "databaseConnectionFailureCount", "failureRateIncrease", "responseTimeDegradation" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "responseTimeDegradation" : {
            "$ref" : "#/components/schemas/ResponseTimeDegradationDetectionConfig"
          },
          "loadDrop" : {
            "$ref" : "#/components/schemas/LoadDropDetectionConfig"
          },
          "loadSpike" : {
            "$ref" : "#/components/schemas/LoadSpikeDetectionConfig"
          },
          "failureRateIncrease" : {
            "$ref" : "#/components/schemas/FailureRateIncreaseDetectionConfig"
          },
          "databaseConnectionFailureCount" : {
            "$ref" : "#/components/schemas/DatabaseConnectionFailureDetectionConfig"
          }
        },
        "description" : "The configuration of the anomaly detection for database services.",
        "example" : {
          "responseTimeDegradation" : {
            "detectionMode" : "DETECT_AUTOMATICALLY",
            "automaticDetection" : {
              "responseTimeDegradationMilliseconds" : 250,
              "responseTimeDegradationPercent" : 90,
              "slowestResponseTimeDegradationMilliseconds" : 500,
              "slowestResponseTimeDegradationPercent" : 200,
              "loadThreshold" : "ONE_REQUEST_PER_MINUTE"
            }
          },
          "loadDrop" : {
            "enabled" : true,
            "loadDropPercent" : 40,
            "minAbnormalStateDurationInMinutes" : 5
          },
          "loadSpike" : {
            "enabled" : false
          },
          "failureRateIncrease" : {
            "detectionMode" : "DETECT_USING_FIXED_THRESHOLDS",
            "thresholds" : {
              "threshold" : 10,
              "sensitivity" : "LOW"
            }
          },
          "databaseConnectionFailureCount" : {
            "enabled" : "true",
            "connectionFailsCount" : 5,
            "timePeriodMinutes" : 5
          }
        }
      },
      "DatabaseConnectionFailureDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "connectionFailsCount" : {
            "maximum" : 9999999,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of failed database connections during any **timePeriodMinutes** minutes period to trigger an alert.",
            "format" : "int32"
          },
          "timePeriodMinutes" : {
            "maximum" : 15,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The *X* minutes time period during which the **connectionFailsCount** is evaluated.",
            "format" : "int32"
          }
        },
        "description" : "Parameters of the failed database connections detection. \n\nThe alert is triggered when failed connections number exceeds **connectionFailsCount** during any **timePeriodMinutes** minutes period."
      },
      "LoadDropDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "loadDropPercent" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Alert if the observed load is less than *X* % of the expected value.",
            "format" : "int32"
          },
          "minAbnormalStateDurationInMinutes" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if the service stays in abnormal state for at least *X* minutes.",
            "format" : "int32"
          }
        },
        "description" : "The configuration of load drops detection."
      },
      "LoadSpikeDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "loadSpikePercent" : {
            "maximum" : 1000,
            "minimum" : 100,
            "type" : "integer",
            "description" : "Alert if the observed load is more than *X* % of the expected value.",
            "format" : "int32"
          },
          "minAbnormalStateDurationInMinutes" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if the service stays in abnormal state for at least *X* minutes.",
            "format" : "int32"
          }
        },
        "description" : "The configuration of load spikes detection."
      },
      "DiskEventAnomalyDetectionConfig" : {
        "required" : [ "enabled", "metric", "name", "samples", "threshold", "violatingSamples" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the disk event rule.",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the disk event rule."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Disk event rule enabled/disabled."
          },
          "metric" : {
            "type" : "string",
            "description" : "The metric to monitor.",
            "enum" : [ "LOW_DISK_SPACE", "LOW_INODES", "READ_TIME_EXCEEDING", "WRITE_TIME_EXCEEDING" ]
          },
          "threshold" : {
            "maximum" : 1000,
            "minimum" : 0,
            "type" : "number",
            "description" : "The threshold to trigger disk event. \n\n * A percentage for `LowDiskSpace` or `LowInodes` metrics. \n * In milliseconds for `ReadTimeExceeding` or `WriteTimeExceeding` metrics.",
            "format" : "double"
          },
          "samples" : {
            "maximum" : 60,
            "minimum" : 3,
            "type" : "integer",
            "description" : "The number of samples to evaluate.",
            "format" : "int32",
            "example" : 10
          },
          "violatingSamples" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of samples that must violate the threshold to trigger an event. Must not exceed the number of evaluated samples.",
            "format" : "int32",
            "example" : 8
          },
          "diskNameFilter" : {
            "$ref" : "#/components/schemas/DiskNameFilter"
          },
          "tagFilters" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Narrows the rule usage down to the hosts matching the specified tags.",
            "items" : {
              "$ref" : "#/components/schemas/TagFilter"
            }
          },
          "hostGroupId" : {
            "type" : "string",
            "description" : "Narrows the rule usage down to disks that run on hosts that themselves run on the specified host group."
          }
        }
      },
      "DiskNameFilter" : {
        "required" : [ "operator", "value" ],
        "type" : "object",
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Comparison operator.",
            "enum" : [ "CONTAINS", "DOES_NOT_CONTAIN", "DOES_NOT_EQUAL", "DOES_NOT_START_WITH", "EQUALS", "STARTS_WITH" ]
          },
          "value" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Value to compare to."
          }
        },
        "description" : "Narrows the rule usage down to disks, matching the specified criteria."
      },
      "ConnectionLostDetectionConfig" : {
        "required" : [ "enabled", "enabledOnGracefulShutdowns" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "enabledOnGracefulShutdowns" : {
            "type" : "boolean",
            "description" : "Alert (`true`) on graceful host shutdowns."
          }
        },
        "description" : "Configuration of lost connection detection."
      },
      "DiskLowInodesDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/DiskLowInodesThresholds"
          }
        },
        "description" : "Configuration of low disk inodes number detection."
      },
      "DiskLowInodesThresholds" : {
        "required" : [ "freeInodesPercentage" ],
        "type" : "object",
        "properties" : {
          "freeInodesPercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if percentage of available inodes is lower than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for low disk inodes number. If not set, automatic mode is used."
      },
      "DiskLowSpaceDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/DiskLowSpaceThresholds"
          }
        },
        "description" : "Configuration of low disk space detection."
      },
      "DiskLowSpaceThresholds" : {
        "required" : [ "freeSpacePercentage" ],
        "type" : "object",
        "properties" : {
          "freeSpacePercentage" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Alert if free disk space is lower than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for low disk space. If not set, automatic mode is used."
      },
      "DiskSlowWriteAndReadsThresholds" : {
        "required" : [ "writeAndReadTime" ],
        "type" : "object",
        "properties" : {
          "writeAndReadTime" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if disk read/write time is higher than *X* milliseconds in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for slow running disks. If not set, the automatic mode is used."
      },
      "DiskSlowWritesAndReadsDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/DiskSlowWriteAndReadsThresholds"
          }
        },
        "description" : "Configuration of slow running disks detection."
      },
      "HighCpuSaturationDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/HighCpuSaturationThresholds"
          }
        },
        "description" : "Configuration of high CPU saturation detection"
      },
      "HighCpuSaturationThresholds" : {
        "required" : [ "cpuSaturation" ],
        "type" : "object",
        "properties" : {
          "cpuSaturation" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if CPU usage is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for high CPU saturation. If not set then the automatic mode is used."
      },
      "HighGcActivityDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/HighGcActivityThresholds"
          }
        },
        "description" : "Configuration of high Garbage Collector activity detection."
      },
      "HighGcActivityThresholds" : {
        "required" : [ "gcSuspensionPercentage", "gcTimePercentage" ],
        "type" : "object",
        "properties" : {
          "gcTimePercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "GC time is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          },
          "gcSuspensionPercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "GC suspension is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for high GC activity. If not set, automatic mode is used. \n\n Meeting **any** of these conditions triggers an alert."
      },
      "HighMemoryDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/HighMemoryThresholds"
          }
        },
        "description" : "Configuration of high memory usage detection."
      },
      "HighMemoryThresholds" : {
        "required" : [ "pageFaultsPerSecondNonWindows", "pageFaultsPerSecondWindows", "usedMemoryPercentageNonWindows", "usedMemoryPercentageWindows" ],
        "type" : "object",
        "properties" : {
          "pageFaultsPerSecondWindows" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Memory page fault rate is higher than *X* faults per second on Windows.",
            "format" : "int32"
          },
          "usedMemoryPercentageWindows" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Memory usage is higher than *X*% on Windows.",
            "format" : "int32"
          },
          "pageFaultsPerSecondNonWindows" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Memory page fault rate is higher than *X* faults per second on Linux.",
            "format" : "int32"
          },
          "usedMemoryPercentageNonWindows" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Memory usage is higher than *X*% on Linux.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for high memory usage. If not set then the automatic mode is used. \n\n **Both** conditions must be met to trigger an alert."
      },
      "HighNetworkDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/HighNetworkThresholds"
          }
        },
        "description" : "Configuration of high network utilization detection."
      },
      "HighNetworkThresholds" : {
        "required" : [ "utilizationPercentage" ],
        "type" : "object",
        "properties" : {
          "utilizationPercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if sent/received traffic utilization is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for high network utilization. If not set, automatic mode is used."
      },
      "HostsAnomalyDetectionConfig" : {
        "required" : [ "connectionLostDetection", "diskLowInodesDetection", "diskLowSpaceDetection", "diskSlowWritesAndReadsDetection", "highCpuSaturationDetection", "highGcActivityDetection", "highMemoryDetection", "highNetworkDetection", "networkDroppedPacketsDetection", "networkErrorsDetection", "networkHighRetransmissionDetection", "networkTcpProblemsDetection", "outOfMemoryDetection", "outOfThreadsDetection" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "connectionLostDetection" : {
            "$ref" : "#/components/schemas/ConnectionLostDetectionConfig"
          },
          "highCpuSaturationDetection" : {
            "$ref" : "#/components/schemas/HighCpuSaturationDetectionConfig"
          },
          "highMemoryDetection" : {
            "$ref" : "#/components/schemas/HighMemoryDetectionConfig"
          },
          "highGcActivityDetection" : {
            "$ref" : "#/components/schemas/HighGcActivityDetectionConfig"
          },
          "outOfMemoryDetection" : {
            "$ref" : "#/components/schemas/OutOfMemoryDetectionConfig"
          },
          "outOfThreadsDetection" : {
            "$ref" : "#/components/schemas/OutOfThreadsDetectionConfig"
          },
          "networkDroppedPacketsDetection" : {
            "$ref" : "#/components/schemas/NetworkDroppedPacketsDetectionConfig"
          },
          "networkErrorsDetection" : {
            "$ref" : "#/components/schemas/NetworkErrorsDetectionConfig"
          },
          "highNetworkDetection" : {
            "$ref" : "#/components/schemas/HighNetworkDetectionConfig"
          },
          "networkTcpProblemsDetection" : {
            "$ref" : "#/components/schemas/NetworkTcpProblemsDetectionConfig"
          },
          "networkHighRetransmissionDetection" : {
            "$ref" : "#/components/schemas/NetworkHighRetransmissionDetectionConfig"
          },
          "diskLowSpaceDetection" : {
            "$ref" : "#/components/schemas/DiskLowSpaceDetectionConfig"
          },
          "diskSlowWritesAndReadsDetection" : {
            "$ref" : "#/components/schemas/DiskSlowWritesAndReadsDetectionConfig"
          },
          "diskLowInodesDetection" : {
            "$ref" : "#/components/schemas/DiskLowInodesDetectionConfig"
          }
        },
        "description" : "Configuration of anomaly detection for hosts.",
        "example" : {
          "metadata" : {
            "configurationVersions" : [ 4, 2 ],
            "clusterVersion" : "Mock version"
          },
          "connectionLostDetection" : {
            "enabled" : true,
            "enabledOnGracefulShutdowns" : true
          },
          "highCpuSaturationDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "cpuSaturation" : 90
            }
          },
          "highMemoryDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "pageFaultsPerSecondWindows" : 50,
              "usedMemoryPercentageWindows" : 85,
              "pageFaultsPerSecondNonWindows" : 10,
              "usedMemoryPercentageNonWindows" : 85
            }
          },
          "highGcActivityDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "gcTimePercentage" : 35,
              "gcSuspensionPercentage" : 20
            }
          },
          "outOfMemoryDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "outOfMemoryExceptionsNumber" : 2
            }
          },
          "outOfThreadsDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "outOfThreadsExceptionsNumber" : 2
            }
          },
          "networkDroppedPacketsDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "droppedPacketsPercentage" : 8,
              "totalPacketsRate" : 8
            }
          },
          "networkErrorsDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "errorsPercentage" : 9,
              "totalPacketsRate" : 9
            }
          },
          "highNetworkDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "utilizationPercentage" : 88
            }
          },
          "networkTcpProblemsDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "newConnectionFailuresPercentage" : 5,
              "failedConnectionsNumberPerMinute" : 5
            }
          },
          "networkHighRetransmissionDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "retransmissionRatePercentage" : 15,
              "retransmittedPacketsNumberPerMinute" : 15
            }
          },
          "diskLowSpaceDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "freeSpacePercentage" : 10
            }
          },
          "diskSlowWritesAndReadsDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "writeAndReadTime" : 300
            }
          },
          "diskLowInodesDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "freeInodesPercentage" : 10
            }
          }
        }
      },
      "NetworkDroppedPacketsDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/NetworkDroppedPacketsThresholds"
          }
        },
        "description" : "Configuration of high number of dropped packets detection."
      },
      "NetworkDroppedPacketsThresholds" : {
        "required" : [ "droppedPacketsPercentage", "totalPacketsRate" ],
        "type" : "object",
        "properties" : {
          "droppedPacketsPercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Receive/transmit dropped packet percentage is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          },
          "totalPacketsRate" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Total receive/transmit packets rate is higher than *X* packets per second in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for dropped packets. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert."
      },
      "NetworkErrorsDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/NetworkErrorsThresholds"
          }
        },
        "description" : "Configuration of high number of network errors detection."
      },
      "NetworkErrorsThresholds" : {
        "required" : [ "errorsPercentage", "totalPacketsRate" ],
        "type" : "object",
        "properties" : {
          "errorsPercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Receive/transmit error packet percentage is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          },
          "totalPacketsRate" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Total receive/transmit packets rate is higher than *X* packets per second in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for network errors. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert."
      },
      "NetworkHighRetransmissionDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/NetworkHighRetransmissionThresholds"
          }
        },
        "description" : "Configuration of high retransmission rate detection."
      },
      "NetworkHighRetransmissionThresholds" : {
        "required" : [ "retransmissionRatePercentage", "retransmittedPacketsNumberPerMinute" ],
        "type" : "object",
        "properties" : {
          "retransmissionRatePercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Retransmission rate is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          },
          "retransmittedPacketsNumberPerMinute" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of retransmitted packets is higher than *X* packets per minute in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for high retransmission rate. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert."
      },
      "NetworkTcpProblemsDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/NetworkTcpProblemsThresholds"
          }
        },
        "description" : "Configuration of TCP connectivity problems detection."
      },
      "NetworkTcpProblemsThresholds" : {
        "required" : [ "failedConnectionsNumberPerMinute", "newConnectionFailuresPercentage" ],
        "type" : "object",
        "properties" : {
          "newConnectionFailuresPercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Percentage of new connection failures is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          },
          "failedConnectionsNumberPerMinute" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of failed connections is higher than *X* connections per minute in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for TCP connection problems. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert."
      },
      "OutOfMemoryDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/OutOfMemoryThresholds"
          }
        },
        "description" : "Configuration of Java out of memory problems detection."
      },
      "OutOfMemoryThresholds" : {
        "required" : [ "outOfMemoryExceptionsNumber" ],
        "type" : "object",
        "properties" : {
          "outOfMemoryExceptionsNumber" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if the number of Java out of memory exceptions is *X* per minute or higher.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for Java out of memory. If not set, automatic mode is used."
      },
      "OutOfThreadsDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/OutOfThreadsThresholds"
          }
        },
        "description" : "Configuration of Java out of threads problems detection."
      },
      "OutOfThreadsThresholds" : {
        "required" : [ "outOfThreadsExceptionsNumber" ],
        "type" : "object",
        "properties" : {
          "outOfThreadsExceptionsNumber" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if the number of Java out of threads exceptions is *X* per minute or higher.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for Java out of threads detection. If not set, automatic mode is used."
      },
      "CustomDeviceGroupNameAlertingScope" : {
        "required" : [ "filterType", "nameFilter" ],
        "type" : "object",
        "description" : "A scope filter for the related custom device group name.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "nameFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventTextFilterOperatorDto"
            }
          }
        } ]
      },
      "EntityIdAlertingScope" : {
        "required" : [ "entityId", "filterType" ],
        "type" : "object",
        "description" : "A scope filter for a monitored entity identifier.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "entityId" : {
              "type" : "string",
              "description" : "The monitored entities id to match on."
            }
          }
        } ]
      },
      "HostGroupNameAlertingScope" : {
        "required" : [ "filterType", "nameFilter" ],
        "type" : "object",
        "description" : "A scope filter for the related host group name.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "nameFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventTextFilterOperatorDto"
            }
          }
        } ]
      },
      "HostNameAlertingScope" : {
        "required" : [ "filterType", "nameFilter" ],
        "type" : "object",
        "description" : "A scope filter for the related host name.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "nameFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventTextFilterOperatorDto"
            }
          }
        } ]
      },
      "ManagementZoneAlertingScope" : {
        "required" : [ "filterType" ],
        "type" : "object",
        "description" : "A scope filter for a management zone identifier.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "mzId" : {
              "type" : "string",
              "description" : "The management zone id to match on."
            }
          }
        } ]
      },
      "MetricEvent" : {
        "required" : [ "description", "enabled", "monitoringStrategy", "name" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "maxLength" : 256,
            "minLength" : 0,
            "pattern" : "^[a-zA-Z0-9\\.\\-_:%]+$",
            "type" : "string",
            "description" : "The ID of the metric event."
          },
          "metricId" : {
            "type" : "string",
            "description" : "The ID of the metric evaluated by the metric event."
          },
          "metricSelector" : {
            "maxLength" : 10000,
            "minLength" : 1,
            "type" : "string",
            "description" : "The metric selector that should be executed."
          },
          "name" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name of the metric event displayed in the UI."
          },
          "description" : {
            "maxLength" : 4000,
            "minLength" : 0,
            "type" : "string",
            "description" : "The description of the metric event."
          },
          "aggregationType" : {
            "type" : "string",
            "description" : "How the metric data points are aggregated for the evaluation. \n\n The timeseries must support this aggregation.",
            "enum" : [ "AVG", "COUNT", "MAX", "MEDIAN", "MIN", "P90", "SUM", "VALUE" ]
          },
          "severity" : {
            "type" : "string",
            "description" : "The type of the event to trigger on the threshold violation. \n\nThe `CUSTOM_ALERT` type is not correlated with other alerts.\nThe `INFO` type does not open a problem.",
            "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "INFO", "PERFORMANCE", "RESOURCE_CONTENTION" ]
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric event is enabled (`true`) or disabled (`false`)."
          },
          "disabledReason" : {
            "type" : "string",
            "description" : "The reason of automatic disabling. \n\nThe `NONE` means config was not disabled automatically.",
            "readOnly" : true,
            "enum" : [ "METRIC_DEFINITION_INCONSISTENCY", "NONE", "TOO_MANY_DIMS", "TOPX_FORCIBLY_DEACTIVATED" ]
          },
          "warningReason" : {
            "type" : "string",
            "description" : "The reason of a warning set on the config. \n\nThe `NONE` means config has no warnings.",
            "readOnly" : true,
            "enum" : [ "NONE", "TOO_MANY_DIMS" ]
          },
          "alertingScope" : {
            "type" : "array",
            "description" : "Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction.",
            "items" : {
              "$ref" : "#/components/schemas/MetricEventAlertingScope"
            }
          },
          "metricDimensions" : {
            "type" : "array",
            "description" : "Defines the dimensions of the metric to alert on. The filters are combined by conjunction.",
            "items" : {
              "$ref" : "#/components/schemas/MetricEventDimensions"
            }
          },
          "monitoringStrategy" : {
            "$ref" : "#/components/schemas/MetricEventMonitoringStrategy"
          },
          "primaryDimensionKey" : {
            "type" : "string",
            "description" : "Defines which dimension key should be used for the **alertingScope**."
          },
          "queryOffset" : {
            "maximum" : 60,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Defines the query offset to adapt the evaluation timeframe for known metric latency.",
            "format" : "int64"
          }
        },
        "description" : "The configuration of the metric event.",
        "example" : {
          "metadata" : {
            "configurationVersions" : [ 4, 2 ],
            "clusterVersion" : "Mock version"
          },
          "metricId" : "com.dynatrace.builtin:host.disk.bytesread",
          "name" : "My metric event",
          "description" : "This is the description for my metric event.",
          "aggregationType" : "AVG",
          "severity" : "CUSTOM_ALERT",
          "alertingScope" : [ {
            "filterType" : "ENTITY_ID",
            "entityId" : "HOST-000000000001E240"
          }, {
            "filterType" : "TAG",
            "tagFilter" : {
              "context" : "CONTEXTLESS",
              "key" : "someKey",
              "value" : "someValue"
            }
          } ],
          "metricDimensions" : [ {
            "filterType" : "ENTITY",
            "key" : "dt.entity.disk",
            "nameFilter" : {
              "value" : "diskName",
              "operator" : "EQUALS"
            }
          } ],
          "enabled" : true,
          "disabledReason" : "NONE",
          "warningReason" : "NONE",
          "monitoringStrategy" : {
            "type" : "STATIC_THRESHOLD",
            "alertCondition" : "ABOVE",
            "samples" : 5,
            "violatingSamples" : 3,
            "dealertingSamples" : 5,
            "threshold" : 80.0,
            "unit" : "KILO_BYTE_PER_SECOND"
          }
        }
      },
      "MetricEventAlertingScope" : {
        "required" : [ "filterType" ],
        "type" : "object",
        "properties" : {
          "filterType" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `ENTITY_ID` -> EntityIdAlertingScope \n* `MANAGEMENT_ZONE` -> ManagementZoneAlertingScope \n* `TAG` -> TagFilterAlertingScope \n* `NAME` -> NameAlertingScope \n* `CUSTOM_DEVICE_GROUP_NAME` -> CustomDeviceGroupNameAlertingScope \n* `HOST_GROUP_NAME` -> HostGroupNameAlertingScope \n* `HOST_NAME` -> HostNameAlertingScope \n* `PROCESS_GROUP_ID` -> ProcessGroupIdAlertingScope \n* `PROCESS_GROUP_NAME` -> ProcessGroupNameAlertingScope \n",
            "enum" : [ "CUSTOM_DEVICE_GROUP_NAME", "ENTITY_ID", "HOST_GROUP_NAME", "HOST_NAME", "MANAGEMENT_ZONE", "NAME", "PROCESS_GROUP_ID", "PROCESS_GROUP_NAME", "TAG" ]
          }
        },
        "description" : "A single filter for the alerting scope.\n\nThe actual set of fields depends on type of the filter. Find the list of actual objects in the description of the **filterType** field or see [Metric events anomaly detection API - JSON models](https://dt-url.net/ql63sap).",
        "discriminator" : {
          "propertyName" : "filterType"
        }
      },
      "MetricEventAutoAdaptiveBaselineMonitoringStrategy" : {
        "required" : [ "alertCondition", "dealertingSamples", "numberOfSignalFluctuations", "samples", "type", "violatingSamples" ],
        "type" : "object",
        "description" : "An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventMonitoringStrategy"
        }, {
          "type" : "object",
          "properties" : {
            "samples" : {
              "maximum" : 60,
              "minimum" : 3,
              "type" : "integer",
              "description" : "The number of one-minute samples that form the sliding evaluation window.",
              "format" : "int32"
            },
            "violatingSamples" : {
              "minimum" : 1,
              "type" : "integer",
              "description" : "The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event.",
              "format" : "int32"
            },
            "dealertingSamples" : {
              "minimum" : 3,
              "type" : "integer",
              "description" : "The number of one-minute samples within the evaluation window that must go back to normal to close the event.",
              "format" : "int32"
            },
            "alertCondition" : {
              "type" : "string",
              "description" : "The condition for the **threshold** value check: above or below.",
              "enum" : [ "ABOVE", "BELOW" ]
            },
            "alertingOnMissingData" : {
              "type" : "boolean",
              "description" : "If true, also one-minute samples without data are counted as violating samples."
            },
            "numberOfSignalFluctuations" : {
              "maximum" : 10,
              "minimum" : 0,
              "type" : "number",
              "description" : "Defines the factor of how many signal fluctuations are valid. Values above the baseline plus the signal fluctuation times the number of tolerated signal fluctuations are alerted.",
              "format" : "double"
            }
          }
        } ]
      },
      "MetricEventDimensions" : {
        "required" : [ "filterType" ],
        "type" : "object",
        "properties" : {
          "filterType" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `ENTITY` -> MetricEventEntityDimensions \n* `STRING` -> MetricEventStringDimensions \n",
            "enum" : [ "ENTITY", "STRING" ]
          },
          "key" : {
            "type" : "string",
            "description" : "The dimensions key on the metric."
          }
        },
        "description" : "A single filter for the metrics dimensions.\n\nThe actual set of fields depends on type of the filter. Find the list of actual objects in the description of the **filterType** field or see [Metric events anomaly detection API - JSON models](https://dt-url.net/ql63sap).",
        "discriminator" : {
          "propertyName" : "filterType"
        }
      },
      "MetricEventEntityDimensions" : {
        "required" : [ "filterType", "nameFilter" ],
        "type" : "object",
        "description" : "A filter for the metrics entity dimensions.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventDimensions"
        }, {
          "type" : "object",
          "properties" : {
            "nameFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventDimensionsFilterOperatorDto"
            }
          }
        } ]
      },
      "MetricEventMonitoringStrategy" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `STATIC_THRESHOLD` -> MetricEventStaticThresholdMonitoringStrategy \n* `AUTO_ADAPTIVE_BASELINE` -> MetricEventAutoAdaptiveBaselineMonitoringStrategy \n",
            "enum" : [ "AUTO_ADAPTIVE_BASELINE", "STATIC_THRESHOLD" ]
          }
        },
        "description" : "A monitoring strategy for a metric event config.\n\nThis is the base version of the monitoring strategy, depending on the type, \nthe actual JSON may contain additional fields.",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "MetricEventStaticThresholdMonitoringStrategy" : {
        "required" : [ "alertCondition", "dealertingSamples", "samples", "threshold", "type", "violatingSamples" ],
        "type" : "object",
        "description" : "A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventMonitoringStrategy"
        }, {
          "type" : "object",
          "properties" : {
            "samples" : {
              "maximum" : 60,
              "minimum" : 3,
              "type" : "integer",
              "description" : "The number of one-minute samples that form the sliding evaluation window.",
              "format" : "int32"
            },
            "violatingSamples" : {
              "minimum" : 1,
              "type" : "integer",
              "description" : "The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event.",
              "format" : "int32"
            },
            "dealertingSamples" : {
              "minimum" : 3,
              "type" : "integer",
              "description" : "The number of one-minute samples within the evaluation window that must go back to normal to close the event.",
              "format" : "int32"
            },
            "alertCondition" : {
              "type" : "string",
              "description" : "The condition for the **threshold** value check: above or below.",
              "enum" : [ "ABOVE", "BELOW" ]
            },
            "alertingOnMissingData" : {
              "type" : "boolean",
              "description" : "If true, also one-minute samples without data are counted as violating samples."
            },
            "threshold" : {
              "type" : "number",
              "description" : "The value of the static threshold based on the specified unit.",
              "format" : "double"
            },
            "unit" : {
              "type" : "string",
              "description" : "The unit of the threshold, matching the metric definition.",
              "enum" : [ "BILLION", "BIT", "BIT_PER_HOUR", "BIT_PER_MINUTE", "BIT_PER_SECOND", "BYTE", "BYTE_PER_HOUR", "BYTE_PER_MINUTE", "BYTE_PER_SECOND", "CORES", "COUNT", "DAY", "DECIBEL_MILLI_WATT", "GIBI_BYTE", "GIGA", "GIGA_BYTE", "HOUR", "KIBI_BYTE", "KIBI_BYTE_PER_HOUR", "KIBI_BYTE_PER_MINUTE", "KIBI_BYTE_PER_SECOND", "KILO", "KILO_BYTE", "KILO_BYTE_PER_HOUR", "KILO_BYTE_PER_MINUTE", "KILO_BYTE_PER_SECOND", "KILO_METRE_PER_HOUR", "MEBI_BYTE", "MEBI_BYTE_PER_HOUR", "MEBI_BYTE_PER_MINUTE", "MEBI_BYTE_PER_SECOND", "MEGA", "MEGA_BYTE", "MEGA_BYTE_PER_HOUR", "MEGA_BYTE_PER_MINUTE", "MEGA_BYTE_PER_SECOND", "METRE_PER_HOUR", "METRE_PER_SECOND", "MICRO_SECOND", "MILLION", "MILLI_CORES", "MILLI_SECOND", "MILLI_SECOND_PER_MINUTE", "MINUTE", "MONTH", "MSU", "NANO_SECOND", "NANO_SECOND_PER_MINUTE", "NOT_APPLICABLE", "PERCENT", "PER_HOUR", "PER_MINUTE", "PER_SECOND", "PIXEL", "PROMILLE", "RATIO", "SECOND", "STATE", "UNSPECIFIED", "WEEK", "YEAR" ]
            }
          }
        } ]
      },
      "MetricEventStringDimensions" : {
        "required" : [ "filterType", "textFilter" ],
        "type" : "object",
        "description" : "A filter for the metrics string dimensions.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventDimensions"
        }, {
          "type" : "object",
          "properties" : {
            "textFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventDimensionsFilterOperatorDto"
            }
          }
        } ]
      },
      "MetricEventTextFilterMetricEventDimensionsFilterOperatorDto" : {
        "required" : [ "operator", "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "type" : "string",
            "description" : "The value to match on."
          },
          "operator" : {
            "type" : "string",
            "description" : "The operator to match on.",
            "enum" : [ "EQUALS" ]
          }
        },
        "description" : "A filter for a string value based on the given operator."
      },
      "MetricEventTextFilterMetricEventTextFilterOperatorDto" : {
        "required" : [ "operator", "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "type" : "string",
            "description" : "The value to match on."
          },
          "operator" : {
            "type" : "string",
            "description" : "The operator to match on.",
            "enum" : [ "CONTAINS_CASE_INSENSITIVE", "CONTAINS_CASE_SENSITIVE", "EQUALS" ]
          }
        },
        "description" : "A filter for a string value based on the given operator."
      },
      "NameAlertingScope" : {
        "required" : [ "filterType", "nameFilter" ],
        "type" : "object",
        "description" : "A scope filter for a monitored entity name.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "nameFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventTextFilterOperatorDto"
            }
          }
        } ]
      },
      "ProcessGroupIdAlertingScope" : {
        "required" : [ "filterType", "processGroupId" ],
        "type" : "object",
        "description" : "A scope filter for a process group identifier.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "processGroupId" : {
              "type" : "string",
              "description" : "The process groups id to match on."
            }
          }
        } ]
      },
      "ProcessGroupNameAlertingScope" : {
        "required" : [ "filterType", "nameFilter" ],
        "type" : "object",
        "description" : "A scope filter for the related process group name.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "nameFilter" : {
              "$ref" : "#/components/schemas/MetricEventTextFilterMetricEventTextFilterOperatorDto"
            }
          }
        } ]
      },
      "TagFilterAlertingScope" : {
        "required" : [ "filterType", "tagFilter" ],
        "type" : "object",
        "description" : "A scope filter for tags on entities.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetricEventAlertingScope"
        }, {
          "type" : "object",
          "properties" : {
            "tagFilter" : {
              "$ref" : "#/components/schemas/TagFilter"
            }
          }
        } ]
      },
      "AnomalyDetectionPG" : {
        "type" : "object",
        "properties" : {
          "availabilityMonitoring" : {
            "$ref" : "#/components/schemas/AvailabilityMonitoringPG"
          }
        },
        "description" : "Configuration of anomaly detection for the process group.",
        "example" : {
          "availabilityMonitoring" : {
            "method" : "MINIMUM_THRESHOLD",
            "minimumThreshold" : 5
          }
        }
      },
      "AvailabilityMonitoringPG" : {
        "required" : [ "method" ],
        "type" : "object",
        "properties" : {
          "method" : {
            "type" : "string",
            "description" : "How to monitor the availability of the process group: \n\n* `PROCESS_IMPACT`: Alert if any process of the group becomes unavailable. \n* `MINIMUM_THRESHOLD`: Alert if the number of active processes in the group falls below the specified threshold. \n* `OFF`: Availability monitoring is disabled.",
            "enum" : [ "MINIMUM_THRESHOLD", "OFF", "PROCESS_IMPACT" ]
          },
          "minimumThreshold" : {
            "type" : "integer",
            "description" : "Alert if the number of active processes in the group is lower than this value.",
            "format" : "int32"
          }
        },
        "description" : "Configuration of the availability monitoring for the process group.",
        "example" : {
          "method" : "MINIMUM_THRESHOLD",
          "minimumThreshold" : 5
        }
      },
      "ServiceAnomalyDetectionConfig" : {
        "required" : [ "failureRateIncrease", "responseTimeDegradation" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "responseTimeDegradation" : {
            "$ref" : "#/components/schemas/ResponseTimeDegradationDetectionConfig"
          },
          "loadDrop" : {
            "$ref" : "#/components/schemas/LoadDropDetectionConfig"
          },
          "loadSpike" : {
            "$ref" : "#/components/schemas/LoadSpikeDetectionConfig"
          },
          "failureRateIncrease" : {
            "$ref" : "#/components/schemas/FailureRateIncreaseDetectionConfig"
          }
        },
        "description" : "Dynatrace automatically detects service-related performance anomalies such as response time degradations and failure rate increases. Use these settings to configure detection sensitivity, set alert thresholds, or disable alerting for certain services.",
        "example" : {
          "metadata" : {
            "configurationVersions" : [ 4, 2 ],
            "clusterVersion" : "Mock version"
          },
          "responseTimeDegradation" : {
            "detectionMode" : "DETECT_AUTOMATICALLY",
            "automaticDetection" : {
              "responseTimeDegradationMilliseconds" : 250,
              "responseTimeDegradationPercent" : 90,
              "slowestResponseTimeDegradationMilliseconds" : 500,
              "slowestResponseTimeDegradationPercent" : 200,
              "loadThreshold" : "ONE_REQUEST_PER_MINUTE"
            }
          },
          "loadDrop" : {
            "enabled" : true,
            "loadDropPercent" : 40,
            "minAbnormalStateDurationInMinutes" : 5
          },
          "loadSpike" : {
            "enabled" : false
          },
          "failureRateIncrease" : {
            "detectionMode" : "DETECT_USING_FIXED_THRESHOLDS",
            "thresholds" : {
              "threshold" : 10,
              "sensitivity" : "LOW"
            }
          }
        }
      },
      "DroppedPacketsDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/DroppedPacketsThresholds"
          }
        },
        "description" : "The configuration of the high number of dropped packets detection."
      },
      "DroppedPacketsThresholds" : {
        "required" : [ "droppedPacketsPerSecond" ],
        "type" : "object",
        "properties" : {
          "droppedPacketsPerSecond" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if receive/transmit dropped packets rate on NIC is higher than *X* packets per second in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for high number of dropped packets. If not set then the automatic mode is used."
      },
      "EsxiHighCpuSaturationConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/EsxiHighCpuThresholds"
          }
        },
        "description" : "The configuration of the CPU saturation on ESXi host detection."
      },
      "EsxiHighCpuThresholds" : {
        "required" : [ "cpuPeakPercentage", "cpuUsagePercentage", "vmCpuReadyPercentage" ],
        "type" : "object",
        "properties" : {
          "cpuUsagePercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "CPU usage is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          },
          "vmCpuReadyPercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "VM CPU ready is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          },
          "cpuPeakPercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "At least one peak higher than *X*% occurred in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for CPU saturation detection on ESXi. If not set then the automatic mode is used. \n\n **All** conditions must be fulfilled to trigger an alert."
      },
      "EsxiHighMemoryDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/EsxiHighMemoryThresholds"
          }
        },
        "description" : "The configuration of the memory saturation on ESXi host detection."
      },
      "EsxiHighMemoryThresholds" : {
        "required" : [ "compressionDecompressionRate" ],
        "type" : "object",
        "properties" : {
          "compressionDecompressionRate" : {
            "maximum" : 1000000,
            "minimum" : 0.01,
            "exclusiveMinimum" : false,
            "type" : "number",
            "description" : "Alert if ESXi host swap IN/OUT or compression/decompression rate is higher *X* kilobytes per second in 3 out of 5 samples."
          }
        },
        "description" : "Custom thresholds for memory saturation on ESXi host. If not set then the automatic mode is used."
      },
      "GuestCPULimitReachedConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/GuestCPULimitThresholds"
          }
        },
        "description" : "The configuration of the guest CPU limit reached configuration detection."
      },
      "GuestCPULimitThresholds" : {
        "required" : [ "hostCpuUsageMinPercentage", "vmCpuReadyMaxPercentage", "vmCpuUsageMaxPercentage" ],
        "type" : "object",
        "properties" : {
          "hostCpuUsageMinPercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Hypervisor CPU usage is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          },
          "vmCpuUsageMaxPercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "VM CPU usage (VM CPU Usage Mhz / VM CPU limit in Mhz) is higher than *X*% in 3 out of 5 samples.",
            "format" : "int32"
          },
          "vmCpuReadyMaxPercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "VM CPU ready is higher than *X*% occurred in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for guest CPU limit detection. If not set then the automatic mode is used. \n\n **All** conditions must be fulfilled to trigger an alert."
      },
      "LowDatastoreSpaceDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/LowDatastoreSpaceThresholds"
          }
        },
        "description" : "The configuraiton of the low datastore free space detection."
      },
      "LowDatastoreSpaceThresholds" : {
        "required" : [ "freeSpacePercentage" ],
        "type" : "object",
        "properties" : {
          "freeSpacePercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Alert if datastore free space is lower than *X*%.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for low datastore free space. If not set then the automatic mode is used."
      },
      "OverloadedStorageDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/OverloadedStorageThresholds"
          }
        },
        "description" : "The cofiguration of the overloaded storage on physical storage device detection."
      },
      "OverloadedStorageThresholds" : {
        "required" : [ "commandAbortsNumber" ],
        "type" : "object",
        "properties" : {
          "commandAbortsNumber" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Alert if number of command aborts is higher than *X* in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for overloaded storage on physical storage device. If not set then the automatic mode is used."
      },
      "SlowPhysicalStorageDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/SlowPhysicalStorageThresholds"
          }
        },
        "description" : "The configuraiton of the physical storage device running slow detection."
      },
      "SlowPhysicalStorageThresholds" : {
        "required" : [ "avgReadWriteLatency", "peakReadWriteLatency" ],
        "type" : "object",
        "properties" : {
          "avgReadWriteLatency" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Read/write latency is higher than *X* milliseconds in 4 out of 5 samples.",
            "format" : "int32"
          },
          "peakReadWriteLatency" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Peak value for read/write latency is higher than *X* milliseconds in 4 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for slow running physical storage device. If not set then the automatic mode is used. \n\n Fulfillment of **any** condition triggers an alert."
      },
      "UndersizedStorageDetectionConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The detection is enabled (`true`) or disabled (`false`)."
          },
          "customThresholds" : {
            "$ref" : "#/components/schemas/UndersizedStorageThresholds"
          }
        },
        "description" : "Undersized storage device detection cofing"
      },
      "UndersizedStorageThresholds" : {
        "required" : [ "averageQueueCommandLatency", "peakQueueCommandLatency" ],
        "type" : "object",
        "properties" : {
          "averageQueueCommandLatency" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Average queue command latency is higher than *X* milliseconds in 3 out of 5 samples.",
            "format" : "int32"
          },
          "peakQueueCommandLatency" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Peak queue command latency is higher than *X* milliseconds in 3 out of 5 samples.",
            "format" : "int32"
          }
        },
        "description" : "Custom thresholds for undersized storage device. If not set then the automatic mode is used. \n\n Fulfillment of **any** condition triggers an alert."
      },
      "VMwareAnomalyDetectionConfig" : {
        "required" : [ "droppedPacketsDetection", "esxiHighCpuSaturation", "esxiHighMemoryDetection", "lowDatastoreSpaceDetection", "overloadedStorageDetection", "slowPhysicalStorageDetection", "undersizedStorageDetection" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "esxiHighCpuSaturation" : {
            "$ref" : "#/components/schemas/EsxiHighCpuSaturationConfig"
          },
          "guestCpuLimitReached" : {
            "$ref" : "#/components/schemas/GuestCPULimitReachedConfig"
          },
          "esxiHighMemoryDetection" : {
            "$ref" : "#/components/schemas/EsxiHighMemoryDetectionConfig"
          },
          "overloadedStorageDetection" : {
            "$ref" : "#/components/schemas/OverloadedStorageDetectionConfig"
          },
          "undersizedStorageDetection" : {
            "$ref" : "#/components/schemas/UndersizedStorageDetectionConfig"
          },
          "slowPhysicalStorageDetection" : {
            "$ref" : "#/components/schemas/SlowPhysicalStorageDetectionConfig"
          },
          "droppedPacketsDetection" : {
            "$ref" : "#/components/schemas/DroppedPacketsDetectionConfig"
          },
          "lowDatastoreSpaceDetection" : {
            "$ref" : "#/components/schemas/LowDatastoreSpaceDetectionConfig"
          }
        },
        "description" : "The configuration of the anomaly detection for VMware.",
        "example" : {
          "metadata" : {
            "configurationVersions" : [ 4, 2 ],
            "clusterVersion" : "Mock version"
          },
          "esxiHighCpuSaturation" : {
            "enabled" : true,
            "customThresholds" : {
              "cpuUsagePercentage" : 80,
              "vmCpuReadyPercentage" : 10,
              "cpuPeakPercentage" : 90
            }
          },
          "esxiHighMemoryDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "compressionDecompressionRate" : 120
            }
          },
          "overloadedStorageDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "commandAbortsNumber" : 1
            }
          },
          "undersizedStorageDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "averageQueueCommandLatency" : 15,
              "peakQueueCommandLatency" : 160
            }
          },
          "slowPhysicalStorageDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "avgReadWriteLatency" : 150,
              "peakReadWriteLatency" : 400
            }
          },
          "droppedPacketsDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "droppedPacketsPerSecond" : 4
            }
          },
          "lowDatastoreSpaceDetection" : {
            "enabled" : true,
            "customThresholds" : {
              "freeSpacePercentage" : 5
            }
          }
        }
      },
      "MobileCustomApdex" : {
        "required" : [ "frustratedOnError", "frustratingThreshold", "toleratedThreshold" ],
        "type" : "object",
        "properties" : {
          "toleratedThreshold" : {
            "type" : "integer",
            "description" : "Apdex **tolerable** threshold, in milliseconds: a duration greater than or equal to this value is considered tolerable.",
            "format" : "int32"
          },
          "frustratingThreshold" : {
            "type" : "integer",
            "description" : "Apdex **frustrated** threshold, in milliseconds: a duration greater than or equal to this value is considered frustrated.",
            "format" : "int32"
          },
          "frustratedOnError" : {
            "type" : "boolean",
            "description" : "Apdex error condition: if `true` the user session is considered frustrated when an error is reported."
          }
        },
        "description" : "Apdex configuration of a mobile or custom application. \n\nA duration less than the **tolerable** threshold is considered satisfied."
      },
      "NewMobileCustomAppConfig" : {
        "required" : [ "applicationType", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the application."
          },
          "applicationType" : {
            "type" : "string",
            "description" : "The type of the application.",
            "enum" : [ "CUSTOM_APPLICATION", "MOBILE_APPLICATION" ]
          },
          "applicationId" : {
            "type" : "string",
            "description" : "The UUID of the application.\n\nIt is used only by OneAgent to send data to Dynatrace."
          },
          "iconType" : {
            "type" : "string",
            "description" : "Custom application icon.\n\nMobile apps always use the mobile device icon, so this icon can only be set for custom apps.",
            "enum" : [ "AMAZON_ECHO", "DESKTOP", "EMBEDDED", "IOT", "MICROSOFT_HOLOLENS", "UFO", "USERS" ]
          },
          "costControlUserSessionPercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The percentage of user sessions to be analyzed.",
            "format" : "int32"
          },
          "apdexSettings" : {
            "$ref" : "#/components/schemas/MobileCustomApdex"
          },
          "optInModeEnabled" : {
            "type" : "boolean",
            "description" : "The opt-in mode is enabled (`true`) or disabled (`false`).\n\nThis value is only applicable to mobile and not to custom apps."
          },
          "sessionReplayEnabled" : {
            "type" : "boolean",
            "description" : "The session replay is enabled (`true`) or disabled (`false`).\nThis value is only applicable to mobile and not to custom apps."
          },
          "sessionReplayOnCrashEnabled" : {
            "type" : "boolean",
            "description" : "**Deprecated**. Please use `sessionReplayEnabled` to enable or disable session replay for mobile apps."
          },
          "beaconEndpointType" : {
            "type" : "string",
            "description" : "The type of the beacon endpoint.",
            "enum" : [ "CLUSTER_ACTIVE_GATE", "ENVIRONMENT_ACTIVE_GATE", "INSTRUMENTED_WEB_SERVER" ]
          },
          "beaconEndpointUrl" : {
            "type" : "string",
            "description" : "The URL of the beacon endpoint.\n\nOnly applicable when the **beaconEndpointType** is set to `ENVIRONMENT_ACTIVE_GATE` or `INSTRUMENTED_WEB_SERVER`."
          }
        },
        "description" : "Configuration of a mobile or custom application to be created."
      },
      "MobileCustomAppConfig" : {
        "required" : [ "apdexSettings", "beaconEndpointType", "costControlUserSessionPercentage", "name" ],
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the application.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the application."
          },
          "applicationType" : {
            "type" : "string",
            "description" : "The type of the application.",
            "readOnly" : true,
            "enum" : [ "CUSTOM_APPLICATION", "MOBILE_APPLICATION" ]
          },
          "applicationId" : {
            "type" : "string",
            "description" : "The UUID of the application.\n\nIt is used only by OneAgent to send data to Dynatrace.",
            "readOnly" : true
          },
          "iconType" : {
            "type" : "string",
            "description" : "Custom application icon.\n\nMobile apps always use the mobile device icon, so this icon can only be set for custom apps.",
            "enum" : [ "AMAZON_ECHO", "DESKTOP", "EMBEDDED", "IOT", "MICROSOFT_HOLOLENS", "UFO", "USERS" ]
          },
          "costControlUserSessionPercentage" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The percentage of user sessions to be analyzed.",
            "format" : "int32"
          },
          "apdexSettings" : {
            "$ref" : "#/components/schemas/MobileCustomApdex"
          },
          "optInModeEnabled" : {
            "type" : "boolean",
            "description" : "The opt-in mode is enabled (`true`) or disabled (`false`).\n\nThis value is only applicable to mobile and not to custom apps."
          },
          "sessionReplayEnabled" : {
            "type" : "boolean",
            "description" : "The session replay is enabled (`true`) or disabled (`false`).\nThis value is only applicable to mobile and not to custom apps."
          },
          "sessionReplayOnCrashEnabled" : {
            "type" : "boolean",
            "description" : "**Deprecated**. Please use `sessionReplayEnabled` to enable or disable session replay for mobile apps."
          },
          "beaconEndpointType" : {
            "type" : "string",
            "description" : "The type of the beacon endpoint.",
            "enum" : [ "CLUSTER_ACTIVE_GATE", "ENVIRONMENT_ACTIVE_GATE", "INSTRUMENTED_WEB_SERVER" ]
          },
          "beaconEndpointUrl" : {
            "type" : "string",
            "description" : "The URL of the beacon endpoint.\n\nOnly applicable when the **beaconEndpointType** is set to `ENVIRONMENT_ACTIVE_GATE` or `INSTRUMENTED_WEB_SERVER`."
          }
        },
        "description" : "Configuration of an existing mobile or custom application."
      },
      "MobileSessionUserActionPropertyShort" : {
        "required" : [ "key" ],
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The key of the session or user action property."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the session or user action property."
          }
        },
        "description" : "A short representation of mobile session or user action property."
      },
      "MobileSessionUserActionProperty" : {
        "required" : [ "key", "origin", "type" ],
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The unique key of the mobile session or user action property."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the property."
          },
          "type" : {
            "type" : "string",
            "description" : "The data type of the property.",
            "enum" : [ "DOUBLE", "LONG", "STRING" ]
          },
          "origin" : {
            "type" : "string",
            "description" : "The origin of the property",
            "enum" : [ "API", "SERVER_SIDE_REQUEST_ATTRIBUTE" ]
          },
          "aggregation" : {
            "type" : "string",
            "description" : "The aggregation type of the property. \n\n  It defines how multiple values of the property are aggregated.",
            "enum" : [ "AVERAGE", "FIRST", "LAST", "MAX", "MIN", "SUM" ]
          },
          "storeAsUserActionProperty" : {
            "type" : "boolean",
            "description" : "If `true`, the property is stored as a user action property"
          },
          "storeAsSessionProperty" : {
            "type" : "boolean",
            "description" : "If `true`, the property is stored as a session property"
          },
          "cleanupRule" : {
            "type" : "string",
            "description" : "The cleanup rule of the property. \n\nDefines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there."
          },
          "serverSideRequestAttribute" : {
            "type" : "string",
            "description" : "The ID of the request attribute. \n\nOnly applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the reported value. \n\nOnly applicable when the **origin** is set to `API`."
          }
        },
        "description" : "Configuration of the mobile session or user action property."
      },
      "MobileSessionUserActionPropertyList" : {
        "type" : "object",
        "properties" : {
          "sessionProperties" : {
            "type" : "array",
            "description" : "A list of short representations of mobile session properties.",
            "items" : {
              "$ref" : "#/components/schemas/MobileSessionUserActionPropertyShort"
            }
          },
          "userActionProperties" : {
            "type" : "array",
            "description" : "A list of short representations of mobile user action properties.",
            "items" : {
              "$ref" : "#/components/schemas/MobileSessionUserActionPropertyShort"
            }
          }
        },
        "description" : "Contains lists of short representations of mobile session properties and mobile user action properties."
      },
      "MobileSessionUserActionPropertyUpd" : {
        "required" : [ "origin", "type" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the property."
          },
          "type" : {
            "type" : "string",
            "description" : "The data type of the property.",
            "enum" : [ "DOUBLE", "LONG", "STRING" ]
          },
          "origin" : {
            "type" : "string",
            "description" : "The origin of the property",
            "enum" : [ "API", "SERVER_SIDE_REQUEST_ATTRIBUTE" ]
          },
          "aggregation" : {
            "type" : "string",
            "description" : "The aggregation type of the property. \n\n  It defines how multiple values of the property are aggregated.",
            "enum" : [ "AVERAGE", "FIRST", "LAST", "MAX", "MIN", "SUM" ]
          },
          "storeAsUserActionProperty" : {
            "type" : "boolean",
            "description" : "If `true`, the property is stored as a user action property"
          },
          "storeAsSessionProperty" : {
            "type" : "boolean",
            "description" : "If `true`, the property is stored as a session property"
          },
          "cleanupRule" : {
            "type" : "string",
            "description" : "The cleanup rule of the property. \n\nDefines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there."
          },
          "serverSideRequestAttribute" : {
            "type" : "string",
            "description" : "The ID of the request attribute. \n\nOnly applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the reported value. \n\nOnly applicable when the **origin** is set to `API`."
          }
        },
        "description" : "An update of a mobile session or user action property."
      },
      "KeyUserActionMobile" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the key user action."
          }
        },
        "description" : "A key user action."
      },
      "KeyUserActionMobileList" : {
        "type" : "object",
        "properties" : {
          "keyUserActions" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of key actions in an application.",
            "items" : {
              "$ref" : "#/components/schemas/KeyUserActionMobile"
            }
          }
        },
        "description" : "A list of key actions in an application."
      },
      "KeyUserAction" : {
        "required" : [ "actionType", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the action."
          },
          "actionType" : {
            "type" : "string",
            "description" : "The type of the action.",
            "enum" : [ "Custom", "Load", "Xhr" ]
          },
          "domain" : {
            "type" : "string",
            "description" : "The domain where the action is performed."
          },
          "meIdentifier" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the action.",
            "readOnly" : true
          }
        },
        "description" : "Configuration of the key user action.",
        "example" : {
          "name" : "Loading of page /example",
          "actionType" : "Load",
          "domain" : "test.com"
        }
      },
      "AdditionalEventHandlers" : {
        "required" : [ "blurEventHandler", "changeEventHandler", "clickEventHandler", "maxDomNodesToInstrument", "mouseupEventHandler", "toStringMethod", "userMouseupEventForClicks" ],
        "type" : "object",
        "properties" : {
          "userMouseupEventForClicks" : {
            "type" : "boolean",
            "description" : "Use mouseup event for clicks enabled/disabled."
          },
          "clickEventHandler" : {
            "type" : "boolean",
            "description" : "Click event handler enabled/disabled."
          },
          "mouseupEventHandler" : {
            "type" : "boolean",
            "description" : "Mouseup event handler enabled/disabled."
          },
          "blurEventHandler" : {
            "type" : "boolean",
            "description" : "Blur event handler enabled/disabled."
          },
          "changeEventHandler" : {
            "type" : "boolean",
            "description" : "Change event handler enabled/disabled."
          },
          "toStringMethod" : {
            "type" : "boolean",
            "description" : "toString method enabled/disabled."
          },
          "maxDomNodesToInstrument" : {
            "maximum" : 100000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.",
            "format" : "int32"
          }
        },
        "description" : "Additional event handlers and wrappers."
      },
      "AdvancedJavaScriptTagSettings" : {
        "required" : [ "additionalEventHandlers", "eventWrapperSettings", "globalEventCaptureSettings", "instrumentUnsupportedAjaxFrameworks", "maxActionNameLength", "maxErrorsToCapture", "specialCharactersToEscape" ],
        "type" : "object",
        "properties" : {
          "syncBeaconFirefox" : {
            "type" : "boolean",
            "description" : "Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled."
          },
          "syncBeaconInternetExplorer" : {
            "type" : "boolean",
            "description" : "Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled."
          },
          "instrumentUnsupportedAjaxFrameworks" : {
            "type" : "boolean",
            "description" : "Instrumentation of unsupported Ajax frameworks enabled/disabled."
          },
          "specialCharactersToEscape" : {
            "maxLength" : 30,
            "minLength" : 0,
            "pattern" : "[^\"<>]*",
            "type" : "string",
            "description" : "Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format."
          },
          "maxActionNameLength" : {
            "maximum" : 10000,
            "minimum" : 5,
            "type" : "integer",
            "description" : "Maximum character length for action names. Valid values range from 5 to 10000.",
            "format" : "int32"
          },
          "maxErrorsToCapture" : {
            "maximum" : 50,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Maximum number of errors to be captured per page. Valid values range from 0 to 50.",
            "format" : "int32"
          },
          "additionalEventHandlers" : {
            "$ref" : "#/components/schemas/AdditionalEventHandlers"
          },
          "eventWrapperSettings" : {
            "$ref" : "#/components/schemas/EventWrapperSettings"
          },
          "globalEventCaptureSettings" : {
            "$ref" : "#/components/schemas/GlobalEventCaptureSettings"
          },
          "userActionNameAttribute" : {
            "type" : "string",
            "description" : "User action name attribute."
          },
          "proxyWrapperEnabled" : {
            "type" : "boolean",
            "description" : "Proxy wrapper enabled/disabled."
          }
        },
        "description" : "Advanced JavaScript tag settings."
      },
      "Apdex" : {
        "type" : "object",
        "properties" : {
          "toleratedThreshold" : {
            "maximum" : 60000,
            "minimum" : 0,
            "type" : "number",
            "description" : "Maximal value of apdex, which is considered as satisfied user experience."
          },
          "frustratingThreshold" : {
            "maximum" : 240000,
            "minimum" : 0,
            "type" : "number",
            "description" : "Maximal value of apdex, which is considered as tolerable user experience."
          },
          "toleratedFallbackThreshold" : {
            "maximum" : 60000,
            "minimum" : 0,
            "type" : "number",
            "description" : "Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available."
          },
          "frustratingFallbackThreshold" : {
            "maximum" : 240000,
            "minimum" : 0,
            "type" : "number",
            "description" : "Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available."
          }
        },
        "description" : "Defines the Apdex settings of an application."
      },
      "ContentCapture" : {
        "required" : [ "javaScriptErrors", "resourceTimingSettings", "timeoutSettings", "visuallyCompleteAndSpeedIndex" ],
        "type" : "object",
        "properties" : {
          "resourceTimingSettings" : {
            "$ref" : "#/components/schemas/ResourceTimingSettings"
          },
          "javaScriptErrors" : {
            "type" : "boolean",
            "description" : "JavaScript errors monitoring enabled/disabled."
          },
          "timeoutSettings" : {
            "$ref" : "#/components/schemas/TimeoutSettings"
          },
          "visuallyCompleteAndSpeedIndex" : {
            "type" : "boolean",
            "description" : "Visually complete and Speed index support enabled/disabled."
          },
          "visuallyComplete2Settings" : {
            "$ref" : "#/components/schemas/VisuallyComplete2Settings"
          }
        },
        "description" : "Settings for content capture."
      },
      "ConversionGoal" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the conversion goal."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of conversion goal. \n\n Omit it while creating a new conversion goal."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the conversion goal.",
            "enum" : [ "Destination", "UserAction", "VisitDuration", "VisitNumActions" ]
          },
          "destinationDetails" : {
            "$ref" : "#/components/schemas/DestinationDetails"
          },
          "userActionDetails" : {
            "$ref" : "#/components/schemas/UserActionDetails"
          },
          "visitDurationDetails" : {
            "$ref" : "#/components/schemas/VisitDurationDetails"
          },
          "visitNumActionDetails" : {
            "$ref" : "#/components/schemas/VisitNumActionDetails"
          }
        },
        "description" : "A conversion goal of the application."
      },
      "DestinationDetails" : {
        "required" : [ "urlOrPath" ],
        "type" : "object",
        "properties" : {
          "urlOrPath" : {
            "type" : "string",
            "description" : "The path to be reached to hit the conversion goal."
          },
          "matchType" : {
            "type" : "string",
            "description" : "The operator of the match.",
            "enum" : [ "Begins", "Contains", "Ends" ]
          },
          "caseSensitive" : {
            "type" : "boolean",
            "description" : "The match is case-sensitive (`true`) or (`false`)."
          }
        },
        "description" : "Configuration of a destination-based conversion goal."
      },
      "EventWrapperSettings" : {
        "required" : [ "blur", "change", "click", "mouseUp", "touchEnd", "touchStart" ],
        "type" : "object",
        "properties" : {
          "click" : {
            "type" : "boolean",
            "description" : "Click enabled/disabled."
          },
          "mouseUp" : {
            "type" : "boolean",
            "description" : "MouseUp enabled/disabled."
          },
          "change" : {
            "type" : "boolean",
            "description" : "Change enabled/disabled."
          },
          "blur" : {
            "type" : "boolean",
            "description" : "Blur enabled/disabled."
          },
          "touchStart" : {
            "type" : "boolean",
            "description" : "TouchStart enabled/disabled."
          },
          "touchEnd" : {
            "type" : "boolean",
            "description" : "TouchEnd enabled/disabled."
          }
        },
        "description" : "In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page."
      },
      "GlobalEventCaptureSettings" : {
        "required" : [ "additionalEventCapturedAsUserInput", "click", "doubleClick", "keyDown", "keyUp", "mouseDown", "mouseUp", "scroll" ],
        "type" : "object",
        "properties" : {
          "mouseUp" : {
            "type" : "boolean",
            "description" : "MouseUp enabled/disabled."
          },
          "mouseDown" : {
            "type" : "boolean",
            "description" : "MouseDown enabled/disabled."
          },
          "click" : {
            "type" : "boolean",
            "description" : "Click enabled/disabled."
          },
          "doubleClick" : {
            "type" : "boolean",
            "description" : "DoubleClick enabled/disabled."
          },
          "keyUp" : {
            "type" : "boolean",
            "description" : "KeyUp enabled/disabled."
          },
          "keyDown" : {
            "type" : "boolean",
            "description" : "KeyDown enabled/disabled."
          },
          "scroll" : {
            "type" : "boolean",
            "description" : "Scroll enabled/disabled."
          },
          "additionalEventCapturedAsUserInput" : {
            "maxLength" : 100,
            "minLength" : 0,
            "pattern" : "[a-z,]*",
            "type" : "string",
            "description" : "Additional events to be captured globally as user input. \n\nFor example, DragStart or DragEnd."
          }
        },
        "description" : "Global event capture settings."
      },
      "IpAddressRange" : {
        "required" : [ "address" ],
        "type" : "object",
        "properties" : {
          "subnetMask" : {
            "maximum" : 128,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The subnet mask of the IP address range.",
            "format" : "int32"
          },
          "address" : {
            "type" : "string",
            "description" : "The IP address to be mapped. \n\nFor an IP address range, this is the **from** address."
          },
          "addressTo" : {
            "type" : "string",
            "description" : "The **to** address of the IP address range."
          }
        },
        "description" : "The IP address or the IP address range to be mapped to the location."
      },
      "JavaScriptFrameworkSupport" : {
        "required" : [ "activeXObject", "angular", "dojo", "extJS", "icefaces", "jQuery", "mooTools", "prototype" ],
        "type" : "object",
        "properties" : {
          "angular" : {
            "type" : "boolean",
            "description" : "AngularJS and Angular support enabled/disabled."
          },
          "dojo" : {
            "type" : "boolean",
            "description" : "Dojo support enabled/disabled."
          },
          "extJS" : {
            "type" : "boolean",
            "description" : "ExtJS, Sencha Touch support enabled/disabled."
          },
          "icefaces" : {
            "type" : "boolean",
            "description" : "ICEfaces support enabled/disabled."
          },
          "jQuery" : {
            "type" : "boolean",
            "description" : "jQuery, Backbone.js support enabled/disabled."
          },
          "mooTools" : {
            "type" : "boolean",
            "description" : "MooTools support enabled/disabled."
          },
          "prototype" : {
            "type" : "boolean",
            "description" : "Prototype support enabled/disabled."
          },
          "activeXObject" : {
            "type" : "boolean",
            "description" : "ActiveXObject detection support enabled/disabled."
          }
        },
        "description" : "Support of various JavaScript frameworks."
      },
      "JavaScriptInjectionRules" : {
        "required" : [ "enabled", "rule", "urlOperator" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The enable or disable rule of the java script injection."
          },
          "urlOperator" : {
            "type" : "string",
            "description" : "The url operator of the java script injection.",
            "enum" : [ "ALL_PAGES", "CONTAINS", "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
          },
          "urlPattern" : {
            "type" : "string",
            "description" : "The url pattern of the java script injection."
          },
          "rule" : {
            "type" : "string",
            "description" : "The url rule of the java script injection.",
            "enum" : [ "AFTER_SPECIFIC_HTML", "AUTOMATIC_INJECTION", "BEFORE_SPECIFIC_HTML", "DO_NOT_INJECT" ]
          },
          "htmlPattern" : {
            "type" : "string",
            "description" : "The html pattern of the java script injection."
          },
          "target" : {
            "type" : "string",
            "description" : "The target against which the rule of the java script injection should be matched.",
            "enum" : [ "PAGE_QUERY", "URL" ]
          }
        },
        "description" : "Rules for javascript injection"
      },
      "MetaDataCapturing" : {
        "required" : [ "capturingName", "name", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the meta data to capture.",
            "enum" : [ "COOKIE", "CSS_SELECTOR", "JAVA_SCRIPT_FUNCTION", "JAVA_SCRIPT_VARIABLE", "META_TAG", "QUERY_STRING" ]
          },
          "capturingName" : {
            "type" : "string",
            "description" : "The name of the meta data to capture."
          },
          "name" : {
            "type" : "string",
            "description" : "Name for displaying the captured values in Dynatrace."
          },
          "uniqueId" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "The unique id of the meta data to capture.",
            "format" : "int32"
          },
          "publicMetadata" : {
            "type" : "boolean",
            "description" : "True if this metadata should be captured regardless of the privacy settings"
          },
          "useLastValue" : {
            "type" : "boolean",
            "description" : "True if the last captured value should be used for this metadata. By default the first value will be used."
          }
        },
        "description" : "Configuration to capture meta data with the JavaScript agent."
      },
      "MonitoringSettings" : {
        "required" : [ "advancedJavaScriptTagSettings", "cacheControlHeaderOptimizations", "contentCapture", "cookiePlacementDomain", "customConfigurationProperties", "excludeXhrRegex", "fetchRequests", "injectionMode", "javaScriptFrameworkSupport", "secureCookieAttribute", "serverRequestPathId", "xmlHttpRequest" ],
        "type" : "object",
        "properties" : {
          "fetchRequests" : {
            "type" : "boolean",
            "description" : "`fetch()` request capture enabled/disabled."
          },
          "xmlHttpRequest" : {
            "type" : "boolean",
            "description" : "`XmlHttpRequest` support enabled/disabled."
          },
          "javaScriptFrameworkSupport" : {
            "$ref" : "#/components/schemas/JavaScriptFrameworkSupport"
          },
          "contentCapture" : {
            "$ref" : "#/components/schemas/ContentCapture"
          },
          "excludeXhrRegex" : {
            "type" : "string",
            "description" : "You can exclude some actions from becoming XHR actions.\n\nPut a regular expression, matching all the required URLs, here.\n\nIf noting specified the feature is disabled."
          },
          "correlationHeaderInclusionRegex" : {
            "type" : "string",
            "description" : "To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (x-dtc) to each such request to the respective endpoints in AWS.\n\nImportant: These endpoints must accept the x-dtc header, or the requests will fail.\n"
          },
          "injectionMode" : {
            "type" : "string",
            "description" : "JavaScript injection mode.",
            "enum" : [ "CODE_SNIPPET", "CODE_SNIPPET_ASYNC", "INLINE_CODE", "JAVASCRIPT_TAG" ]
          },
          "addCrossOriginAnonymousAttribute" : {
            "type" : "boolean",
            "description" : "Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings."
          },
          "scriptTagCacheDurationInHours" : {
            "type" : "integer",
            "description" : "Time duration for the cache settings.",
            "format" : "int32"
          },
          "libraryFileLocation" : {
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string",
            "description" : "The location of your application’s custom JavaScript library file. \n\n If nothing specified the root directory of your web server is used. \n\n **Required** for auto-injected applications, not supported by agentless applications."
          },
          "monitoringDataPath" : {
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string",
            "description" : "The location to send monitoring data from the JavaScript tag.\n\n Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS. \n\n **Required** for auto-injected applications, optional for agentless applications."
          },
          "customConfigurationProperties" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string",
            "description" : "Additional JavaScript tag properties that are specific to your application. To do this, type key=value pairs separated using a (|) symbol."
          },
          "serverRequestPathId" : {
            "maxLength" : 150,
            "minLength" : 0,
            "pattern" : "[a-zA-Z-~\\\\.]*",
            "type" : "string",
            "description" : "Path to identify the server’s request ID."
          },
          "secureCookieAttribute" : {
            "type" : "boolean",
            "description" : "Secure attribute usage for Dynatrace cookies enabled/disabled."
          },
          "cookiePlacementDomain" : {
            "maxLength" : 150,
            "minLength" : 0,
            "type" : "string",
            "description" : "Domain for cookie placement."
          },
          "cacheControlHeaderOptimizations" : {
            "type" : "boolean",
            "description" : "Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled."
          },
          "advancedJavaScriptTagSettings" : {
            "$ref" : "#/components/schemas/AdvancedJavaScriptTagSettings"
          },
          "browserRestrictionSettings" : {
            "$ref" : "#/components/schemas/WebApplicationConfigBrowserRestrictionSettings"
          },
          "ipAddressRestrictionSettings" : {
            "$ref" : "#/components/schemas/WebApplicationConfigIpAddressRestrictionSettings"
          },
          "javaScriptInjectionRules" : {
            "type" : "array",
            "description" : "Java script injection rules.",
            "items" : {
              "$ref" : "#/components/schemas/JavaScriptInjectionRules"
            }
          },
          "angularPackageName" : {
            "type" : "string",
            "description" : "The name of the angular package."
          }
        },
        "description" : "Real user monitoring settings."
      },
      "ResourceTimingSettings" : {
        "required" : [ "nonW3cResourceTimings", "nonW3cResourceTimingsInstrumentationDelay", "w3cResourceTimings" ],
        "type" : "object",
        "properties" : {
          "w3cResourceTimings" : {
            "type" : "boolean",
            "description" : "W3C resource timings for third party/CDN enabled/disabled."
          },
          "nonW3cResourceTimings" : {
            "type" : "boolean",
            "description" : "Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled."
          },
          "nonW3cResourceTimingsInstrumentationDelay" : {
            "maximum" : 9999,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings. \n\nValid values range from 0 to 9999.\n\nOnly effective if **nonW3cResourceTimings** is enabled.",
            "format" : "int32"
          },
          "resourceTimingCaptureType" : {
            "type" : "string",
            "description" : "Defines how detailed resource timings are captured.\n\nOnly effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled.",
            "enum" : [ "CAPTURE_ALL_SUMMARIES", "CAPTURE_FULL_DETAILS", "CAPTURE_LIMITED_SUMMARIES" ]
          },
          "resourceTimingsDomainLimit" : {
            "type" : "integer",
            "description" : "Limits the number of domains for which W3C resource timings are captured.\n\nOnly effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`.",
            "format" : "int32"
          }
        },
        "description" : "Settings for resource timings capture."
      },
      "SessionReplaySetting" : {
        "required" : [ "costControlPercentage", "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "SessionReplay Enabled."
          },
          "costControlPercentage" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Session replay sampling rating in percentage.",
            "format" : "int32"
          },
          "enableCssResourceCapturing" : {
            "type" : "boolean",
            "description" : "Capture (`true`) or don't capture (`false`) CSS resources from the session."
          },
          "cssResourceCapturingExclusionRules" : {
            "type" : "array",
            "description" : "A list of URLs to be excluded from CSS resource capturing.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Session replay settings"
      },
      "TimeoutSettings" : {
        "required" : [ "temporaryActionLimit", "temporaryActionTotalTimeout", "timedActionSupport" ],
        "type" : "object",
        "properties" : {
          "timedActionSupport" : {
            "type" : "boolean",
            "description" : "Timed action support enabled/disabled. \n\nEnable to detect actions that trigger sending of XHRs via *setTimout* methods."
          },
          "temporaryActionLimit" : {
            "type" : "integer",
            "description" : "Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3.",
            "format" : "int32"
          },
          "temporaryActionTotalTimeout" : {
            "type" : "integer",
            "description" : "The total timeout of all cascaded timeouts that should still be able to create a temporary action",
            "format" : "int32"
          }
        },
        "description" : "Settings for timed action capture."
      },
      "UserActionAndSessionProperties" : {
        "required" : [ "key", "origin", "type", "uniqueId" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the property."
          },
          "type" : {
            "type" : "string",
            "description" : "The data type of the property.",
            "enum" : [ "DATE", "DOUBLE", "LONG", "LONG_STRING", "STRING" ]
          },
          "origin" : {
            "type" : "string",
            "description" : "The origin of the property",
            "enum" : [ "JAVASCRIPT_API", "META_DATA", "SERVER_SIDE_REQUEST_ATTRIBUTE" ]
          },
          "aggregation" : {
            "type" : "string",
            "description" : "The aggregation type of the property. \n\n  It defines how multiple values of the property are aggregated.",
            "enum" : [ "AVERAGE", "FIRST", "LAST", "MAXIMUM", "MINIMUM", "SUM" ]
          },
          "storeAsUserActionProperty" : {
            "type" : "boolean",
            "description" : "If `true`, the property is stored as a user action property"
          },
          "storeAsSessionProperty" : {
            "type" : "boolean",
            "description" : "If `true`, the property is stored as a session property"
          },
          "cleanupRule" : {
            "type" : "string",
            "description" : "The cleanup rule of the property. \n\nDefines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there."
          },
          "serverSideRequestAttribute" : {
            "type" : "string",
            "description" : "The ID of the request attribute. \n\nOnly applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`."
          },
          "uniqueId" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Unique id among all userTags and properties of this application",
            "format" : "int32"
          },
          "key" : {
            "type" : "string",
            "description" : "Key of the property"
          },
          "metadataId" : {
            "type" : "integer",
            "description" : "If the origin is META_DATA, metaData id of the property",
            "format" : "int32"
          },
          "ignoreCase" : {
            "type" : "boolean",
            "description" : "If true, the value of this property will always be stored in lower case. Defaults to false."
          },
          "longStringLength" : {
            "maximum" : 1000,
            "minimum" : 200,
            "type" : "integer",
            "description" : "If the type is LONG_STRING, the max length for this property. Must be a multiple of 100. Defaults to 200.",
            "format" : "int32"
          }
        },
        "description" : "Defines userAction and session custom defined properties settings of an application."
      },
      "UserActionDetails" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The value to be matched to hit the conversion goal."
          },
          "caseSensitive" : {
            "type" : "boolean",
            "description" : "The match is case-sensitive (`true`) or (`false`)."
          },
          "matchType" : {
            "type" : "string",
            "description" : "The operator of the match.",
            "enum" : [ "Begins", "Contains", "Ends" ]
          },
          "matchEntity" : {
            "type" : "string",
            "description" : "The type of the entity to which the rule applies.",
            "enum" : [ "ActionName", "CssSelector", "JavaScriptVariable", "MetaTag", "PagePath", "PageTitle", "PageUrl", "UrlAnchor", "XhrUrl" ]
          },
          "actionType" : {
            "type" : "string",
            "description" : "Type of the action to which the rule applies.",
            "enum" : [ "Custom", "Load", "Xhr" ]
          }
        },
        "description" : "Configuration of a user action-based conversion goal."
      },
      "UserActionNamingPlaceholder" : {
        "required" : [ "input", "name", "processingPart", "useGuessedElementIdentifier" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string",
            "description" : "Placeholder name."
          },
          "input" : {
            "type" : "string",
            "description" : "Input.",
            "enum" : [ "ELEMENT_IDENTIFIER", "INPUT_TYPE", "METADATA", "PAGE_TITLE", "PAGE_URL", "SOURCE_URL", "TOP_XHR_URL", "XHR_URL" ]
          },
          "processingPart" : {
            "type" : "string",
            "description" : "Part.",
            "enum" : [ "ALL", "ANCHOR", "PATH" ]
          },
          "processingSteps" : {
            "type" : "array",
            "description" : "Processing actions.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionNamingPlaceholderProcessingStep"
            }
          },
          "metadataId" : {
            "type" : "integer",
            "description" : "Id of the metadata.",
            "format" : "int32"
          },
          "useGuessedElementIdentifier" : {
            "type" : "boolean",
            "description" : "Use the element identifier that was selected by Dynatrace."
          }
        },
        "description" : "The placeholder settings."
      },
      "UserActionNamingPlaceholderProcessingStep" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "An action to be taken by the processing: \n\n* `SUBSTRING`: Extracts the string between **patternBefore** and **patternAfter**. \n* `REPLACEMENT`: Replaces the string between **patternBefore** and **patternAfter** with the specified **replacement**.\n* `REPLACE_WITH_PATTERN`: Replaces the **patternToReplace** with the specified **replacement**. \n* `EXTRACT_BY_REGULAR_EXPRESSION`: Extracts the part of the string that matches the **regularExpression**. \n* `REPLACE_WITH_REGULAR_EXPRESSION`: Replaces all occurrences that match **regularExpression** with the specified **replacement**. \n* `REPLACE_IDS`: Replaces all IDs and UUIDs with the specified **replacement**.",
            "enum" : [ "EXTRACT_BY_REGULAR_EXPRESSION", "REPLACEMENT", "REPLACE_IDS", "REPLACE_WITH_PATTERN", "REPLACE_WITH_REGULAR_EXPRESSION", "SUBSTRING" ]
          },
          "patternBefore" : {
            "type" : "string",
            "description" : "The pattern before the required value. It will be removed."
          },
          "patternBeforeSearchType" : {
            "type" : "string",
            "description" : "The required occurrence of **patternBefore**.",
            "enum" : [ "FIRST", "LAST" ]
          },
          "patternAfter" : {
            "type" : "string",
            "description" : "The pattern after the required value. It will be removed."
          },
          "patternAfterSearchType" : {
            "type" : "string",
            "description" : "The required occurrence of **patternAfter**.",
            "enum" : [ "FIRST", "LAST" ]
          },
          "replacement" : {
            "type" : "string",
            "description" : "Replacement for the original value."
          },
          "patternToReplace" : {
            "type" : "string",
            "description" : "The pattern to be replaced. \n\n Only applicable if the **type** is `REPLACE_WITH_PATTERN`."
          },
          "regularExpression" : {
            "type" : "string",
            "description" : "A regular expression for the string to be extracted or replaced. \n\n Only applicable if the **type** is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`."
          },
          "fallbackToInput" : {
            "type" : "boolean",
            "description" : "If set to true: Returns the input if **patternBefore** or **patternAfter** cannot be found and the **type** is `SUBSTRING`. \n\n Returns the input if **regularExpression** doesn't match and **type** is `EXTRACT_BY_REGULAR_EXPRESSION`. \n\n Otherwise null is returned."
          }
        },
        "description" : "The processing step settings."
      },
      "UserActionNamingRule" : {
        "required" : [ "template" ],
        "type" : "object",
        "properties" : {
          "template" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Naming pattern. Use Curly brackets `{}` to select placeholders."
          },
          "conditions" : {
            "type" : "array",
            "description" : "Defines the conditions when the naming rule should apply.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionNamingRuleCondition"
            }
          },
          "useOrConditions" : {
            "type" : "boolean",
            "description" : "If set to `true` the conditions will be connected by logical OR instead of logical AND."
          }
        },
        "description" : "The settings of naming rule."
      },
      "UserActionNamingRuleCondition" : {
        "required" : [ "operand1", "operator" ],
        "type" : "object",
        "properties" : {
          "operand1" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Must be a defined placeholder wrapped in curly braces"
          },
          "operand2" : {
            "type" : "string",
            "description" : "Must be null if operator is \"IS_EMPTY\", a regex if operator is \"MATCHES_REGULAR_ERPRESSION\". In all other cases the value can be a freetext or a placeholder wrapped in curly braces"
          },
          "operator" : {
            "type" : "string",
            "description" : "The operator of the condition",
            "enum" : [ "CONTAINS", "ENDS_WITH", "EQUALS", "IS_EMPTY", "IS_NOT_EMPTY", "MATCHES_REGULAR_EXPRESSION", "NOT_CONTAINS", "NOT_ENDS_WITH", "NOT_EQUALS", "NOT_MATCHES_REGULAR_EXPRESSION", "NOT_STARTS_WITH", "STARTS_WITH" ]
          }
        },
        "description" : "The settings of conditions for user action naming."
      },
      "UserActionNamingSettings" : {
        "type" : "object",
        "properties" : {
          "placeholders" : {
            "type" : "array",
            "description" : "User action placeholders.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionNamingPlaceholder"
            }
          },
          "loadActionNamingRules" : {
            "type" : "array",
            "description" : "User action naming rules for loading actions.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionNamingRule"
            }
          },
          "xhrActionNamingRules" : {
            "type" : "array",
            "description" : "User action naming rules for xhr actions.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionNamingRule"
            }
          },
          "customActionNamingRules" : {
            "type" : "array",
            "description" : "User action naming rules for custom actions.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionNamingRule"
            }
          },
          "ignoreCase" : {
            "type" : "boolean",
            "description" : "Case insensitive naming."
          },
          "useFirstDetectedLoadAction" : {
            "type" : "boolean",
            "description" : "First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used"
          },
          "splitUserActionsByDomain" : {
            "type" : "boolean",
            "description" : "Deactivate this setting if different domains should not result in separate user actions."
          },
          "queryParameterCleanups" : {
            "type" : "array",
            "description" : "List of parameters that should be removed from the query before using the query in the user action name.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The settings of user action naming."
      },
      "UserTag" : {
        "required" : [ "uniqueId" ],
        "type" : "object",
        "properties" : {
          "uniqueId" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "uniqueId, unique among all userTags and properties of this application",
            "format" : "int32"
          },
          "metadataId" : {
            "type" : "integer",
            "description" : "If it's of type metaData, metaData id of the userTag",
            "format" : "int32"
          },
          "cleanupRule" : {
            "type" : "string",
            "description" : "Cleanup rule expression of the userTag"
          },
          "serverSideRequestAttribute" : {
            "type" : "string",
            "description" : "requestAttribute Id of the userTag"
          },
          "ignoreCase" : {
            "type" : "boolean",
            "description" : "If true, the value of this tag will always be stored in lower case. Defaults to false."
          }
        },
        "description" : "Defines UserTags settings of an application."
      },
      "VisitDurationDetails" : {
        "required" : [ "durationInMillis" ],
        "type" : "object",
        "properties" : {
          "durationInMillis" : {
            "type" : "integer",
            "description" : "The duration of session to hit the conversion goal, in milliseconds.",
            "format" : "int64"
          }
        },
        "description" : "Configuration of a visit duration-based conversion goal."
      },
      "VisitNumActionDetails" : {
        "type" : "object",
        "properties" : {
          "numUserActions" : {
            "type" : "integer",
            "description" : "The number of user actions to hit the conversion goal.",
            "format" : "int32"
          }
        },
        "description" : "Configuration of a number of user actions-based conversion goal."
      },
      "VisuallyComplete2Settings" : {
        "type" : "object",
        "properties" : {
          "excludeUrlRegex" : {
            "type" : "string",
            "description" : "A RegularExpression used to exclude images and iframes from being detected by the VC module."
          },
          "ignoredMutationsList" : {
            "type" : "string",
            "description" : "Query selector for mutation nodes to ignore in VC and SI calculation"
          },
          "mutationTimeout" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50.",
            "format" : "int32"
          },
          "inactivityTimeout" : {
            "maximum" : 30000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000.",
            "format" : "int32"
          },
          "threshold" : {
            "maximum" : 10000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50.",
            "format" : "int32"
          }
        },
        "description" : "Settings for VisuallyComplete2"
      },
      "WaterfallSettings" : {
        "required" : [ "resourceBrowserCachingThreshold", "resourcesThreshold", "slowCdnResourcesThreshold", "slowFirstPartyResourcesThreshold", "slowThirdPartyResourcesThreshold", "speedIndexVisuallyCompleteRatioThreshold", "uncompressedResourcesThreshold" ],
        "type" : "object",
        "properties" : {
          "uncompressedResourcesThreshold" : {
            "maximum" : 99999,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Warn about uncompressed resources larger than *X* bytes.",
            "format" : "int32"
          },
          "resourcesThreshold" : {
            "maximum" : 99999000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Warn about resources larger than *X* bytes.",
            "format" : "int32"
          },
          "resourceBrowserCachingThreshold" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Warn about resources with a lower browser cache rate above *X*%.",
            "format" : "int32"
          },
          "slowFirstPartyResourcesThreshold" : {
            "maximum" : 99999000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Warn about slow 1st party resources with a response time above *X* ms.",
            "format" : "int32"
          },
          "slowThirdPartyResourcesThreshold" : {
            "maximum" : 99999000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Warn about slow 3rd party resources with a response time above *X* ms.",
            "format" : "int32"
          },
          "slowCdnResourcesThreshold" : {
            "maximum" : 99999000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Warn about slow CDN resources with a response time above *X* ms.",
            "format" : "int32"
          },
          "speedIndexVisuallyCompleteRatioThreshold" : {
            "maximum" : 99,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Warn if Speed index exceeds *X* % of Visually complete.",
            "format" : "int32"
          }
        },
        "description" : "These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources."
      },
      "WebApplicationConfig" : {
        "required" : [ "costControlUserSessionPercentage", "customActionApdexSettings", "loadActionApdexSettings", "loadActionKeyPerformanceMetric", "monitoringSettings", "name", "realUserMonitoringEnabled", "waterfallSettings", "xhrActionApdexSettings", "xhrActionKeyPerformanceMetric" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "identifier" : {
            "type" : "string",
            "description" : "Dynatrace entity ID of the web application.",
            "readOnly" : true
          },
          "name" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name of the web application, displayed in the UI."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the web application.",
            "enum" : [ "AUTO_INJECTED", "BROWSER_EXTENSION_INJECTED", "MANUALLY_INJECTED" ]
          },
          "realUserMonitoringEnabled" : {
            "type" : "boolean",
            "description" : "Real user monitoring enabled/disabled."
          },
          "costControlUserSessionPercentage" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "number",
            "description" : "Analize *X*% of user sessions."
          },
          "loadActionKeyPerformanceMetric" : {
            "type" : "string",
            "description" : "The key performance metric of load actions.",
            "enum" : [ "ACTION_DURATION", "CUMULATIVE_LAYOUT_SHIFT", "DOM_INTERACTIVE", "FIRST_INPUT_DELAY", "LARGEST_CONTENTFUL_PAINT", "LOAD_EVENT_END", "LOAD_EVENT_START", "RESPONSE_END", "RESPONSE_START", "SPEED_INDEX", "VISUALLY_COMPLETE" ]
          },
          "sessionReplayConfig" : {
            "$ref" : "#/components/schemas/SessionReplaySetting"
          },
          "xhrActionKeyPerformanceMetric" : {
            "type" : "string",
            "description" : "The key performance metric of XHR actions.",
            "enum" : [ "ACTION_DURATION", "RESPONSE_END", "RESPONSE_START", "VISUALLY_COMPLETE" ]
          },
          "loadActionApdexSettings" : {
            "$ref" : "#/components/schemas/Apdex"
          },
          "xhrActionApdexSettings" : {
            "$ref" : "#/components/schemas/Apdex"
          },
          "customActionApdexSettings" : {
            "$ref" : "#/components/schemas/Apdex"
          },
          "waterfallSettings" : {
            "$ref" : "#/components/schemas/WaterfallSettings"
          },
          "monitoringSettings" : {
            "$ref" : "#/components/schemas/MonitoringSettings"
          },
          "userTags" : {
            "type" : "array",
            "description" : "User tags settings.",
            "items" : {
              "$ref" : "#/components/schemas/UserTag"
            }
          },
          "userActionAndSessionProperties" : {
            "type" : "array",
            "description" : "User action and session properties settings. Empty List means no change",
            "items" : {
              "$ref" : "#/components/schemas/UserActionAndSessionProperties"
            }
          },
          "userActionNamingSettings" : {
            "$ref" : "#/components/schemas/UserActionNamingSettings"
          },
          "metaDataCaptureSettings" : {
            "type" : "array",
            "description" : "Java script agent meta data capture settings.",
            "items" : {
              "$ref" : "#/components/schemas/MetaDataCapturing"
            }
          },
          "conversionGoals" : {
            "type" : "array",
            "description" : "A list of conversion goals of the application.",
            "items" : {
              "$ref" : "#/components/schemas/ConversionGoal"
            }
          },
          "urlInjectionPattern" : {
            "type" : "string",
            "description" : "Url injection pattern for manual web application."
          }
        },
        "description" : "Configuration of a web application.",
        "example" : {
          "name" : "application name",
          "type" : "AUTO_INJECTED",
          "realUserMonitoringEnabled" : true,
          "sessionReplayConfig" : {
            "costControlPercentage" : 100,
            "enabled" : true,
            "enableCssResourceCapturing" : true,
            "cssResourceCapturingExclusionRules" : [ "rule" ]
          },
          "costControlUserSessionPercentage" : 100,
          "loadActionKeyPerformanceMetric" : "VISUALLY_COMPLETE",
          "xhrActionKeyPerformanceMetric" : "ACTION_DURATION",
          "loadActionApdexSettings" : {
            "toleratedThreshold" : 3000,
            "frustratingThreshold" : 12000,
            "toleratedFallbackThreshold" : 3000,
            "frustratingFallbackThreshold" : 12000
          },
          "xhrActionApdexSettings" : {
            "toleratedThreshold" : 2500,
            "frustratingThreshold" : 10000,
            "toleratedFallbackThreshold" : 3000,
            "frustratingFallbackThreshold" : 12000
          },
          "customActionApdexSettings" : {
            "toleratedThreshold" : 3000,
            "frustratingThreshold" : 12000,
            "toleratedFallbackThreshold" : 3000,
            "frustratingFallbackThreshold" : 12000
          },
          "waterfallSettings" : {
            "uncompressedResourcesThreshold" : 860,
            "resourcesThreshold" : 100000,
            "resourceBrowserCachingThreshold" : 50,
            "slowFirstPartyResourcesThreshold" : 200000,
            "slowThirdPartyResourcesThreshold" : 200000,
            "slowCdnResourcesThreshold" : 200000,
            "speedIndexVisuallyCompleteRatioThreshold" : 50
          },
          "monitoringSettings" : {
            "fetchRequests" : false,
            "xmlHttpRequest" : true,
            "javaScriptFrameworkSupport" : {
              "angular" : true,
              "dojo" : false,
              "extJS" : false,
              "icefaces" : false,
              "jQuery" : true,
              "mooTools" : false,
              "prototype" : true,
              "activeXObject" : false
            },
            "contentCapture" : {
              "resourceTimingSettings" : {
                "w3cResourceTimings" : true,
                "nonW3cResourceTimings" : false,
                "nonW3cResourceTimingsInstrumentationDelay" : 50
              },
              "javaScriptErrors" : true,
              "timeoutSettings" : {
                "timedActionSupport" : false,
                "temporaryActionLimit" : 0,
                "temporaryActionTotalTimeout" : 100
              },
              "visuallyCompleteAndSpeedIndex" : true
            },
            "excludeXhrRegex" : "",
            "correlationHeaderInclusionRegex" : "",
            "injectionMode" : "JAVASCRIPT_TAG",
            "libraryFileLocation" : "",
            "monitoringDataPath" : "",
            "customConfigurationProperties" : "",
            "serverRequestPathId" : "",
            "secureCookieAttribute" : false,
            "cookiePlacementDomain" : "",
            "cacheControlHeaderOptimizations" : true,
            "advancedJavaScriptTagSettings" : {
              "syncBeaconFirefox" : false,
              "syncBeaconInternetExplorer" : false,
              "instrumentUnsupportedAjaxFrameworks" : false,
              "specialCharactersToEscape" : "",
              "maxActionNameLength" : 100,
              "maxErrorsToCapture" : 10,
              "additionalEventHandlers" : {
                "userMouseupEventForClicks" : false,
                "clickEventHandler" : false,
                "mouseupEventHandler" : false,
                "blurEventHandler" : false,
                "changeEventHandler" : false,
                "toStringMethod" : false,
                "maxDomNodesToInstrument" : 5000
              },
              "eventWrapperSettings" : {
                "click" : false,
                "mouseUp" : false,
                "change" : false,
                "blur" : false,
                "touchStart" : false,
                "touchEnd" : false
              },
              "globalEventCaptureSettings" : {
                "mouseUp" : true,
                "mouseDown" : true,
                "click" : true,
                "doubleClick" : true,
                "keyUp" : true,
                "keyDown" : true,
                "scroll" : true,
                "additionalEventCapturedAsUserInput" : ""
              }
            },
            "browserRestrictionSettings" : {
              "browserRestrictions" : [ {
                "browserType" : "INTERNET_EXPLORER",
                "browserVersion" : "0",
                "platform" : "ALL",
                "comparator" : "EQUALS"
              } ],
              "mode" : "EXCLUDE"
            },
            "javaScriptInjectionRules" : [ {
              "enabled" : true,
              "urlOperator" : "CONTAINS",
              "urlPattern" : "/lorem/ipsum.jsp",
              "rule" : "AFTER_SPECIFIC_HTML",
              "htmlPattern" : "</title>"
            } ],
            "ipAddressRestrictionSettings" : {
              "ipAddressRestrictions" : [ {
                "subnetMask" : 3,
                "address" : "10.0.0.1"
              }, {
                "address" : "10.0.0.1",
                "addressTo" : "10.0.0.2"
              } ],
              "mode" : "EXCLUDE"
            }
          },
          "userActionNamingSettings" : {
            "placeholders" : [ {
              "name" : "myPlaceholder",
              "input" : "PAGE_URL",
              "processingPart" : "ALL",
              "processingSteps" : [ {
                "type" : "SUBSTRING",
                "patternBefore" : ".*b",
                "patternBeforeSearchType" : "FIRST",
                "patternAfter" : ".*a",
                "patternAfterSearchType" : "LAST",
                "replacement" : "value"
              } ],
              "useGuessedElementIdentifier" : false
            } ],
            "loadActionNamingRules" : [ {
              "template" : "Loading of {myPlaceholder}",
              "conditions" : [ {
                "operand1" : "{myPlaceholder}",
                "operand2" : "foo",
                "operator" : "CONTAINS"
              } ]
            } ],
            "xhrActionNamingRules" : [ {
              "template" : "Loading of {myPlaceholder}",
              "conditions" : [ {
                "operand1" : "{myPlaceholder}",
                "operand2" : "foo",
                "operator" : "CONTAINS"
              } ]
            } ],
            "ignoreCase" : true,
            "splitUserActionsByDomain" : true
          },
          "metaDataCaptureSettings" : [ {
            "type" : "JAVA_SCRIPT_VARIABLE",
            "capturingName" : "variableName",
            "name" : "display name"
          } ],
          "conversionGoals" : [ {
            "name" : "conversionGoalName",
            "type" : "UserAction",
            "destinationDetails" : {
              "urlOrPath" : "url or path",
              "matchType" : "Begins",
              "caseSensitive" : false
            },
            "userActionDetails" : {
              "value" : "value to match",
              "caseSensitive" : true,
              "matchType" : "Ends",
              "matchEntity" : "ActionName",
              "actionType" : "Load"
            },
            "visitDurationDetails" : {
              "durationInMillis" : 1
            },
            "visitNumActionDetails" : {
              "numUserActions" : 2
            }
          } ]
        }
      },
      "WebApplicationConfigBrowserRestriction" : {
        "required" : [ "browserType" ],
        "type" : "object",
        "properties" : {
          "browserVersion" : {
            "type" : "string",
            "description" : "The version of the browser that is used."
          },
          "browserType" : {
            "type" : "string",
            "description" : "The type of the browser that is used.",
            "enum" : [ "ANDROID_WEBKIT", "BOTS_SPIDERS", "CHROME", "EDGE", "FIREFOX", "INTERNET_EXPLORER", "OPERA", "SAFARI" ]
          },
          "platform" : {
            "type" : "string",
            "description" : "The platform on which the browser is being used.",
            "enum" : [ "ALL", "DESKTOP", "MOBILE" ]
          },
          "comparator" : {
            "type" : "string",
            "description" : "Compares different browsers together.",
            "enum" : [ "EQUALS", "GREATER_THAN_OR_EQUAL", "LOWER_THAN_OR_EQUAL" ]
          }
        },
        "description" : "Browser exclusion rules for the browsers that are to be excluded."
      },
      "WebApplicationConfigBrowserRestrictionSettings" : {
        "required" : [ "mode" ],
        "type" : "object",
        "properties" : {
          "mode" : {
            "type" : "string",
            "description" : "The mode of the list of browser restrictions.",
            "enum" : [ "EXCLUDE", "INCLUDE" ]
          },
          "browserRestrictions" : {
            "type" : "array",
            "description" : "A list of browser restrictions.",
            "items" : {
              "$ref" : "#/components/schemas/WebApplicationConfigBrowserRestriction"
            }
          }
        },
        "description" : "Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode."
      },
      "WebApplicationConfigIpAddressRestrictionSettings" : {
        "required" : [ "mode" ],
        "type" : "object",
        "properties" : {
          "mode" : {
            "type" : "string",
            "description" : "The mode of the list of ip address restrictions.",
            "enum" : [ "EXCLUDE", "INCLUDE" ]
          },
          "ipAddressRestrictions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IpAddressRange"
            }
          }
        },
        "description" : "Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode."
      },
      "ApplicationErrorRules" : {
        "required" : [ "customErrorRules", "httpErrorRules", "ignoreCustomErrorsInApdexCalculation", "ignoreHttpErrorsInApdexCalculation", "ignoreJavaScriptErrorsInApdexCalculation" ],
        "type" : "object",
        "properties" : {
          "ignoreJavaScriptErrorsInApdexCalculation" : {
            "type" : "boolean",
            "description" : "Exclude (`true`) or include (`false`) JavaScript errors in Apdex calculation."
          },
          "ignoreHttpErrorsInApdexCalculation" : {
            "type" : "boolean",
            "description" : "Exclude (`true`) or include (`false`) HTTP errors listed in **httpErrorRules** in Apdex calculation."
          },
          "ignoreCustomErrorsInApdexCalculation" : {
            "type" : "boolean",
            "description" : "Exclude (`true`) or include (`false`) custom errors listed in **customErrorRules** in Apdex calculation."
          },
          "httpErrorRules" : {
            "type" : "array",
            "description" : "An ordered list of HTTP errors.\n\n Rules are evaluated from top to bottom; the first matching rule applies.",
            "items" : {
              "$ref" : "#/components/schemas/HttpErrorRule"
            }
          },
          "customErrorRules" : {
            "type" : "array",
            "description" : "An ordered list of custom errors.\n\n Rules are evaluated from top to bottom; the first matching rule applies.",
            "items" : {
              "$ref" : "#/components/schemas/CustomErrorRule"
            }
          }
        },
        "description" : "Configuration of error rules in the web application."
      },
      "CustomErrorRule" : {
        "required" : [ "capture", "customAlerting", "impactApdex" ],
        "type" : "object",
        "properties" : {
          "keyPattern" : {
            "type" : "string",
            "description" : "The key of the error to look for."
          },
          "keyMatcher" : {
            "type" : "string",
            "description" : "The matching operation for the **keyPattern**.",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS" ]
          },
          "valuePattern" : {
            "type" : "string",
            "description" : "The value of the error to look for."
          },
          "valueMatcher" : {
            "type" : "string",
            "description" : "The matching operation for the **valuePattern**.",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS" ]
          },
          "capture" : {
            "type" : "boolean",
            "description" : "Capture (`true`) or ignore (`false`) the error."
          },
          "impactApdex" : {
            "type" : "boolean",
            "description" : "Include (`true`) or exclude (`false`) the error in Apdex calculation."
          },
          "customAlerting" : {
            "type" : "boolean",
            "description" : "Include (`true`) or exclude (`false`) the error in Davis AI [problem detection and analysis](https://dt-url.net/a963kd2)."
          }
        },
        "description" : "Configuration of the custom error in the web application."
      },
      "HttpErrorRule" : {
        "required" : [ "capture", "considerForAi", "considerUnknownErrorCode", "filterByUrl", "impactApdex" ],
        "type" : "object",
        "properties" : {
          "considerUnknownErrorCode" : {
            "type" : "boolean",
            "description" : "If `true`, match by errors that have unknown HTTP status code."
          },
          "considerBlockedRequests" : {
            "type" : "boolean",
            "description" : "If `true`, match by errors that have CSP Rule violations."
          },
          "errorCodes" : {
            "type" : "string",
            "description" : "The HTTP status code or status code range to match by. \n\nThis field is required if **considerUnknownErrorCode** AND **considerBlockedRequests** are both set to `false`.",
            "example" : "400"
          },
          "filterByUrl" : {
            "type" : "boolean",
            "description" : "If `true`, filter errors by URL."
          },
          "filter" : {
            "type" : "string",
            "description" : "The matching rule for the URL.",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS" ]
          },
          "url" : {
            "type" : "string",
            "description" : "The URL to look for."
          },
          "capture" : {
            "type" : "boolean",
            "description" : "Capture (`true`) or ignore (`false`) the error."
          },
          "impactApdex" : {
            "type" : "boolean",
            "description" : "Include (`true`) or exclude (`false`) the error in Apdex calculation."
          },
          "considerForAi" : {
            "type" : "boolean",
            "description" : "Include (`true`) or exclude (`false`) the error in Davis AI [problem detection and analysis](https://dt-url.net/a963kd2)."
          }
        },
        "description" : "Configuration of the HTTP error in the web application."
      },
      "ApplicationDataPrivacy" : {
        "required" : [ "dataCaptureOptInEnabled", "doNotTrackBehaviour", "persistentCookieForUserTracking" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "identifier" : {
            "type" : "string",
            "description" : "Dynatrace entity ID of the web application.",
            "readOnly" : true
          },
          "dataCaptureOptInEnabled" : {
            "type" : "boolean",
            "description" : "Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called."
          },
          "persistentCookieForUserTracking" : {
            "type" : "boolean",
            "description" : "Set to `true` to set persistent cookie in order to recognize returning devices."
          },
          "doNotTrackBehaviour" : {
            "type" : "string",
            "description" : "How to handle the \"Do Not Track\" header: \n\n* `IGNORE_DO_NOT_TRACK`: ignore the header and capture the data. \n* `CAPTURE_ANONYMIZED`: capture the data but do not tie it to the user. \n* `DO_NOT_CAPTURE`: respect the header and do not capture.",
            "enum" : [ "CAPTURE_ANONYMIZED", "DO_NOT_CAPTURE", "IGNORE_DO_NOT_TRACK" ]
          },
          "sessionReplayDataPrivacy" : {
            "$ref" : "#/components/schemas/SessionReplayDataPrivacySettings"
          }
        },
        "description" : "Data privacy settings of the application."
      },
      "MaskingRule" : {
        "required" : [ "maskingRuleType", "selector", "userInteractionHidden" ],
        "type" : "object",
        "properties" : {
          "maskingRuleType" : {
            "type" : "string",
            "description" : "The type of the masking rule.",
            "enum" : [ "ATTRIBUTE", "ELEMENT" ]
          },
          "selector" : {
            "type" : "string",
            "description" : "The selector for the element or the attribute to be masked. \n\nSpecify a CSS expression for an element or a [regular expression](https://dt-url.net/k9e0iaq) for an attribute."
          },
          "userInteractionHidden" : {
            "type" : "boolean",
            "description" : "Interactions with the element are (`true`) or are not (`false) masked.",
            "example" : false
          }
        },
        "description" : "The masking rule defining how data is hidden."
      },
      "SessionReplayContentMaskingSettings" : {
        "required" : [ "recordingMaskingSettingsVersion" ],
        "type" : "object",
        "properties" : {
          "recordingMaskingSettingsVersion" : {
            "type" : "integer",
            "description" : "The version of the content masking. \n\nYou can use this API only with the version 2. \n\nIf you're using version 1, set this field to `2` in the PUT request to switch to version 2.",
            "format" : "int32",
            "example" : 2
          },
          "recordingMaskingSettings" : {
            "$ref" : "#/components/schemas/SessionReplayMaskingSetting"
          },
          "playbackMaskingSettings" : {
            "$ref" : "#/components/schemas/SessionReplayMaskingSetting"
          }
        },
        "description" : "Content masking settings for Session Replay. \n\nFor more details, see [Configure Session Replay](https://dt-url.net/0m03slq) in Dynatrace Documentation."
      },
      "SessionReplayDataPrivacySettings" : {
        "type" : "object",
        "properties" : {
          "optInModeEnabled" : {
            "type" : "boolean",
            "description" : "If `true`, session recording is disabled until JavaScriptAPI `dtrum.enableSessionReplay()` is called."
          },
          "urlExclusionRules" : {
            "type" : "array",
            "description" : "A list of URLs to be excluded from recording.",
            "items" : {
              "type" : "string"
            }
          },
          "contentMaskingSettings" : {
            "$ref" : "#/components/schemas/SessionReplayContentMaskingSettings"
          }
        },
        "description" : "Data privacy settings for Session Replay."
      },
      "SessionReplayMaskingSetting" : {
        "required" : [ "maskingPreset" ],
        "type" : "object",
        "properties" : {
          "maskingPreset" : {
            "type" : "string",
            "description" : "The type of the masking: \n\n* `MASK_ALL`: Mask all texts, user input, and images. \n* `MASK_USER_INPUT`: Mask all data that is provided through user input \n* `ALLOW_LIST`: Only elements, specified in **maskingRules** are shown, everything else is masked. \n* `BLOCK_LIST`: Elements, specified in **maskingRules** are masked, everything else is shown.",
            "enum" : [ "ALLOW_LIST", "BLOCK_LIST", "MASK_ALL", "MASK_USER_INPUT" ]
          },
          "maskingRules" : {
            "type" : "array",
            "description" : "A list of masking rules.",
            "items" : {
              "$ref" : "#/components/schemas/MaskingRule"
            }
          }
        },
        "description" : "Configuration of the Session Replay masking."
      },
      "ApplicationDataPrivacyList" : {
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationDataPrivacy"
            }
          }
        }
      },
      "KeyUserActionList" : {
        "type" : "object",
        "properties" : {
          "keyUserActionList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyUserAction"
            }
          }
        },
        "description" : "The list of key user actions in the web application",
        "example" : {
          "keyUserActionList" : [ {
            "name" : "Loading of page /example",
            "actionType" : "Load",
            "domain" : "test.com",
            "meIdentifier" : "APPLICATION_METHOD-1234"
          } ]
        }
      },
      "ApplicationDetectionRuleConfig" : {
        "required" : [ "applicationIdentifier", "filterConfig" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadataDtoImpl"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the rule.",
            "format" : "uuid",
            "example" : "12345678-abcd-1234-abcd-1234567890ab"
          },
          "order" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string",
            "description" : "The order of the rule in the rules list. \n\nThe rules are evaluated from top to bottom. The first matching rule applies."
          },
          "applicationIdentifier" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the application, for example `APPLICATION-4A3B43`. \n\n You must use an existing ID. If you need to create a rule for an application that doesn't exist yet, [create an application first](https://dt-url.net/vt03khh) and then configure detection rules for it.",
            "example" : "APPLICATION-123456"
          },
          "filterConfig" : {
            "$ref" : "#/components/schemas/ApplicationFilter"
          },
          "name" : {
            "type" : "string",
            "description" : "The unique name of the Application detection rule."
          }
        },
        "description" : "Application detection rule.",
        "example" : {
          "metadata" : {
            "configurationVersions" : [ 4, 2 ],
            "clusterVersion" : "Mock version"
          },
          "id" : "12345678-abcd-1234-abcd-1234567890ab",
          "applicationIdentifier" : "APPLICATION-123456",
          "name" : "uniqueName",
          "filterConfig" : {
            "pattern" : "myapp.example.com",
            "applicationMatchType" : "EQUALS",
            "applicationMatchTarget" : "DOMAIN"
          }
        }
      },
      "ApplicationFilter" : {
        "required" : [ "applicationMatchTarget", "applicationMatchType", "pattern" ],
        "type" : "object",
        "properties" : {
          "pattern" : {
            "maxLength" : 200,
            "minLength" : 1,
            "type" : "string",
            "description" : "The value to look for.",
            "example" : "myapp.example.com"
          },
          "applicationMatchType" : {
            "type" : "string",
            "description" : "The operator of the matching.",
            "example" : "EQUALS",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS", "MATCHES" ]
          },
          "applicationMatchTarget" : {
            "type" : "string",
            "description" : "Where to look for the the **pattern** value.",
            "example" : "DOMAIN",
            "enum" : [ "DOMAIN", "URL" ]
          }
        },
        "description" : "The condition of an application detection rule."
      },
      "ConfigurationMetadataDtoImpl" : {
        "type" : "object",
        "properties" : {
          "currentConfigurationVersions" : {
            "type" : "array",
            "description" : "A sorted list of version numbers of the configuration.",
            "example" : [ "1.0.4", "1.23" ],
            "items" : {
              "type" : "string"
            }
          },
          "configurationVersions" : {
            "type" : "array",
            "description" : "A sorted list of the version numbers of the configuration.",
            "example" : [ 4, 2 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "clusterVersion" : {
            "type" : "string",
            "description" : "Dynatrace version.",
            "example" : "1.192.1"
          }
        },
        "description" : "Metadata useful for debugging.",
        "readOnly" : true
      },
      "ApplicationDetectionRulesHostDetectionSettings" : {
        "required" : [ "hostDetectionHeaders" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "hostDetectionHeaders" : {
            "type" : "array",
            "description" : "An ordered list of host detection headers. \n\nHeaders are evaluated from top to bottom; the first matching header applies.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Configuration of host detection headers.",
        "example" : {
          "metadata" : {
            "configurationVersions" : [ 4, 2 ],
            "clusterVersion" : "Mock version"
          },
          "hostDetectionHeaders" : [ "X-Host", "X-Forwarded-Host" ]
        }
      },
      "ApplicationTypeComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `APPLICATION_TYPE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "AGENTLESS_MONITORING", "AMP", "AUTO_INJECTED", "DEFAULT", "SAAS_VENDOR" ]
            }
          }
        } ]
      },
      "AutoTag" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the auto-tag.",
            "format" : "uuid",
            "example" : "12345678-abcd-1234-abcd-1234567890ab"
          },
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the auto-tag, which is applied to entities. \n\nAdditionally you can specify a **valueFormat** in the tag rule. In that case the tag is used in the `name:valueFormat` format. \n\nFor example you can extend the `Infrastructure` tag to `Infrastructure:Windows` and `Infrastructure:Linux`."
          },
          "description" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "type" : "string",
            "description" : "The description of the auto-tag."
          },
          "rules" : {
            "type" : "array",
            "description" : "The list of rules for tag usage. \n\nWhen there are multiple rules, the OR logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/AutoTagRule"
            }
          },
          "entitySelectorBasedRules" : {
            "maxItems" : 150,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of entity-selector based rules for auto tagging usage.\n\nIf several rules are specified, the **OR** logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/EntitySelectorBasedAutoTagRule"
            }
          }
        },
        "description" : "Configuration of an auto-tag. It defines the conditions of tag usage and the tag value.",
        "example" : {
          "name" : "sampleAutoTag",
          "description" : "sampleDescription",
          "rules" : [ {
            "type" : "SERVICE",
            "enabled" : true,
            "valueFormat" : "myTagValue {Service:DetectedName}",
            "propagationTypes" : [ "SERVICE_TO_HOST_LIKE" ],
            "conditions" : [ {
              "key" : {
                "attribute" : "SERVICE_DATABASE_NAME"
              },
              "comparisonInfo" : {
                "type" : "STRING",
                "operator" : "BEGINS_WITH",
                "value" : "sample",
                "negate" : false,
                "caseSensitive" : false
              }
            }, {
              "key" : {
                "attribute" : "SERVICE_WEB_SERVER_NAME"
              },
              "comparisonInfo" : {
                "type" : "STRING",
                "operator" : "EXISTS",
                "negate" : false
              }
            }, {
              "key" : {
                "attribute" : "PROCESS_GROUP_CUSTOM_METADATA",
                "type" : "PROCESS_CUSTOM_METADATA_KEY",
                "dynamicKey" : {
                  "source" : "KUBERNETES",
                  "key" : "kubernetes.io/limit-ranger"
                }
              },
              "comparisonInfo" : {
                "type" : "STRING",
                "operator" : "BEGINS_WITH",
                "value" : "sample",
                "negate" : false,
                "caseSensitive" : false
              }
            } ]
          } ],
          "entitySelectorBasedRules" : [ {
            "enabled" : true,
            "entitySelector" : "type(HOST) AND cpuCores(4)"
          } ]
        }
      },
      "AutoTagRule" : {
        "required" : [ "conditions", "enabled", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of entities to which the rule applies.",
            "enum" : [ "APPLICATION", "AWS_APPLICATION_LOAD_BALANCER", "AWS_CLASSIC_LOAD_BALANCER", "AWS_NETWORK_LOAD_BALANCER", "AWS_RELATIONAL_DATABASE_SERVICE", "AZURE", "CUSTOM_APPLICATION", "CUSTOM_DEVICE", "DCRUM_APPLICATION", "ESXI_HOST", "EXTERNAL_SYNTHETIC_TEST", "HOST", "HTTP_CHECK", "MOBILE_APPLICATION", "PROCESS_GROUP", "SERVICE", "SYNTHETIC_TEST" ]
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Tag rule is enabled (`true`) or disabled (`false`)."
          },
          "valueFormat" : {
            "type" : "string",
            "description" : "The value of the auto-tag. If specified, the tag is used in the `name:valueFormat` format. \n\nFor example, you can extend the `Infrastructure` tag to `Infrastructure:Windows` and `Infrastructure:Linux`. \n\nYou can use the following placeholders here: \n\n* `{AwsAutoScalingGroup:Name}` \n* `{AwsAvailabilityZone:Name}` \n* `{AwsElasticLoadBalancer:Name}` \n* `{AwsRelationalDatabaseService:DBName}` \n* `{AwsRelationalDatabaseService:Endpoint}` \n* `{AwsRelationalDatabaseService:Engine}` \n* `{AwsRelationalDatabaseService:InstanceClass}` \n* `{AwsRelationalDatabaseService:Name}` \n* `{AwsRelationalDatabaseService:Port}` \n* `{AzureRegion:Name}` \n* `{AzureScaleSet:Name}` \n* `{AzureVm:Name}` \n* `{CloudFoundryOrganization:Name}` \n* `{CustomDevice:DetectedName}` \n* `{CustomDevice:DnsName}` \n* `{CustomDevice:IpAddress}` \n* `{CustomDevice:Port}` \n* `{DockerContainerGroupInstance:ContainerName}` \n* `{DockerContainerGroupInstance:FullImageName}` \n* `{DockerContainerGroupInstance:ImageVersion}` \n* `{DockerContainerGroupInstance:StrippedImageName}` \n* `{ESXIHost:HardwareModel}` \n* `{ESXIHost:HardwareVendor}` \n* `{ESXIHost:Name}` \n* `{ESXIHost:ProductName}` \n* `{ESXIHost:ProductVersion}` \n* `{Ec2Instance:AmiId}` \n* `{Ec2Instance:BeanstalkEnvironmentName}` \n* `{Ec2Instance:InstanceId}` \n* `{Ec2Instance:InstanceType}` \n* `{Ec2Instance:LocalHostName}` \n* `{Ec2Instance:Name}` \n* `{Ec2Instance:PublicHostName}` \n* `{Ec2Instance:SecurityGroup}` \n* `{GoogleComputeInstance:Id}` \n* `{GoogleComputeInstance:IpAddresses}` \n* `{GoogleComputeInstance:MachineType}` \n* `{GoogleComputeInstance:Name}` \n* `{GoogleComputeInstance:ProjectId}` \n* `{GoogleComputeInstance:Project}` \n* `{Host:AWSNameTag}` \n* `{Host:AixLogicalCpuCount}` \n* `{Host:AzureHostName}` \n* `{Host:AzureSiteName}` \n* `{Host:BoshDeploymentId}` \n* `{Host:BoshInstanceId}` \n* `{Host:BoshInstanceName}` \n* `{Host:BoshName}` \n* `{Host:BoshStemcellVersion}` \n* `{Host:CpuCores}` \n* `{Host:DetectedName}` \n* `{Host:Environment:AppName}` \n* `{Host:Environment:BoshReleaseVersion}` \n* `{Host:Environment:Environment}` \n* `{Host:Environment:Link}` \n* `{Host:Environment:Organization}` \n* `{Host:Environment:Owner}` \n* `{Host:Environment:Support}` \n* `{Host:IpAddress}` \n* `{Host:LogicalCpuCores}` \n* `{Host:OneAgentCustomHostName}` \n* `{Host:OperatingSystemVersion}` \n* `{Host:PaasMemoryLimit}` \n* `{HostGroup:Name}` \n* `{KubernetesCluster:Name}` \n* `{KubernetesNode:DetectedName}` \n* `{OpenstackAvailabilityZone:Name}` \n* `{OpenstackZone:Name}` \n* `{OpenstackComputeNode:Name}` \n* `{OpenstackProject:Name}` \n* `{OpenstackVm:UnstanceType}` \n* `{OpenstackVm:Name}` \n* `{OpenstackVm:SecurityGroup}` \n* `{ProcessGroup:AmazonECRImageAccountId}` \n* `{ProcessGroup:AmazonECRImageRegion}` \n* `{ProcessGroup:AmazonECSCluster}` \n* `{ProcessGroup:AmazonECSContainerName}` \n* `{ProcessGroup:AmazonECSFamily}` \n* `{ProcessGroup:AmazonECSRevision}` \n* `{ProcessGroup:AmazonLambdaFunctionName}` \n* `{ProcessGroup:AmazonRegion}` \n* `{ProcessGroup:ApacheConfigPath}` \n* `{ProcessGroup:ApacheSparkMasterIpAddress}` \n* `{ProcessGroup:AspDotNetCoreApplicationPath}` \n* `{ProcessGroup:AspDotNetCoreApplicationPath}` \n* `{ProcessGroup:AzureHostName}` \n* `{ProcessGroup:AzureSiteName}` \n* `{ProcessGroup:CassandraClusterName}` \n* `{ProcessGroup:CatalinaBase}` \n* `{ProcessGroup:CatalinaHome}` \n* `{ProcessGroup:CloudFoundryAppId}` \n* `{ProcessGroup:CloudFoundryAppName}` \n* `{ProcessGroup:CloudFoundryInstanceIndex}` \n* `{ProcessGroup:CloudFoundrySpaceId}` \n* `{ProcessGroup:CloudFoundrySpaceName}` \n* `{ProcessGroup:ColdFusionJvmConfigFile}` \n* `{ProcessGroup:ColdFusionServiceName}` \n* `{ProcessGroup:CommandLineArgs}` \n* `{ProcessGroup:DetectedName}` \n* `{ProcessGroup:DotNetCommandPath}` \n* `{ProcessGroup:DotNetCommand}` \n* `{ProcessGroup:DotNetClusterId}` \n* `{ProcessGroup:DotNetNodeId}` \n* `{ProcessGroup:ElasticsearchClusterName}` \n* `{ProcessGroup:ElasticsearchNodeName}` \n* `{ProcessGroup:EquinoxConfigPath}` \n* `{ProcessGroup:ExeName}` \n* `{ProcessGroup:ExePath}` \n* `{ProcessGroup:GlassFishDomainName}` \n* `{ProcessGroup:GlassFishInstanceName}` \n* `{ProcessGroup:GoogleAppEngineInstance}` \n* `{ProcessGroup:GoogleAppEngineService}` \n* `{ProcessGroup:GoogleCloudProject}` \n* `{ProcessGroup:HybrisBinDirectory}` \n* `{ProcessGroup:HybrisConfigDirectory}` \n* `{ProcessGroup:HybrisConfigDirectory}` \n* `{ProcessGroup:HybrisDataDirectory}` \n* `{ProcessGroup:IBMCicsRegion}` \n* `{ProcessGroup:IBMCtgName}` \n* `{ProcessGroup:IBMImsConnectRegion}` \n* `{ProcessGroup:IBMImsControlRegion}` \n* `{ProcessGroup:IBMImsMessageProcessingRegion}` \n* `{ProcessGroup:IBMImsSoapGwName}` \n* `{ProcessGroup:IBMIntegrationNodeName}` \n* `{ProcessGroup:IBMIntegrationServerName}` \n* `{ProcessGroup:IISAppPool}` \n* `{ProcessGroup:IISRoleName}` \n* `{ProcessGroup:JbossHome}` \n* `{ProcessGroup:JbossMode}` \n* `{ProcessGroup:JbossServerName}` \n* `{ProcessGroup:JavaJarFile}` \n* `{ProcessGroup:JavaJarPath}` \n* `{ProcessGroup:JavaMainCLass}` \n* `{ProcessGroup:KubernetesBasePodName}` \n* `{ProcessGroup:KubernetesContainerName}` \n* `{ProcessGroup:KubernetesFullPodName}` \n* `{ProcessGroup:KubernetesNamespace}` \n* `{ProcessGroup:KubernetesPodUid}` \n* `{ProcessGroup:MssqlInstanceName}` \n* `{ProcessGroup:NodeJsAppBaseDirectory}` \n* `{ProcessGroup:NodeJsAppName}` \n* `{ProcessGroup:NodeJsScriptName}` \n* `{ProcessGroup:OracleSid}` \n* `{ProcessGroup:PHPScriptPath}` \n* `{ProcessGroup:PHPWorkingDirectory}` \n* `{ProcessGroup:Ports}` \n* `{ProcessGroup:RubyAppRootPath}` \n* `{ProcessGroup:RubyScriptPath}` \n* `{ProcessGroup:SoftwareAGInstallRoot}` \n* `{ProcessGroup:SoftwareAGProductPropertyName}` \n* `{ProcessGroup:SpringBootAppName}` \n* `{ProcessGroup:SpringBootProfileName}` \n* `{ProcessGroup:SpringBootStartupClass}` \n* `{ProcessGroup:TIBCOBusinessWorksAppNodeName}` \n* `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` \n* `{ProcessGroup:TIBCOBusinessWorksCeAppName}` \n* `{ProcessGroup:TIBCOBusinessWorksCeVersion}` \n* `{ProcessGroup:TIBCOBusinessWorksDomainName}` \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` \n* `{ProcessGroup:TIBCOBusinessWorksHome}` \n* `{ProcessGroup:VarnishInstanceName}` \n* `{ProcessGroup:WebLogicClusterName}` \n* `{ProcessGroup:WebLogicDomainName}` \n* `{ProcessGroup:WebLogicHome}` \n* `{ProcessGroup:WebLogicName}` \n* `{ProcessGroup:WebSphereCellName}` \n* `{ProcessGroup:WebSphereClusterName}` \n* `{ProcessGroup:WebSphereNodeName}` \n* `{ProcessGroup:WebSphereServerName}` \n* `{ProcessGroup:ActorSystem}` \n* `{Service:STGServerName}` \n* `{Service:DatabaseHostName}` \n* `{Service:DatabaseName}` \n* `{Service:DatabaseVendor}` \n* `{Service:DetectedName}` \n* `{Service:EndpointPath}` \n* `{Service:EndpointPathGatewayUrl}` \n* `{Service:IIBApplicationName}` \n* `{Service:MessageListenerClassName}` \n* `{Service:Port}` \n* `{Service:PublicDomainName}` \n* `{Service:RemoteEndpoint}` \n* `{Service:RemoteName}` \n* `{Service:WebApplicationId}` \n* `{Service:WebContextRoot}` \n* `{Service:WebServerName}` \n* `{Service:WebServiceNamespace}` \n* `{Service:WebServiceName}` \n* `{VmwareDatacenter:Name}` \n* `{VmwareVm:Name}` \n"
          },
          "normalization" : {
            "type" : "string",
            "description" : "Changes applied to the value after applying the value format. Default is LEAVE_TEXT_AS_IS.",
            "nullable" : true,
            "enum" : [ "LEAVE_TEXT_AS_IS", "TO_LOWER_CASE", "TO_UPPER_CASE" ]
          },
          "propagationTypes" : {
            "type" : "array",
            "description" : "How to apply the tag to underlying entities: \n\n* `SERVICE_TO_PROCESS_GROUP_LIKE`: Apply to underlying process groups of matching services. \n* `SERVICE_TO_HOST_LIKE`: Apply to underlying hosts of matching services. \n* `PROCESS_GROUP_TO_HOST`: Apply to underlying hosts of matching process groups. \n* `PROCESS_GROUP_TO_SERVICE`: Apply to all services provided by the process groups. \n* `HOST_TO_PROCESS_GROUP_INSTANCE`: Apply to processes running on matching hosts. \n*  `AZURE_TO_PG`: Apply to process groups connected to matching Azure entities. \n* `AZURE_TO_SERVICE`: Apply to services provided by matching Azure entities.",
            "items" : {
              "type" : "string",
              "enum" : [ "AZURE_TO_PG", "AZURE_TO_SERVICE", "HOST_TO_PROCESS_GROUP_INSTANCE", "PROCESS_GROUP_TO_HOST", "PROCESS_GROUP_TO_SERVICE", "SERVICE_TO_HOST_LIKE", "SERVICE_TO_PROCESS_GROUP_LIKE" ]
            }
          },
          "conditions" : {
            "maxItems" : 30,
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of matching rules for the auto-tag. \n\nThe tag applies only when **all** conditions are fulfilled.",
            "items" : {
              "$ref" : "#/components/schemas/EntityRuleEngineCondition"
            }
          }
        },
        "description" : "A rule for the auto-tag. \n\n Defines the conditions of tag usage."
      },
      "AzureComputeModeComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `AZURE_COMPUTE_MODE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "DEDICATED", "SHARED" ]
            }
          }
        } ]
      },
      "AzureSkuComparision" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `AZURE_SKU` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "BASIC", "DYNAMIC", "FREE", "PREMIUM", "SHARED", "STANDARD" ]
            }
          }
        } ]
      },
      "BitnessComparision" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `BITNESS` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "32", "64" ]
            }
          }
        } ]
      },
      "CloudTypeComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `CLOUD_TYPE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "AZURE", "EC2", "GOOGLE_CLOUD_PLATFORM", "OPENSTACK", "ORACLE", "UNRECOGNIZED" ]
            }
          }
        } ]
      },
      "ComparisonBasic" : {
        "required" : [ "negate", "operator", "type" ],
        "type" : "object",
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need."
          },
          "value" : {
            "type" : "object",
            "description" : "The value to compare to."
          },
          "negate" : {
            "type" : "boolean",
            "description" : "Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**."
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `STRING` -> StringComparison \n* `INDEXED_NAME` -> IndexedNameComparison \n* `INDEXED_STRING` -> IndexedStringComparison \n* `INTEGER` -> IntegerComparison \n* `SERVICE_TYPE` -> ServiceTypeComparison \n* `PAAS_TYPE` -> PaasTypeComparison \n* `CLOUD_TYPE` -> CloudTypeComparison \n* `AZURE_SKU` -> AzureSkuComparision \n* `AZURE_COMPUTE_MODE` -> AzureComputeModeComparison \n* `ENTITY_ID` -> EntityIdComparison \n* `SIMPLE_TECH` -> SimpleTechComparison \n* `SIMPLE_HOST_TECH` -> SimpleHostTechComparison \n* `SERVICE_TOPOLOGY` -> ServiceTopologyComparison \n* `DATABASE_TOPOLOGY` -> DatabaseTopologyComparison \n* `OS_TYPE` -> OsTypeComparison \n* `HYPERVISOR_TYPE` -> HypervisorTypeComparision \n* `IP_ADDRESS` -> IpAddressComparison \n* `OS_ARCHITECTURE` -> OsArchitectureComparison \n* `BITNESS` -> BitnessComparision \n* `APPLICATION_TYPE` -> ApplicationTypeComparison \n* `MOBILE_PLATFORM` -> MobilePlatformComparison \n* `CUSTOM_APPLICATION_TYPE` -> CustomApplicationTypeComparison \n* `DCRUM_DECODER_TYPE` -> DcrumDecoderComparison \n* `SYNTHETIC_ENGINE_TYPE` -> SyntheticEngineTypeComparison \n* `TAG` -> TagComparison \n* `INDEXED_TAG` -> IndexedTagComparison \n",
            "enum" : [ "APPLICATION_TYPE", "AZURE_COMPUTE_MODE", "AZURE_SKU", "BITNESS", "CLOUD_TYPE", "CUSTOM_APPLICATION_TYPE", "DATABASE_TOPOLOGY", "DCRUM_DECODER_TYPE", "ENTITY_ID", "HYPERVISOR_TYPE", "INDEXED_NAME", "INDEXED_STRING", "INDEXED_TAG", "INTEGER", "IP_ADDRESS", "MOBILE_PLATFORM", "OS_ARCHITECTURE", "OS_TYPE", "PAAS_TYPE", "SERVICE_TOPOLOGY", "SERVICE_TYPE", "SIMPLE_HOST_TECH", "SIMPLE_TECH", "STRING", "SYNTHETIC_ENGINE_TYPE", "TAG" ]
          }
        },
        "description" : "Defines how the matching is actually performed: what and how are we comparing. \n\nThe actual set of fields and possible values of the **operator** field depend on the type of the comparison. Find the list of actual objects in the description of the **type** field or see [JSON models](https://dt-url.net/0b83s6z).",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "ConditionKey" : {
        "required" : [ "attribute" ],
        "type" : "object",
        "properties" : {
          "attribute" : {
            "type" : "string",
            "description" : "The attribute to be used for comparison.",
            "enum" : [ "APPMON_SERVER_NAME", "APPMON_SYSTEM_PROFILE_NAME", "AWS_ACCOUNT_ID", "AWS_ACCOUNT_NAME", "AWS_APPLICATION_LOAD_BALANCER_NAME", "AWS_APPLICATION_LOAD_BALANCER_TAGS", "AWS_AUTO_SCALING_GROUP_NAME", "AWS_AUTO_SCALING_GROUP_TAGS", "AWS_AVAILABILITY_ZONE_NAME", "AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS", "AWS_CLASSIC_LOAD_BALANCER_NAME", "AWS_CLASSIC_LOAD_BALANCER_TAGS", "AWS_NETWORK_LOAD_BALANCER_NAME", "AWS_NETWORK_LOAD_BALANCER_TAGS", "AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME", "AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT", "AWS_RELATIONAL_DATABASE_SERVICE_ENGINE", "AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS", "AWS_RELATIONAL_DATABASE_SERVICE_NAME", "AWS_RELATIONAL_DATABASE_SERVICE_PORT", "AWS_RELATIONAL_DATABASE_SERVICE_TAGS", "AZURE_ENTITY_NAME", "AZURE_ENTITY_TAGS", "AZURE_MGMT_GROUP_NAME", "AZURE_MGMT_GROUP_UUID", "AZURE_REGION_NAME", "AZURE_SCALE_SET_NAME", "AZURE_SUBSCRIPTION_NAME", "AZURE_SUBSCRIPTION_UUID", "AZURE_TENANT_NAME", "AZURE_TENANT_UUID", "AZURE_VM_NAME", "BROWSER_MONITOR_NAME", "BROWSER_MONITOR_TAGS", "CLOUD_APPLICATION_LABELS", "CLOUD_APPLICATION_NAME", "CLOUD_APPLICATION_NAMESPACE_LABELS", "CLOUD_APPLICATION_NAMESPACE_NAME", "CLOUD_FOUNDRY_FOUNDATION_NAME", "CLOUD_FOUNDRY_ORG_NAME", "CUSTOM_APPLICATION_NAME", "CUSTOM_APPLICATION_PLATFORM", "CUSTOM_APPLICATION_TAGS", "CUSTOM_APPLICATION_TYPE", "CUSTOM_DEVICE_DETECTED_NAME", "CUSTOM_DEVICE_DNS_ADDRESS", "CUSTOM_DEVICE_GROUP_NAME", "CUSTOM_DEVICE_GROUP_TAGS", "CUSTOM_DEVICE_IP_ADDRESS", "CUSTOM_DEVICE_METADATA", "CUSTOM_DEVICE_NAME", "CUSTOM_DEVICE_PORT", "CUSTOM_DEVICE_TAGS", "CUSTOM_DEVICE_TECHNOLOGY", "DATA_CENTER_SERVICE_DECODER_TYPE", "DATA_CENTER_SERVICE_IP_ADDRESS", "DATA_CENTER_SERVICE_METADATA", "DATA_CENTER_SERVICE_NAME", "DATA_CENTER_SERVICE_PORT", "DATA_CENTER_SERVICE_TAGS", "DOCKER_CONTAINER_NAME", "DOCKER_FULL_IMAGE_NAME", "DOCKER_IMAGE_VERSION", "DOCKER_STRIPPED_IMAGE_NAME", "EC2_INSTANCE_AMI_ID", "EC2_INSTANCE_AWS_INSTANCE_TYPE", "EC2_INSTANCE_AWS_SECURITY_GROUP", "EC2_INSTANCE_BEANSTALK_ENV_NAME", "EC2_INSTANCE_ID", "EC2_INSTANCE_NAME", "EC2_INSTANCE_PRIVATE_HOST_NAME", "EC2_INSTANCE_PUBLIC_HOST_NAME", "EC2_INSTANCE_TAGS", "ENTERPRISE_APPLICATION_DECODER_TYPE", "ENTERPRISE_APPLICATION_IP_ADDRESS", "ENTERPRISE_APPLICATION_METADATA", "ENTERPRISE_APPLICATION_NAME", "ENTERPRISE_APPLICATION_PORT", "ENTERPRISE_APPLICATION_TAGS", "ESXI_HOST_CLUSTER_NAME", "ESXI_HOST_HARDWARE_MODEL", "ESXI_HOST_HARDWARE_VENDOR", "ESXI_HOST_NAME", "ESXI_HOST_PRODUCT_NAME", "ESXI_HOST_PRODUCT_VERSION", "ESXI_HOST_TAGS", "EXTERNAL_MONITOR_ENGINE_DESCRIPTION", "EXTERNAL_MONITOR_ENGINE_NAME", "EXTERNAL_MONITOR_ENGINE_TYPE", "EXTERNAL_MONITOR_NAME", "EXTERNAL_MONITOR_TAGS", "GEOLOCATION_SITE_NAME", "GOOGLE_CLOUD_PLATFORM_ZONE_NAME", "GOOGLE_COMPUTE_INSTANCE_ID", "GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE", "GOOGLE_COMPUTE_INSTANCE_NAME", "GOOGLE_COMPUTE_INSTANCE_PROJECT", "GOOGLE_COMPUTE_INSTANCE_PROJECT_ID", "GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES", "HOST_AIX_LOGICAL_CPU_COUNT", "HOST_AIX_SIMULTANEOUS_THREADS", "HOST_AIX_VIRTUAL_CPU_COUNT", "HOST_ARCHITECTURE", "HOST_AWS_NAME_TAG", "HOST_AZURE_COMPUTE_MODE", "HOST_AZURE_SKU", "HOST_AZURE_WEB_APPLICATION_HOST_NAMES", "HOST_AZURE_WEB_APPLICATION_SITE_NAMES", "HOST_BITNESS", "HOST_BOSH_AVAILABILITY_ZONE", "HOST_BOSH_DEPLOYMENT_ID", "HOST_BOSH_INSTANCE_ID", "HOST_BOSH_INSTANCE_NAME", "HOST_BOSH_NAME", "HOST_BOSH_STEMCELL_VERSION", "HOST_CLOUD_TYPE", "HOST_CPU_CORES", "HOST_CUSTOM_METADATA", "HOST_DETECTED_NAME", "HOST_GROUP_ID", "HOST_GROUP_NAME", "HOST_HYPERVISOR_TYPE", "HOST_IP_ADDRESS", "HOST_KUBERNETES_LABELS", "HOST_LOGICAL_CPU_CORES", "HOST_NAME", "HOST_ONEAGENT_CUSTOM_HOST_NAME", "HOST_OS_TYPE", "HOST_OS_VERSION", "HOST_PAAS_MEMORY_LIMIT", "HOST_PAAS_TYPE", "HOST_TAGS", "HOST_TECHNOLOGY", "HTTP_MONITOR_NAME", "HTTP_MONITOR_TAGS", "KUBERNETES_CLUSTER_NAME", "KUBERNETES_NODE_NAME", "MOBILE_APPLICATION_NAME", "MOBILE_APPLICATION_PLATFORM", "MOBILE_APPLICATION_TAGS", "NAME_OF_COMPUTE_NODE", "OPENSTACK_ACCOUNT_NAME", "OPENSTACK_ACCOUNT_PROJECT_NAME", "OPENSTACK_AVAILABILITY_ZONE_NAME", "OPENSTACK_PROJECT_NAME", "OPENSTACK_REGION_NAME", "OPENSTACK_VM_INSTANCE_TYPE", "OPENSTACK_VM_NAME", "OPENSTACK_VM_SECURITY_GROUP", "PROCESS_GROUP_AZURE_HOST_NAME", "PROCESS_GROUP_AZURE_SITE_NAME", "PROCESS_GROUP_CUSTOM_METADATA", "PROCESS_GROUP_DETECTED_NAME", "PROCESS_GROUP_ID", "PROCESS_GROUP_LISTEN_PORT", "PROCESS_GROUP_NAME", "PROCESS_GROUP_PREDEFINED_METADATA", "PROCESS_GROUP_TAGS", "PROCESS_GROUP_TECHNOLOGY", "PROCESS_GROUP_TECHNOLOGY_EDITION", "PROCESS_GROUP_TECHNOLOGY_VERSION", "QUEUE_NAME", "QUEUE_TECHNOLOGY", "QUEUE_VENDOR", "SERVICE_AKKA_ACTOR_SYSTEM", "SERVICE_CTG_SERVICE_NAME", "SERVICE_DATABASE_HOST_NAME", "SERVICE_DATABASE_NAME", "SERVICE_DATABASE_TOPOLOGY", "SERVICE_DATABASE_VENDOR", "SERVICE_DETECTED_NAME", "SERVICE_ESB_APPLICATION_NAME", "SERVICE_IBM_CTG_GATEWAY_URL", "SERVICE_IIB_APPLICATION_NAME", "SERVICE_MESSAGING_LISTENER_CLASS_NAME", "SERVICE_NAME", "SERVICE_PORT", "SERVICE_PUBLIC_DOMAIN_NAME", "SERVICE_REMOTE_ENDPOINT", "SERVICE_REMOTE_SERVICE_NAME", "SERVICE_TAGS", "SERVICE_TECHNOLOGY", "SERVICE_TECHNOLOGY_EDITION", "SERVICE_TECHNOLOGY_VERSION", "SERVICE_TOPOLOGY", "SERVICE_TYPE", "SERVICE_WEB_APPLICATION_ID", "SERVICE_WEB_CONTEXT_ROOT", "SERVICE_WEB_SERVER_ENDPOINT", "SERVICE_WEB_SERVER_NAME", "SERVICE_WEB_SERVICE_NAME", "SERVICE_WEB_SERVICE_NAMESPACE", "VMWARE_DATACENTER_NAME", "VMWARE_VM_NAME", "WEB_APPLICATION_NAME", "WEB_APPLICATION_NAME_PATTERN", "WEB_APPLICATION_TAGS", "WEB_APPLICATION_TYPE" ]
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `PROCESS_CUSTOM_METADATA_KEY` -> CustomProcessMetadataConditionKey \n* `HOST_CUSTOM_METADATA_KEY` -> CustomHostMetadataConditionKey \n* `PROCESS_PREDEFINED_METADATA_KEY` -> ProcessMetadataConditionKey \n* `STRING` -> StringConditionKey \n* `STATIC` -> StaticConditionKey \n",
            "enum" : [ "HOST_CUSTOM_METADATA_KEY", "PROCESS_CUSTOM_METADATA_KEY", "PROCESS_PREDEFINED_METADATA_KEY", "STATIC", "STRING" ]
          }
        },
        "description" : "The key to identify the data we're matching. \n\nThe actual set of fields and possible values depend on the type of the key. Find the list of actual objects in the description of the **type** field or see [JSON models](https://dt-url.net/0b83s6z).",
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "PROCESS_CUSTOM_METADATA_KEY" : "#/components/schemas/CustomProcessMetadataConditionKey",
            "HOST_CUSTOM_METADATA_KEY" : "#/components/schemas/CustomHostMetadataConditionKey",
            "PROCESS_PREDEFINED_METADATA_KEY" : "#/components/schemas/ProcessMetadataConditionKey",
            "STRING" : "#/components/schemas/StringConditionKey",
            "STATIC" : "#/components/schemas/StaticConditionKey"
          }
        }
      },
      "CustomApplicationTypeComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `CUSTOM_APPLICATION_TYPE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "AMAZON_ECHO", "DESKTOP", "EMBEDDED", "IOT", "MICROSOFT_HOLOLENS", "UFO" ]
            }
          }
        } ]
      },
      "CustomHostMetadataConditionKey" : {
        "required" : [ "attribute", "dynamicKey" ],
        "type" : "object",
        "description" : "The key for dynamic attributes of the `HOST_CUSTOM_METADATA_KEY` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConditionKey"
        }, {
          "type" : "object",
          "properties" : {
            "dynamicKey" : {
              "$ref" : "#/components/schemas/CustomHostMetadataKey"
            }
          }
        } ]
      },
      "CustomHostMetadataKey" : {
        "required" : [ "key", "source" ],
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string",
            "description" : "The source of the custom metadata.",
            "enum" : [ "ENVIRONMENT", "GOOGLE_COMPUTE_ENGINE", "PLUGIN" ]
          },
          "key" : {
            "maxLength" : 256,
            "minLength" : 0,
            "type" : "string",
            "description" : "The actual key of the custom metadata."
          }
        },
        "description" : "The key of the attribute, which need dynamic keys. \n\nNot applicable otherwise, as the attibute itself acts as a key."
      },
      "CustomProcessMetadataConditionKey" : {
        "required" : [ "attribute", "dynamicKey" ],
        "type" : "object",
        "description" : "The key for dynamic attributes of the `PROCESS_CUSTOM_METADATA_KEY` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConditionKey"
        }, {
          "type" : "object",
          "properties" : {
            "dynamicKey" : {
              "$ref" : "#/components/schemas/CustomProcessMetadataKey"
            }
          }
        } ]
      },
      "CustomProcessMetadataKey" : {
        "required" : [ "key", "source" ],
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string",
            "description" : "The source of the custom metadata.",
            "enum" : [ "AGENT", "CLOUD_FOUNDRY", "ENVIRONMENT", "GOOGLE_CLOUD", "KUBERNETES", "PLUGIN" ]
          },
          "key" : {
            "maxLength" : 256,
            "minLength" : 0,
            "type" : "string",
            "description" : "The actual key of the custom metadata."
          }
        },
        "description" : "The key of the attribute, which need dynamic keys. \n\nNot applicable otherwise, as the attibute itself acts as a key."
      },
      "DatabaseTopologyComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `DATABASE_TOPOLOGY` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "CLUSTER", "EMBEDDED", "FAILOVER", "IPC", "LOAD_BALANCING", "SINGLE_SERVER", "UNSPECIFIED" ]
            }
          }
        } ]
      },
      "DcrumDecoderComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `DCRUM_DECODER_TYPE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "ALL_OTHER", "CITRIX_APPFLOW", "CITRIX_ICA", "CITRIX_ICA_OVER_SSL", "DB2_DRDA", "HTTP", "HTTPS", "HTTP_EXPRESS", "INFORMIX", "MYSQL", "ORACLE", "SAP_GUI", "SAP_GUI_OVER_HTTP", "SAP_GUI_OVER_HTTPS", "SAP_HANA_DB", "SAP_RFC", "SSL", "TDS" ]
            }
          }
        } ]
      },
      "EntityIdComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `ENTITY_ID` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to."
            }
          }
        } ]
      },
      "EntityRuleEngineCondition" : {
        "required" : [ "comparisonInfo", "key" ],
        "type" : "object",
        "properties" : {
          "key" : {
            "$ref" : "#/components/schemas/ConditionKey"
          },
          "comparisonInfo" : {
            "$ref" : "#/components/schemas/ComparisonBasic"
          }
        },
        "description" : "A condition defines how to execute matching logic for an entity."
      },
      "EntitySelectorBasedAutoTagRule" : {
        "required" : [ "entitySelector" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          },
          "entitySelector" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The entity selector string, by which the entities are selected."
          },
          "valueFormat" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "The value of the entity-selector-based auto-tag. If specified, the tag is used in the `name:valueFormat` format. \n\nFor example, you can extend the `Infrastructure` tag to `Infrastructure:Windows` and `Infrastructure:Linux`. \n\n"
          },
          "normalization" : {
            "type" : "string",
            "description" : "Changes applied to the value after applying the value format. Default is LEAVE_TEXT_AS_IS.",
            "nullable" : true,
            "enum" : [ "LEAVE_TEXT_AS_IS", "TO_LOWER_CASE", "TO_UPPER_CASE" ]
          }
        },
        "description" : "The entity-selector-based rule for auto tag usage. It allows tagging entities via an entity selector."
      },
      "HypervisorTypeComparision" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `HYPERVISOR_TYPE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "AHV", "HYPER_V", "KVM", "LPAR", "QEMU", "UNRECOGNIZED", "VIRTUAL_BOX", "VMWARE", "WPAR", "XEN" ]
            }
          }
        } ]
      },
      "IndexedNameComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `INDEXED_NAME` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "CONTAINS", "EQUALS", "EXISTS" ]
            },
            "value" : {
              "maxLength" : 80,
              "minLength" : 0,
              "type" : "string",
              "description" : "The value to compare to."
            }
          }
        } ]
      },
      "IndexedStringComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `INDEXED_STRING` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "maxLength" : 80,
              "minLength" : 0,
              "type" : "string",
              "description" : "The value to compare to."
            }
          }
        } ]
      },
      "IndexedTagComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `INDEXED_TAG` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS", "TAG_KEY_EQUALS" ]
            },
            "value" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          }
        } ]
      },
      "IntegerComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `INTEGER` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "LOWER_THAN", "LOWER_THAN_OR_EQUAL" ]
            },
            "value" : {
              "type" : "integer",
              "description" : "The value to compare to.",
              "format" : "int32"
            }
          }
        } ]
      },
      "IpAddressComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `IP_ADDRESS` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS", "EXISTS", "IS_IP_IN_RANGE", "REGEX_MATCHES" ]
            },
            "value" : {
              "maxLength" : 80,
              "minLength" : 0,
              "type" : "string",
              "description" : "The value to compare to."
            },
            "caseSensitive" : {
              "type" : "boolean",
              "description" : "The comparison is case-sensitive (`true`) or insensitive (`false`)."
            }
          }
        } ]
      },
      "MobilePlatformComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `MOBILE_PLATFORM` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "ANDROID", "IOS", "LINUX", "MAC_OS", "OTHER", "TVOS", "WINDOWS" ]
            }
          }
        } ]
      },
      "OsArchitectureComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `OS_ARCHITECTURE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "ARM", "IA64", "PARISC", "PPC", "PPCLE", "S390", "SPARC", "X86", "ZOS" ]
            }
          }
        } ]
      },
      "OsTypeComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `OS_TYPE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "AIX", "DARWIN", "HPUX", "LINUX", "SOLARIS", "WINDOWS", "ZOS" ]
            }
          }
        } ]
      },
      "PaasTypeComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `PAAS_TYPE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "AWS_ECS_EC2", "AWS_ECS_FARGATE", "AWS_LAMBDA", "AZURE_FUNCTIONS", "AZURE_WEBSITES", "CLOUD_FOUNDRY", "GOOGLE_APP_ENGINE", "HEROKU", "KUBERNETES", "OPENSHIFT" ]
            }
          }
        } ]
      },
      "ProcessMetadataConditionKey" : {
        "required" : [ "attribute", "dynamicKey" ],
        "type" : "object",
        "description" : "The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConditionKey"
        }, {
          "type" : "object",
          "properties" : {
            "dynamicKey" : {
              "type" : "string",
              "description" : "The key of the attribute, which need dynamic keys. \n\nNot applicable otherwise, as the attibute itself acts as a key.",
              "enum" : [ "AMAZON_ECR_IMAGE_ACCOUNT_ID", "AMAZON_ECR_IMAGE_REGION", "AMAZON_LAMBDA_FUNCTION_NAME", "AMAZON_REGION", "APACHE_CONFIG_PATH", "APACHE_SPARK_MASTER_IP_ADDRESS", "ASP_DOT_NET_CORE_APPLICATION_PATH", "AWS_ECS_CLUSTER", "AWS_ECS_CONTAINERNAME", "AWS_ECS_FAMILY", "AWS_ECS_REVISION", "CASSANDRA_CLUSTER_NAME", "CATALINA_BASE", "CATALINA_HOME", "CLOUD_FOUNDRY_APP_ID", "CLOUD_FOUNDRY_APP_NAME", "CLOUD_FOUNDRY_INSTANCE_INDEX", "CLOUD_FOUNDRY_SPACE_ID", "CLOUD_FOUNDRY_SPACE_NAME", "COLDFUSION_JVM_CONFIG_FILE", "COLDFUSION_SERVICE_NAME", "COMMAND_LINE_ARGS", "CONTAINER_ID", "CONTAINER_IMAGE_NAME", "CONTAINER_IMAGE_VERSION", "DECLARATIVE_ID", "DOTNET_COMMAND", "DOTNET_COMMAND_PATH", "DYNATRACE_CLUSTER_ID", "DYNATRACE_NODE_ID", "ELASTICSEARCH_CLUSTER_NAME", "ELASTICSEARCH_NODE_NAME", "EQUINOX_CONFIG_PATH", "EXE_NAME", "EXE_PATH", "GLASS_FISH_DOMAIN_NAME", "GLASS_FISH_INSTANCE_NAME", "GOOGLE_APP_ENGINE_INSTANCE", "GOOGLE_APP_ENGINE_SERVICE", "GOOGLE_CLOUD_PROJECT", "HYBRIS_BIN_DIRECTORY", "HYBRIS_CONFIG_DIRECTORY", "HYBRIS_DATA_DIRECTORY", "IBM_CICS_REGION", "IBM_CTG_NAME", "IBM_IMS_CONNECT_REGION", "IBM_IMS_CONTROL_REGION", "IBM_IMS_MESSAGE_PROCESSING_REGION", "IBM_IMS_SOAP_GW_NAME", "IBM_INTEGRATION_NODE_NAME", "IBM_INTEGRATION_SERVER_NAME", "IIS_APP_POOL", "IIS_ROLE_NAME", "JAVA_JAR_FILE", "JAVA_JAR_PATH", "JAVA_MAIN_CLASS", "JAVA_MAIN_MODULE", "JBOSS_HOME", "JBOSS_MODE", "JBOSS_SERVER_NAME", "KUBERNETES_BASE_POD_NAME", "KUBERNETES_CONTAINER_NAME", "KUBERNETES_FULL_POD_NAME", "KUBERNETES_NAMESPACE", "KUBERNETES_POD_UID", "KUBERNETES_RULE_RESULT", "MSSQL_INSTANCE_NAME", "NODE_JS_APP_BASE_DIRECTORY", "NODE_JS_APP_NAME", "NODE_JS_SCRIPT_NAME", "ORACLE_SID", "PG_ID_CALC_INPUT_KEY_LINKAGE", "PHP_SCRIPT_PATH", "PHP_WORKING_DIRECTORY", "RUBY_APP_ROOT_PATH", "RUBY_SCRIPT_PATH", "RULE_RESULT", "SOFTWAREAG_INSTALL_ROOT", "SOFTWAREAG_PRODUCTPROPNAME", "SPRINGBOOT_APP_NAME", "SPRINGBOOT_PROFILE_NAME", "SPRINGBOOT_STARTUP_CLASS", "TIBCO_BUSINESSWORKS_CE_APP_NAME", "TIBCO_BUSINESSWORKS_CE_VERSION", "TIBCO_BUSINESS_WORKS_APP_NODE_NAME", "TIBCO_BUSINESS_WORKS_APP_SPACE_NAME", "TIBCO_BUSINESS_WORKS_DOMAIN_NAME", "TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE", "TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH", "TIBCO_BUSINESS_WORKS_HOME", "VARNISH_INSTANCE_NAME", "WEBSPHERE_LIBERTY_SERVER_NAME", "WEB_LOGIC_CLUSTER_NAME", "WEB_LOGIC_DOMAIN_NAME", "WEB_LOGIC_HOME", "WEB_LOGIC_NAME", "WEB_SPHERE_CELL_NAME", "WEB_SPHERE_CLUSTER_NAME", "WEB_SPHERE_NODE_NAME", "WEB_SPHERE_SERVER_NAME" ]
            }
          }
        } ]
      },
      "ServiceTopologyComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `SERVICE_TOPOLOGY` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "EXTERNAL_SERVICE", "FULLY_MONITORED", "OPAQUE_SERVICE" ]
            }
          }
        } ]
      },
      "ServiceTypeComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `SERVICE_TYPE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "BACKGROUND_ACTIVITY", "CICS_SERVICE", "CUSTOM_SERVICE", "DATABASE_SERVICE", "ENTERPRISE_SERVICE_BUS_SERVICE", "EXTERNAL", "IBM_INTEGRATION_BUS_SERVICE", "IMS_SERVICE", "MESSAGING_SERVICE", "QUEUE_LISTENER_SERVICE", "RMI_SERVICE", "RPC_SERVICE", "WEB_REQUEST_SERVICE", "WEB_SERVICE", "ZOS_CONNECT" ]
            }
          }
        } ]
      },
      "SimpleHostTech" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Predefined technology, if technology is not predefined, then the verbatim type must be set",
            "enum" : [ "APPARMOR", "BOSH", "BOSHBPM", "CLOUDFOUNDRY", "CONTAINERD", "CRIO", "DIEGO_CELL", "DOCKER", "GARDEN", "GRSECURITY", "KUBERNETES", "OPENSHIFT", "OPENSTACK_COMPUTE", "OPENSTACK_CONTROLLER", "SELINUX" ]
          },
          "verbatimType" : {
            "maxLength" : 128,
            "minLength" : 0,
            "type" : "string",
            "description" : "Non-predefined technology, use for custom technologies."
          }
        },
        "description" : "The value to compare to."
      },
      "SimpleHostTechComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `SIMPLE_HOST_TECH` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "$ref" : "#/components/schemas/SimpleHostTech"
            }
          }
        } ]
      },
      "SimpleTech" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Predefined technology, if technology is not predefined, then the verbatim type must be set",
            "enum" : [ "ACTIVE_MQ", "ACTIVE_MQ_ARTEMIS", "ADO_NET", "AIX", "AKKA", "AMAZON_REDSHIFT", "AMQP", "APACHE_CAMEL", "APACHE_CASSANDRA", "APACHE_COUCH_DB", "APACHE_DERBY", "APACHE_HTTP_CLIENT_ASYNC", "APACHE_HTTP_CLIENT_SYNC", "APACHE_HTTP_SERVER", "APACHE_KAFKA", "APACHE_LOG4J", "APACHE_SOLR", "APACHE_STORM", "APACHE_SYNAPSE", "APACHE_TOMCAT", "APPARMOR", "APPLICATION_INSIGHTS_SDK", "ASP_DOTNET", "ASP_DOTNET_CORE", "ASP_DOTNET_CORE_SIGNALR", "ASP_DOTNET_SIGNALR", "ASYNC_HTTP_CLIENT", "AWS_DYNAMO_DB", "AWS_LAMBDA", "AWS_RDS", "AWS_SERVICE", "AXIS", "AZURE_FUNCTIONS", "AZURE_SERVICE_BUS", "AZURE_SERVICE_FABRIC", "AZURE_STORAGE", "BOSHBPM", "CITRIX", "CITRIX_COMMON", "CITRIX_DESKTOP_DELIVERY_CONTROLLERS", "CITRIX_DIRECTOR", "CITRIX_LICENSE_SERVER", "CITRIX_PROVISIONING_SERVICES", "CITRIX_STOREFRONT", "CITRIX_VIRTUAL_DELIVERY_AGENT", "CITRIX_WORKSPACE_ENVIRONMENT_MANAGEMENT", "CITRIX_XEN", "CLOUDFOUNDRY", "CLOUDFOUNDRY_AUCTIONEER", "CLOUDFOUNDRY_BOSH", "CLOUDFOUNDRY_GOROUTER", "COLDFUSION", "CONFLUENT_KAFKA_CLIENT", "CONTAINERD", "CORE_DNS", "COUCHBASE", "CRIO", "CXF", "DATASTAX", "DB2", "DIEGO_CELL", "DOCKER", "DOTNET", "DOTNET_REMOTING", "ELASTIC_SEARCH", "ENVOY", "ERLANG", "ETCD", "F5_LTM", "FSHARP", "GARDEN", "GLASSFISH", "GO", "GOOGLE_CLOUD_FUNCTIONS", "GRAAL_TRUFFLE", "GRPC", "GRSECURITY", "HADOOP", "HADOOP_HDFS", "HADOOP_YARN", "HAPROXY", "HEAT", "HESSIAN", "HORNET_Q", "IBM_CICS_REGION", "IBM_CICS_TRANSACTION_GATEWAY", "IBM_IMS_CONNECT_REGION", "IBM_IMS_CONTROL_REGION", "IBM_IMS_MESSAGE_PROCESSING_REGION", "IBM_IMS_SOAP_GATEWAY", "IBM_INTEGRATION_BUS", "IBM_MQ", "IBM_MQ_CLIENT", "IBM_WEBSHPRERE_APPLICATION_SERVER", "IBM_WEBSHPRERE_LIBERTY", "IBM_WEBSPHERE_APPLICATION_SERVER", "IBM_WEBSPHERE_LIBERTY", "IIS", "IIS_APP_POOL", "ISTIO", "JAVA", "JAX_WS", "JBOSS", "JBOSS_EAP", "JDK_HTTP_SERVER", "JERSEY", "JETTY", "JRUBY", "JYTHON", "KUBERNETES", "LIBC", "LIBVIRT", "LINKERD", "LINUX_SYSTEM", "MARIADB", "MEMCACHED", "MICROSOFT_SQL_SERVER", "MONGODB", "MSSQL_CLIENT", "MULE_ESB", "MYSQL", "MYSQL_CONNECTOR", "NETFLIX_SERVO", "NETTY", "NGINX", "NODE_JS", "OK_HTTP_CLIENT", "ONEAGENT_SDK", "OPENCENSUS", "OPENSHIFT", "OPENSTACK_COMPUTE", "OPENSTACK_CONTROLLER", "OPENTELEMETRY", "OPENTRACING", "OPEN_LIBERTY", "ORACLE_DATABASE", "ORACLE_WEBLOGIC", "OWIN", "PERL", "PHP", "PHP_FPM", "PLAY", "POSTGRE_SQL", "POSTGRE_SQL_DOTNET_DATA_PROVIDER", "POWER_DNS", "PROGRESS", "PYTHON", "QOS_LOGBACK", "RABBIT_MQ", "REACTOR_CORE", "REDIS", "RESTEASY", "RESTLET", "RIAK", "RSOCKET", "RUBY", "RUNC", "RXJAVA", "SAG_WEBMETHODS_IS", "SAP", "SAP_HANADB", "SAP_HYBRIS", "SAP_MAXDB", "SAP_SYBASE", "SCALA", "SELINUX", "SHAREPOINT", "SPARK", "SPRING", "SQLITE", "THRIFT", "TIBCO", "TIBCO_BUSINESS_WORKS", "TIBCO_EMS", "UNDERTOW_IO", "VARNISH_CACHE", "VERTX", "VIM2", "VIOS", "VIRTUAL_MACHINE_KVM", "VIRTUAL_MACHINE_QEMU", "WILDFLY", "WINDOWS_CONTAINERS", "WINDOWS_SYSTEM", "WINK", "ZERO_MQ", "ZOS_CONNECT" ]
          },
          "verbatimType" : {
            "maxLength" : 128,
            "minLength" : 0,
            "type" : "string",
            "description" : "Non-predefined technology, use for custom technologies."
          }
        },
        "description" : "The value to compare to."
      },
      "SimpleTechComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `SIMPLE_TECH` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "$ref" : "#/components/schemas/SimpleTech"
            }
          }
        } ]
      },
      "StaticConditionKey" : {
        "required" : [ "attribute" ],
        "type" : "object",
        "description" : "Key for attributes without dynamic key. Some fields are inherited from the parent `ConditionKey` model.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConditionKey"
        } ]
      },
      "StringComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `STRING` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS", "EXISTS", "REGEX_MATCHES" ]
            },
            "value" : {
              "maxLength" : 80,
              "minLength" : 0,
              "type" : "string",
              "description" : "The value to compare to."
            },
            "caseSensitive" : {
              "type" : "boolean",
              "description" : "The comparison is case-sensitive (`true`) or insensitive (`false`)."
            }
          }
        } ]
      },
      "StringConditionKey" : {
        "required" : [ "attribute", "dynamicKey" ],
        "type" : "object",
        "description" : "The key for dynamic attributes of the `STRING` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConditionKey"
        }, {
          "type" : "object",
          "properties" : {
            "dynamicKey" : {
              "type" : "string",
              "description" : "The key of the attribute, which need dynamic keys. \n\nNot applicable otherwise, as the attibute itself acts as a key."
            }
          }
        } ]
      },
      "SyntheticEngineTypeComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `SYNTHETIC_ENGINE_TYPE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "CLASSIC", "CUSTOM" ]
            }
          }
        } ]
      },
      "TagComparison" : {
        "required" : [ "negate", "operator" ],
        "type" : "object",
        "description" : "Comparison for `TAG` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonBasic"
        }, {
          "type" : "object",
          "properties" : {
            "operator" : {
              "type" : "string",
              "description" : "Operator of the comparison. You can reverse it by setting **negate** to `true`. \n\nPossible values depend on the **type** of the comparison. Find the list of actual models in the description of the **type** field and check the description of the model you need.",
              "enum" : [ "EQUALS", "TAG_KEY_EQUALS" ]
            },
            "value" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          }
        } ]
      },
      "TagInfo" : {
        "required" : [ "context", "key" ],
        "type" : "object",
        "properties" : {
          "context" : {
            "type" : "string",
            "description" : "The origin of the tag, such as AWS or Cloud Foundry. \n\n Custom tags use the `CONTEXTLESS` value.",
            "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_CLOUD", "KUBERNETES" ]
          },
          "key" : {
            "maxLength" : 2000,
            "minLength" : 1,
            "type" : "string",
            "description" : "The key of the tag. \n\n Custom tags have the tag value here."
          },
          "value" : {
            "maxLength" : 2000,
            "minLength" : 0,
            "type" : "string",
            "description" : "The value of the tag. \n\n Not applicable to custom tags."
          }
        },
        "description" : "Tag of a Dynatrace entity."
      },
      "EnvironmentAutoUpdateConfig" : {
        "required" : [ "setting" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "setting" : {
            "type" : "string",
            "description" : "The auto-update state of OneAgents connecting to the environment: \n\n* `ENABLED`: OneAgents automatically update to the most recent version. \n* `DISABLED`: OneAgents update to the version specified in the **version** field.\n\nOneAgents that connect to the environment use this configuration only when their **setting** parameter is set to `INHERITED`.",
            "example" : "DISABLED",
            "enum" : [ "ENABLED", "DISABLED" ]
          },
          "version" : {
            "type" : "string",
            "description" : "The version to which the OneAgent must be updated. \n\nSpecify the version in the `<major>.<minor>.<revision>` format (for example `1.181.0`) or `<major>.<minor>` format (for example `1.181`). You can fetch the list of available versions with the [GET available versions](https://dt-url.net/fo23rb5) call. If no suitable installer is found for the provided version or the value is set to `null`, OneAgent won't be updated. \n\nOnly applicable when the **setting** parameter is set to `DISABLED`.",
            "example" : "1.181.0"
          },
          "updateWindows" : {
            "$ref" : "#/components/schemas/UpdateWindowsConfig"
          }
        },
        "description" : "Environment-wide configuration of OneAgents auto-updates. \n\nApplies to all OneAgents connecting to the environment if their **setting** parameter is set to `INHERITED`. Otherwise, the host group or host level setting applies."
      },
      "UpdateWindow" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of maintenance window",
            "readOnly" : true,
            "example" : "Daily maintenance window"
          },
          "id" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Identifier of maintenance window",
            "example" : "vu9U3hXa3q0AAAABADdkeW5hdHJhY2Uuc2V0dGluZ3MuZGVwbG95bWVudC5tYW5h"
          }
        },
        "description" : "Basic information about one maintenance window"
      },
      "UpdateWindowsConfig" : {
        "required" : [ "windows" ],
        "type" : "object",
        "properties" : {
          "windows" : {
            "maxItems" : 1,
            "minItems" : 0,
            "type" : "array",
            "description" : "List of maintenance windows when the OneAgent update can start. If there is no value and update should be performed, the update will start at earliest convenience.",
            "items" : {
              "$ref" : "#/components/schemas/UpdateWindow"
            }
          }
        },
        "description" : "Basic information about all configured maintenance windows"
      },
      "AllowedBeaconOrigins" : {
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "allowedBeaconOrigins" : {
            "type" : "array",
            "description" : "A list of allowed beacon origins for CORS requests.",
            "items" : {
              "$ref" : "#/components/schemas/BeaconDomainPattern"
            }
          },
          "rejectBeaconsWithoutOriginHeader" : {
            "type" : "boolean",
            "description" : "Discard (`true`) or keep (`false`) beacons without the **Origin** HTTP header on the BeaconForwarder. \n\nIf not set, `false` is used."
          }
        },
        "description" : "Configuration of the allowed beacon origins for CORS requests.",
        "example" : {
          "metadata" : {
            "configurationVersions" : [ 4, 2 ],
            "clusterVersion" : "Mock version"
          },
          "allowedBeaconOrigins" : [ {
            "domainNameMatcher" : "EQUALS",
            "domainNamePattern" : "dynatrace.com"
          } ]
        }
      },
      "BeaconDomainPattern" : {
        "required" : [ "domainNameMatcher", "domainNamePattern" ],
        "type" : "object",
        "properties" : {
          "domainNameMatcher" : {
            "type" : "string",
            "description" : "The matching operation for the **domainNamePattern**.",
            "enum" : [ "CONTAINS", "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
          },
          "domainNamePattern" : {
            "type" : "string",
            "description" : "The pattern of the allowed domain name."
          }
        },
        "description" : "Allowed beacon origin for CORS requests."
      },
      "ConditionalNamingRule" : {
        "required" : [ "displayName", "enabled", "nameFormat", "rules", "type" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the naming rule.",
            "format" : "uuid",
            "example" : "12345678-abcd-1234-abcd-1234567890ab"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of Dynatrace entities to which the rule applies.",
            "example" : "PROCESS_GROUP",
            "enum" : [ "HOST", "PROCESS_GROUP", "SERVICE" ]
          },
          "nameFormat" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name to be assigned to matching entities. You can use the following placeholders here: \n\n* `{AwsAutoScalingGroup:Name}` \n* `{AwsAvailabilityZone:Name}` \n* `{AwsElasticLoadBalancer:Name}` \n* `{AwsRelationalDatabaseService:DBName}` \n* `{AwsRelationalDatabaseService:Endpoint}` \n* `{AwsRelationalDatabaseService:Engine}` \n* `{AwsRelationalDatabaseService:InstanceClass}` \n* `{AwsRelationalDatabaseService:Name}` \n* `{AwsRelationalDatabaseService:Port}` \n* `{AzureRegion:Name}` \n* `{AzureScaleSet:Name}` \n* `{AzureVm:Name}` \n* `{CloudFoundryOrganization:Name}` \n* `{CustomDevice:DetectedName}` \n* `{CustomDevice:DnsName}` \n* `{CustomDevice:IpAddress}` \n* `{CustomDevice:Port}` \n* `{DockerContainerGroupInstance:ContainerName}` \n* `{DockerContainerGroupInstance:FullImageName}` \n* `{DockerContainerGroupInstance:ImageVersion}` \n* `{DockerContainerGroupInstance:StrippedImageName}` \n* `{ESXIHost:HardwareModel}` \n* `{ESXIHost:HardwareVendor}` \n* `{ESXIHost:Name}` \n* `{ESXIHost:ProductName}` \n* `{ESXIHost:ProductVersion}` \n* `{Ec2Instance:AmiId}` \n* `{Ec2Instance:BeanstalkEnvironmentName}` \n* `{Ec2Instance:InstanceId}` \n* `{Ec2Instance:InstanceType}` \n* `{Ec2Instance:LocalHostName}` \n* `{Ec2Instance:Name}` \n* `{Ec2Instance:PublicHostName}` \n* `{Ec2Instance:SecurityGroup}` \n* `{GoogleComputeInstance:Id}` \n* `{GoogleComputeInstance:IpAddresses}` \n* `{GoogleComputeInstance:MachineType}` \n* `{GoogleComputeInstance:Name}` \n* `{GoogleComputeInstance:ProjectId}` \n* `{GoogleComputeInstance:Project}` \n* `{Host:AWSNameTag}` \n* `{Host:AixLogicalCpuCount}` \n* `{Host:AzureHostName}` \n* `{Host:AzureSiteName}` \n* `{Host:BoshDeploymentId}` \n* `{Host:BoshInstanceId}` \n* `{Host:BoshInstanceName}` \n* `{Host:BoshName}` \n* `{Host:BoshStemcellVersion}` \n* `{Host:CpuCores}` \n* `{Host:DetectedName}` \n* `{Host:Environment:AppName}` \n* `{Host:Environment:BoshReleaseVersion}` \n* `{Host:Environment:Environment}` \n* `{Host:Environment:Link}` \n* `{Host:Environment:Organization}` \n* `{Host:Environment:Owner}` \n* `{Host:Environment:Support}` \n* `{Host:IpAddress}` \n* `{Host:LogicalCpuCores}` \n* `{Host:OneAgentCustomHostName}` \n* `{Host:OperatingSystemVersion}` \n* `{Host:PaasMemoryLimit}` \n* `{HostGroup:Name}` \n* `{KubernetesCluster:Name}` \n* `{KubernetesNode:DetectedName}` \n* `{OpenstackAvailabilityZone:Name}` \n* `{OpenstackZone:Name}` \n* `{OpenstackComputeNode:Name}` \n* `{OpenstackProject:Name}` \n* `{OpenstackVm:InstanceType}` \n* `{OpenstackVm:Name}` \n* `{OpenstackVm:SecurityGroup}` \n* `{ProcessGroup:AmazonECRImageAccountId}` \n* `{ProcessGroup:AmazonECRImageRegion}` \n* `{ProcessGroup:AmazonECSCluster}` \n* `{ProcessGroup:AmazonECSContainerName}` \n* `{ProcessGroup:AmazonECSFamily}` \n* `{ProcessGroup:AmazonECSRevision}` \n* `{ProcessGroup:AmazonLambdaFunctionName}` \n* `{ProcessGroup:AmazonRegion}` \n* `{ProcessGroup:ApacheConfigPath}` \n* `{ProcessGroup:ApacheSparkMasterIpAddress}` \n* `{ProcessGroup:AspDotNetCoreApplicationPath}` \n* `{ProcessGroup:AspDotNetCoreApplicationPath}` \n* `{ProcessGroup:AzureHostName}` \n* `{ProcessGroup:AzureSiteName}` \n* `{ProcessGroup:CassandraClusterName}` \n* `{ProcessGroup:CatalinaBase}` \n* `{ProcessGroup:CatalinaHome}` \n* `{ProcessGroup:CloudFoundryAppId}` \n* `{ProcessGroup:CloudFoundryAppName}` \n* `{ProcessGroup:CloudFoundryInstanceIndex}` \n* `{ProcessGroup:CloudFoundrySpaceId}` \n* `{ProcessGroup:CloudFoundrySpaceName}` \n* `{ProcessGroup:ColdFusionJvmConfigFile}` \n* `{ProcessGroup:ColdFusionServiceName}` \n* `{ProcessGroup:CommandLineArgs}` \n* `{ProcessGroup:DetectedName}` \n* `{ProcessGroup:DotNetCommandPath}` \n* `{ProcessGroup:DotNetCommand}` \n* `{ProcessGroup:DotNetClusterId}` \n* `{ProcessGroup:DotNetNodeId}` \n* `{ProcessGroup:ElasticsearchClusterName}` \n* `{ProcessGroup:ElasticsearchNodeName}` \n* `{ProcessGroup:EquinoxConfigPath}` \n* `{ProcessGroup:ExeName}` \n* `{ProcessGroup:ExePath}` \n* `{ProcessGroup:GlassFishDomainName}` \n* `{ProcessGroup:GlassFishInstanceName}` \n* `{ProcessGroup:GoogleAppEngineInstance}` \n* `{ProcessGroup:GoogleAppEngineService}` \n* `{ProcessGroup:GoogleCloudProject}` \n* `{ProcessGroup:HybrisBinDirectory}` \n* `{ProcessGroup:HybrisConfigDirectory}` \n* `{ProcessGroup:HybrisConfigDirectory}` \n* `{ProcessGroup:HybrisDataDirectory}` \n* `{ProcessGroup:IBMCicsRegion}` \n* `{ProcessGroup:IBMCtgName}` \n* `{ProcessGroup:IBMImsConnectRegion}` \n* `{ProcessGroup:IBMImsControlRegion}` \n* `{ProcessGroup:IBMImsMessageProcessingRegion}` \n* `{ProcessGroup:IBMImsSoapGwName}` \n* `{ProcessGroup:IBMIntegrationNodeName}` \n* `{ProcessGroup:IBMIntegrationServerName}` \n* `{ProcessGroup:IISAppPool}` \n* `{ProcessGroup:IISRoleName}` \n* `{ProcessGroup:JbossHome}` \n* `{ProcessGroup:JbossMode}` \n* `{ProcessGroup:JbossServerName}` \n* `{ProcessGroup:JavaJarFile}` \n* `{ProcessGroup:JavaJarPath}` \n* `{ProcessGroup:JavaMainCLass}` \n* `{ProcessGroup:KubernetesBasePodName}` \n* `{ProcessGroup:KubernetesContainerName}` \n* `{ProcessGroup:KubernetesFullPodName}` \n* `{ProcessGroup:KubernetesNamespace}` \n* `{ProcessGroup:KubernetesPodUid}` \n* `{ProcessGroup:MssqlInstanceName}` \n* `{ProcessGroup:NodeJsAppBaseDirectory}` \n* `{ProcessGroup:NodeJsAppName}` \n* `{ProcessGroup:NodeJsScriptName}` \n* `{ProcessGroup:OracleSid}` \n* `{ProcessGroup:PHPScriptPath}` \n* `{ProcessGroup:PHPWorkingDirectory}` \n* `{ProcessGroup:Ports}` \n* `{ProcessGroup:RubyAppRootPath}` \n* `{ProcessGroup:RubyScriptPath}` \n* `{ProcessGroup:SoftwareAGInstallRoot}` \n* `{ProcessGroup:SoftwareAGProductPropertyName}` \n* `{ProcessGroup:SpringBootAppName}` \n* `{ProcessGroup:SpringBootProfileName}` \n* `{ProcessGroup:SpringBootStartupClass}` \n* `{ProcessGroup:TIBCOBusinessWorksAppNodeName}` \n* `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` \n* `{ProcessGroup:TIBCOBusinessWorksCeAppName}` \n* `{ProcessGroup:TIBCOBusinessWorksCeVersion}` \n* `{ProcessGroup:TIBCOBusinessWorksDomainName}` \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` \n* `{ProcessGroup:TIBCOBusinessWorksHome}` \n* `{ProcessGroup:VarnishInstanceName}` \n* `{ProcessGroup:WebLogicClusterName}` \n* `{ProcessGroup:WebLogicDomainName}` \n* `{ProcessGroup:WebLogicHome}` \n* `{ProcessGroup:WebLogicName}` \n* `{ProcessGroup:WebSphereCellName}` \n* `{ProcessGroup:WebSphereClusterName}` \n* `{ProcessGroup:WebSphereNodeName}` \n* `{ProcessGroup:WebSphereServerName}` \n* `{ProcessGroup:ActorSystem}` \n* `{Service:STGServerName}` \n* `{Service:DatabaseHostName}` \n* `{Service:DatabaseName}` \n* `{Service:DatabaseVendor}` \n* `{Service:DetectedName}` \n* `{Service:EndpointPath}` \n* `{Service:EndpointPathGatewayUrl}` \n* `{Service:IIBApplicationName}` \n* `{Service:MessageListenerClassName}` \n* `{Service:Port}` \n* `{Service:PublicDomainName}` \n* `{Service:RemoteEndpoint}` \n* `{Service:RemoteName}` \n* `{Service:WebApplicationId}` \n* `{Service:WebContextRoot}` \n* `{Service:WebServerName}` \n* `{Service:WebServiceNamespace}` \n* `{Service:WebServiceName}` \n* `{VmwareDatacenter:Name}` \n* `{VmwareVm:Name}` \n",
            "example" : "Host with {Host:CpuCores} cores"
          },
          "displayName" : {
            "maxLength" : 99,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the rule",
            "example" : "Host Naming Rule using Cores"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          },
          "rules" : {
            "maxItems" : 30,
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of matching conditions of the rule. \n\nThe rule applies only if **all** conditions are fulfilled.",
            "items" : {
              "$ref" : "#/components/schemas/EntityRuleEngineCondition"
            }
          }
        },
        "description" : "The rule for the conditional naming.",
        "example" : {
          "id" : "4e88530c-edec-4e31-9cb4-3f2c63abc2b7",
          "type" : "PROCESS_GROUP",
          "nameFormat" : "TestNameFormat",
          "displayName" : "TestRule",
          "enabled" : true,
          "rules" : [ {
            "key" : {
              "attribute" : "PROCESS_GROUP_TECHNOLOGY"
            },
            "comparisonInfo" : {
              "type" : "SIMPLE_TECH",
              "operator" : "EQUALS",
              "value" : {
                "type" : "JAVA"
              },
              "negate" : "false"
            }
          }, {
            "key" : {
              "attribute" : "PROCESS_GROUP_PREDEFINED_METADATA",
              "dynamicKey" : "EXE_NAME",
              "type" : "PROCESS_PREDEFINED_METADATA_KEY"
            },
            "comparisonInfo" : {
              "type" : "STRING",
              "operator" : "CONTAINS",
              "value" : "test",
              "negate" : "false",
              "caseSensitive" : true
            }
          } ]
        }
      },
      "ContentResources" : {
        "type" : "object",
        "properties" : {
          "resourceProviders" : {
            "type" : "array",
            "description" : "An ordered list of manually added content providers.\n\n Rules are evaluated from top to bottom; the first matching rules applies.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceProvider"
            }
          },
          "resourceUrlCleanupRules" : {
            "type" : "array",
            "description" : "An ordered list of resource URL cleanup rules.\n\n Rules are evaluated from top to bottom; the first matching rules applies.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceUrlCleanupRule"
            }
          },
          "resourceTypes" : {
            "type" : "array",
            "description" : "An ordered list of manually defined resource types.\n\n Rules are evaluated from top to bottom; the first matching rules applies.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceType"
            }
          }
        },
        "description" : "The configuration of content resources."
      },
      "ResourceProvider" : {
        "required" : [ "domainNamePatterns", "resourceName", "resourceType" ],
        "type" : "object",
        "properties" : {
          "resourceName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name of the provider."
          },
          "resourceType" : {
            "type" : "string",
            "description" : "The type of the provider.",
            "enum" : [ "CDN_RESOURCES", "FIRST_PARTY_RESOURCES", "THIRD_PARTY_RESOURCES" ]
          },
          "brandIconUrl" : {
            "type" : "string",
            "description" : "The URL of the provider's icon."
          },
          "domainNamePatterns" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of domain patterns of the provider.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A rule for the content provider."
      },
      "ResourceType" : {
        "required" : [ "primaryResourceType", "regularExpression" ],
        "type" : "object",
        "properties" : {
          "regularExpression" : {
            "type" : "string",
            "description" : "The regular expression to detect the resource."
          },
          "primaryResourceType" : {
            "type" : "string",
            "description" : "The primary type of the resource.",
            "enum" : [ "CSS", "IMAGE", "OTHER", "SCRIPT" ]
          },
          "secondaryResourceType" : {
            "type" : "string",
            "description" : "The secondary type of the resource."
          }
        },
        "description" : "A rule for the resource type."
      },
      "ResourceUrlCleanupRule" : {
        "required" : [ "regularExpression", "replaceWith", "resourceName" ],
        "type" : "object",
        "properties" : {
          "resourceName" : {
            "type" : "string",
            "description" : "The name of the rule."
          },
          "regularExpression" : {
            "type" : "string",
            "description" : "The pattern (regular expression) to look for."
          },
          "replaceWith" : {
            "type" : "string",
            "description" : "The text to replace the found pattern with."
          }
        },
        "description" : "A rule for the URL cleanup rule."
      },
      "AzureClientSecretConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVaultConfig"
        }, {
          "type" : "object",
          "properties" : {
            "tenantId" : {
              "type" : "string"
            },
            "clientId" : {
              "type" : "string"
            },
            "clientSecret" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CredentialUsageHandler" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of usage."
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of uses.",
            "format" : "int32"
          }
        },
        "description" : "Keeps information about credential's usage."
      },
      "CredentialsResponseElement" : {
        "required" : [ "credentialUsageSummary", "description", "name", "owner", "ownerAccessOnly", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the credentials set."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the credentials set."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the credentials set.",
            "enum" : [ "CERTIFICATE", "PUBLIC_CERTIFICATE", "TOKEN", "UNKNOWN", "USERNAME_PASSWORD" ]
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the credentials set."
          },
          "owner" : {
            "type" : "string",
            "description" : "The owner of the credential (user for which used API token was created)."
          },
          "ownerAccessOnly" : {
            "type" : "boolean",
            "description" : "Flag indicating that this credential is visible only to the owner."
          },
          "scope" : {
            "type" : "string",
            "description" : "The scope of the credentials set.",
            "enum" : [ "ALL", "EXTENSION", "SYNTHETIC" ]
          },
          "externalVault" : {
            "$ref" : "#/components/schemas/ExternalVaultConfig"
          },
          "credentialUsageSummary" : {
            "type" : "array",
            "description" : "The list contains summary data related to the use of credentials.",
            "items" : {
              "$ref" : "#/components/schemas/CredentialUsageHandler"
            }
          }
        },
        "description" : "Metadata of the credentials set.",
        "example" : {
          "name" : "Sample username-password credentials",
          "id" : "CREDENTIALS_VAULT-C43F2C2E6395AD23",
          "type" : "USERNAME_PASSWORD",
          "description" : "Sample credentials for demo purposes.",
          "owner" : "user@domain.com",
          "ownerAccessOnly" : "true",
          "scope" : "SYNTHETIC",
          "externalVault" : {
            "sourceAuthMethod" : "HASHICORP_VAULT_APPROLE",
            "vaultUrl" : "https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200",
            "usernameSecretName" : "username",
            "passwordSecretName" : "password",
            "pathToCredentials" : "kv/credentials",
            "roleId" : "00e4858c-ec33-bc99-4e7e-34de6967de6c",
            "secretId" : "CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX",
            "vaultNamespace" : "admin"
          },
          "credentialUsageSummary" : [ {
            "HTTP_MONITOR" : 3,
            "BROWSER_MONITOR" : 2
          } ]
        }
      },
      "ExternalVaultConfig" : {
        "type" : "object",
        "properties" : {
          "sourceAuthMethod" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `HASHICORP_VAULT_APPROLE` -> HashicorpApproleConfig \n* `HASHICORP_VAULT_CERTIFICATE` -> HashicorpCertificateConfig \n* `AZURE_KEY_VAULT_CLIENT_SECRET` -> AzureClientSecretConfig \n",
            "enum" : [ "AZURE_KEY_VAULT_CLIENT_SECRET", "HASHICORP_VAULT_APPROLE", "HASHICORP_VAULT_CERTIFICATE" ]
          },
          "vaultUrl" : {
            "type" : "string"
          },
          "usernameSecretName" : {
            "type" : "string"
          },
          "passwordSecretName" : {
            "type" : "string"
          },
          "tokenSecretName" : {
            "type" : "string"
          },
          "credentialsUsedForExternalSynchronization" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "type" : {
            "type" : "string",
            "enum" : [ "AZURE_CERTIFICATE_MODEL", "AZURE_CLIENT_SECRET_MODEL", "HASHICORP_APPROLE_MODEL", "HASHICORP_CERTIFICATE_MODEL" ]
          }
        },
        "description" : "Configuration for external vault synchronization for username and password credentials.",
        "discriminator" : {
          "propertyName" : "sourceAuthMethod"
        }
      },
      "HashicorpApproleConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVaultConfig"
        }, {
          "type" : "object",
          "properties" : {
            "pathToCredentials" : {
              "type" : "string"
            },
            "roleId" : {
              "type" : "string"
            },
            "secretId" : {
              "type" : "string"
            },
            "vaultNamespace" : {
              "type" : "string"
            }
          }
        } ]
      },
      "HashicorpCertificateConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVaultConfig"
        }, {
          "type" : "object",
          "properties" : {
            "pathToCredentials" : {
              "type" : "string"
            },
            "certificate" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CertificateCredentials" : {
        "required" : [ "certificate", "certificateFormat", "name", "password", "scope" ],
        "type" : "object",
        "description" : "A credentials set of the `CERTIFICATE` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Credentials"
        }, {
          "type" : "object",
          "properties" : {
            "certificate" : {
              "type" : "string",
              "description" : "The certificate in the string format."
            },
            "password" : {
              "type" : "string",
              "description" : "The password of the credential (Base64 encoded)."
            },
            "certificateFormat" : {
              "type" : "string",
              "description" : "The certificate format.",
              "enum" : [ "PEM", "PKCS12", "UNKNOWN" ]
            }
          }
        } ]
      },
      "Credentials" : {
        "required" : [ "name", "scope" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the credentials set."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the credentials set."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the credentials set."
          },
          "ownerAccessOnly" : {
            "type" : "boolean",
            "description" : "The credentials set is available to every user (`false`) or to owner only (`true`)."
          },
          "scope" : {
            "type" : "string",
            "description" : "The scope of the credentials set.",
            "enum" : [ "ALL", "EXTENSION", "SYNTHETIC" ]
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `CERTIFICATE` -> CertificateCredentials \n* `PUBLIC_CERTIFICATE` -> PublicCertificateCredentials \n* `USERNAME_PASSWORD` -> UserPasswordCredentials \n* `TOKEN` -> TokenCredentials \n",
            "enum" : [ "CERTIFICATE", "PUBLIC_CERTIFICATE", "TOKEN", "USERNAME_PASSWORD" ]
          }
        },
        "description" : "A set of credentials for synthetic monitors. \n\nThe actual set of fields depends on the type of credentials. Find the list of actual objects in the description of the **type** field or see [Credential vault API - JSON models](https://dt-url.net/2sa3sen).",
        "example" : {
          "name" : "Sample credentials",
          "type" : "USERNAME_PASSWORD",
          "description" : "Sample set of credentials for API documentation",
          "user" : "john.smith",
          "password" : "1234abcd",
          "ownerAccessOnly" : "true",
          "scope" : "SYNTHETIC"
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "ExternalVault" : {
        "type" : "object",
        "properties" : {
          "sourceAuthMethod" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `HASHICORP_VAULT_APPROLE` -> HashicorpApprole \n* `HASHICORP_VAULT_CERTIFICATE` -> HashicorpCertificate \n* `AZURE_KEY_VAULT_CLIENT_SECRET` -> AzureClientSecret \n",
            "enum" : [ "AZURE_KEY_VAULT_CLIENT_SECRET", "HASHICORP_VAULT_APPROLE", "HASHICORP_VAULT_CERTIFICATE" ]
          },
          "vaultUrl" : {
            "type" : "string",
            "description" : "External vault URL."
          },
          "usernameSecretName" : {
            "type" : "string",
            "description" : "The name of the secret saved in external vault where username is stored."
          },
          "passwordSecretName" : {
            "type" : "string",
            "description" : "The name of the secret saved in external vault where password is stored."
          },
          "tokenSecretName" : {
            "type" : "string",
            "description" : "The name of the secret saved in external vault where token is stored."
          }
        },
        "description" : "Information for synchronization credentials with external vault",
        "example" : {
          "name" : "Sample username-password credentials synchronized with Hashicorp vault",
          "id" : "CREDENTIALS_VAULT-C43F2C2E6395AD23",
          "type" : "USERNAME_PASSWORD",
          "description" : "Sample credentials for demo purposes.",
          "owner" : "user@domain.com",
          "ownerAccessOnly" : "true",
          "scope" : "SYNTHETIC",
          "externalVault" : {
            "sourceAuthMethod" : "HASHICORP_VAULT_APPROLE",
            "vaultUrl" : "https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200",
            "usernameSecretName" : "username",
            "passwordSecretName" : "password",
            "pathToCredentials" : "kv/credentials",
            "roleId" : "00e4858c-ec33-bc99-4e7e-34de6967de6c",
            "secretId" : "CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX",
            "vaultNamespace" : "admin"
          }
        },
        "discriminator" : {
          "propertyName" : "sourceAuthMethod"
        }
      },
      "PublicCertificateCredentials" : {
        "required" : [ "certificate", "certificateFormat", "name", "password", "scope" ],
        "type" : "object",
        "description" : "A credentials set of the `PUBLIC_CERTIFICATE` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Credentials"
        }, {
          "type" : "object",
          "properties" : {
            "certificate" : {
              "type" : "string",
              "description" : "The certificate in the string format."
            },
            "password" : {
              "type" : "string",
              "description" : "The password of the credential (not supported)."
            },
            "certificateFormat" : {
              "type" : "string",
              "description" : "The certificate format.",
              "enum" : [ "PEM", "PKCS12", "UNKNOWN" ]
            }
          }
        } ]
      },
      "TokenCredentials" : {
        "required" : [ "name", "scope" ],
        "type" : "object",
        "description" : "A credentials set of the `TOKEN` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Credentials"
        }, {
          "type" : "object",
          "properties" : {
            "token" : {
              "type" : "string",
              "description" : "Token in the string format."
            },
            "externalVault" : {
              "$ref" : "#/components/schemas/ExternalVault"
            }
          }
        } ]
      },
      "UserPasswordCredentials" : {
        "required" : [ "name", "scope" ],
        "type" : "object",
        "description" : "A credentials set of the `USERNAME_PASSWORD` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Credentials"
        }, {
          "type" : "object",
          "properties" : {
            "user" : {
              "type" : "string",
              "description" : "The username of the credentials set."
            },
            "password" : {
              "type" : "string",
              "description" : "The password of the credential."
            },
            "externalVault" : {
              "$ref" : "#/components/schemas/ExternalVault"
            }
          }
        } ]
      },
      "CredentialsList" : {
        "required" : [ "credentials" ],
        "type" : "object",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "description" : "A list of credentials sets for Synthetic monitors.",
            "items" : {
              "$ref" : "#/components/schemas/CredentialsResponseElement"
            }
          }
        },
        "description" : "A list of credentials sets for Synthetic monitors.",
        "example" : {
          "credentials" : [ {
            "name" : "Sample username-password credentials",
            "id" : "CREDENTIALS_VAULT-E80203F993472E6D",
            "type" : "USERNAME_PASSWORD",
            "description" : "Sample credentials for demo purposes",
            "owner" : "admin",
            "ownerAccessOnly" : "true",
            "scope" : "SYNTHETIC",
            "credentialUsageSummary" : [ {
              "HTTP_MONITOR" : 4
            } ]
          }, {
            "name" : "Sample certificate credentials",
            "id" : "CREDENTIALS_VAULT-842DEF439999E15B",
            "type" : "CERTIFICATE",
            "description" : "Sample credentials for demo purposes",
            "owner" : "John.Doe@domain.com",
            "ownerAccessOnly" : "true",
            "scope" : "EXTENSION",
            "credentialUsageSummary" : [ ]
          }, {
            "name" : "Sample token credentials",
            "id" : "CREDENTIALS_VAULT-854345639999E15B",
            "type" : "TOKEN",
            "description" : "Sample token for demo purposes",
            "owner" : "John.Doe@domain.com",
            "ownerAccessOnly" : "true",
            "scope" : "SYNTHETIC",
            "credentialUsageSummary" : [ {
              "HTTP_MONITOR" : 4,
              "BROWSER_MONITOR" : 11
            } ]
          } ]
        }
      },
      "CustomService" : {
        "required" : [ "enabled", "name", "queueEntryPoint", "rules" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the custom service.",
            "format" : "uuid"
          },
          "name" : {
            "maxLength" : 500,
            "minLength" : 3,
            "type" : "string",
            "description" : "The name of the custom service, displayed in the UI."
          },
          "order" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string",
            "description" : "The order string. Sorting custom services alphabetically by their order string determines their relative ordering.\n\nTypically this is managed by Dynatrace internally and will not be present in GET responses."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Custom service enabled/disabled."
          },
          "rules" : {
            "maxItems" : 2000,
            "minItems" : 1,
            "type" : "array",
            "description" : "The list of rules defining the custom service.",
            "items" : {
              "$ref" : "#/components/schemas/DetectionRule"
            }
          },
          "queueEntryPoint" : {
            "type" : "boolean",
            "description" : "The queue entry point flag. \n\nSet to `true` for custom messaging services."
          },
          "queueEntryPointType" : {
            "type" : "string",
            "description" : "The queue entry point type..",
            "enum" : [ "IBM_MQ", "JMS", "KAFKA", "MSMQ", "RABBIT_MQ" ]
          },
          "processGroups" : {
            "type" : "array",
            "description" : "The list of process groups the custom service should belong to.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "example" : {
          "name" : "CustomService",
          "enabled" : true,
          "rules" : [ {
            "enabled" : true,
            "className" : "com.your.company.ClassName",
            "methodRules" : [ {
              "methodName" : "AMethod",
              "argumentTypes" : [ "java.lang.String" ],
              "returnType" : "void"
            } ]
          } ],
          "queueEntryPoint" : false
        }
      },
      "DetectionRule" : {
        "required" : [ "enabled", "methodRules" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the detection rule.",
            "format" : "uuid"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Rule enabled/disabled."
          },
          "fileName" : {
            "type" : "string",
            "description" : "The PHP file containing the class or methods to instrument. \n\nRequired for PHP custom service. \n\n Not applicable to Java and .NET."
          },
          "fileNameMatcher" : {
            "type" : "string",
            "description" : "Matcher applying to the file name. Default value is `ENDS_WITH` (if applicable).",
            "enum" : [ "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
          },
          "className" : {
            "type" : "string",
            "description" : "The fully qualified class or interface to instrument. \n\nRequired for Java and .NET custom services. \n\n Not applicable to PHP."
          },
          "matcher" : {
            "type" : "string",
            "description" : "Matcher applying to the class name. `STARTS_WITH` can only be used if there is at least one annotation defined. Default value is `EQUALS`.",
            "enum" : [ "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
          },
          "methodRules" : {
            "maxItems" : 2000,
            "minItems" : 1,
            "type" : "array",
            "description" : "List of methods to instrument.",
            "items" : {
              "$ref" : "#/components/schemas/MethodRule"
            }
          },
          "annotations" : {
            "type" : "array",
            "description" : "Additional annotations filter of the rule. \n\nOnly classes where all listed annotations are available in the class itself or any of its superclasses are instrumented. \n\nNot applicable to PHP.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "MethodRule" : {
        "required" : [ "methodName", "returnType" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the method rule.",
            "format" : "uuid"
          },
          "methodName" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The method to instrument."
          },
          "argumentTypes" : {
            "type" : "array",
            "description" : "Fully qualified types of argument the method expects.",
            "items" : {
              "type" : "string"
            }
          },
          "returnType" : {
            "type" : "string",
            "description" : "Fully qualified type the method returns."
          },
          "visibility" : {
            "type" : "string",
            "description" : "The visibility of the method rule.",
            "enum" : [ "INTERNAL", "PACKAGE_PROTECTED", "PRIVATE", "PROTECTED", "PUBLIC" ]
          },
          "modifiers" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The modifiers of the method rule.",
            "items" : {
              "type" : "string",
              "enum" : [ "ABSTRACT", "EXTERN", "FINAL", "NATIVE", "STATIC" ]
            }
          }
        }
      },
      "AssignedEntitiesTile" : {
        "required" : [ "assignedEntities", "bounds", "name", "tileType" ],
        "type" : "object",
        "description" : "Configuration of a tile with an assigned Dynatrace entity. \n\nAn example is the Bounce rate tile, showing the data from an assigned application.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "assignedEntities" : {
              "type" : "array",
              "description" : "The list of Dynatrace entities, assigned to the tile.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "AssignedEntitiesWithMetricTile" : {
        "required" : [ "assignedEntities", "bounds", "name", "tileType" ],
        "type" : "object",
        "description" : "Configuration of a tile with an assigned Dynatrace entity and an assigned metric. \n\nAn example is the Worldmap tile, showing the data from an assigned performance or behavior metric of an assigned application.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "assignedEntities" : {
              "type" : "array",
              "description" : "The list of Dynatrace entities, assigned to the tile.",
              "items" : {
                "type" : "string"
              }
            },
            "metric" : {
              "type" : "string",
              "description" : "The metric assigned to the tile."
            }
          }
        } ]
      },
      "Axes" : {
        "required" : [ "xAxis", "yAxes" ],
        "type" : "object",
        "properties" : {
          "yAxes" : {
            "type" : "array",
            "description" : "y Axes configuration",
            "items" : {
              "$ref" : "#/components/schemas/YAxis"
            }
          },
          "xAxis" : {
            "$ref" : "#/components/schemas/Axis"
          }
        },
        "description" : "Axes configuration"
      },
      "Axis" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string"
          },
          "visible" : {
            "type" : "boolean"
          }
        },
        "description" : "x Axis configuration"
      },
      "CustomChartingItemMetadataConfig" : {
        "required" : [ "customColor" ],
        "type" : "object",
        "properties" : {
          "lastModified" : {
            "type" : "integer",
            "description" : "The timestamp of the last metadata modification, in UTC milliseconds.",
            "format" : "int64"
          },
          "customColor" : {
            "type" : "string",
            "description" : "The color of the metric in the chart, hex format."
          }
        },
        "description" : "Additional metadata for charted metric."
      },
      "CustomChartingTile" : {
        "required" : [ "bounds", "name", "tileType" ],
        "type" : "object",
        "description" : "Configuration of a custom chart tile.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "filterConfig" : {
              "$ref" : "#/components/schemas/CustomFilterConfig"
            }
          }
        } ]
      },
      "CustomFilterChartConfig" : {
        "required" : [ "resultMetadata", "series", "type" ],
        "type" : "object",
        "properties" : {
          "legendShown" : {
            "type" : "boolean",
            "description" : "Defines if a legend should be shown."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the chart.",
            "enum" : [ "PIE", "SINGLE_VALUE", "TIMESERIES", "TOP_LIST" ]
          },
          "series" : {
            "type" : "array",
            "description" : "A list of charted metrics.",
            "items" : {
              "$ref" : "#/components/schemas/CustomFilterChartSeriesConfig"
            }
          },
          "resultMetadata" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/CustomChartingItemMetadataConfig"
            },
            "description" : "Additional information about charted metric."
          },
          "axisLimits" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "description" : "The optional custom y-axis limits.",
              "format" : "double"
            },
            "description" : "The optional custom y-axis limits."
          },
          "leftAxisCustomUnit" : {
            "type" : "string",
            "description" : "The custom unit for the left Y-axis.",
            "enum" : [ "Billion", "Bit", "BitPerHour", "BitPerMinute", "BitPerSecond", "Byte", "BytePerHour", "BytePerMinute", "BytePerSecond", "Cores", "Count", "Day", "DecibelMilliWatt", "GibiByte", "Giga", "GigaByte", "Hour", "KibiByte", "KibiBytePerHour", "KibiBytePerMinute", "KibiBytePerSecond", "Kilo", "KiloByte", "KiloBytePerHour", "KiloBytePerMinute", "KiloBytePerSecond", "KiloMetrePerHour", "MSU", "MebiByte", "MebiBytePerHour", "MebiBytePerMinute", "MebiBytePerSecond", "Mega", "MegaByte", "MegaBytePerHour", "MegaBytePerMinute", "MegaBytePerSecond", "MetrePerHour", "MetrePerSecond", "MicroSecond", "MilliCores", "MilliSecond", "MilliSecondPerMinute", "Million", "Minute", "Month", "NanoSecond", "NanoSecondPerMinute", "NotApplicable", "PerHour", "PerMinute", "PerSecond", "Percent", "Pixel", "Promille", "Ratio", "Second", "State", "Unspecified", "Week", "Year" ]
          },
          "rightAxisCustomUnit" : {
            "type" : "string",
            "description" : "The custom unit for the right Y-axis.",
            "enum" : [ "Billion", "Bit", "BitPerHour", "BitPerMinute", "BitPerSecond", "Byte", "BytePerHour", "BytePerMinute", "BytePerSecond", "Cores", "Count", "Day", "DecibelMilliWatt", "GibiByte", "Giga", "GigaByte", "Hour", "KibiByte", "KibiBytePerHour", "KibiBytePerMinute", "KibiBytePerSecond", "Kilo", "KiloByte", "KiloBytePerHour", "KiloBytePerMinute", "KiloBytePerSecond", "KiloMetrePerHour", "MSU", "MebiByte", "MebiBytePerHour", "MebiBytePerMinute", "MebiBytePerSecond", "Mega", "MegaByte", "MegaBytePerHour", "MegaBytePerMinute", "MegaBytePerSecond", "MetrePerHour", "MetrePerSecond", "MicroSecond", "MilliCores", "MilliSecond", "MilliSecondPerMinute", "Million", "Minute", "Month", "NanoSecond", "NanoSecondPerMinute", "NotApplicable", "PerHour", "PerMinute", "PerSecond", "Percent", "Pixel", "Promille", "Ratio", "Second", "State", "Unspecified", "Week", "Year" ]
          }
        },
        "description" : "Configuration of a custom chart."
      },
      "CustomFilterChartSeriesConfig" : {
        "required" : [ "aggregation", "dimensions", "entityType", "metric", "type" ],
        "type" : "object",
        "properties" : {
          "metric" : {
            "type" : "string",
            "description" : "The name of the charted metric."
          },
          "aggregation" : {
            "type" : "string",
            "description" : "The charted aggregation of the metric.",
            "enum" : [ "AVG", "COUNT", "DISTINCT", "FASTEST10PERCENT", "MAX", "MEDIAN", "MIN", "NONE", "OF_INTEREST_RATIO", "OTHER_RATIO", "PERCENTILE", "PER_MIN", "SLOWEST10PERCENT", "SLOWEST5PERCENT", "SUM", "SUM_DIMENSIONS" ]
          },
          "percentile" : {
            "type" : "integer",
            "description" : "The charted percentile. \n\n Only applicable if the **aggregation** is set to `PERCENTILE`.",
            "format" : "int64"
          },
          "type" : {
            "type" : "string",
            "description" : "The visualization of the timeseries chart.",
            "enum" : [ "AREA", "BAR", "LINE" ]
          },
          "entityType" : {
            "type" : "string",
            "description" : "The type of the Dynatrace entity that delivered the charted metric."
          },
          "dimensions" : {
            "type" : "array",
            "description" : "Configuration of the charted metric splitting.",
            "items" : {
              "$ref" : "#/components/schemas/CustomFilterChartSeriesDimensionConfig"
            }
          },
          "sortAscending" : {
            "type" : "boolean",
            "description" : "Sort ascending (`true`) or descending (`false`). "
          },
          "sortColumn" : {
            "type" : "boolean"
          },
          "aggregationRate" : {
            "type" : "string",
            "enum" : [ "HOUR", "MINUTE", "SECOND", "TOTAL" ]
          }
        },
        "description" : "Configuration of a charted metric."
      },
      "CustomFilterChartSeriesDimensionConfig" : {
        "required" : [ "id", "values" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the dimension by which the metric is split."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the dimension by which the metric is split."
          },
          "values" : {
            "type" : "array",
            "description" : "The splitting value.",
            "items" : {
              "type" : "string"
            }
          },
          "entityDimension" : {
            "type" : "boolean"
          }
        },
        "description" : "Configuration of the charted metric splitting."
      },
      "CustomFilterConfig" : {
        "required" : [ "chartConfig", "customName", "defaultName", "filtersPerEntityType", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the filter. \n\n It shows to which entity the filter belongs. \n\n Custom charts have the `MIXED` type.",
            "enum" : [ "ALB", "APPLICATION", "APPLICATION_METHOD", "APPMON", "ASG", "AWS_CREDENTIALS", "AWS_CUSTOM_SERVICE", "AWS_LAMBDA_FUNCTION", "CLOUD_APPLICATION", "CLOUD_APPLICATION_INSTANCE", "CLOUD_APPLICATION_NAMESPACE", "CONTAINER_GROUP_INSTANCE", "CUSTOM_APPLICATION", "CUSTOM_DEVICES", "CUSTOM_SERVICES", "DATABASE", "DATABASE_KEY_REQUEST", "DCRUM_APPLICATION", "DCRUM_ENTITY", "DYNAMO_DB", "EBS", "EC2", "ELB", "ENVIRONMENT", "ESXI", "EXTERNAL_SYNTHETIC_TEST", "GLOBAL_BACKGROUND_ACTIVITY", "HOST", "IOT", "KUBERNETES_CLUSTER", "KUBERNETES_NODE", "MDA_SERVICE", "MIXED", "MOBILE_APPLICATION", "MONITORED_ENTITY", "NLB", "PG_BACKGROUND_ACTIVITY", "PROBLEM", "PROCESS_GROUP_INSTANCE", "RDS", "REMOTE_PLUGIN", "SERVICE", "SERVICE_KEY_REQUEST", "SYNTHETIC_BROWSER_MONITOR", "SYNTHETIC_HTTPCHECK", "SYNTHETIC_HTTPCHECK_STEP", "SYNTHETIC_LOCATION", "SYNTHETIC_TEST", "SYNTHETIC_TEST_STEP", "UI_ENTITY", "VIRTUAL_MACHINE", "WEB_CHECK" ]
          },
          "customName" : {
            "type" : "string",
            "description" : "The name of the tile, set by user"
          },
          "defaultName" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The default name of the tile"
          },
          "chartConfig" : {
            "$ref" : "#/components/schemas/CustomFilterChartConfig"
          },
          "filtersPerEntityType" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "uniqueItems" : true,
                "type" : "array",
                "description" : "A list of filters, applied to specific entity types.",
                "items" : {
                  "type" : "string",
                  "description" : "A list of filters, applied to specific entity types."
                }
              },
              "description" : "A list of filters, applied to specific entity types."
            },
            "description" : "A list of filters, applied to specific entity types."
          }
        },
        "description" : "Configuration of the custom filter of a tile."
      },
      "Dashboard" : {
        "required" : [ "dashboardMetadata", "tiles" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the dashboard."
          },
          "dashboardMetadata" : {
            "$ref" : "#/components/schemas/DashboardMetadata"
          },
          "tiles" : {
            "type" : "array",
            "description" : "The list of tiles on the dashboard.",
            "items" : {
              "$ref" : "#/components/schemas/Tile"
            }
          }
        },
        "description" : "Configuration of a dashboard.",
        "example" : {
          "metadata" : {
            "configurationVersions" : [ 4, 2 ],
            "clusterVersion" : "Mock version"
          },
          "dashboardMetadata" : {
            "name" : "Example Dashboard",
            "owner" : "Example Owner",
            "shared" : true,
            "dashboardFilter" : {
              "timeframe" : "l_72_HOURS",
              "managementZone" : {
                "id" : "3438779970106539862",
                "name" : "Example Management Zone"
              }
            },
            "dynamicFilters" : {
              "filters" : [ "SERVICE_TYPE" ],
              "tagSuggestionTypes" : [ "HOST_LIKE" ]
            }
          },
          "tiles" : [ {
            "name" : "Hosts",
            "tileType" : "HEADER",
            "configured" : true,
            "bounds" : {
              "top" : 0,
              "left" : 0,
              "width" : 304,
              "height" : 38
            },
            "tileFilter" : { }
          }, {
            "name" : "Applications",
            "tileType" : "HEADER",
            "configured" : true,
            "bounds" : {
              "top" : 0,
              "left" : 304,
              "width" : 304,
              "height" : 38
            },
            "tileFilter" : { }
          }, {
            "name" : "Host health",
            "tileType" : "HOSTS",
            "configured" : true,
            "bounds" : {
              "top" : 38,
              "left" : 0,
              "width" : 304,
              "height" : 304
            },
            "tileFilter" : {
              "managementZone" : {
                "id" : "3438779970106539862",
                "name" : "Example Management Zone"
              }
            },
            "chartVisible" : true
          }, {
            "name" : "Application health",
            "tileType" : "APPLICATIONS",
            "configured" : true,
            "bounds" : {
              "top" : 38,
              "left" : 304,
              "width" : 304,
              "height" : 304
            },
            "tileFilter" : {
              "managementZone" : {
                "id" : "3438779970106539862",
                "name" : "Example Management Zone"
              }
            },
            "chartVisible" : true
          } ]
        }
      },
      "DashboardFilter" : {
        "type" : "object",
        "properties" : {
          "timeframe" : {
            "type" : "string",
            "description" : "The default timeframe of the dashboard."
          },
          "managementZone" : {
            "$ref" : "#/components/schemas/EntityShortRepresentation"
          }
        },
        "description" : "Filters, applied to a dashboard."
      },
      "DashboardMetadata" : {
        "required" : [ "name", "owner" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the dashboard."
          },
          "shared" : {
            "type" : "boolean",
            "description" : "The dashboard is shared (`true`) or private (`false`)."
          },
          "owner" : {
            "type" : "string",
            "description" : "The owner of the dashboard."
          },
          "dashboardFilter" : {
            "$ref" : "#/components/schemas/DashboardFilter"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A set of tags assigned to the dashboard.",
            "items" : {
              "type" : "string"
            }
          },
          "preset" : {
            "type" : "boolean",
            "description" : "The dashboard is a preset (`true`) or a custom (`false`) dashboard."
          },
          "dynamicFilters" : {
            "$ref" : "#/components/schemas/DynamicFilters"
          },
          "tilesNameSize" : {
            "type" : "string",
            "description" : "The general size of the tiles tile. Default value is medium",
            "enum" : [ "small", "medium", "large" ]
          },
          "hasConsistentColors" : {
            "type" : "boolean",
            "description" : "The tile uses consistent colors when rendering its content."
          }
        },
        "description" : "Parameters of a dashboard."
      },
      "DataExplorerFilter" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "type" : "string"
          },
          "globalEntity" : {
            "type" : "string"
          },
          "filterType" : {
            "type" : "string",
            "enum" : [ "DIMENSION", "ENTITY_ATTRIBUTE", "ID", "NAME", "TAG" ]
          },
          "filterOperator" : {
            "type" : "string",
            "enum" : [ "AND", "NOT", "OR" ]
          },
          "entityAttribute" : {
            "type" : "string"
          },
          "relationship" : {
            "$ref" : "#/components/schemas/DexpFilterRelationship"
          },
          "nestedFilters" : {
            "uniqueItems" : true,
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "items" : {
              "$ref" : "#/components/schemas/DataExplorerFilter"
            }
          },
          "criteria" : {
            "uniqueItems" : true,
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "items" : {
              "$ref" : "#/components/schemas/DexpFilterCriterion"
            }
          }
        },
        "description" : "Filter for data explorer queries."
      },
      "DataExplorerQuery" : {
        "required" : [ "enabled", "filterBy", "id", "metric", "spaceAggregation", "splitBy", "timeAggregation" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the query"
          },
          "metric" : {
            "type" : "string",
            "description" : "The metric id"
          },
          "spaceAggregation" : {
            "type" : "string",
            "description" : "Space aggregation applied to the query",
            "enum" : [ "AVG", "COUNT", "MAX", "MEDIAN", "MIN", "PERCENTILE_10", "PERCENTILE_75", "PERCENTILE_90", "SUM", "VALUE" ]
          },
          "timeAggregation" : {
            "type" : "string",
            "description" : "Time roll up applied to the query",
            "enum" : [ "AVG", "COUNT", "DEFAULT", "MAX", "MEDIAN", "MIN", "SUM", "VALUE" ]
          },
          "splitBy" : {
            "type" : "array",
            "description" : "The splittings applied to the query",
            "items" : {
              "type" : "string",
              "description" : "The splittings applied to the query"
            }
          },
          "sortBy" : {
            "type" : "string",
            "description" : "The sorting applied to the query",
            "enum" : [ "ASC", "DESC" ]
          },
          "filterBy" : {
            "$ref" : "#/components/schemas/DataExplorerFilter"
          },
          "limit" : {
            "type" : "integer",
            "description" : "Limit the results of the query",
            "format" : "int32"
          },
          "metricSelector" : {
            "type" : "string",
            "description" : "The metric selector"
          },
          "foldTransformation" : {
            "type" : "string",
            "description" : "The fold transformation",
            "enum" : [ "LAST_VALUE", "TOTAL" ]
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Status of the query"
          },
          "generatedMetricSelector" : {
            "type" : "string",
            "description" : "Generated metric selector"
          }
        },
        "description" : "Configuration of a data explorer query."
      },
      "DataExplorerQuerySettings" : {
        "type" : "object",
        "properties" : {
          "resolution" : {
            "type" : "string",
            "description" : "The resolution"
          },
          "foldTransformation" : {
            "type" : "string",
            "description" : "The fold transformation",
            "enum" : [ "LAST_VALUE", "TOTAL" ]
          },
          "foldAggregation" : {
            "type" : "string",
            "description" : "The fold aggregation",
            "enum" : [ "AVG", "COUNT", "MAX", "MEDIAN", "MIN", "PERCENTILE_10", "PERCENTILE_75", "PERCENTILE_90", "SUM", "VALUE" ]
          }
        },
        "description" : "Configuration for the queries"
      },
      "DataExplorerTile" : {
        "required" : [ "bounds", "name", "queries", "tileType", "visualConfig" ],
        "type" : "object",
        "description" : "Configuration of a data explorer tile.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "customName" : {
              "type" : "string",
              "description" : "The name of the tile, set by user."
            },
            "queries" : {
              "type" : "array",
              "description" : "The list queries to explore",
              "items" : {
                "$ref" : "#/components/schemas/DataExplorerQuery"
              }
            },
            "visualConfig" : {
              "$ref" : "#/components/schemas/VisualizationConfiguration"
            },
            "queriesSettings" : {
              "$ref" : "#/components/schemas/DataExplorerQuerySettings"
            },
            "metricExpressions" : {
              "type" : "array",
              "description" : "The metric expressions generated by this configuration",
              "items" : {
                "type" : "string",
                "description" : "The metric expressions generated by this configuration"
              }
            }
          }
        } ]
      },
      "DexpFilterCriterion" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "evaluator" : {
            "type" : "string",
            "enum" : [ "EQ", "IN", "NE", "PREFIX" ]
          },
          "matchExactly" : {
            "type" : "boolean"
          }
        },
        "description" : "Criterion for data explorer filters."
      },
      "DexpFilterRelationship" : {
        "type" : "object",
        "properties" : {
          "targetEntity" : {
            "type" : "string",
            "description" : "The target entity of the relationship. e.g HOST, VCENTER, SERVICE etc"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the relationship",
            "enum" : [ "fromRelationship", "toRelationship" ]
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the relationship. e.g runsOn, isStepOf, etc"
          }
        }
      },
      "DynamicFilters" : {
        "required" : [ "filters" ],
        "type" : "object",
        "properties" : {
          "filters" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A set of all possible global dashboard filters that can be applied to a dashboard \n\nCurrently supported values are: \n\n\tOS_TYPE,\n\tSERVICE_TYPE,\n\tDEPLOYMENT_TYPE,\n\tAPPLICATION_INJECTION_TYPE,\n\tPAAS_VENDOR_TYPE,\n\tDATABASE_VENDOR,\n\tHOST_VIRTUALIZATION_TYPE,\n\tHOST_MONITORING_MODE,\n\tKUBERNETES_CLUSTER,\n\tRELATED_CLOUD_APPLICATION,\n\tRELATED_NAMESPACE,\n\tSERVICE_TAG_KEY:<tagname>,\n\tHOST_TAG_KEY:<tagname>,\n\tAPPLICATION_TAG_KEY:<tagname>,\n\tCUSTOM_DIMENSION:<key>,\n\tPROCESS_GROUP_TAG_KEY:<tagname>,\n\tPROCESS_GROUP_INSTANCE_TAG_KEY:<tagname>",
            "items" : {
              "type" : "string"
            }
          },
          "tagSuggestionTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A set of entities applied for tag filter suggestions. You can fetch the list of possible values with the [GET all entity types](https://dt-url.net/dw03s7h)request. \n\nOnly applicable if the **filters** set includes `TAG_KEY:<tagname>`.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Dashboard filter configuration of a dashboard."
      },
      "FilterableEntityTile" : {
        "required" : [ "bounds", "name", "tileType" ],
        "type" : "object",
        "description" : "Configuration of a tile with the built-in custom filter. \n\nAn example is the Service health tile, which may use a custom timeframe.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "filterConfig" : {
              "$ref" : "#/components/schemas/CustomFilterConfig"
            },
            "chartVisible" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "GraphChartSettings" : {
        "type" : "object",
        "properties" : {
          "connectNulls" : {
            "type" : "boolean"
          }
        },
        "description" : "Settings for graph chart visualization"
      },
      "HeatmapSettings" : {
        "type" : "object",
        "properties" : {
          "yAxis" : {
            "type" : "string",
            "description" : "Y axis aggregation criteria",
            "enum" : [ "DIMENSIONS", "VALUE" ]
          },
          "yAxisBuckets" : {
            "type" : "integer",
            "description" : "Number of buckets in the Y axis",
            "format" : "int32"
          },
          "xAxisBuckets" : {
            "type" : "integer",
            "description" : "Number of buckets in the X axis",
            "format" : "int32"
          }
        },
        "description" : "Settings for heatmap visualization"
      },
      "HoneycombSettings" : {
        "type" : "object",
        "properties" : {
          "showHive" : {
            "type" : "boolean"
          },
          "showLegend" : {
            "type" : "boolean"
          },
          "showLabels" : {
            "type" : "boolean"
          }
        },
        "description" : "Settings for honeycomb visualization"
      },
      "ImageTile" : {
        "required" : [ "bounds", "image", "name", "tileType" ],
        "type" : "object",
        "description" : "Configuration of the Image tile.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "image" : {
              "maxLength" : 250000,
              "minLength" : 0,
              "type" : "string",
              "description" : "The image-formatted content of the tile."
            }
          }
        } ]
      },
      "MarkdownTile" : {
        "required" : [ "bounds", "markdown", "name", "tileType" ],
        "type" : "object",
        "description" : "Configuration of the Markdown tile.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "markdown" : {
              "type" : "string",
              "description" : "The markdown-formatted content of the tile."
            }
          }
        } ]
      },
      "ProblemTile" : {
        "required" : [ "bounds", "name", "tileType" ],
        "type" : "object",
        "description" : "Configuration of a problem tile.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "problemSelector" : {
              "type" : "string",
              "description" : "Defines the scope of the problem tile. Only problems matching the specified criteria are taken into account.\nFor further information please look at the Problems API v2 '/problems' endpoint."
            },
            "entitySelector" : {
              "type" : "string",
              "description" : "The entity scope of the problem tile. For further information please look at the Problems API v2 '/problems' endpoint."
            }
          }
        } ]
      },
      "ScalableListTile" : {
        "required" : [ "bounds", "name", "tileType" ],
        "type" : "object",
        "description" : "Configuration of a tile with the built-in custom filter id. This is only for internal usage.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "customFilterId" : {
              "type" : "string",
              "description" : "The ID of the custom filter."
            },
            "entitySpecificTileType" : {
              "type" : "string",
              "description" : "The type of the entity specific tile.",
              "enum" : [ "APPLICATION", "APPLICATIONS", "APPLICATIONS_MOST_ACTIVE", "APPLICATION_WORLDMAP", "AWS", "BOUNCE_RATE", "CUSTOM_APPLICATION", "CUSTOM_CHARTING", "DATABASE", "DATABASES_OVERVIEW", "DATA_EXPLORER", "DCRUM_SERVICES", "DEM_KEY_USER_ACTION", "DOCKER", "DTAQL", "HEADER", "HOST", "HOSTS", "IMAGE", "LOGS_EVENTS_QUERY", "LOG_ANALYTICS", "LOG_QUERY", "MARKDOWN", "MOBILE_APPLICATION", "NETWORK", "NETWORK_MEDIUM", "OPEN_PROBLEMS", "PROCESS_GROUPS_ONE", "PURE_MODEL", "RESOURCES", "SCALABLE_LIST", "SERVICES", "SERVICE_VERSATILE", "SESSION_METRICS", "SLO", "SYNTHETIC_HTTP_MONITOR", "SYNTHETIC_SINGLE_EXT_TEST", "SYNTHETIC_SINGLE_WEBCHECK", "SYNTHETIC_TESTS", "THIRD_PARTY_MOST_ACTIVE", "UEM_ACTIVE_SESSIONS", "UEM_CONVERSIONS_OVERALL", "UEM_CONVERSIONS_PER_GOAL", "UEM_JSERRORS_OVERALL", "UEM_KEY_USER_ACTIONS", "USERS", "VIRTUALIZATION" ]
            },
            "chartVisible" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "SingleValueSettings" : {
        "type" : "object",
        "properties" : {
          "showSparkLine" : {
            "type" : "boolean"
          },
          "linkTileColorToThreshold" : {
            "type" : "boolean"
          },
          "showTrend" : {
            "type" : "boolean"
          }
        },
        "description" : "Settings for single value visualization"
      },
      "SyntheticSingleWebcheckTile" : {
        "required" : [ "assignedEntities", "bounds", "name", "tileType" ],
        "type" : "object",
        "description" : "Configuration of the Browser monitor tile.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "assignedEntities" : {
              "type" : "array",
              "description" : "The list of Dynatrace entities, assigned to the tile.",
              "items" : {
                "type" : "string"
              }
            },
            "excludeMaintenanceWindows" : {
              "type" : "boolean",
              "description" : "Include (`false') or exclude (`true`) maintenance windows from availability calculations."
            }
          }
        } ]
      },
      "TableSettings" : {
        "type" : "object",
        "properties" : {
          "isThresholdBackgroundAppliedToCell" : {
            "type" : "boolean"
          }
        },
        "description" : "Settings for table visualization"
      },
      "Tile" : {
        "required" : [ "bounds", "name", "tileType" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the tile."
          },
          "nameSize" : {
            "type" : "string",
            "description" : "The size of the tile name. Default value is null.",
            "enum" : [ "small", "medium", "large" ]
          },
          "tileType" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `DATA_EXPLORER` -> DataExplorerTile \n* `CUSTOM_CHARTING` -> CustomChartingTile \n* `DTAQL` -> UserSessionQueryTile \n* `MARKDOWN` -> MarkdownTile \n* `IMAGE` -> ImageTile \n* `HOSTS` -> FilterableEntityTile \n* `APPLICATIONS` -> FilterableEntityTile \n* `SERVICES` -> FilterableEntityTile \n* `DATABASES_OVERVIEW` -> FilterableEntityTile \n* `SYNTHETIC_TESTS` -> FilterableEntityTile \n* `APPLICATION_WORLDMAP` -> AssignedEntitiesWithMetricTile \n* `RESOURCES` -> AssignedEntitiesWithMetricTile \n* `THIRD_PARTY_MOST_ACTIVE` -> AssignedEntitiesWithMetricTile \n* `UEM_CONVERSIONS_PER_GOAL` -> AssignedEntitiesWithMetricTile \n* `HOST` -> AssignedEntitiesWithMetricTile \n* `PROCESS_GROUPS_ONE` -> AssignedEntitiesWithMetricTile \n* `SYNTHETIC_SINGLE_WEBCHECK` -> SyntheticSingleWebcheckTile \n* `APPLICATION` -> AssignedEntitiesTile \n* `VIRTUALIZATION` -> AssignedEntitiesTile \n* `AWS` -> AssignedEntitiesTile \n* `SERVICE_VERSATILE` -> AssignedEntitiesTile \n* `SESSION_METRICS` -> AssignedEntitiesTile \n* `USERS` -> AssignedEntitiesTile \n* `UEM_KEY_USER_ACTIONS` -> AssignedEntitiesTile \n* `BOUNCE_RATE` -> AssignedEntitiesTile \n* `UEM_CONVERSIONS_OVERALL` -> AssignedEntitiesTile \n* `UEM_JSERRORS_OVERALL` -> AssignedEntitiesTile \n* `MOBILE_APPLICATION` -> AssignedEntitiesTile \n* `SYNTHETIC_SINGLE_EXT_TEST` -> AssignedEntitiesTile \n* `SYNTHETIC_HTTP_MONITOR` -> AssignedEntitiesTile \n* `DATABASE` -> AssignedEntitiesTile \n* `CUSTOM_APPLICATION` -> AssignedEntitiesTile \n* `APPLICATION_METHOD` -> AssignedEntitiesTile \n* `LOG_ANALYTICS` -> AssignedEntitiesTile \n* `OPENSTACK` -> AssignedEntitiesTile \n* `OPENSTACK_PROJECT` -> AssignedEntitiesTile \n* `OPENSTACK_AV_ZONE` -> AssignedEntitiesTile \n* `DEVICE_APPLICATION_METHOD` -> AssignedEntitiesTile \n* `DEM_KEY_USER_ACTION` -> AssignedEntitiesTile \n* `SLO` -> AssignedEntitiesWithMetricTile \n* `SCALABLE_LIST` -> ScalableListTile \n* `HEADER` -> Tile \n* `OPEN_PROBLEMS` -> ProblemTile \n* `PURE_MODEL` -> Tile \n* `DOCKER` -> Tile \n* `NETWORK_MEDIUM` -> Tile \n* `APPLICATIONS_MOST_ACTIVE` -> Tile \n* `NETWORK` -> Tile \n* `UEM_ACTIVE_SESSIONS` -> Tile \n* `DCRUM_SERVICES` -> Tile \n",
            "enum" : [ "APPLICATION", "APPLICATIONS", "APPLICATIONS_MOST_ACTIVE", "APPLICATION_METHOD", "APPLICATION_WORLDMAP", "AWS", "BOUNCE_RATE", "CUSTOM_APPLICATION", "CUSTOM_CHARTING", "DATABASE", "DATABASES_OVERVIEW", "DATA_EXPLORER", "DCRUM_SERVICES", "DEM_KEY_USER_ACTION", "DEVICE_APPLICATION_METHOD", "DOCKER", "DTAQL", "HEADER", "HOST", "HOSTS", "IMAGE", "LOG_ANALYTICS", "MARKDOWN", "MOBILE_APPLICATION", "NETWORK", "NETWORK_MEDIUM", "OPENSTACK", "OPENSTACK_AV_ZONE", "OPENSTACK_PROJECT", "OPEN_PROBLEMS", "PROCESS_GROUPS_ONE", "PURE_MODEL", "RESOURCES", "SCALABLE_LIST", "SERVICES", "SERVICE_VERSATILE", "SESSION_METRICS", "SLO", "SYNTHETIC_HTTP_MONITOR", "SYNTHETIC_SINGLE_EXT_TEST", "SYNTHETIC_SINGLE_WEBCHECK", "SYNTHETIC_TESTS", "THIRD_PARTY_MOST_ACTIVE", "UEM_ACTIVE_SESSIONS", "UEM_CONVERSIONS_OVERALL", "UEM_CONVERSIONS_PER_GOAL", "UEM_JSERRORS_OVERALL", "UEM_KEY_USER_ACTIONS", "USERS", "VIRTUALIZATION" ]
          },
          "configured" : {
            "type" : "boolean",
            "description" : "The tile is configured and ready to use (`true`) or just placed on the dashboard (`false`)."
          },
          "bounds" : {
            "$ref" : "#/components/schemas/TileBounds"
          },
          "tileFilter" : {
            "$ref" : "#/components/schemas/TileFilter"
          }
        },
        "description" : "Configuration of a tile. \n\nThe actual set of fields depends on the type of the tile. Find the list of actual objects in the description of the **tileType** field or see [Dashboards API - Tile JSON models](https://dt-url.net/2wc3spx).",
        "discriminator" : {
          "propertyName" : "tileType"
        }
      },
      "TileBounds" : {
        "type" : "object",
        "properties" : {
          "top" : {
            "type" : "integer",
            "description" : "The vertical distance from the top left corner of the dashboard to the top left corner of the tile, in pixels.",
            "format" : "int32"
          },
          "left" : {
            "type" : "integer",
            "description" : "The horizontal distance from the top left corner of the dashboard to the top left corner of the tile, in pixels.",
            "format" : "int32"
          },
          "width" : {
            "type" : "integer",
            "description" : "The width of the tile, in pixels.",
            "format" : "int32"
          },
          "height" : {
            "type" : "integer",
            "description" : "The height of the tile, in pixels.",
            "format" : "int32"
          }
        },
        "description" : "The position and size of a tile."
      },
      "TileFilter" : {
        "type" : "object",
        "properties" : {
          "timeframe" : {
            "type" : "string",
            "description" : "The default timeframe of the tile."
          },
          "managementZone" : {
            "$ref" : "#/components/schemas/EntityShortRepresentation"
          }
        },
        "description" : "A filter applied to a tile. \n\n It overrides dashboard's filter."
      },
      "UserSessionQueryTile" : {
        "required" : [ "bounds", "customName", "name", "query", "tileType", "type" ],
        "type" : "object",
        "description" : "Configuration of a User session query tile.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Tile"
        }, {
          "type" : "object",
          "properties" : {
            "customName" : {
              "type" : "string",
              "description" : "The name of the tile, set by user."
            },
            "query" : {
              "type" : "string",
              "description" : "A [user session query](https://dt-url.net/dtusql) executed by the tile."
            },
            "type" : {
              "type" : "string",
              "description" : "The visualization of the tile.",
              "enum" : [ "COLUMN_CHART", "FUNNEL", "LINE_CHART", "NOT_CONFIGURED", "PIE_CHART", "SINGLE_VALUE", "TABLE" ]
            },
            "timeFrameShift" : {
              "type" : "string",
              "description" : "The comparison timeframe of the query. \n\n If specified, you additionally get the results of the same query with the specified time shift."
            },
            "visualizationConfig" : {
              "$ref" : "#/components/schemas/UserSessionQueryTileConfiguration"
            },
            "limit" : {
              "type" : "integer",
              "description" : "The limit of the results, if not set will use the default value of the system",
              "format" : "int32"
            }
          }
        } ]
      },
      "UserSessionQueryTileConfiguration" : {
        "type" : "object",
        "properties" : {
          "hasAxisBucketing" : {
            "type" : "boolean",
            "description" : "The axis bucketing when enabled groups similar series in the same virtual axis."
          }
        },
        "description" : "Configuration of a User session query visualization tile."
      },
      "VisualizationConfiguration" : {
        "required" : [ "global", "rules", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The id of the query",
            "enum" : [ "GRAPH_CHART", "HEATMAP", "HONEYCOMB", "PIE_CHART", "SINGLE_VALUE", "STACKED_AREA", "STACKED_COLUMN", "TABLE", "TOP_LIST" ]
          },
          "global" : {
            "$ref" : "#/components/schemas/VisualizationGlobalProperties"
          },
          "rules" : {
            "type" : "array",
            "description" : "Rules for Visualization",
            "items" : {
              "$ref" : "#/components/schemas/VisualizationRule"
            }
          },
          "axes" : {
            "$ref" : "#/components/schemas/Axes"
          },
          "heatmapSettings" : {
            "$ref" : "#/components/schemas/HeatmapSettings"
          },
          "singleValueSettings" : {
            "$ref" : "#/components/schemas/SingleValueSettings"
          },
          "thresholds" : {
            "type" : "array",
            "description" : "Thresholds for Visualization",
            "items" : {
              "$ref" : "#/components/schemas/VisualizationThreshold"
            }
          },
          "tableSettings" : {
            "$ref" : "#/components/schemas/TableSettings"
          },
          "graphChartSettings" : {
            "$ref" : "#/components/schemas/GraphChartSettings"
          },
          "honeycombSettings" : {
            "$ref" : "#/components/schemas/HoneycombSettings"
          }
        },
        "description" : "Configuration of a visualization."
      },
      "VisualizationGlobalProperties" : {
        "type" : "object",
        "properties" : {
          "theme" : {
            "type" : "string",
            "enum" : [ "BLUE", "DEFAULT", "GRAY", "GREEN", "ORANGE", "PURPLE", "RED", "ROYALBLUE", "TURQUOISE", "YELLOW" ]
          },
          "hasTrendline" : {
            "type" : "boolean"
          },
          "seriesType" : {
            "type" : "string",
            "enum" : [ "AREA", "COLUMN", "LINE", "STACKED_AREA", "STACKED_COLUMN" ]
          },
          "hideLegend" : {
            "type" : "boolean"
          },
          "threshold" : {
            "$ref" : "#/components/schemas/VisualizationThreshold"
          }
        },
        "description" : "Visualization global configuration"
      },
      "VisualizationProperties" : {
        "type" : "object",
        "properties" : {
          "seriesType" : {
            "type" : "string",
            "enum" : [ "AREA", "COLUMN", "LINE", "STACKED_AREA", "STACKED_COLUMN" ]
          },
          "alias" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          }
        }
      },
      "VisualizationRule" : {
        "type" : "object",
        "properties" : {
          "unitTransform" : {
            "type" : "string"
          },
          "seriesOverrides" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VisualizationSerieOverride"
            }
          },
          "valueFormat" : {
            "type" : "string"
          },
          "properties" : {
            "$ref" : "#/components/schemas/VisualizationProperties"
          },
          "matcher" : {
            "type" : "string"
          }
        },
        "description" : "Rules for Visualization"
      },
      "VisualizationSerieOverride" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          }
        }
      },
      "VisualizationThreshold" : {
        "type" : "object",
        "properties" : {
          "axisTarget" : {
            "type" : "string",
            "enum" : [ "LEFT", "RIGHT" ]
          },
          "columnId" : {
            "type" : "string"
          },
          "queryId" : {
            "type" : "string"
          },
          "visible" : {
            "type" : "boolean"
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VisualizationThresholdRule"
            }
          }
        },
        "description" : "Thresholds for Visualization"
      },
      "VisualizationThresholdRule" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "number",
            "format" : "double"
          },
          "color" : {
            "type" : "string"
          }
        }
      },
      "YAxis" : {
        "type" : "object",
        "properties" : {
          "queryIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "defaultAxis" : {
            "type" : "boolean"
          },
          "position" : {
            "type" : "string",
            "enum" : [ "LEFT", "RIGHT" ]
          },
          "min" : {
            "type" : "string"
          },
          "max" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "visible" : {
            "type" : "boolean"
          }
        },
        "description" : "y Axes configuration"
      },
      "DashboardAnonymousAccess" : {
        "required" : [ "managementZoneIds" ],
        "type" : "object",
        "properties" : {
          "urls" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "A list of URLs for anonymous access to the dashboard. \n\nEach link grants access to data from the specific management zone, listed in the in the **managementZoneIds** list. \n\nThese links are automatically generated by Dynatrace, you can't change them.",
              "readOnly" : true
            },
            "description" : "A list of URLs for anonymous access to the dashboard. \n\nEach link grants access to data from the specific management zone, listed in the in the **managementZoneIds** list. \n\nThese links are automatically generated by Dynatrace, you can't change them.",
            "readOnly" : true
          },
          "managementZoneIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of management zones that can display data on the publicly shared dashboard. \n\nSpecify management zone IDs here. For each management zone you specify Dynatrace generates an access link. You can access them in the **urls** list. \n\nTo share the dashboard with its default management zone, use the `default` value.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Configuration of the [anonymous access](https://dt-url.net/ov03sf1) to the dashboard."
      },
      "DashboardSharePermissions" : {
        "required" : [ "permission", "type" ],
        "type" : "object",
        "properties" : {
          "permission" : {
            "type" : "string",
            "description" : "The level of the permission: \n \n* `VIEW`: The dashboard is shared with read permission. \n* `EDIT`: The dashboard is shared with edit permission. \n",
            "enum" : [ "EDIT", "VIEW" ]
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the user or group to whom the permission is granted.\n\nNot applicable if the **type** is set to `ALL`."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the permission: \n\n* `USER`: The dashboard is shared with the specified user. \n* `GROUP`: The dashboard is shared with all users of the specified group. \n* `ALL`: The dashboard is shared via link. Any authenticated user with the link can view the dashboard.",
            "enum" : [ "ALL", "GROUP", "USER" ]
          }
        },
        "description" : "Access permissions of the dashboard."
      },
      "DashboardSharing" : {
        "required" : [ "id", "permissions", "publicAccess" ],
        "type" : "object",
        "properties" : {
          "publicAccess" : {
            "$ref" : "#/components/schemas/DashboardAnonymousAccess"
          },
          "preset" : {
            "type" : "boolean",
            "description" : "If `true` the dashboard will be marked as preset."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The dashboard is shared (`true`) or private (`false`)."
          },
          "permissions" : {
            "type" : "array",
            "description" : "A list of permissions to access the dashboard.",
            "items" : {
              "$ref" : "#/components/schemas/DashboardSharePermissions"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the dashboard."
          }
        },
        "description" : "Sharing configuration of the dashboard.",
        "example" : {
          "id" : "a5fca32f-d3ba-4749-b201-5d3cd70b9d22",
          "enabled" : "true",
          "preset" : "true",
          "permissions" : [ {
            "type" : "ALL",
            "permission" : "VIEW"
          }, {
            "id" : "userid",
            "type" : "USER",
            "permission" : "VIEW"
          }, {
            "id" : "userid",
            "type" : "USER",
            "permission" : "EDIT"
          }, {
            "id" : "groupid",
            "type" : "GROUP",
            "permission" : "VIEW"
          }, {
            "id" : "groupid",
            "type" : "GROUP",
            "permission" : "EDIT"
          } ],
          "publicAccess" : {
            "managementZoneIds" : [ "default", "2899273953172250973" ],
            "urls" : {
              "default" : "https://mytenantid.live.dynatrace.com/e/1/dashboards/a5fca32f-d3ba-4749-b201-5d3cd70b9d22?auth=9yPpSI-M-3434Irz8yc8U",
              "2899273953172250973" : "https://mytenantid.live.dynatrace.com/e/1/dashboards/a5fca32f-d3ba-4749-b201-5d3cd70b9d22?auth=SL5wTvCbaM2lwpew23234"
            }
          }
        }
      },
      "DashboardList" : {
        "required" : [ "dashboards" ],
        "type" : "object",
        "properties" : {
          "dashboards" : {
            "type" : "array",
            "description" : "A list of short representations of dashboards.",
            "items" : {
              "$ref" : "#/components/schemas/DashboardStub"
            }
          }
        },
        "description" : "A list of short representations of dashboards.",
        "example" : {
          "dashboards" : [ {
            "id" : "d6740373-ff26-4681-b95f-fd5b858c97f7",
            "name" : "Home dashboard",
            "owner" : "admin"
          }, {
            "id" : "54b34dbb-2ae7-4c27-9dbc-90a4f4c68b10",
            "name" : "Databases",
            "owner" : "viewer"
          }, {
            "id" : "8525b0bf-e33c-4a92-a534-9dedc1391e10",
            "name" : "Business value",
            "owner" : "rocks"
          } ]
        }
      },
      "DashboardStub" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the dashboard."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the dashboard.",
            "readOnly" : true
          },
          "owner" : {
            "type" : "string",
            "description" : "The owner of the dashboard.",
            "readOnly" : true
          }
        },
        "description" : "A short representation of a dashboard."
      },
      "DataPrivacyAndSecurity" : {
        "required" : [ "maskIpAddressesAndGpsCoordinates", "maskPersonalDataInUris", "maskUserActionNames" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "maskIpAddressesAndGpsCoordinates" : {
            "type" : "boolean",
            "description" : "Masking of IP addresses and GPS coordinates is enabled (`true`) or disabled (`false`)."
          },
          "maskUserActionNames" : {
            "type" : "boolean",
            "description" : "Masking of user action names is enabled (`true`) or disabled (`false`). \n\nThis masking is available only for web applications."
          },
          "maskPersonalDataInUris" : {
            "type" : "boolean",
            "description" : "Masking of personal data in URIs is enabled (`true`) or disabled (`false`)."
          },
          "logAuditEvents" : {
            "type" : "boolean",
            "description" : "The audit logging is enabled (`true`) or disabled (`false`)."
          }
        },
        "description" : "Global configuration for data privacy and security."
      },
      "HostAutoUpdateConfig" : {
        "required" : [ "setting" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the host where OneAgent is deployed.",
            "readOnly" : true,
            "example" : "HOST-0123456789ABCDE"
          },
          "setting" : {
            "type" : "string",
            "description" : "The auto-update state of OneAgents on the host: \n\n* `ENABLED`: OneAgent automatically updates to the most recent version. \n* `DISABLED`: OneAgent updates to the version specified in the **version** field.\n* `INHERITED`: The setting from the host group (if the host is a member of a host group) or the environment-wide configuration (if the host doesn't belong to a host group) is used.",
            "example" : "DISABLED",
            "enum" : [ "DISABLED", "ENABLED", "INHERITED" ]
          },
          "version" : {
            "type" : "string",
            "description" : "The version to which the OneAgent must be updated. \n\nSpecify the version in the `<major>.<minor>.<revision>.<timestamp>` format (for example `1.191.0.20200326-161115`). You can fetch the list of available versions with the [GET available versions](https://dt-url.net/fo23rb5) call. \n\nIf no suitable installer is found for the provided version or the value is set to `null`, OneAgent won't be updated. \n\nOnly applicable when the **effectiveSetting** value is `DISABLED`. \n\nIf the **setting** parameter is set to `INHERITED` but the **version** is still set, it will result in a one-time update: OneAgent will be updated to the specified version and the **version** value will be set to `null`. For further updates the parent setting will be used.",
            "example" : "1.191.0.20200326-161115"
          },
          "updateWindows" : {
            "$ref" : "#/components/schemas/UpdateWindowsConfig"
          },
          "effectiveSetting" : {
            "type" : "string",
            "description" : "The actual state of the auto-update on the host. \n\nApplicable only if the **setting** parameter is set to `INHERITED`. In that case the value is taken from the host group or the environment-wide configuration.",
            "readOnly" : true,
            "example" : "DISABLED",
            "enum" : [ "ENABLED", "DISABLED" ]
          },
          "effectiveVersion" : {
            "type" : "string",
            "description" : "The actual version to which the OneAgent must be updated. \n\nApplicable only if the **setting** parameter is set to `INHERITED` and the **version** parameter is set to `null`. In that case the value is taken from the host group or the environment-wide configuration.",
            "readOnly" : true,
            "example" : "1.191.0.20200326-161115"
          }
        },
        "description" : "Configuration of OneAgent auto-update."
      },
      "HostConfig" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the host where OneAgent is deployed.",
            "readOnly" : true,
            "example" : "HOST-0123456789ABCDE"
          },
          "monitoringConfig" : {
            "$ref" : "#/components/schemas/MonitoringConfig"
          },
          "autoUpdateConfig" : {
            "$ref" : "#/components/schemas/HostAutoUpdateConfig"
          },
          "techMonitoringConfigList" : {
            "$ref" : "#/components/schemas/TechMonitoringList"
          }
        },
        "description" : "OneAgent configuration on a host."
      },
      "MonitoringConfig" : {
        "required" : [ "monitoringEnabled", "monitoringMode" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the host where OneAgent is deployed.",
            "readOnly" : true,
            "example" : "HOST-0123456789ABCDE"
          },
          "monitoringEnabled" : {
            "type" : "boolean",
            "description" : "The monitoring is enabled (`true`) or disabled (`false`).",
            "example" : true
          },
          "monitoringMode" : {
            "type" : "string",
            "description" : "The monitoring mode for the host: full stack or infrastructure only.",
            "example" : "FULL_STACK",
            "enum" : [ "CLOUD_INFRASTRUCTURE", "FULL_STACK" ]
          },
          "autoInjectionEnabled" : {
            "type" : "boolean",
            "description" : "Code modules will be injected automatically into monitored applications if this setting is enabled. This setting won't apply if auto-injection is disabled via oneagentctl (see https://dt-url.net/oneagentctl)."
          }
        },
        "description" : "Monitoring configuration of OneAgent."
      },
      "TechMonitoringList" : {
        "required" : [ "technologies" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "technologies" : {
            "type" : "array",
            "description" : "A list of technology monitoring configurations.",
            "items" : {
              "$ref" : "#/components/schemas/Technology"
            }
          }
        },
        "description" : "A list of technology monitoring configurations."
      },
      "Technology" : {
        "required" : [ "monitoringEnabled", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the technology.",
            "example" : "JAVA",
            "enum" : [ "AIX_KERNEL_EXT", "APACHE", "CIM_V2", "DOCKER", "DOCKER_WIN", "DOT_NET", "DOT_NET_CORE", "EXTENSIONS", "EXTENSIONS_DS_GENERIC", "EXTENSIONS_STATSD", "GARDEN", "GO", "GO_STATIC", "IBM_INTEGRATION_BUS", "IIS", "JAVA", "LOG_ANALYTICS", "NETTRACER", "NETWORK", "NGINX", "NODE_JS", "OPENTRACINGNATIVE", "PHP", "PHP_81", "PHP_CGI", "PHP_CLI", "PHP_WIN", "PROCESS", "RUBY", "SDK", "VARNISH", "Z_OS" ]
          },
          "monitoringEnabled" : {
            "type" : "boolean",
            "description" : "The monitoring of the technology is enabled (`true`) or disabled (`false`).",
            "example" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "The validity of the configuration: \n\n* `HOST`: The setting is valid for OneAgent on host only. Other OneAgents, connected to the same Dynatrace server may have different setting. \n* `ENVIRONMENT`: The setting is valid for all OneAgents, connected to the Dynatrace server.",
            "example" : "ENVIRONMENT",
            "enum" : [ "ENVIRONMENT", "HOST" ]
          }
        },
        "description" : "Configuration of technology monitoring."
      },
      "ExtensionConfigurationDto" : {
        "required" : [ "enabled", "useGlobal" ],
        "type" : "object",
        "properties" : {
          "extensionId" : {
            "type" : "string",
            "description" : "The ID of the extension."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The extension is enabled (`true`) or disabled (`false`)."
          },
          "useGlobal" : {
            "type" : "boolean",
            "description" : "Allows to skip current configuration and use global one."
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The list of extension parameters. \n\n Each parameter is a key-value pair."
            },
            "description" : "The list of extension parameters. \n\n Each parameter is a key-value pair."
          },
          "hostId" : {
            "type" : "string",
            "description" : "The ID of the host on which the extension runs."
          },
          "activeGate" : {
            "$ref" : "#/components/schemas/EntityShortRepresentation"
          },
          "endpointId" : {
            "type" : "string",
            "description" : "The ID of the endpoint."
          },
          "endpointName" : {
            "type" : "string",
            "description" : "The name of the endpoint, displayed in Dynatrace."
          }
        },
        "example" : {
          "id" : "custom.remote.python.demo",
          "enabled" : true,
          "useGlobal" : false,
          "hostId" : "HOST-01A7DEFA5340A86D",
          "properties" : {
            "serverIp" : "127.0.0.1",
            "username" : "dynatrace",
            "password" : "",
            "dropdownProperty" : "three"
          },
          "activeGate" : {
            "id" : "7835970235169136995",
            "name" : "ActiveGate Host Name"
          }
        }
      },
      "Extension" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the extension, for example `custom.remote.python.demo`."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the extension, displayed in Dynatrace."
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the extension, displayed in Dynatrace."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the extension. It indicates the runtime environment of the extension (for example, ACTIVEGATE).",
            "enum" : [ "ACTIVEGATE", "CODEMODULE", "JMX", "ONEAGENT", "PMI", "UNKNOWN" ]
          },
          "metricGroup" : {
            "type" : "string",
            "description" : "The metricGroup of the extension used for grouping custom metrics into a hierarchical namespace."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "properties" : {
            "type" : "array",
            "description" : "A list of extension properties.",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionProperty"
            }
          }
        },
        "description" : "General configuration of an extension.",
        "example" : {
          "id" : "custom.remote.python.demo",
          "name" : "ActiveGate demo extension",
          "version" : "1.01",
          "type" : "ActiveGate",
          "metricGroup" : "custom.demo_metrics",
          "metadata" : {
            "configurationVersions" : [ 7 ],
            "clusterVersion" : "1.186.0.20200109-094111"
          },
          "properties" : [ {
            "key" : "serverIp",
            "type" : "STRING",
            "defaultValue" : "127.0.0.1"
          }, {
            "key" : "password",
            "type" : "PASSWORD",
            "defaultValue" : ""
          }, {
            "key" : "username",
            "type" : "STRING",
            "defaultValue" : "dynatrace"
          }, {
            "key" : "dropdownProperty",
            "type" : "DROPDOWN",
            "defaultValue" : "one",
            "dropdownValues" : [ "one", "two", "three" ]
          } ]
        }
      },
      "ExtensionProperty" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The key of the property."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the property."
          },
          "defaultValue" : {
            "type" : "string",
            "description" : "The default value of the property."
          },
          "dropdownValues" : {
            "type" : "array",
            "description" : "The list of possible values of the property. \n\n If such a list is defined, only values from this list can be assigned to the property.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A property of an extension."
      },
      "ExtensionConfigurationList" : {
        "type" : "object",
        "properties" : {
          "configurationsList" : {
            "type" : "array",
            "description" : "List of configurations.",
            "items" : {
              "$ref" : "#/components/schemas/EntityShortRepresentation"
            }
          },
          "totalResults" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result."
          }
        },
        "description" : "A list of configurations.",
        "example" : {
          "configurationsList" : [ {
            "id" : "HOST-E1550E0AED6A572F"
          } ],
          "totalResults" : 9,
          "nextPageToken" : "LlUdYmu5S2MfX/ppfCInR9M="
        }
      },
      "GlobalExtensionConfiguration" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "extensionId" : {
            "type" : "string",
            "description" : "The ID of the extension."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The extension is enabled (`true`) or disabled (`false`)."
          },
          "infraOnlyEnabled" : {
            "type" : "boolean",
            "description" : "The plugin is enabled (`true`) or disabled (`false`) globally for hosts in infrastructure-only monitoring mode"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The list of configuration parameters. \n\n Each parameter is a key-value pair."
            },
            "description" : "The list of configuration parameters. \n\n Each parameter is a key-value pair."
          }
        },
        "description" : "Global Configuration of OneAgent and JMX extension",
        "example" : {
          "id" : "custom.remote.python.demo",
          "properties" : [ {
            "key" : "serverIp",
            "type" : "STRING",
            "defaultValue" : "127.0.0.1"
          }, {
            "key" : "password",
            "type" : "PASSWORD",
            "defaultValue" : ""
          }, {
            "key" : "username",
            "type" : "STRING",
            "defaultValue" : "dynatrace"
          }, {
            "key" : "dropdownProperty",
            "type" : "DROPDOWN",
            "defaultValue" : "one",
            "dropdownValues" : [ "one", "two", "three" ]
          } ]
        }
      },
      "ExtensionState" : {
        "type" : "object",
        "properties" : {
          "extensionId" : {
            "type" : "string",
            "description" : "The ID of the extension."
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the extension (for example `1.0.0`)."
          },
          "endpointId" : {
            "type" : "string",
            "description" : "The ID of the endpoint where the state is detected - Active Gate only."
          },
          "state" : {
            "type" : "string",
            "description" : "The state of the extension.",
            "enum" : [ "ERROR_AUTH", "ERROR_COMMUNICATION_FAILURE", "ERROR_CONFIG", "ERROR_TIMEOUT", "ERROR_UNKNOWN", "INCOMPATIBLE", "LIMIT_REACHED", "NOTHING_TO_REPORT", "OK", "STATE_TYPE_UNKNOWN", "UNINITIALIZED", "UNSUPPORTED", "WAITING_FOR_STATE" ]
          },
          "stateDescription" : {
            "type" : "string",
            "description" : "A short description of the state."
          },
          "timestamp" : {
            "type" : "integer",
            "description" : "The timestamp when the state was detected, in UTC milliseconds.",
            "format" : "int64"
          },
          "hostId" : {
            "type" : "string",
            "description" : "The ID of the host on which the extension runs."
          },
          "processId" : {
            "type" : "string",
            "description" : "The ID of the entity on which the extension is active."
          }
        },
        "description" : "The state of the extension."
      },
      "ExtensionStateList" : {
        "type" : "object",
        "properties" : {
          "states" : {
            "type" : "array",
            "description" : "A list of extension states.",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionState"
            }
          },
          "totalResults" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result."
          }
        },
        "description" : "A list of extension states.",
        "example" : {
          "states" : [ {
            "extensionId" : "custom.python.connectionpool",
            "version" : "1.82",
            "endpointId" : "null",
            "state" : "OK",
            "stateDescription" : "",
            "timestamp" : 1578578108213,
            "hostId" : "HOST-01A7DEFA5340A86D",
            "processId" : "PROCESS_GROUP_INSTANCE-2182DF2E20E3E067"
          } ],
          "totalResults" : 9,
          "nextPageToken" : "LlUdYmu5S2MfX/ppfCInR9M="
        }
      },
      "ExtensionDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ACTIVEGATE", "CODEMODULE", "JMX", "ONEAGENT", "PMI", "UNKNOWN" ]
          }
        },
        "example" : {
          "id" : "custom.python.connectionpool",
          "name" : "Connection Pool",
          "type" : "ONEAGENT"
        }
      },
      "ExtensionListDto" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "array",
            "description" : "A list of extensions.",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionDto"
            }
          },
          "totalResults" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result."
          }
        },
        "example" : {
          "extensions" : [ {
            "id" : "custom.python.connectionpool",
            "name" : "Connection Pool",
            "type" : "ONEAGENT"
          } ],
          "totalResults" : 9,
          "nextPageToken" : "LlUdYmu5S2MfX/ppfCInR9M="
        }
      },
      "Host" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the host"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the host"
          },
          "hostGroup" : {
            "$ref" : "#/components/schemas/HostGroup"
          },
          "tags" : {
            "type" : "array",
            "description" : "A list of tags of the host.",
            "items" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          },
          "managementZones" : {
            "type" : "array",
            "description" : "A list of management zones to which the host belongs.",
            "items" : {
              "$ref" : "#/components/schemas/EntityShortRepresentation"
            }
          }
        },
        "description" : "Host details. Contains ID, name, host group, and tags.",
        "example" : {
          "name" : "example host",
          "id" : "HOST-0000000000000000",
          "hostGroup" : {
            "meId" : "HOST_GROUP-CF1DA380B3A53F17",
            "name" : "example host group"
          },
          "tags" : [ "tagA", "tagB" ],
          "managementZones" : [ {
            "id" : "000000000000000000",
            "name" : "example zone"
          } ]
        }
      },
      "HostGroup" : {
        "type" : "object",
        "properties" : {
          "meId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the host group."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity, displayed in the UI."
          }
        },
        "description" : "Host group to which the host belongs."
      },
      "HostList" : {
        "type" : "object",
        "properties" : {
          "totalResults" : {
            "type" : "integer",
            "description" : "Total number of results",
            "format" : "int32"
          },
          "hosts" : {
            "type" : "array",
            "description" : "The list of hosts",
            "items" : {
              "$ref" : "#/components/schemas/Host"
            }
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "Next page key used for paging"
          }
        },
        "description" : "The list of hosts supported by extension."
      },
      "ExceptionPattern" : {
        "type" : "object",
        "properties" : {
          "classPattern" : {
            "type" : "string"
          },
          "messagePattern" : {
            "type" : "string"
          }
        },
        "description" : "A list of faulty exceptions. \n\nIf an exception on *any* node of the service matches *any* of these patterns it is considered a failure."
      },
      "FailureDetectionParameterSet" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the parameter set."
          },
          "name" : {
            "maxLength" : 150,
            "minLength" : 0,
            "type" : "string",
            "description" : "The display name of the FDP set. \n\nThe length of the name is limited to 150 characters."
          },
          "description" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string",
            "description" : "A short description of the FDP set."
          },
          "clientSideMissingHttpCodeIsFailure" : {
            "type" : "boolean",
            "description" : "The missing HTTP response code on the client side is a failure (`true`) or a success (`false`).\n\n If not set, `false` is used."
          },
          "serverSideMissingHttpCodeIsFailure" : {
            "type" : "boolean",
            "description" : "The missing HTTP response code on the server side is a failure (`true`) or a success (`false`).\n\n If not set, `false` is used."
          },
          "failingHttpCodesClientSide" : {
            "type" : "string",
            "description" : "A list of client side HTTP response codes that are considered a failure. \n\nThe format is a list of ranges and individual values (for example, `500-599, 400-499, 1008`). \n\nIf not set, the range of `400-599` is used."
          },
          "failingHttpCodesServerSide" : {
            "type" : "string",
            "description" : "A list of server side HTTP response codes that are considered a failure. \n\nThe format is a list of ranges and individual values (for example, `500-599, 400-499, 1008`).If not set, the range of `500-599` is used."
          },
          "http404NotFoundFailureEnabled" : {
            "type" : "boolean",
            "description" : "Special handling of the 404 HTTP response code is enabled (`true`) or disabled (`false`). See **brokenLinkDomains** for special handling details. \n\nOnly applicable when 404 is NOT in the list of failing HTTP response codes and only for the server side.\n\n If not set, `false` is used."
          },
          "brokenLinkDomains" : {
            "type" : "array",
            "description" : "A list of domains for the special handling of the 404 HTTP response code. \n\nIf the top domain of the *Referer* is presented in the list OR equals the top domain of the request's host, the 404 code is considered a failure. \n\nOnly applicable when **isHttp404NotFoundFailureEnabled** is set to `true`.",
            "items" : {
              "type" : "string",
              "description" : "A list of domains for the special handling of the 404 HTTP response code. \n\nIf the top domain of the *Referer* is presented in the list OR equals the top domain of the request's host, the 404 code is considered a failure. \n\nOnly applicable when **isHttp404NotFoundFailureEnabled** is set to `true`."
            }
          },
          "ignoreAllExceptions" : {
            "type" : "boolean",
            "description" : "If set to true all exceptions will be ignored. Which means defined exception patterns will not have any effect."
          },
          "successForcingExceptionPatterns" : {
            "type" : "array",
            "description" : "A list of success exceptions. \n\nIf an exception on the entry node of the service matches *any* of these patterns it is considered a success.",
            "items" : {
              "$ref" : "#/components/schemas/ExceptionPattern"
            }
          },
          "ignoredExceptionPatterns" : {
            "type" : "array",
            "description" : "A list of ignored exceptions. \n\nIf an exception on the entry node of the service matches *any* of these patterns it is ignored by failure detection.",
            "items" : {
              "$ref" : "#/components/schemas/ExceptionPattern"
            }
          },
          "exceptionOnAnyNodeExceptionPatterns" : {
            "type" : "array",
            "description" : "A list of faulty exceptions. \n\nIf an exception on *any* node of the service matches *any* of these patterns it is considered a failure.",
            "items" : {
              "$ref" : "#/components/schemas/ExceptionPattern"
            }
          },
          "tagConditions" : {
            "type" : "array",
            "description" : "A list of tag-based conditions. \n\nIf *any* condition is fulfilled the request is considered a failure.",
            "items" : {
              "$ref" : "#/components/schemas/FdpTagCondition"
            }
          },
          "ignoreSpanFailureDetection" : {
            "type" : "boolean",
            "description" : "If set to true span failure detection will be ignored."
          }
        },
        "description" : "A set of failure detection parameters (FDP). \n\nThese parameters define the conditions of failure and success.",
        "example" : {
          "id" : "FDP_9",
          "name" : "shipping",
          "description" : "for requests from shipping module",
          "clientSideMissingHttpCodeIsFailure" : false,
          "serverSideMissingHttpCodeIsFailure" : false,
          "failingHttpCodesClientSide" : "400-599",
          "failingHttpCodesServerSide" : "500-599",
          "http404NotFoundFailureEnabled" : false,
          "brokenLinkDomains" : [ "mydomain.com" ],
          "successForcingExceptionPatterns" : [ {
            "classPattern" : "NullPointerException",
            "messagePattern" : ""
          } ],
          "tagConditions" : [ {
            "tagKey" : "myTag",
            "predicate" : {
              "type" : "STRING_EQUALS",
              "value" : "NG",
              "ignoreCase" : true
            }
          } ]
        }
      },
      "FdpTagCondition" : {
        "required" : [ "predicate", "tagKey" ],
        "type" : "object",
        "properties" : {
          "tagKey" : {
            "type" : "string",
            "description" : "The key of the tag to be checked."
          },
          "predicate" : {
            "$ref" : "#/components/schemas/FdpTagPredicate"
          }
        },
        "description" : "Configuration of the tag condition in the FDP set."
      },
      "FdpTagDoubleEquals" : {
        "type" : "object",
        "description" : "The predicate of the `DOUBLE_EQUALS` type. It checks whether the tag (which is a double) equals the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "number",
              "description" : "The reference value.",
              "format" : "double"
            },
            "negated" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "FdpTagDoubleExists" : {
        "type" : "object",
        "description" : "The predicate of the `DOUBLE_EXISTS` type. It checks whether the tag  exists",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "negated" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "FdpTagDoubleGreaterThan" : {
        "type" : "object",
        "description" : "The predicate of the `DOUBLE_GREATER_THAN` type. It checks whether the tag (which is a double) is greater than the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "number",
              "description" : "The reference value.",
              "format" : "double"
            }
          }
        } ]
      },
      "FdpTagDoubleGreaterThanOrEqual" : {
        "type" : "object",
        "description" : "The predicate of the `DOUBLE_GREATER_THAN_OR_EQUAL` type. It checks whether the tag (which is a double) is greater than or equals the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "number",
              "description" : "The reference value.",
              "format" : "double"
            }
          }
        } ]
      },
      "FdpTagDoubleLessThan" : {
        "type" : "object",
        "description" : "The predicate of the `DOUBLE_LESS_THAN` type. It checks whether the tag (which is a double) is less than the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "number",
              "description" : "The reference value.",
              "format" : "double"
            }
          }
        } ]
      },
      "FdpTagDoubleLessThanOrEqual" : {
        "type" : "object",
        "description" : "The predicate of the `DOUBLE_LESS_THAN_OR_EQUAL` type. It checks whether the tag (which is a double) is less than or equals the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "number",
              "description" : "The reference value.",
              "format" : "double"
            }
          }
        } ]
      },
      "FdpTagIntegerEquals" : {
        "type" : "object",
        "description" : "The predicate of the `INTEGER_EQUALS` type. It checks whether the tag (which is an integer) equals the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value."
            },
            "negated" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "FdpTagIntegerExists" : {
        "type" : "object",
        "description" : "The predicate of the `INTEGER_EXISTS` type. It checks whether the tag  exists",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "negated" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "FdpTagIntegerGreaterThan" : {
        "type" : "object",
        "description" : "The predicate of the `INTEGER_GREATER_THAN` type. It checks whether the tag (which is an integer) is greater than the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value."
            }
          }
        } ]
      },
      "FdpTagIntegerGreaterThanOrEqual" : {
        "type" : "object",
        "description" : "The predicate of the `INTEGER_GREATER_THAN_OR_EQUAL` type. It checks whether the tag (which is an integer) is greater than or equals the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value."
            }
          }
        } ]
      },
      "FdpTagIntegerLessThan" : {
        "type" : "object",
        "description" : "The predicate of the `INTEGER_LESS_THAN` type. It checks whether the tag (which is an integer) is less than the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value."
            }
          }
        } ]
      },
      "FdpTagIntegerLessThanOrEqual" : {
        "type" : "object",
        "description" : "The predicate of the `INTEGER_LESS_THAN_OR_EQUAL` type. It checks whether the tag (which is an integer) is less than or equals the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value."
            }
          }
        } ]
      },
      "FdpTagPredicate" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `STRING_EXISTS` -> FdpTagStringExists \n* `STRING_EQUALS` -> FdpTagStringEquals \n* `STRING_STARTS_WITH` -> FdpTagStringStartsWith \n* `STRING_ENDS_WITH` -> FdpTagStringEndsWith \n* `STRING_CONTAINS_SUBSTRING` -> FdpTagStringContainsSubstring \n* `INTEGER_EXISTS` -> FdpTagIntegerExists \n* `INTEGER_EQUALS` -> FdpTagIntegerEquals \n* `INTEGER_LESS_THAN` -> FdpTagIntegerLessThan \n* `INTEGER_LESS_THAN_OR_EQUAL` -> FdpTagIntegerLessThanOrEqual \n* `INTEGER_GREATER_THAN` -> FdpTagIntegerGreaterThan \n* `INTEGER_GREATER_THAN_OR_EQUAL` -> FdpTagIntegerGreaterThanOrEqual \n* `DOUBLE_EXISTS` -> FdpTagDoubleExists \n* `DOUBLE_EQUALS` -> FdpTagDoubleEquals \n* `DOUBLE_LESS_THAN` -> FdpTagDoubleLessThan \n* `DOUBLE_LESS_THAN_OR_EQUAL` -> FdpTagDoubleLessThanOrEqual \n* `DOUBLE_GREATER_THAN` -> FdpTagDoubleGreaterThan \n* `DOUBLE_GREATER_THAN_OR_EQUAL` -> FdpTagDoubleGreaterThanOrEqual \n",
            "enum" : [ "DOUBLE_EQUALS", "DOUBLE_EXISTS", "DOUBLE_GREATER_THAN", "DOUBLE_GREATER_THAN_OR_EQUAL", "DOUBLE_LESS_THAN", "DOUBLE_LESS_THAN_OR_EQUAL", "INTEGER_EQUALS", "INTEGER_EXISTS", "INTEGER_GREATER_THAN", "INTEGER_GREATER_THAN_OR_EQUAL", "INTEGER_LESS_THAN", "INTEGER_LESS_THAN_OR_EQUAL", "STRING_CONTAINS_SUBSTRING", "STRING_ENDS_WITH", "STRING_EQUALS", "STRING_EXISTS", "STRING_STARTS_WITH" ]
          }
        },
        "description" : "The predicate that tests the value of the tag. \n\nThe actual set of fields depends on the type of the predicate. Find the list of actual objects in the description of the **type** field or see [Failure detection API - JSON models](https://dt-url.net/9sg3swf).",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "FdpTagStringContainsSubstring" : {
        "type" : "object",
        "description" : "The predicate of the `STRING_CONTAINS_SUBSTRING` type. It checks whether the tag (which is a string) contains the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean"
            },
            "negated" : {
              "type" : "boolean"
            },
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the tag (which is a string) contains this value."
            }
          }
        } ]
      },
      "FdpTagStringEndsWith" : {
        "type" : "object",
        "description" : "The predicate of the `STRING_ENDS_WITH` type. It checks whether the tag (which is a string) ends with the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean"
            },
            "negated" : {
              "type" : "boolean"
            },
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the tag (which is a string) ends with this value."
            }
          }
        } ]
      },
      "FdpTagStringEquals" : {
        "type" : "object",
        "description" : "The predicate of the `STRING_EQUALS` type. It checks whether the tag (which is a string) equals the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean"
            },
            "negated" : {
              "type" : "boolean"
            },
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the tag (which is a string) equals this value."
            }
          }
        } ]
      },
      "FdpTagStringExists" : {
        "type" : "object",
        "description" : "The predicate of the `STRING_EXISTS` type. It checks whether the tag  exists",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "negated" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "FdpTagStringStartsWith" : {
        "type" : "object",
        "description" : "The predicate of the `STRING_STARTS_WITH` type. It checks whether the tag (which is a string) starts with the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdpTagPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean"
            },
            "negated" : {
              "type" : "boolean"
            },
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the tag (which is a string) starts with this value."
            }
          }
        } ]
      },
      "FailureDetectionCondition" : {
        "type" : "object",
        "properties" : {
          "attribute" : {
            "type" : "string",
            "description" : "The attribute to be checked.",
            "enum" : [ "PG_NAME", "PG_TAG", "SERVICE_MANAGEMENT_ZONES", "SERVICE_NAME", "SERVICE_SERVICE_TYPE", "SERVICE_TAG" ]
          },
          "predicate" : {
            "$ref" : "#/components/schemas/FdcPredicate"
          }
        },
        "description" : "The condition of the failure detection rule."
      },
      "FailureDetectionRule" : {
        "required" : [ "conditions", "enabled", "fdpId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the rule."
          },
          "name" : {
            "maxLength" : 150,
            "minLength" : 0,
            "type" : "string",
            "description" : "The display name of the rule. \n\nThe length of the name is limited to 150 characters."
          },
          "description" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string",
            "description" : "A short description of the rule."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          },
          "fdpId" : {
            "type" : "string",
            "description" : "The failure detection parameter (FDP) set of the rule. \n\nSpecify the ID of the set here. The FDP set must exist at the time of rule creation."
          },
          "conditions" : {
            "maxItems" : 10,
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of conditions of the rule. \n\nThe rule applies when **all** conditions are fulfilled.",
            "items" : {
              "$ref" : "#/components/schemas/FailureDetectionCondition"
            }
          }
        },
        "description" : "Configuration of the failure detection rule.",
        "example" : {
          "id" : "R_5",
          "name" : "shipping",
          "description" : "for requests from shipping module",
          "enabled" : true,
          "fdpId" : "FDP_9",
          "conditions" : [ {
            "attribute" : "SERVICE_NAME",
            "predicate" : {
              "type" : "STRING_STARTS_WITH",
              "ignoreCase" : false,
              "values" : [ "shp", "stg_shp" ]
            }
          } ]
        }
      },
      "FdcPredicate" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `STRING_EQUALS` -> FdcPredicateStringEquals \n* `STRING_STARTS_WITH` -> FdcPredicateStringStartsWith \n* `STRING_ENDS_WITH` -> FdcPredicateStringEndsWith \n* `STRING_CONTAINS_SUBSTRING` -> FdcPredicateStringContains \n* `INTEGER_EQUALS` -> FdcPredicateIntegerEquals \n* `INTEGER_LESS_THAN` -> FdcPredicateIntegerLessThan \n* `INTEGER_LESS_THAN_OR_EQUAL` -> FdcPredicateIntegerLessThanOrEqual \n* `INTEGER_GREATER_THAN` -> FdcPredicateIntegerGreaterThan \n* `INTEGER_GREATER_THAN_OR_EQUAL` -> FdcPredicateIntegerGreaterThanOrEqual \n* `LONG_EQUALS` -> FdcPredicateLongEquals \n* `LONG_LESS_THAN` -> FdcPredicateLongLessThan \n* `LONG_LESS_THAN_OR_EQUAL` -> FdcPredicateLongLessThanOrEqual \n* `LONG_GREATER_THAN` -> FdcPredicateLongGreaterThan \n* `LONG_GREATER_THAN_OR_EQUAL` -> FdcPredicateLongGreaterThanOrEqual \n* `TAG_KEY_EQUALS` -> FdcPredicateTagKeyEquals \n* `TAG_EQUALS` -> FdcPredicateTagEquals \n* `SERVICE_TYPE_EQUALS` -> FdcPredicateServiceTypeEquals \n* `MANAGEMENT_ZONES_CONTAINS_ALL` -> FdcPredicateManagementZonesContainsAll \n* `SET_OF_INTEGERS_CONTAINS_ANY` -> FdcPredicateSetOfIntegersContainsAny \n* `SET_OF_INTEGERS_CONTAINS_ALL` -> FdcPredicateSetOfIntegersContainsAll \n",
            "enum" : [ "INTEGER_EQUALS", "INTEGER_GREATER_THAN", "INTEGER_GREATER_THAN_OR_EQUAL", "INTEGER_LESS_THAN", "INTEGER_LESS_THAN_OR_EQUAL", "LONG_EQUALS", "LONG_GREATER_THAN", "LONG_GREATER_THAN_OR_EQUAL", "LONG_LESS_THAN", "LONG_LESS_THAN_OR_EQUAL", "MANAGEMENT_ZONES_CONTAINS_ALL", "SERVICE_TYPE_EQUALS", "SET_OF_INTEGERS_CONTAINS_ALL", "SET_OF_INTEGERS_CONTAINS_ANY", "STRING_CONTAINS_SUBSTRING", "STRING_ENDS_WITH", "STRING_EQUALS", "STRING_STARTS_WITH", "TAG_EQUALS", "TAG_KEY_EQUALS" ]
          }
        },
        "description" : "The predicate that tests the value of the attribute. \n\nThe actual set of fields depends on the type of the predicate. Find the list of actual objects in the description of the **type** field or see [Failure detection API - JSON models](https://dt-url.net/9sg3swf).",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "FdcPredicateIntegerEquals" : {
        "required" : [ "values" ],
        "type" : "object",
        "description" : "The predicate of the `INTEGER_EQUALS` type. It checks whether the attribute (which is an integer) equals one of the reference values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is an integer) equals *any* of these.",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        } ]
      },
      "FdcPredicateIntegerGreaterThan" : {
        "type" : "object",
        "description" : "The predicate of the `INTEGER_GREATER_THAN` type. It checks whether the attribute (which is an integer) is greater than the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is an integer) is greater than this value.",
              "format" : "int32"
            }
          }
        } ]
      },
      "FdcPredicateIntegerGreaterThanOrEqual" : {
        "type" : "object",
        "description" : "The predicate of the `INTEGER_GREATER_THAN_OR_EQUAL` type. It checks whether the attribute (which is an integer) is greater than or equals the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is an integer) is greater than or equals this value.",
              "format" : "int32"
            }
          }
        } ]
      },
      "FdcPredicateIntegerLessThan" : {
        "type" : "object",
        "description" : "The predicate of the `INTEGER_LESS_THAN` type. It checks whether the attribute (which is an integer) is less than the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is an integer) is less than this value.",
              "format" : "int32"
            }
          }
        } ]
      },
      "FdcPredicateIntegerLessThanOrEqual" : {
        "type" : "object",
        "description" : "The predicate of the `INTEGER_LESS_THAN_OR_EQUAL` type. It checks whether the attribute (which is an integer) is less than or equals the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is an integer) is less than or equals this value.",
              "format" : "int32"
            }
          }
        } ]
      },
      "FdcPredicateLongEquals" : {
        "required" : [ "values" ],
        "type" : "object",
        "description" : "The predicate of the `LONG_EQUALS` type. It checks whether the attribute (which is a long) equals one of the reference values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a long) equals *any* of these.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "FdcPredicateLongGreaterThan" : {
        "type" : "object",
        "description" : "The predicate of the `LONG_GREATER_THAN` type. It checks whether the attribute (which is a long) is greater than the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is a long) is greater than this value."
            }
          }
        } ]
      },
      "FdcPredicateLongGreaterThanOrEqual" : {
        "type" : "object",
        "description" : "The predicate of the `LONG_GREATER_THAN_OR_EQUAL` type. It checks whether the attribute (which is a long) is greater than or equals the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is a long) is greater than or equals this value."
            }
          }
        } ]
      },
      "FdcPredicateLongLessThan" : {
        "type" : "object",
        "description" : "The predicate of the `LONG_LESS_THAN` type. It checks whether the attribute (which is a long) is less than the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is a long) is less than this value."
            }
          }
        } ]
      },
      "FdcPredicateLongLessThanOrEqual" : {
        "type" : "object",
        "description" : "The predicate of the `LONG_LESS_THAN_OR_EQUAL` type. It checks whether the attribute (which is a long) is less than or equals the reference value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "description" : "The reference value. The condition is fulfilled when the attribute (which is a long) is less than or equals this value."
            }
          }
        } ]
      },
      "FdcPredicateManagementZonesContainsAll" : {
        "type" : "object",
        "description" : "The predicate of the `MANAGEMENT_ZONES_CONTAINS_ALL` type. It checks whether the attribute (which is a set of management zones) contains **all** the reference values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "uniqueItems" : true,
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a set of management zones) contains **all** the reference values. \n\nSpecify the ID or the name of the management zone here.",
              "items" : {
                "type" : "string",
                "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a set of management zones) contains **all** the reference values. \n\nSpecify the ID or the name of the management zone here."
              }
            }
          }
        } ]
      },
      "FdcPredicateServiceTypeEquals" : {
        "type" : "object",
        "description" : "The predicate of the `SERVICE_TYPE_EQUALS` type. It checks whether the attribute (which is the type of the service) equals one of the reference values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "uniqueItems" : true,
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is the type of the service) equals *any* of these.The possible values are: WebRequest, WebService, Database, Method, WebSite, Messaging, Mobile, Process, Rmi, External, QueueListener, QueueInteraction, RemoteCall, SaasVendor, AMP, CustomApplication, Cics, Ims, CicsInteraction, ImsInteraction, EnterpriseServiceBus, ZosConnect.",
              "items" : {
                "type" : "string",
                "description" : "A list of reference values. The condition is fulfilled when the attribute (which is the type of the service) equals *any* of these.The possible values are: WebRequest, WebService, Database, Method, WebSite, Messaging, Mobile, Process, Rmi, External, QueueListener, QueueInteraction, RemoteCall, SaasVendor, AMP, CustomApplication, Cics, Ims, CicsInteraction, ImsInteraction, EnterpriseServiceBus, ZosConnect."
              }
            }
          }
        } ]
      },
      "FdcPredicateSetOfIntegersContainsAll" : {
        "required" : [ "values" ],
        "type" : "object",
        "description" : "The predicate of the `SET_OF_INTEGERS_CONTAINS_ALL` type. It checks whether the attribute (which is a set of integers) contains **all** the reference values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a set of integers) contains **all** the reference values.",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        } ]
      },
      "FdcPredicateSetOfIntegersContainsAny" : {
        "required" : [ "values" ],
        "type" : "object",
        "description" : "The predicate of the `SET_OF_INTEGERS_CONTAINS_ANY` type. It checks whether the attribute (which is a set of integers) contains one of the reference values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a set of integers) contains *any* of these.",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        } ]
      },
      "FdcPredicateStringContains" : {
        "required" : [ "ignoreCase", "values" ],
        "type" : "object",
        "description" : "The predicate of the `STRING_CONTAINS_SUBSTRING` type. It checks whether the attribute (which is a string) contains one of the reference values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a string) contains *any* of these.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "FdcPredicateStringEndsWith" : {
        "required" : [ "ignoreCase", "values" ],
        "type" : "object",
        "description" : "The predicate of the `STRING_ENDS_WITH ` type. It checks whether the attribute (which is a string) ends with one of the reference values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a string) ends with *any* of these.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "FdcPredicateStringEquals" : {
        "required" : [ "ignoreCase", "values" ],
        "type" : "object",
        "description" : "The predicate of the `STRING_EQUALS` type. It checks whether the attribute (which is a string) equals one of the reference values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a string) equals *any* of these.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "FdcPredicateStringStartsWith" : {
        "required" : [ "ignoreCase", "values" ],
        "type" : "object",
        "description" : "The predicate of the `STRING_STARTS_WITH` type. It checks whether the attribute (which is a string) starts with one of the reference values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is a string) start with *any* of these.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "FdcPredicateTagEquals" : {
        "type" : "object",
        "description" : "The predicate of the `TAG_EQUALS` type. It checks whether the attribute (which is a key:value pair) equals one of the reference values.\n\n The  reference value is a key:value pair, consisting of a key and a value that are at the **same position** in the respective list.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "keys" : {
              "type" : "array",
              "description" : "A list of reference tag keys.\n\n The condition is fulfilled when the tag matches *any* key:value pair, consisting of a key and a value that are at the **same position** in the respective list.",
              "items" : {
                "type" : "string",
                "description" : "A list of reference tag keys.\n\n The condition is fulfilled when the tag matches *any* key:value pair, consisting of a key and a value that are at the **same position** in the respective list."
              }
            },
            "values" : {
              "type" : "array",
              "description" : "A list of reference tag values.\n\n The condition is fulfilled when the tag matches *any* key:value pair, consisting of a key and a value that are at the **same position** in the respective list.",
              "items" : {
                "type" : "string",
                "description" : "A list of reference tag values.\n\n The condition is fulfilled when the tag matches *any* key:value pair, consisting of a key and a value that are at the **same position** in the respective list."
              }
            }
          }
        } ]
      },
      "FdcPredicateTagKeyEquals" : {
        "type" : "object",
        "description" : "The predicate of the `TAG_KEY_EQUALS` type. It checks whether the attribute (which is the key of a tag) equals one of the reference values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FdcPredicate"
        }, {
          "type" : "object",
          "properties" : {
            "keys" : {
              "uniqueItems" : true,
              "type" : "array",
              "description" : "A list of reference values. The condition is fulfilled when the attribute (which is the key of a tag) equals *any* of these.",
              "items" : {
                "type" : "string",
                "description" : "A list of reference values. The condition is fulfilled when the attribute (which is the key of a tag) equals *any* of these."
              }
            }
          }
        } ]
      },
      "FdpSelectionRuleOrder" : {
        "required" : [ "ruleIds" ],
        "type" : "object",
        "properties" : {
          "ruleIds" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of the rule IDs. The rules in the ruleset are arranged such that their IDs form the same sequence as this list. The ID of each rule in the ruleset must occur exactly once in the list. ",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The order of the rules in the ruleset.",
        "example" : {
          "ruleIds" : [ "R1", "RZa", "RZb" ]
        }
      },
      "FrequentIssueDetectionConfig" : {
        "required" : [ "frequentIssueDetectionApplicationEnabled", "frequentIssueDetectionInfrastructureEnabled", "frequentIssueDetectionServiceEnabled" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "frequentIssueDetectionApplicationEnabled" : {
            "type" : "boolean",
            "description" : "The detection for applications is enabled (`true`) or disabled (`false`)."
          },
          "frequentIssueDetectionServiceEnabled" : {
            "type" : "boolean",
            "description" : "The detection for services is enabled (`true`) or disabled (`false`)."
          },
          "frequentIssueDetectionInfrastructureEnabled" : {
            "type" : "boolean",
            "description" : "The detection for infrastructure is enabled (`true`) or disabled (`false`)."
          }
        },
        "description" : "Parameters of the frequent issue detection. To learn more about it, see [Detection of frequent issues](https://dt-url.net/4da3kdg) in Dynatrace Documentation. ",
        "example" : {
          "frequentIssueDetectionApplicationEnabled" : true,
          "frequentIssueDetectionServiceEnabled" : true,
          "frequentIssueDetectionInfrastructureEnabled" : true
        }
      },
      "IpAddressMappingLocation" : {
        "required" : [ "countryCode" ],
        "type" : "object",
        "properties" : {
          "countryCode" : {
            "maxLength" : 2,
            "minLength" : 2,
            "type" : "string",
            "description" : "The country code of the location. \n\n Use the alpha-2 code of the [ISO 3166-2 standard](https://dt-url.net/iso3166-2), (for example, `AT` for Austria or `PL` for Poland)."
          },
          "city" : {
            "type" : "string",
            "description" : "The city name of the location."
          },
          "regionCode" : {
            "type" : "string",
            "description" : "The region code of the location. \n\n For the [USA](https://dt-url.net/iso3166us) or [Canada](https://dt-url.net/iso3166ca) use ISO 3166-2 state codes without `US-` or `CA-` prefix. \n\n For the rest of the world use [FIPS 10-4 codes](https://dt-url.net/fipscodes) without country prefix."
          },
          "latitude" : {
            "maximum" : 90,
            "minimum" : -90,
            "type" : "number",
            "description" : "The latitude of the location in `DDD.dddd` format.",
            "format" : "double"
          },
          "longitude" : {
            "maximum" : 180,
            "minimum" : -180,
            "type" : "number",
            "description" : "The longitude of the location in `DDD.dddd` format.",
            "format" : "double"
          }
        },
        "description" : "The location for an IP address mapping."
      },
      "IpAddressMappingRule" : {
        "required" : [ "ipAddressMappingLocation", "ipAddressRange" ],
        "type" : "object",
        "properties" : {
          "ipAddressMappingLocation" : {
            "$ref" : "#/components/schemas/IpAddressMappingLocation"
          },
          "ipAddressRange" : {
            "$ref" : "#/components/schemas/IpAddressRange"
          }
        },
        "description" : "Configuration of the IP address mapping to the geographic location."
      },
      "IpAddressMappings" : {
        "type" : "object",
        "properties" : {
          "ipAddressMappingRules" : {
            "type" : "array",
            "description" : "A list of IP address mapping rules. \n\nRules are evaluated from top to bottom; the first matching rule applies.",
            "items" : {
              "$ref" : "#/components/schemas/IpAddressMappingRule"
            }
          }
        },
        "description" : "Configuration of the IP address mappings to geographic locations."
      },
      "IpDetectionHeaders" : {
        "type" : "object",
        "properties" : {
          "ipDetectionHeaders" : {
            "type" : "array",
            "description" : "A list of custom client IP headers. \n\nHeaders are evaluated from top to bottom; the first matching header applies.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Configuration of the custom client IP headers."
      },
      "HostGroupAutoUpdateConfig" : {
        "required" : [ "setting" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the host group.",
            "readOnly" : true,
            "example" : "HOST_GROUP-0123456789ABCDE"
          },
          "setting" : {
            "type" : "string",
            "description" : "The auto-update state of OneAgents in a host group: \n\n* `ENABLED`: OneAgents automatically update to the most recent version. \n* `DISABLED`: OneAgents update to the version specified in the **version** field.\n* `INHERITED`: The setting from the environment-wide configuration is used.\n\nOneAgents installed on hosts of the host group use this configuration only when their **setting** parameter is set to `INHERITED`.",
            "example" : "DISABLED",
            "enum" : [ "DISABLED", "ENABLED", "INHERITED" ]
          },
          "version" : {
            "type" : "string",
            "description" : "The version to which the OneAgent must be updated. \n\nSpecify the version in the `<major>.<minor>.<revision>` format (for example `1.181.0`) or `<major>.<minor>` format (for example `1.181`). You can fetch the list of available versions with the [GET available versions](https://dt-url.net/fo23rb5) call. If no suitable installer is found for the provided version or the value is set to `null`, OneAgent won't be updated. \n\nOnly applicable when the **setting** parameter is set to `DISABLED`.",
            "example" : "1.181.0"
          },
          "updateWindows" : {
            "$ref" : "#/components/schemas/UpdateWindowsConfig"
          },
          "effectiveSetting" : {
            "type" : "string",
            "description" : "The actual state of the auto-update on the hosts in a host group. \n\nApplicable only if the **setting** parameter is set to `INHERITED`. In that case the value is taken from the environment-wide setting.",
            "readOnly" : true,
            "example" : "DISABLED",
            "enum" : [ "ENABLED", "DISABLED" ]
          },
          "effectiveVersion" : {
            "type" : "string",
            "description" : "The actual version to which the OneAgent must be updated. \n\nApplicable only if the **setting** parameter is set to `INHERITED`. In that case the value is taken from the environment-wide setting.",
            "readOnly" : true,
            "example" : "1.181.0"
          }
        },
        "description" : "Configuration of OneAgent auto-update in a host group. \n\nApplies to all OneAgents installed on hosts of the host group if their **setting** parameter is set to `INHERITED`. Otherwise, the host level setting applies."
      },
      "OneAgentHostGroupConfig" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the host group.",
            "readOnly" : true,
            "example" : "HOST_GROUP-0123456789ABCDE"
          },
          "autoUpdateConfig" : {
            "$ref" : "#/components/schemas/HostGroupAutoUpdateConfig"
          }
        },
        "description" : "Configuration of OneAgent in a host group."
      },
      "IbmMQImsEntryQueue" : {
        "required" : [ "queueManagerName", "queueName" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the IMS entry queue.",
            "format" : "uuid",
            "example" : "12345678-abcd-1234-abcd-1234567890ab"
          },
          "queueManagerName" : {
            "maxLength" : 500,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the queue manager."
          },
          "queueName" : {
            "maxLength" : 500,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the queue."
          }
        },
        "description" : "Ibm MQ queue which is an entrypoint to IMS.",
        "example" : {
          "queueManagerName" : "MyQueueManagerName",
          "queueName" : "MyQueueName"
        }
      },
      "AliasQueue" : {
        "required" : [ "aliasQueue", "baseQueue", "clusterVisibility" ],
        "type" : "object",
        "properties" : {
          "aliasQueue" : {
            "maxLength" : 500,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the alias queue."
          },
          "baseQueue" : {
            "maxLength" : 500,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the base queue, which the alias queue should point to."
          },
          "clusterVisibility" : {
            "maxItems" : 10000,
            "minItems" : 0,
            "type" : "array",
            "description" : "The alias queue is visible in these [clusters](https://dt-url.net/dic3kgg). The queue manager must be part of these clusters.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Define an alias for a so called base queue. This can either be a local queue owned by this queue manager, a local definition of a remote queue or a cluster queue visible but owned by another queue manager. The alias can be made visible in one or more clusters."
      },
      "ClusterQueue" : {
        "required" : [ "clusterVisibility", "localQueue" ],
        "type" : "object",
        "properties" : {
          "localQueue" : {
            "maxLength" : 500,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the local queue."
          },
          "clusterVisibility" : {
            "maxItems" : 10000,
            "minItems" : 1,
            "type" : "array",
            "description" : "The local queue is visible in these [clusters](https://dt-url.net/dic3kgg). The queue manager must be part of these clusters.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "This local queue is visible in these [clusters](https://dt-url.net/dic3kgg). The queue manager must be part of these clusters."
      },
      "QueueManager" : {
        "required" : [ "aliasQueues", "clusterQueues", "clusters", "name", "remoteQueues" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 500,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the queue manager."
          },
          "clusters" : {
            "maxItems" : 10000,
            "minItems" : 0,
            "type" : "array",
            "description" : "The queue manager will have access to all cluster visible queues in these [clusters](https://dt-url.net/dic3kgg).",
            "items" : {
              "type" : "string"
            }
          },
          "aliasQueues" : {
            "maxItems" : 10000,
            "minItems" : 0,
            "type" : "array",
            "description" : "The list of alias queues in the queue manager.",
            "items" : {
              "$ref" : "#/components/schemas/AliasQueue"
            }
          },
          "remoteQueues" : {
            "maxItems" : 10000,
            "minItems" : 0,
            "type" : "array",
            "description" : "The list of remote queues in the queue manager.",
            "items" : {
              "$ref" : "#/components/schemas/RemoteQueue"
            }
          },
          "clusterQueues" : {
            "maxItems" : 10000,
            "minItems" : 0,
            "type" : "array",
            "description" : "The list of cluster queues in the queue manager.",
            "items" : {
              "$ref" : "#/components/schemas/ClusterQueue"
            }
          }
        },
        "description" : "Parameters of the queue manager.",
        "example" : {
          "name" : "name of a queue manager",
          "clusters" : [ "name of a cluster this queue manager is part of", "another name of a cluster this queue manager is part of" ],
          "aliasQueues" : [ {
            "aliasQueue" : "alias queue name",
            "baseQueue" : "real queue name",
            "clusterVisibility" : [ "name of a cluster this alias should be visible in", "another cluster" ]
          } ],
          "remoteQueues" : [ {
            "localQueue" : "local definition of the remote queue",
            "remoteQueue" : "remote queue name",
            "remoteQueueManager" : "remote queue manager name",
            "clusterVisibility" : [ "name of a cluster this local definition of the remote queue should be visible in", "another cluster" ]
          } ],
          "clusterQueues" : [ {
            "localQueue" : "name of a local queue",
            "clusterVisibility" : [ "name of a cluster this local queue should be visible in", "another cluster" ]
          } ]
        }
      },
      "RemoteQueue" : {
        "required" : [ "clusterVisibility", "localQueue", "remoteQueue", "remoteQueueManager" ],
        "type" : "object",
        "properties" : {
          "localQueue" : {
            "maxLength" : 500,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the local definition of the remote queue."
          },
          "remoteQueue" : {
            "maxLength" : 500,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the remote queue."
          },
          "remoteQueueManager" : {
            "maxLength" : 500,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the remote queue manager."
          },
          "clusterVisibility" : {
            "maxItems" : 10000,
            "minItems" : 0,
            "type" : "array",
            "description" : "The local definition of the remote queue is visible in these [clusters](https://dt-url.net/dic3kgg). The queue manager must be part of these clusters.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Define a local definition of a remote queue owned by another queue manager. The local definition can be made visible in one or more clusters."
      },
      "LogSourceFilter" : {
        "type" : "object",
        "properties" : {
          "pathDefinitions" : {
            "type" : "array",
            "description" : "A list of filtering criteria for log path. \n\nIf several criteria are specified, the OR logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/PathDefinition"
            }
          },
          "sourceEntities" : {
            "type" : "array",
            "description" : "A list of Dynatrace entities, where the log can originate from. Specify Dynatrace entity IDs here. \n\n Allowed types of entities are `PROCESS_GROUP` and `PROCESS_GROUP_INSTANCE`. You can't mix entity types. \n\nIf several entities are specified, the OR logic applies. \n\nThis field is mutually exclusive with the **osTypes** field.",
            "items" : {
              "type" : "string"
            }
          },
          "hostFilters" : {
            "type" : "array",
            "description" : "A list of hosts, where the log can originate from. Specify Dynatrace entity IDs here. \n\nIf several hosts are specified, the OR logic applies.",
            "items" : {
              "type" : "string"
            }
          },
          "osTypes" : {
            "maxItems" : 1,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of operating system types, where the log can originate from. \n\nIf set, **only OS logs** are included in the result. \n\nIf several OS are specified, the OR logic applies. \n\nThis field is mutually exclusive with the **sourceEntities** field.",
            "items" : {
              "type" : "string",
              "enum" : [ "AIX", "DARWIN", "HPUX", "LINUX", "SOLARIS", "WINDOWS", "ZOS" ]
            }
          }
        },
        "description" : "Configuration of the log filter for a custom log metric. \n\nIf several criteria are specified, the AND logic applies."
      },
      "PathDefinition" : {
        "required" : [ "definition", "type" ],
        "type" : "object",
        "properties" : {
          "definition" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The path to the required log path. \n\n If the **type** is set to `WILDCARD`, it may contain wildcard characters (`*`).",
            "example" : "/var/log/sample.log"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the log path **definition**: fixed or an expression with wildcards.",
            "example" : "FIXED",
            "enum" : [ "FIXED", "WILDCARD" ]
          }
        },
        "description" : "A filtering criterion for log path."
      },
      "EntitySelectorBasedMzRule" : {
        "required" : [ "entitySelector" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          },
          "entitySelector" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The entity selector string, by which the entities are selected."
          }
        },
        "description" : "The entity-selector-based rule for management zone usage. It allows adding entities to a management zone via an entity selector."
      },
      "ManagementZone" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the management zone.",
            "example" : "123456"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the management zone."
          },
          "description" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string",
            "description" : "The description of the management zone."
          },
          "rules" : {
            "maxItems" : 150,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of rules for management zone usage. \n\nIf several rules are specified, the **OR** logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/MzRule"
            }
          },
          "dimensionalRules" : {
            "maxItems" : 150,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of dimensional data rules for management zone usage. \n\nIf several rules are specified, the **OR** logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/MzDimensionalRule"
            }
          },
          "entitySelectorBasedRules" : {
            "maxItems" : 150,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of entity-selector based rules for management zone usage.\n\nIf several rules are specified, the **OR** logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/EntitySelectorBasedMzRule"
            }
          }
        },
        "description" : "The configuration of the management zone. It defines how the management zone applies.",
        "example" : {
          "name" : "sampleManagementZone",
          "description" : "sampleDescription",
          "rules" : [ {
            "type" : "SERVICE",
            "enabled" : true,
            "propagationTypes" : [ "SERVICE_TO_HOST_LIKE" ],
            "conditions" : [ {
              "key" : {
                "attribute" : "SERVICE_DATABASE_NAME"
              },
              "comparisonInfo" : {
                "type" : "STRING",
                "operator" : "BEGINS_WITH",
                "value" : "sample",
                "negate" : false,
                "caseSensitive" : false
              }
            }, {
              "key" : {
                "attribute" : "SERVICE_WEB_SERVER_NAME"
              },
              "comparisonInfo" : {
                "type" : "STRING",
                "operator" : "EXISTS",
                "negate" : false
              }
            }, {
              "key" : {
                "attribute" : "PROCESS_GROUP_CUSTOM_METADATA",
                "type" : "PROCESS_CUSTOM_METADATA_KEY",
                "dynamicKey" : {
                  "source" : "KUBERNETES",
                  "key" : "kubernetes.io/limit-ranger"
                }
              },
              "comparisonInfo" : {
                "type" : "STRING",
                "operator" : "BEGINS_WITH",
                "value" : "sample",
                "negate" : false,
                "caseSensitive" : false
              }
            } ]
          } ],
          "dimensionalRules" : [ {
            "enabled" : true,
            "appliesTo" : "METRIC",
            "conditions" : [ {
              "conditionType" : "DIMENSION",
              "ruleMatcher" : "EQUALS",
              "key" : "alwaysRequired",
              "value" : "requiredForDimension_forbiddenForMetricKeyAndLogFileName"
            } ]
          } ],
          "entitySelectorBasedRules" : [ {
            "enabled" : true,
            "entitySelector" : "type(HOST) AND cpuCores(4)"
          } ]
        }
      },
      "MzDimensionalRule" : {
        "required" : [ "appliesTo", "conditions", "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          },
          "appliesTo" : {
            "type" : "string",
            "description" : "The target of the rule.",
            "enum" : [ "ANY", "LOG", "METRIC" ]
          },
          "conditions" : {
            "type" : "array",
            "description" : "A list of conditions for the management zone. \n\n The management zone applies only if **all** conditions are fulfilled.",
            "items" : {
              "$ref" : "#/components/schemas/MzDimensionalRuleCondition"
            }
          }
        },
        "description" : "The dimensional rule of the management zone usage. It defines how the management zone applies. \n\n Each rule is evaluated independently of all other rules."
      },
      "MzDimensionalRuleCondition" : {
        "required" : [ "conditionType", "key", "ruleMatcher" ],
        "type" : "object",
        "properties" : {
          "conditionType" : {
            "type" : "string",
            "description" : "The type of the condition.",
            "enum" : [ "DIMENSION", "LOG_FILE_NAME", "METRIC_KEY" ]
          },
          "ruleMatcher" : {
            "type" : "string",
            "description" : "How we compare the values.",
            "enum" : [ "BEGINS_WITH", "EQUALS" ]
          },
          "key" : {
            "type" : "string",
            "description" : "The reference value for comparison. \n\nFor conditions of the `DIMENSION` type, specify the key here."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the dimension. \n\nOnly applicable when the **conditionType** is set to `DIMENSION`."
          }
        },
        "description" : "A condition of the management zone dimensional rule."
      },
      "MzRule" : {
        "required" : [ "conditions", "enabled", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of Dynatrace entities the management zone can be applied to.",
            "enum" : [ "APPMON_SERVER", "APPMON_SYSTEM_PROFILE", "AWS_ACCOUNT", "AWS_APPLICATION_LOAD_BALANCER", "AWS_AUTO_SCALING_GROUP", "AWS_CLASSIC_LOAD_BALANCER", "AWS_NETWORK_LOAD_BALANCER", "AWS_RELATIONAL_DATABASE_SERVICE", "AZURE", "BROWSER_MONITOR", "CLOUD_APPLICATION", "CLOUD_APPLICATION_NAMESPACE", "CLOUD_FOUNDRY_FOUNDATION", "CUSTOM_APPLICATION", "CUSTOM_DEVICE", "CUSTOM_DEVICE_GROUP", "DATA_CENTER_SERVICE", "ENTERPRISE_APPLICATION", "ESXI_HOST", "EXTERNAL_MONITOR", "HOST", "HOST_GROUP", "HTTP_MONITOR", "KUBERNETES_CLUSTER", "MOBILE_APPLICATION", "OPENSTACK_ACCOUNT", "PROCESS_GROUP", "QUEUE", "SERVICE", "WEB_APPLICATION" ]
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          },
          "propagationTypes" : {
            "type" : "array",
            "description" : "How to apply the management zone to underlying entities: \n\n* `SERVICE_TO_HOST_LIKE`: Apply to underlying hosts of matching services. \n* `SERVICE_TO_PROCESS_GROUP_LIKE`: Apply to underlying process groups of matching services. \n* `PROCESS_GROUP_TO_HOST`: Apply to underlying hosts of matching process groups. \n* `PROCESS_GROUP_TO_SERVICE`: Apply to all services provided by matching process groups. \n* `HOST_TO_PROCESS_GROUP_INSTANCE`: Apply to processes running on matching hosts. \n* `CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE`: Apply to custom devices in matching custom device groups. \n* `AZURE_TO_PG`: Apply to process groups connected to matching Azure entities. \n* `AZURE_TO_SERVICE`: Apply to services provided by matching Azure entities.",
            "items" : {
              "type" : "string",
              "enum" : [ "AZURE_TO_PG", "AZURE_TO_SERVICE", "CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE", "HOST_TO_PROCESS_GROUP_INSTANCE", "PROCESS_GROUP_TO_HOST", "PROCESS_GROUP_TO_SERVICE", "SERVICE_TO_HOST_LIKE", "SERVICE_TO_PROCESS_GROUP_LIKE" ]
            }
          },
          "conditions" : {
            "maxItems" : 30,
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of matching rules for the management zone. \n\nThe management zone applies only if **all** conditions are fulfilled.",
            "items" : {
              "$ref" : "#/components/schemas/EntityRuleEngineCondition"
            }
          }
        },
        "description" : "The rule of the management zone usage. It defines how the management zone applies. \n\nEach rule is evaluated independently of all other rules."
      },
      "ColumnDefinition" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "minLength" : 1,
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `CUSTOM` -> CustomColumnDefinition \n* `JSON` -> JsonColumnDefinition \n",
            "enum" : [ "CUSTOM", "JSON" ]
          }
        },
        "description" : "Definition of numeric column.",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "CustomColumnDefinition" : {
        "required" : [ "name", "prefix", "suffix", "type" ],
        "type" : "object",
        "description" : "Definition of a custom column.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ColumnDefinition"
        }, {
          "type" : "object",
          "properties" : {
            "prefix" : {
              "minLength" : 1,
              "type" : "string"
            },
            "suffix" : {
              "type" : "string"
            }
          }
        } ]
      },
      "JsonColumnDefinition" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "description" : "Definition of a JSON column.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ColumnDefinition"
        } ]
      },
      "LogMetricConfig" : {
        "required" : [ "displayName", "logSourceFilters", "metricKey", "metricValueType", "searchString", "unit" ],
        "type" : "object",
        "properties" : {
          "metricKey" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The unique key of the metric. \n\nThe key must have the `calc:log.` prefix.",
            "example" : "calc:log.metric"
          },
          "active" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          },
          "displayName" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the metric, displayed in the UI."
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of the metric.",
            "enum" : [ "BILLION", "BIT", "BIT_PER_HOUR", "BIT_PER_MINUTE", "BIT_PER_SECOND", "BYTE", "BYTE_PER_HOUR", "BYTE_PER_MINUTE", "BYTE_PER_SECOND", "CORES", "COUNT", "DAY", "DECIBEL_MILLI_WATT", "GIBI_BYTE", "GIGA", "GIGA_BYTE", "HOUR", "KIBI_BYTE", "KIBI_BYTE_PER_HOUR", "KIBI_BYTE_PER_MINUTE", "KIBI_BYTE_PER_SECOND", "KILO", "KILO_BYTE", "KILO_BYTE_PER_HOUR", "KILO_BYTE_PER_MINUTE", "KILO_BYTE_PER_SECOND", "KILO_METRE_PER_HOUR", "MEBI_BYTE", "MEBI_BYTE_PER_HOUR", "MEBI_BYTE_PER_MINUTE", "MEBI_BYTE_PER_SECOND", "MEGA", "MEGA_BYTE", "MEGA_BYTE_PER_HOUR", "MEGA_BYTE_PER_MINUTE", "MEGA_BYTE_PER_SECOND", "METRE_PER_HOUR", "METRE_PER_SECOND", "MICRO_SECOND", "MILLION", "MILLI_CORES", "MILLI_SECOND", "MILLI_SECOND_PER_MINUTE", "MINUTE", "MONTH", "MSU", "NANO_SECOND", "NANO_SECOND_PER_MINUTE", "NOT_APPLICABLE", "PERCENT", "PER_HOUR", "PER_MINUTE", "PER_SECOND", "PIXEL", "PROMILLE", "RATIO", "SECOND", "STATE", "UNSPECIFIED", "WEEK", "YEAR" ]
          },
          "unitDisplayName" : {
            "type" : "string",
            "description" : "The display name of the unit. \n\n Only applicable if the **unit** is set to `UNSPECIFIED`."
          },
          "searchString" : {
            "type" : "string",
            "description" : "The pattern to look for in logs. \n\n Use the [Dynatrace search query language](https://dt-url.net/vv83rhp) to specify it. Quotes must be escaped. \n\n To return all results, leave the field blank.",
            "example" : "prefix1* OR prefix2*"
          },
          "metricValueType" : {
            "type" : "string",
            "description" : "The type of the metric data points calculation. For now the only allowed value is `OCCURRENCES`.",
            "example" : "OCCURRENCES",
            "enum" : [ "FP_COLUMN_AVG", "FP_COLUMN_COUNT", "FP_COLUMN_MAX", "FP_COLUMN_MIN", "FP_COLUMN_SUM", "FP_COLUMN_TOP_X_AVG", "FP_COLUMN_TOP_X_COUNT", "FP_COLUMN_TOP_X_MAX", "FP_COLUMN_TOP_X_MIN", "FP_COLUMN_TOP_X_SUM", "INT_COLUMN_AVG", "INT_COLUMN_COUNT", "INT_COLUMN_MAX", "INT_COLUMN_MIN", "INT_COLUMN_SUM", "INT_COLUMN_TOP_X_AVG", "INT_COLUMN_TOP_X_COUNT", "INT_COLUMN_TOP_X_MAX", "INT_COLUMN_TOP_X_MIN", "INT_COLUMN_TOP_X_SUM", "OCCURRENCES" ]
          },
          "columnDefiningValue" : {
            "$ref" : "#/components/schemas/ColumnDefinition"
          },
          "logSourceFilters" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of filters to define the logs to look into. \n\n If several filters are specified, the OR logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/LogSourceFilter"
            }
          }
        },
        "description" : "Custom log metric definition.",
        "example" : {
          "metricKey" : "calc:log.metric",
          "active" : true,
          "displayName" : "Sample metric",
          "unit" : "HOUR",
          "unitDisplayName" : "",
          "searchString" : "\"memory fault\"",
          "metricValueType" : "OCCURRENCES",
          "logSourceFilters" : [ {
            "pathDefinitions" : [ {
              "definition" : "/var/log/sample.log",
              "type" : "FIXED"
            } ],
            "sourceEntities" : [ "PROCESS_GROUP_INSTANCE-63FC6E7C73DC893F" ],
            "hostFilters" : [ "HOST-066703AD79C38DB5" ],
            "osTypes" : [ ]
          } ]
        }
      },
      "CalculatedMobileMetric" : {
        "required" : [ "applicationIdentifier", "enabled", "metricKey", "metricType", "name" ],
        "type" : "object",
        "properties" : {
          "applicationIdentifier" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the application to which the metric belongs."
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name of the metric, displayed in the UI."
          },
          "metricKey" : {
            "pattern" : "^calc:apps\\..*",
            "type" : "string",
            "description" : "The unique key of the metric. \n\n The key must have the `calc:apps` prefix."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          },
          "metricType" : {
            "type" : "string",
            "description" : "The type of the metric.",
            "enum" : [ "REPORTED_ERROR_COUNT", "USER_ACTION_DURATION", "WEB_REQUEST_COUNT", "WEB_REQUEST_ERROR_COUNT" ]
          },
          "dimensions" : {
            "maxItems" : 2,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of metric dimensions.",
            "items" : {
              "$ref" : "#/components/schemas/CalculatedMobileMetricDimension"
            }
          },
          "userActionFilter" : {
            "$ref" : "#/components/schemas/CalculatedMobileMetricUserActionFilter"
          }
        },
        "description" : "Definition of the calculated metric for mobile or custom app.",
        "example" : {
          "enabled" : true,
          "name" : "MyMetric",
          "metricKey" : "calc:apps.mobile.mymetric",
          "applicationIdentifier" : "MOBILE_APPLICATION-1234",
          "metricType" : "USER_ACTION_DURATION",
          "userActionFilter" : {
            "hasHttpError" : true,
            "country" : "GEOLOCATION-1234",
            "osVersion" : "OS-1234"
          },
          "dimensions" : [ {
            "dimension" : "GEOLOCATION",
            "topX" : 20
          } ]
        }
      },
      "CalculatedMobileMetricDimension" : {
        "required" : [ "dimension", "topX" ],
        "type" : "object",
        "properties" : {
          "topX" : {
            "maximum" : 200,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of top values to be calculated.",
            "format" : "int32"
          },
          "dimension" : {
            "type" : "string",
            "description" : "The dimension of the metric.",
            "enum" : [ "APP_VERSION", "DEVICE", "ERROR_CONTEXT", "GEOLOCATION", "MANUFACTURER", "OS" ]
          }
        },
        "description" : "Dimension of the calculated mobile metric."
      },
      "CalculatedMobileMetricUserActionFilter" : {
        "type" : "object",
        "properties" : {
          "hasReportedError" : {
            "type" : "boolean",
            "description" : "The error status of the actions to be included in the metric calculation: \n\n* `true`: Only actions with reported errors are included. \n\n * `false`: All actions are included."
          },
          "hasHttpError" : {
            "type" : "boolean",
            "description" : "The HTTP error status of the actions to be included in the metric calculation: \n\n* `true`: Only actions with HTTP errors are included. \n\n * `false`: All actions are included."
          },
          "userActionName" : {
            "type" : "string",
            "description" : "Only actions with this name are included in the metric calculation. \n\n The EQUALS operator applies."
          },
          "appVersion" : {
            "type" : "string",
            "description" : "Only actions coming from this app version are included in the metric calculation. \n\n The EQUALS operator applies."
          },
          "device" : {
            "type" : "string",
            "description" : "Only actions coming from this app version are included in the metric calculation. \n\n The EQUALS operator applies."
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Only actions coming from devices of this manufacturer are included in the metric calculation. \n\n The EQUALS operator applies."
          },
          "apdex" : {
            "type" : "string",
            "description" : "Only actions with the specified Apdex score are included in the metric calculation.",
            "enum" : [ "Frustrated", "Satisfied", "Tolerating", "Unknown" ]
          },
          "osFamily" : {
            "type" : "string",
            "description" : "Only actions coming from this OS family are included in the metric calculation. \n\n Specify the OS ID here."
          },
          "osVersion" : {
            "type" : "string",
            "description" : "Only actions coming from this OS version are included in the metric calculation. \n\n Specify the OS ID here."
          },
          "city" : {
            "type" : "string",
            "description" : "Only actions of users from this city are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "continent" : {
            "type" : "string",
            "description" : "Only actions of users from this continent are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "country" : {
            "type" : "string",
            "description" : "Only actions of users from this country are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "region" : {
            "type" : "string",
            "description" : "Only actions of users from this region are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "actionDurationFromMilliseconds" : {
            "type" : "integer",
            "description" : "Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation.",
            "format" : "int32"
          },
          "actionDurationToMilliseconds" : {
            "type" : "integer",
            "description" : "Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation.",
            "format" : "int32"
          },
          "carrier" : {
            "type" : "string",
            "description" : "Only actions coming from this carrier type are included in the metric calculation."
          },
          "connectionType" : {
            "type" : "string",
            "description" : "Only actions coming from this connection type are included in the metric calculation.",
            "enum" : [ "LAN", "MOBILE", "OFFLINE", "UNKNOWN", "WIFI" ]
          },
          "networkTechnology" : {
            "type" : "string",
            "description" : "Filter by network technology"
          },
          "isp" : {
            "type" : "string",
            "description" : "Only actions coming from this internet service provider are included in the metric calculation. \n\n  The EQUALS operator applies."
          },
          "orientation" : {
            "type" : "string",
            "description" : "Only actions coming from devices with this display orientation are included in the metric calculation.",
            "enum" : [ "LANDSCAPE", "PORTRAIT", "UNKNOWN" ]
          },
          "resolution" : {
            "type" : "string",
            "description" : "Only actions coming from devices with this display resolution are included in the metric calculation.",
            "enum" : [ "CGA", "DCI2K", "DCI4K", "DVGA", "FHD", "FWVGA", "FWXGA", "GHDPlus", "HD", "HQVGA", "HQVGA2", "HSXGA", "HUXGA", "HVGA", "HXGA", "NTSC", "PAL", "QHD", "QQVGA", "QSXGA", "QUXGA", "QVGA", "QWXGA", "QXGA", "SVGA", "SXGA", "SXGAMinus", "SXGAPlus", "UGA", "UHD16K", "UHD4K", "UHD8K", "UHDPlus", "UNKNOWN", "UWQHD", "UXGA", "VGA", "WHSXGA", "WHUXGA", "WHXGA", "WQSXGA", "WQUXGA", "WQVGA", "WQVGA2", "WQVGA3", "WQXGA", "WQXGA2", "WSVGA", "WSVGA2", "WSXGA", "WSXGAPlus", "WUXGA", "WVGA", "WVGA2", "WXGA", "WXGA2", "WXGA3", "WXGAPlus", "XGA", "XGAPLUS", "_1280x854", "nHD", "qHD" ]
          }
        },
        "description" : "User actions filter of the calculated metric for mobile or custom app."
      },
      "CalculatedMobileMetricUpdate" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          }
        },
        "description" : "Update of the calculated mobile or custom metric."
      },
      "UserActionFilter" : {
        "type" : "object",
        "properties" : {
          "actionDurationFromMilliseconds" : {
            "type" : "integer",
            "description" : "Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation.",
            "format" : "int32"
          },
          "actionDurationToMilliseconds" : {
            "type" : "integer",
            "description" : "Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation.",
            "format" : "int32"
          },
          "loadAction" : {
            "type" : "boolean",
            "description" : "The status of load actions in the metric calculation: \n\n* `true`: Load actions are included. \n* `false`: All actions are included."
          },
          "xhrAction" : {
            "type" : "boolean",
            "description" : "The status of XHR actions in the metric calculation: \n\n* `true`: XHR actions are included. \n* `false`: All actions are included."
          },
          "xhrRouteChangeAction" : {
            "type" : "boolean",
            "description" : "The status of route change actions in the metric calculation: \n\n* `true`: Route change actions are included. \n* `false`: All actions are included."
          },
          "customAction" : {
            "type" : "boolean",
            "description" : "The status of custom actions in the metric calculation: \n\n* `true`: Custom actions are included. \n* `false`: All actions are included."
          },
          "apdex" : {
            "type" : "string",
            "description" : "Only actions with the specified Apdex score are included in the metric calculation.",
            "enum" : [ "Frustrated", "Satisfied", "Tolerating", "Unknown" ]
          },
          "domain" : {
            "type" : "string",
            "description" : "Only user actions coming from the specified domain are included in the metric calculation. \n\n The EQUALS operator applies."
          },
          "userActionName" : {
            "type" : "string",
            "description" : "Only actions with this name are included in the metric calculation. \n\n The EQUALS operator applies."
          },
          "realUser" : {
            "type" : "boolean",
            "description" : "The status of actions coming from real users in the metric calculation: \n\n* `true`: Only actions from real users are included. \n* `false`: All actions are included."
          },
          "robot" : {
            "type" : "boolean",
            "description" : "The status of actions coming from robots in the metric calculation: \n\n* `true`: Only actions from robots are included. \n* `false`: All actions are included."
          },
          "synthetic" : {
            "type" : "boolean",
            "description" : "The status of actions coming from synthetic monitors in the metric calculation: \n\n* `true`: Only actions from synthetic monitors are included. \n* `false`: All actions are included."
          },
          "browserFamily" : {
            "type" : "string",
            "description" : "Only user actions coming from the specified browser family are included in the metric calculation.  \n\n The EQUALS operator applies."
          },
          "browserType" : {
            "type" : "string",
            "description" : "Only user actions coming from the specified browser type are included in the metric calculation.  \n\n The EQUALS operator applies."
          },
          "browserVersion" : {
            "type" : "string",
            "description" : "Only user actions coming from the specified browser version are included in the metric calculation.  \n\n The EQUALS operator applies."
          },
          "hasCustomErrors" : {
            "type" : "boolean",
            "description" : "The custom error status of the actions to be included in the metric calculation: \n\n* `true`: Only actions with custom errors are included. \n* `false`: All actions are included."
          },
          "hasAnyError" : {
            "type" : "boolean",
            "description" : "The error status of the actions to be included in the metric calculation: \n\n* `true`: Only actions that have any errors are included. \n* `false`: All actions are included."
          },
          "hasHttpErrors" : {
            "type" : "boolean",
            "description" : "The request error status of the actions to be included in the metric calculation: \n\n* `true`: Only actions with request errors (HTTP errors, failed images, CSP rule violations) are included. \n* `false`: All actions are included."
          },
          "hasJavascriptErrors" : {
            "type" : "boolean",
            "description" : "The JavaScript error status of the actions to be included in the metric calculation: \n\n* `true`: Only actions with JavaScript errors are included. \n* `false`: All actions are included."
          },
          "city" : {
            "type" : "string",
            "description" : "Only actions of users from this city are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "continent" : {
            "type" : "string",
            "description" : "Only actions of users from this continent are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "country" : {
            "type" : "string",
            "description" : "Only actions of users from this country are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "region" : {
            "type" : "string",
            "description" : "Only actions of users from this region are included in the metric calculation. \n\n Specify geolocation ID here."
          },
          "ip" : {
            "type" : "string",
            "description" : "Only actions coming from this IP address are included in the metric calculation. \n\n  The EQUALS operator applies."
          },
          "ipV6Traffic" : {
            "type" : "boolean",
            "description" : "The IPv6 status of the actions to be included in the metric calculation: \n\n* `true`: Only actions coming from IPv6 are included. \n* `false`: All actions are included."
          },
          "osFamily" : {
            "type" : "string",
            "description" : "Only actions coming from this OS family are included in the metric calculation. \n\n Specify the OS ID here."
          },
          "osVersion" : {
            "type" : "string",
            "description" : "Only actions coming from this OS version are included in the metric calculation. \n\n Specify the OS ID here."
          },
          "httpErrorCode" : {
            "type" : "integer",
            "description" : "The HTTP error status code of the actions to be included in the metric calculation.",
            "format" : "int32"
          },
          "httpErrorCodeTo" : {
            "type" : "integer",
            "description" : "Can be used in combination with `httpErrorCode` to define a range of error codes that will be included in the metric calculation.",
            "format" : "int32"
          },
          "httpPath" : {
            "type" : "string",
            "description" : "The request path that has been determined to be the origin of an HTTP error of the actions to be included in the metric calculation."
          },
          "customErrorType" : {
            "type" : "string",
            "description" : "The custom error type of the actions to be included in the metric calculation."
          },
          "customErrorName" : {
            "type" : "string",
            "description" : "The custom error name of the actions to be included in the metric calculation."
          },
          "userActionProperties" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "Only actions with the specified properties are included in the metric calculation.",
            "items" : {
              "$ref" : "#/components/schemas/UserActionPropertyFilter"
            }
          },
          "targetViewName" : {
            "type" : "string",
            "description" : "Only actions on the specified view are included in the metric calculation."
          },
          "targetViewNameMatchType" : {
            "type" : "string",
            "description" : "Specifies the match type of the view name filter, e.g. using `Contains` or `Equals`. Defaults to `Equals`.",
            "enum" : [ "Contains", "Equals" ]
          },
          "targetViewGroup" : {
            "type" : "string",
            "description" : "Only actions on the specified group of views are included in the metric calculation."
          },
          "targetViewGroupNameMatchType" : {
            "type" : "string",
            "description" : "Specifies the match type of the view group filter, e.g. using `Contains` or `Equals`. Defaults to `Equals`.",
            "enum" : [ "Contains", "Equals" ]
          }
        },
        "description" : "User actions filter of the calculated web application metric. \n\nOnly user actions matching the provided criteria are used for metric calculation. \n\nA user action must match **all** the criteria."
      },
      "UserActionPropertyFilter" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The key of the action property we're checking."
          },
          "value" : {
            "type" : "string",
            "description" : "Only actions that have this value in the specified property are included in the metric calculation. \n\n Only applicable to string values."
          },
          "from" : {
            "type" : "number",
            "description" : "Only actions that have a value greater than or equal to this are included in the metric calculation. \n\n Only applicable to numerical values.",
            "format" : "double"
          },
          "to" : {
            "type" : "number",
            "description" : "Only actions that have a value less than or equal to this are included in the metric calculation. \n\n Only applicable to numerical values.",
            "format" : "double"
          },
          "matchType" : {
            "type" : "string",
            "description" : "Specifies the match type of a string filter, e.g. using `Contains` or `Equals`. \n\n Only applicable to string values.",
            "enum" : [ "Contains", "Equals" ]
          }
        },
        "description" : "User action property filter."
      },
      "WebApplicationDimensionDefinition" : {
        "required" : [ "dimension", "topX" ],
        "type" : "object",
        "properties" : {
          "topX" : {
            "maximum" : 200,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of top values to be calculated.",
            "format" : "int32"
          },
          "dimension" : {
            "type" : "string",
            "description" : "The dimension of the metric.",
            "enum" : [ "ApdexType", "Browser", "ErrorContext", "ErrorOrigin", "ErrorType", "GeoLocation", "StringProperty", "UserActionType" ]
          },
          "propertyKey" : {
            "type" : "string",
            "description" : "The key of the user action property. \n\n Only applicable for the `StringProperty` dimension."
          }
        },
        "description" : "Dimension of the calculated web application metrics."
      },
      "WebApplicationMetric" : {
        "required" : [ "applicationIdentifier", "enabled", "metricDefinition", "metricKey", "name" ],
        "type" : "object",
        "properties" : {
          "applicationIdentifier" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the application to which the metric belongs."
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "The displayed name of the metric."
          },
          "metricKey" : {
            "type" : "string",
            "description" : "The unique key of the metric. \n\n The key must have the `calc:apps` prefix."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          },
          "metricDefinition" : {
            "$ref" : "#/components/schemas/WebApplicationMetricDefinition"
          },
          "dimensions" : {
            "maxItems" : 2,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of metric dimensions.",
            "items" : {
              "$ref" : "#/components/schemas/WebApplicationDimensionDefinition"
            }
          },
          "userActionFilter" : {
            "$ref" : "#/components/schemas/UserActionFilter"
          }
        },
        "description" : "Descriptor of the calculated web application metric.",
        "example" : {
          "enabled" : true,
          "name" : "MyMetric",
          "metricKey" : "calc:apps.web.mymetric",
          "metricDefinition" : {
            "metric" : "UserActionDuration"
          },
          "applicationIdentifier" : "APPLICATION-1234",
          "userActionFilter" : {
            "loadAction" : true,
            "country" : "GEOLOCATION-1234",
            "browserType" : "BROWSER-1234"
          },
          "dimensions" : [ {
            "dimension" : "GeoLocation",
            "topX" : 20
          } ]
        }
      },
      "WebApplicationMetricDefinition" : {
        "required" : [ "metric" ],
        "type" : "object",
        "properties" : {
          "metric" : {
            "type" : "string",
            "description" : "The type of the web application metric.",
            "enum" : [ "Apdex", "ApplicationCache", "Callback", "CumulativeLayoutShift", "DNSLookup", "DOMComplete", "DOMContentLoaded", "DOMInteractive", "DoubleProperty", "ErrorCount", "FirstContentfulPaint", "FirstInputDelay", "FirstInputStart", "FirstPaint", "HTMLDownloaded", "LargestContentfulPaint", "LoadEventEnd", "LoadEventStart", "LongProperty", "LongTasksTime", "NavigationStart", "OnDOMContentLoaded", "OnLoad", "Processing", "RedirectTime", "Request", "RequestStart", "Response", "SecureConnect", "SpeedIndex", "TCPConnect", "TimeToFirstByte", "UserActionDuration", "VisuallyComplete" ]
          },
          "propertyKey" : {
            "type" : "string",
            "description" : "The key of the user action property. \n\n Only applicable for `DoubleProperty` and `LongProperty` metrics."
          }
        },
        "description" : "Definition of the web application metric."
      },
      "WebApplicationMetricUpdate" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          }
        },
        "description" : "The update of the calculated web application metric."
      },
      "BooleanComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Comparison for `BOOLEAN` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "boolean",
              "description" : "The value to compare to."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "boolean",
                "description" : "The values to compare to."
              }
            }
          }
        } ]
      },
      "CalculatedMetricDefinition" : {
        "required" : [ "metric" ],
        "type" : "object",
        "properties" : {
          "metric" : {
            "type" : "string",
            "description" : "The metric to be captured.",
            "enum" : [ "CPU_TIME", "DATABASE_CHILD_CALL_COUNT", "DATABASE_CHILD_CALL_TIME", "DISK_IO_TIME", "EXCEPTION_COUNT", "FAILED_REQUEST_COUNT", "FAILED_REQUEST_COUNT_CLIENT", "FAILURE_RATE", "FAILURE_RATE_CLIENT", "HTTP_4XX_ERROR_COUNT", "HTTP_4XX_ERROR_COUNT_CLIENT", "HTTP_5XX_ERROR_COUNT", "HTTP_5XX_ERROR_COUNT_CLIENT", "IO_TIME", "LOCK_TIME", "NETWORK_IO_TIME", "NON_DATABASE_CHILD_CALL_COUNT", "NON_DATABASE_CHILD_CALL_TIME", "PROCESSING_TIME", "REQUEST_ATTRIBUTE", "REQUEST_COUNT", "RESPONSE_TIME", "RESPONSE_TIME_CLIENT", "SUCCESSFUL_REQUEST_COUNT", "SUCCESSFUL_REQUEST_COUNT_CLIENT", "WAIT_TIME" ]
          },
          "requestAttribute" : {
            "type" : "string",
            "description" : "The request attribute to be captured. \n\n Only applicable when the **metric** parameter is set to `REQUEST_ATTRIBUTE`."
          }
        },
        "description" : "The definition of a calculated service metric."
      },
      "CalculatedServiceMetric" : {
        "required" : [ "enabled", "metricDefinition", "name", "tsmMetricKey", "unit" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "tsmMetricKey" : {
            "maxLength" : 200,
            "minLength" : 0,
            "type" : "string",
            "description" : "The key of the calculated service metric."
          },
          "name" : {
            "maxLength" : 200,
            "minLength" : 0,
            "type" : "string",
            "description" : "The displayed name of the metric."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          },
          "metricDefinition" : {
            "$ref" : "#/components/schemas/CalculatedMetricDefinition"
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of the metric.",
            "enum" : [ "BILLION", "BIT", "BIT_PER_HOUR", "BIT_PER_MINUTE", "BIT_PER_SECOND", "BYTE", "BYTE_PER_HOUR", "BYTE_PER_MINUTE", "BYTE_PER_SECOND", "CORES", "COUNT", "DAY", "DECIBEL_MILLI_WATT", "GIBI_BYTE", "GIGA", "GIGA_BYTE", "HOUR", "KIBI_BYTE", "KIBI_BYTE_PER_HOUR", "KIBI_BYTE_PER_MINUTE", "KIBI_BYTE_PER_SECOND", "KILO", "KILO_BYTE", "KILO_BYTE_PER_HOUR", "KILO_BYTE_PER_MINUTE", "KILO_BYTE_PER_SECOND", "KILO_METRE_PER_HOUR", "MEBI_BYTE", "MEBI_BYTE_PER_HOUR", "MEBI_BYTE_PER_MINUTE", "MEBI_BYTE_PER_SECOND", "MEGA", "MEGA_BYTE", "MEGA_BYTE_PER_HOUR", "MEGA_BYTE_PER_MINUTE", "MEGA_BYTE_PER_SECOND", "METRE_PER_HOUR", "METRE_PER_SECOND", "MICRO_SECOND", "MILLION", "MILLI_CORES", "MILLI_SECOND", "MILLI_SECOND_PER_MINUTE", "MINUTE", "MONTH", "MSU", "NANO_SECOND", "NANO_SECOND_PER_MINUTE", "NOT_APPLICABLE", "PERCENT", "PER_HOUR", "PER_MINUTE", "PER_SECOND", "PIXEL", "PROMILLE", "RATIO", "SECOND", "STATE", "UNSPECIFIED", "WEEK", "YEAR" ]
          },
          "unitDisplayName" : {
            "type" : "string",
            "description" : "The display name of the metric's unit. \n\n Only applicable when the **unit** parameter is set to `UNSPECIFIED`."
          },
          "entityId" : {
            "type" : "string",
            "description" : "Restricts the metric usage to the specified service. \n\n This field is mutually exclusive with the **managementZones** field."
          },
          "managementZones" : {
            "maxItems" : 1,
            "minItems" : 0,
            "type" : "array",
            "description" : "Restricts the metric usage to specified management zones. \n\n This field is mutually exclusive with the **entityId** field.",
            "items" : {
              "type" : "string"
            }
          },
          "conditions" : {
            "type" : "array",
            "description" : "The set of conditions for the metric usage. \n\n **All** the specified conditions must be fulfilled to use the metric.",
            "items" : {
              "$ref" : "#/components/schemas/Condition"
            }
          },
          "dimensionDefinition" : {
            "$ref" : "#/components/schemas/DimensionDefinition"
          }
        },
        "description" : "Descriptor of a calculated service metric.",
        "example" : {
          "tsmMetricKey" : "calc:service.mymetric",
          "name" : "My Metric",
          "enabled" : true,
          "metricDefinition" : {
            "metric" : "CPU_TIME"
          },
          "managementZones" : [ "zone1" ],
          "unit" : "MICRO_SECOND",
          "conditions" : [ {
            "attribute" : "WEBREQUEST_URL_PATH",
            "comparisonInfo" : {
              "type" : "STRING",
              "comparison" : "BEGINS_WITH",
              "value" : "/url_path",
              "negate" : false,
              "caseSensitive" : false
            }
          } ],
          "dimensionDefinition" : {
            "name" : "my dimension",
            "dimension" : "{myPlaceholder}",
            "placeholders" : [ {
              "name" : "myPlaceholder",
              "attribute" : "WEBREQUEST_URL_PATH",
              "kind" : "BEFORE_DELIMITER",
              "delimiterOrRegex" : "/booking",
              "normalization" : "ORIGINAL",
              "useFromChildCalls" : "false"
            } ],
            "topX" : 10,
            "topXDirection" : "DESCENDING",
            "topXAggregation" : "AVERAGE"
          }
        }
      },
      "ComparisonInfo" : {
        "required" : [ "comparison", "negate", "type" ],
        "type" : "object",
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`."
          },
          "value" : {
            "type" : "object",
            "description" : "The value to compare to."
          },
          "values" : {
            "maxItems" : 10,
            "minItems" : 0,
            "uniqueItems" : true,
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "description" : "The values to compare to.",
            "items" : {
              "type" : "object",
              "description" : "The values to compare to."
            }
          },
          "negate" : {
            "type" : "boolean",
            "description" : "Reverse the comparison **operator**. For example, it turns **equals** into **does not equal**."
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `STRING` -> StringComparisonInfo \n* `NUMBER` -> NumberComparisonInfo \n* `BOOLEAN` -> BooleanComparisonInfo \n* `HTTP_METHOD` -> HttpMethodComparisonInfo \n* `STRING_REQUEST_ATTRIBUTE` -> StringRequestAttributeComparisonInfo \n* `NUMBER_REQUEST_ATTRIBUTE` -> NumberRequestAttributeComparisonInfo \n* `ZOS_CALL_TYPE` -> ZosComparisonInfo \n* `IIB_INPUT_NODE_TYPE` -> IIBInputNodeTypeComparisonInfo \n* `ESB_INPUT_NODE_TYPE` -> ESBInputNodeTypeComparisonInfo \n* `FAILED_STATE` -> FailedStateComparisonInfo \n* `FLAW_STATE` -> FlawStateComparisonInfo \n* `FAILURE_REASON` -> FailureReasonComparisonInfo \n* `HTTP_STATUS_CLASS` -> HttpStatusClassComparisonInfo \n* `TAG` -> TagComparisonInfo \n* `FAST_STRING` -> FastStringComparisonInfo \n* `SERVICE_TYPE` -> ServiceTypeComparisonInfo \n",
            "enum" : [ "BOOLEAN", "ESB_INPUT_NODE_TYPE", "FAILED_STATE", "FAILURE_REASON", "FAST_STRING", "FLAW_STATE", "HTTP_METHOD", "HTTP_STATUS_CLASS", "IIB_INPUT_NODE_TYPE", "NUMBER", "NUMBER_REQUEST_ATTRIBUTE", "SERVICE_TYPE", "STRING", "STRING_REQUEST_ATTRIBUTE", "TAG", "ZOS_CALL_TYPE" ]
          }
        },
        "description" : "Type-specific comparison for attributes. The actual set of fields depends on the type of the comparison. Find the list of actual objects in the description of the **type** field or see [Service metrics API - JSON models](https://dt-url.net/9803svb).",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "Condition" : {
        "required" : [ "attribute", "comparisonInfo" ],
        "type" : "object",
        "properties" : {
          "attribute" : {
            "type" : "string",
            "description" : "The attribute to be matched. \n\nNote that for a service property attribute you must use the comparison of the `FAST_STRING` type.",
            "enum" : [ "ACTOR_SYSTEM", "AKKA_ACTOR_CLASS_NAME", "AKKA_ACTOR_MESSAGE_TYPE", "AKKA_ACTOR_PATH", "APPLICATION_BUILD_VERSION", "APPLICATION_ENVIRONMENT", "APPLICATION_NAME", "APPLICATION_RELEASE_VERSION", "AZURE_FUNCTIONS_FUNCTION_NAME", "AZURE_FUNCTIONS_SITE_NAME", "CICS_PROGRAM_NAME", "CICS_SYSTEM_ID", "CICS_TASK_ID", "CICS_TRANSACTION_ID", "CICS_USER_ID", "CPU_TIME", "CTG_GATEWAY_URL", "CTG_PROGRAM", "CTG_SERVER_NAME", "CTG_TRANSACTION_ID", "CUSTOMSERVICE_CLASS", "CUSTOMSERVICE_METHOD", "DATABASE_CHILD_CALL_COUNT", "DATABASE_CHILD_CALL_TIME", "DATABASE_HOST", "DATABASE_NAME", "DATABASE_STATEMENT", "DATABASE_TYPE", "DATABASE_URL", "DISK_IO_TIME", "ERROR_COUNT", "ESB_APPLICATION_NAME", "ESB_INPUT_TYPE", "ESB_LIBRARY_NAME", "ESB_MESSAGE_FLOW_NAME", "EXCEPTION_CLASS", "EXCEPTION_MESSAGE", "FAILED_STATE", "FAILURE_REASON", "FLAW_STATE", "HTTP_REQUEST_METHOD", "HTTP_STATUS", "HTTP_STATUS_CLASS", "IMS_PROGRAM_NAME", "IMS_TRANSACTION_ID", "IMS_USER_ID", "IO_TIME", "IS_KEY_REQUEST", "LAMBDA_COLDSTART", "LOCK_TIME", "MESSAGING_DESTINATION_TYPE", "MESSAGING_IS_TEMPORARY_QUEUE", "MESSAGING_QUEUE_NAME", "MESSAGING_QUEUE_VENDOR", "NETWORK_IO_TIME", "NON_DATABASE_CHILD_CALL_COUNT", "NON_DATABASE_CHILD_CALL_TIME", "PROCESS_GROUP_NAME", "PROCESS_GROUP_TAG", "REMOTE_ENDPOINT", "REMOTE_METHOD", "REMOTE_SERVICE_NAME", "REQUEST_NAME", "REQUEST_TYPE", "RESPONSE_TIME", "RESPONSE_TIME_CLIENT", "RMI_CLASS", "RMI_METHOD", "SERVICE_DISPLAY_NAME", "SERVICE_NAME", "SERVICE_PORT", "SERVICE_PUBLIC_DOMAIN_NAME", "SERVICE_REQUEST_ATTRIBUTE", "SERVICE_TAG", "SERVICE_TYPE", "SERVICE_WEB_APPLICATION_ID", "SERVICE_WEB_CONTEXT_ROOT", "SERVICE_WEB_SERVER_NAME", "SERVICE_WEB_SERVICE_NAME", "SERVICE_WEB_SERVICE_NAMESPACE", "SUSPENSION_TIME", "TOTAL_PROCESSING_TIME", "WAIT_TIME", "WEBREQUEST_QUERY", "WEBREQUEST_RELATIVE_URL", "WEBREQUEST_URL", "WEBREQUEST_URL_HOST", "WEBREQUEST_URL_PATH", "WEBREQUEST_URL_PORT", "WEBSERVICE_ENDPOINT", "WEBSERVICE_METHOD", "ZOS_CALL_TYPE" ]
          },
          "comparisonInfo" : {
            "$ref" : "#/components/schemas/ComparisonInfo"
          }
        },
        "description" : "A condition of a rule usage."
      },
      "DimensionDefinition" : {
        "required" : [ "dimension", "name", "topX", "topXAggregation", "topXDirection" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 200,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name of the dimension."
          },
          "dimension" : {
            "maxLength" : 400,
            "minLength" : 0,
            "type" : "string",
            "description" : "The dimension value pattern. \n\n You can define custom placeholders in the **placeholders** field and use them here."
          },
          "placeholders" : {
            "type" : "array",
            "description" : "The list of custom placeholders to be used in a dimension value pattern.",
            "items" : {
              "$ref" : "#/components/schemas/Placeholder"
            }
          },
          "topX" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of top values to be calculated.",
            "format" : "int32"
          },
          "topXDirection" : {
            "type" : "string",
            "description" : "How to calculate the **topX** values.",
            "enum" : [ "ASCENDING", "DESCENDING" ]
          },
          "topXAggregation" : {
            "type" : "string",
            "description" : "The aggregation of the dimension.",
            "enum" : [ "AVERAGE", "COUNT", "MAX", "MIN", "OF_INTEREST_RATIO", "OTHER_RATIO", "SINGLE_VALUE", "SUM" ]
          }
        },
        "description" : "Parameters of a definition of a calculated service metric."
      },
      "ESBInputNodeTypeComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Type-specific comparison information for attributes of type 'ESB_INPUT_NODE_TYPE'.This model also inherits fields from the parent model ComparisonInfo.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "CALLABLE_FLOW_ASYNC_RESPONSE_NODE", "CALLABLE_FLOW_INPUT_NODE", "DATABASE_INPUT_NODE", "DOTNET_INPUT_NODE", "EMAIL_INPUT_NODE", "EVENT_INPUT", "EVENT_INPUT_NODE", "FILE_INPUT_NODE", "FTE_INPUT_NODE", "HTTP_ASYNC_RESPONSE", "JD_EDWARDS_INPUT_NODE", "JMS_CLIENT_INPUT_NODE", "LABEL_NODE", "MQ_INPUT_NODE", "PEOPLE_SOFT_INPUT_NODE", "REST_ASYNC_RESPONSE", "REST_REQUEST", "SAP_INPUT_NODE", "SCA_ASYNC_RESPONSE_NODE", "SCA_INPUT_NODE", "SIEBEL_INPUT_NODE", "SOAP_INPUT_NODE", "TCPIP_CLIENT_INPUT_NODE", "TCPIP_CLIENT_REQUEST_NODE", "TCPIP_SERVER_INPUT_NODE", "TCPIP_SERVER_REQUEST_NODE", "TIMEOUT_NOTIFICATION_NODE", "WS_INPUT_NODE" ]
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "CALLABLE_FLOW_ASYNC_RESPONSE_NODE", "CALLABLE_FLOW_INPUT_NODE", "DATABASE_INPUT_NODE", "DOTNET_INPUT_NODE", "EMAIL_INPUT_NODE", "EVENT_INPUT", "EVENT_INPUT_NODE", "FILE_INPUT_NODE", "FTE_INPUT_NODE", "HTTP_ASYNC_RESPONSE", "JD_EDWARDS_INPUT_NODE", "JMS_CLIENT_INPUT_NODE", "LABEL_NODE", "MQ_INPUT_NODE", "PEOPLE_SOFT_INPUT_NODE", "REST_ASYNC_RESPONSE", "REST_REQUEST", "SAP_INPUT_NODE", "SCA_ASYNC_RESPONSE_NODE", "SCA_INPUT_NODE", "SIEBEL_INPUT_NODE", "SOAP_INPUT_NODE", "TCPIP_CLIENT_INPUT_NODE", "TCPIP_CLIENT_REQUEST_NODE", "TCPIP_SERVER_INPUT_NODE", "TCPIP_SERVER_REQUEST_NODE", "TIMEOUT_NOTIFICATION_NODE", "WS_INPUT_NODE" ]
              }
            }
          }
        } ]
      },
      "FailedStateComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Comparison for `FAILED_STATE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "FAILED", "SUCCESSFUL" ]
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "FAILED", "SUCCESSFUL" ]
              }
            }
          }
        } ]
      },
      "FailureReasonComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Comparison for `FAILURE_REASON` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "EXCEPTION_AT_ENTRY_NODE", "EXCEPTION_ON_ANY_NODE", "HTTP_CODE", "REQUEST_ATTRIBUTE", "SPAN_FAILURE" ]
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "EXCEPTION_AT_ENTRY_NODE", "EXCEPTION_ON_ANY_NODE", "HTTP_CODE", "REQUEST_ATTRIBUTE", "SPAN_FAILURE" ]
              }
            }
          }
        } ]
      },
      "FastStringComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Comparison for `FAST_STRING` attributes. Use it for all service property attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "CONTAINS", "EQUALS", "EQUALS_ANY_OF" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to."
              }
            },
            "caseSensitive" : {
              "type" : "boolean",
              "description" : "The comparison is case-sensitive (`true`) or not case-sensitive (`false`)."
            }
          }
        } ]
      },
      "FlawStateComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Comparison for `FLAW_STATE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "FLAWED", "NOT_FLAWED" ]
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "FLAWED", "NOT_FLAWED" ]
              }
            }
          }
        } ]
      },
      "HttpMethodComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Comparison for `HTTP_METHOD` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE", "UNKNOWN" ]
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE", "UNKNOWN" ]
              }
            }
          }
        } ]
      },
      "HttpStatusClassComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Comparison for `HTTP_STATUS_CLASS` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "C_1XX", "C_2XX", "C_3XX", "C_4XX", "C_5XX", "NO_RESPONSE" ]
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "C_1XX", "C_2XX", "C_3XX", "C_4XX", "C_5XX", "NO_RESPONSE" ]
              }
            }
          }
        } ]
      },
      "IIBInputNodeTypeComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Comparison for `IIB_INPUT_NODE_TYPE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "CALLABLE_FLOW_ASYNC_RESPONSE_NODE", "CALLABLE_FLOW_INPUT_NODE", "DATABASE_INPUT_NODE", "DOTNET_INPUT_NODE", "EMAIL_INPUT_NODE", "EVENT_INPUT", "EVENT_INPUT_NODE", "FILE_INPUT_NODE", "FTE_INPUT_NODE", "HTTP_ASYNC_RESPONSE", "JD_EDWARDS_INPUT_NODE", "JMS_CLIENT_INPUT_NODE", "LABEL_NODE", "MQ_INPUT_NODE", "PEOPLE_SOFT_INPUT_NODE", "REST_ASYNC_RESPONSE", "REST_REQUEST", "SAP_INPUT_NODE", "SCA_ASYNC_RESPONSE_NODE", "SCA_INPUT_NODE", "SIEBEL_INPUT_NODE", "SOAP_INPUT_NODE", "TCPIP_CLIENT_INPUT_NODE", "TCPIP_CLIENT_REQUEST_NODE", "TCPIP_SERVER_INPUT_NODE", "TCPIP_SERVER_REQUEST_NODE", "TIMEOUT_NOTIFICATION_NODE", "WS_INPUT_NODE" ]
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "CALLABLE_FLOW_ASYNC_RESPONSE_NODE", "CALLABLE_FLOW_INPUT_NODE", "DATABASE_INPUT_NODE", "DOTNET_INPUT_NODE", "EMAIL_INPUT_NODE", "EVENT_INPUT", "EVENT_INPUT_NODE", "FILE_INPUT_NODE", "FTE_INPUT_NODE", "HTTP_ASYNC_RESPONSE", "JD_EDWARDS_INPUT_NODE", "JMS_CLIENT_INPUT_NODE", "LABEL_NODE", "MQ_INPUT_NODE", "PEOPLE_SOFT_INPUT_NODE", "REST_ASYNC_RESPONSE", "REST_REQUEST", "SAP_INPUT_NODE", "SCA_ASYNC_RESPONSE_NODE", "SCA_INPUT_NODE", "SIEBEL_INPUT_NODE", "SOAP_INPUT_NODE", "TCPIP_CLIENT_INPUT_NODE", "TCPIP_CLIENT_REQUEST_NODE", "TCPIP_SERVER_INPUT_NODE", "TCPIP_SERVER_REQUEST_NODE", "TIMEOUT_NOTIFICATION_NODE", "WS_INPUT_NODE" ]
              }
            }
          }
        } ]
      },
      "NumberComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Comparison for `NUMBER` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "LOWER_THAN", "LOWER_THAN_OR_EQUAL" ]
            },
            "value" : {
              "type" : "number",
              "description" : "The value to compare to."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "number",
                "description" : "The values to compare to."
              }
            }
          }
        } ]
      },
      "NumberRequestAttributeComparisonInfo" : {
        "required" : [ "comparison", "negate", "requestAttribute" ],
        "type" : "object",
        "description" : "Comparison for `NUMBER_REQUEST_ATTRIBUTE` attributes, specifically of the generic **Number** type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "LOWER_THAN", "LOWER_THAN_OR_EQUAL" ]
            },
            "value" : {
              "type" : "number",
              "description" : "The value to compare to."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "number",
                "description" : "The values to compare to."
              }
            },
            "requestAttribute" : {
              "type" : "string"
            },
            "matchOnChildCalls" : {
              "type" : "boolean",
              "description" : "If `true`, the request attribute is matched on child service calls. \n\n  Default is `false`."
            },
            "source" : {
              "$ref" : "#/components/schemas/PropagationSource"
            }
          }
        } ]
      },
      "Placeholder" : {
        "required" : [ "attribute", "kind", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the placeholder. Use it in the naming pattern as `{name}`."
          },
          "attribute" : {
            "type" : "string",
            "description" : "The attribute to extract from. You can only use attributes of the **string** type.",
            "enum" : [ "ACTOR_SYSTEM", "AKKA_ACTOR_CLASS_NAME", "AKKA_ACTOR_MESSAGE_TYPE", "AKKA_ACTOR_PATH", "APPLICATION_BUILD_VERSION", "APPLICATION_ENVIRONMENT", "APPLICATION_NAME", "APPLICATION_RELEASE_VERSION", "AZURE_FUNCTIONS_FUNCTION_NAME", "AZURE_FUNCTIONS_SITE_NAME", "CICS_PROGRAM_NAME", "CICS_SYSTEM_ID", "CICS_TASK_ID", "CICS_TRANSACTION_ID", "CICS_USER_ID", "CPU_TIME", "CTG_GATEWAY_URL", "CTG_PROGRAM", "CTG_SERVER_NAME", "CTG_TRANSACTION_ID", "CUSTOMSERVICE_CLASS", "CUSTOMSERVICE_METHOD", "DATABASE_CHILD_CALL_COUNT", "DATABASE_CHILD_CALL_TIME", "DATABASE_HOST", "DATABASE_NAME", "DATABASE_STATEMENT", "DATABASE_TYPE", "DATABASE_URL", "DISK_IO_TIME", "ERROR_COUNT", "ESB_APPLICATION_NAME", "ESB_INPUT_TYPE", "ESB_LIBRARY_NAME", "ESB_MESSAGE_FLOW_NAME", "EXCEPTION_CLASS", "EXCEPTION_MESSAGE", "FAILED_STATE", "FAILURE_REASON", "FLAW_STATE", "HTTP_REQUEST_METHOD", "HTTP_STATUS", "HTTP_STATUS_CLASS", "IMS_PROGRAM_NAME", "IMS_TRANSACTION_ID", "IMS_USER_ID", "IO_TIME", "IS_KEY_REQUEST", "LAMBDA_COLDSTART", "LOCK_TIME", "MESSAGING_DESTINATION_TYPE", "MESSAGING_IS_TEMPORARY_QUEUE", "MESSAGING_QUEUE_NAME", "MESSAGING_QUEUE_VENDOR", "NETWORK_IO_TIME", "NON_DATABASE_CHILD_CALL_COUNT", "NON_DATABASE_CHILD_CALL_TIME", "PROCESS_GROUP_NAME", "PROCESS_GROUP_TAG", "REMOTE_ENDPOINT", "REMOTE_METHOD", "REMOTE_SERVICE_NAME", "REQUEST_NAME", "REQUEST_TYPE", "RESPONSE_TIME", "RESPONSE_TIME_CLIENT", "RMI_CLASS", "RMI_METHOD", "SERVICE_DISPLAY_NAME", "SERVICE_NAME", "SERVICE_PORT", "SERVICE_PUBLIC_DOMAIN_NAME", "SERVICE_REQUEST_ATTRIBUTE", "SERVICE_TAG", "SERVICE_TYPE", "SERVICE_WEB_APPLICATION_ID", "SERVICE_WEB_CONTEXT_ROOT", "SERVICE_WEB_SERVER_NAME", "SERVICE_WEB_SERVICE_NAME", "SERVICE_WEB_SERVICE_NAMESPACE", "SUSPENSION_TIME", "TOTAL_PROCESSING_TIME", "WAIT_TIME", "WEBREQUEST_QUERY", "WEBREQUEST_RELATIVE_URL", "WEBREQUEST_URL", "WEBREQUEST_URL_HOST", "WEBREQUEST_URL_PATH", "WEBREQUEST_URL_PORT", "WEBSERVICE_ENDPOINT", "WEBSERVICE_METHOD", "ZOS_CALL_TYPE" ]
          },
          "kind" : {
            "type" : "string",
            "description" : "The type of extraction. \n\n Defines either usage of regular expression (`regex`) or the position of request attribute value to be extracted. \n\nWhen the **attribute** is `SERVICE_REQUEST_ATTRIBUTE` attribute and **aggregation** is `COUNT`, needs to be set to `ORIGINAL_TEXT`",
            "enum" : [ "AFTER_DELIMITER", "BEFORE_DELIMITER", "BETWEEN_DELIMITER", "ORIGINAL_TEXT", "REGEX_EXTRACTION" ]
          },
          "delimiterOrRegex" : {
            "type" : "string",
            "description" : "Depending on the **type** value: \n\n * `REGEX_EXTRACTION`: The regular expression. \n * `BETWEEN_DELIMITER`: The opening delimiter string to look for. \n * All other values: The delimiter string to look for."
          },
          "endDelimiter" : {
            "type" : "string",
            "description" : "The closing delimiter string to look for. \n\n Required if the **kind** value is `BETWEEN_DELIMITER`. Not applicable otherwise."
          },
          "requestAttribute" : {
            "type" : "string",
            "description" : "The request attribute to extract from. \n\n Required if the **kind** value is `SERVICE_REQUEST_ATTRIBUTE`. Not applicable otherwise."
          },
          "normalization" : {
            "type" : "string",
            "description" : "The format of the extracted string.",
            "enum" : [ "ORIGINAL", "TO_LOWER_CASE", "TO_UPPER_CASE" ]
          },
          "useFromChildCalls" : {
            "type" : "boolean",
            "description" : "If `true` request attribute will be taken from a child service call. \n\n Only applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute. Defaults to `false`."
          },
          "aggregation" : {
            "type" : "string",
            "description" : "Which value of the request attribute must be used when it occurs across multiple child requests. \n\nOnly applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute, when **useFromChildCalls** is `true`. \n\nFor the `COUNT` aggregation, the **kind** field is not applicable.",
            "enum" : [ "COUNT", "FIRST", "LAST" ]
          },
          "source" : {
            "$ref" : "#/components/schemas/PropagationSource"
          }
        },
        "description" : "The custom placeholder to be used as a naming value pattern. \n\n It enables you to extract a request attribute value or other request attribute and use it in the naming pattern."
      },
      "PropagationSource" : {
        "type" : "object",
        "properties" : {
          "managementZone" : {
            "type" : "string",
            "description" : "Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`"
          },
          "serviceTag" : {
            "$ref" : "#/components/schemas/UniversalTag"
          }
        },
        "description" : "Defines valid sources of request attributes for conditions or placeholders."
      },
      "ServiceTypeComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Comparison for `SERVICE_TYPE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "BACKGROUND_ACTIVITY", "CICS_SERVICE", "CUSTOM_SERVICE", "DATABASE_SERVICE", "ENTERPRISE_SERVICE_BUS_SERVICE", "EXTERNAL", "IBM_INTEGRATION_BUS_SERVICE", "IMS_SERVICE", "MESSAGING_SERVICE", "RMI_SERVICE", "RPC_SERVICE", "WEB_REQUEST_SERVICE", "WEB_SERVICE", "ZOS_CONNECT_SERVICE" ]
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "BACKGROUND_ACTIVITY", "CICS_SERVICE", "CUSTOM_SERVICE", "DATABASE_SERVICE", "ENTERPRISE_SERVICE_BUS_SERVICE", "EXTERNAL", "IBM_INTEGRATION_BUS_SERVICE", "IMS_SERVICE", "MESSAGING_SERVICE", "RMI_SERVICE", "RPC_SERVICE", "WEB_REQUEST_SERVICE", "WEB_SERVICE", "ZOS_CONNECT_SERVICE" ]
              }
            }
          }
        } ]
      },
      "StringComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Comparison for `STRING` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "BEGINS_WITH", "BEGINS_WITH_ANY_OF", "CONTAINS", "ENDS_WITH", "ENDS_WITH_ANY_OF", "EQUALS", "EQUALS_ANY_OF", "EXISTS", "REGEX_MATCHES" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to."
              }
            },
            "caseSensitive" : {
              "type" : "boolean",
              "description" : "The comparison is case-sensitive (`true`) or not case-sensitive (`false`)."
            }
          }
        } ]
      },
      "StringRequestAttributeComparisonInfo" : {
        "required" : [ "comparison", "negate", "requestAttribute" ],
        "type" : "object",
        "description" : "Comparison for `STRING_REQUEST_ATTRIBUTE` attributes, specifically of the **String** type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "BEGINS_WITH", "BEGINS_WITH_ANY_OF", "CONTAINS", "ENDS_WITH", "ENDS_WITH_ANY_OF", "EQUALS", "EQUALS_ANY_OF", "EXISTS", "REGEX_MATCHES" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to."
              }
            },
            "requestAttribute" : {
              "type" : "string"
            },
            "caseSensitive" : {
              "type" : "boolean",
              "description" : "The comparison is case-sensitive (`true`) or not case-sensitive (`false`)."
            },
            "matchOnChildCalls" : {
              "type" : "boolean",
              "description" : "If `true`, the request attribute is matched on child service calls. \n\n Default is `false`."
            },
            "source" : {
              "$ref" : "#/components/schemas/PropagationSource"
            }
          }
        } ]
      },
      "TagComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Comparison for `TAG` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "TAG_KEY_EQUALS", "TAG_KEY_EQUALS_ANY_OF" ]
            },
            "value" : {
              "$ref" : "#/components/schemas/TagInfo"
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "$ref" : "#/components/schemas/TagInfo"
              }
            }
          }
        } ]
      },
      "UniversalTag" : {
        "required" : [ "key" ],
        "type" : "object",
        "properties" : {
          "tagKey" : {
            "$ref" : "#/components/schemas/UniversalTagKey"
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the tag. Not applicable to custom tags. \n\nIf a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used."
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the tag. For custom tags, put the tag value here.\n\nThe key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags."
          },
          "context" : {
            "type" : "string",
            "description" : "The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. \n\nThe context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set.",
            "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_COMPUTE_ENGINE", "KUBERNETES" ]
          }
        },
        "description" : "Use only request attributes from services that have this tag. Use either this or `managementZone`"
      },
      "UniversalTagKey" : {
        "type" : "object",
        "properties" : {
          "context" : {
            "type" : "string",
            "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_COMPUTE_ENGINE", "KUBERNETES" ]
          },
          "key" : {
            "type" : "string"
          }
        }
      },
      "ZosComparisonInfo" : {
        "required" : [ "comparison", "negate" ],
        "type" : "object",
        "description" : "Comparison for `ZOS_CALL_TYPE` attributes.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComparisonInfo"
        }, {
          "type" : "object",
          "properties" : {
            "comparison" : {
              "type" : "string",
              "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
              "enum" : [ "EQUALS", "EQUALS_ANY_OF", "EXISTS" ]
            },
            "value" : {
              "type" : "string",
              "description" : "The value to compare to.",
              "enum" : [ "CTG", "DPL", "EXPLICIT_ADK", "HTTP", "IMS_CONNECT", "IMS_CONNECT_API", "IMS_ITRA", "IMS_MSC", "IMS_PGM_SWITCH", "IMS_SHARED_QUEUES", "IMS_TRANS_EXEC", "MQ", "SOAP", "START", "TTX", "TX", "UNKNOWN", "ZOS_CONNECT" ]
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 0,
              "uniqueItems" : true,
              "type" : "array",
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "description" : "The values to compare to.",
              "items" : {
                "type" : "string",
                "description" : "The values to compare to.",
                "enum" : [ "CTG", "DPL", "EXPLICIT_ADK", "HTTP", "IMS_CONNECT", "IMS_CONNECT_API", "IMS_ITRA", "IMS_MSC", "IMS_PGM_SWITCH", "IMS_SHARED_QUEUES", "IMS_TRANS_EXEC", "MQ", "SOAP", "START", "TTX", "TX", "UNKNOWN", "ZOS_CONNECT" ]
              }
            }
          }
        } ]
      },
      "CalculatedSyntheticMetric" : {
        "required" : [ "enabled", "metric", "metricKey", "monitorIdentifier", "name" ],
        "type" : "object",
        "properties" : {
          "monitorIdentifier" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the synthetic monitor to which the metric belongs."
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name of the metric, displayed in the UI."
          },
          "metricKey" : {
            "type" : "string",
            "description" : "The unique key of the metric. \n\n The key must have the `calc:synthetic` prefix."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          },
          "metric" : {
            "type" : "string",
            "description" : "The type of the synthetic metric.",
            "enum" : [ "ApplicationCache", "Callback", "CumulativeLayoutShift", "DNSLookup", "DOMComplete", "DOMContentLoaded", "DOMInteractive", "FailedRequestsResources", "FirstContentfulPaint", "FirstInputDelay", "FirstInputStart", "FirstPaint", "HTMLDownloaded", "HttpErrors", "JavaScriptErrors", "LargestContentfulPaint", "LoadEventEnd", "LoadEventStart", "LongTasks", "NavigationStart", "OnDOMContentLoaded", "OnLoad", "Processing", "RedirectTime", "Request", "RequestStart", "ResourceCount", "Response", "SecureConnect", "SpeedIndex", "TCPConnect", "TimeToFirstByte", "TotalDuration", "TransferSize", "UserActionDuration", "VisuallyComplete" ]
          },
          "dimensions" : {
            "maxItems" : 2,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of metric dimensions.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticMetricDimension"
            }
          },
          "filter" : {
            "$ref" : "#/components/schemas/SyntheticMetricFilter"
          }
        },
        "description" : "Definition of the calculated synthetic metric.",
        "example" : {
          "enabled" : true,
          "name" : "MyMetric",
          "metricKey" : "calc:synthetic.browser.mymetric",
          "metric" : "UserActionDuration",
          "monitorIdentifier" : "SYNTHETIC_TEST-1234",
          "filter" : {
            "event" : "SYNTHETIC_TEST_STEP-1234",
            "hasError" : true
          },
          "dimensions" : [ {
            "dimension" : "Location"
          } ]
        }
      },
      "SyntheticMetricDimension" : {
        "required" : [ "dimension" ],
        "type" : "object",
        "properties" : {
          "topX" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of top values to be calculated.",
            "format" : "int32"
          },
          "dimension" : {
            "type" : "string",
            "description" : "The dimension of the metric.",
            "enum" : [ "Event", "Location", "ResourceOrigin" ]
          }
        },
        "description" : "Dimension of the calculated synthetic metric."
      },
      "SyntheticMetricFilter" : {
        "type" : "object",
        "properties" : {
          "actionType" : {
            "type" : "string",
            "description" : "Only user actions of the specified type are included in the metric calculation.",
            "enum" : [ "Custom", "Load", "Xhr" ]
          },
          "hasError" : {
            "type" : "boolean",
            "description" : "The execution status of the monitors to be included in the metric calculation: \n\n* `true`: Only failed executions are included. \n\n * `false`: All executions are included."
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "Only executions finished with the specified error code are included in the metric calculation.",
            "format" : "int32"
          },
          "event" : {
            "type" : "string",
            "description" : "Only the specified browser clickpath event is included in the metric calculation. \n\n Specify the Dynatrace entity ID of the event here. You can fetch the list of clickpath events of the monitor with the [GET a synthetic monitor](https://dt-url.net/4oe3kka) request from the Environment API"
          },
          "location" : {
            "type" : "string",
            "description" : "Only executions from the specified location are included in the metric calculation. \n\n Specify the Dynatrace entity ID of the location here. You can fetch the list of locations the monitor is running from with the [GET a synthetic monitor](https://dt-url.net/4oe3kka) request from the Environment API."
          }
        },
        "description" : "Filter of the calculated synthetic metric."
      },
      "SyntheticMetricUpdate" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The metric is enabled (`true`) or disabled (`false`)."
          }
        },
        "description" : "The update of the calculated synthetic metric."
      },
      "AnsibleTowerNotificationConfig" : {
        "required" : [ "acceptAnyCertificate", "active", "alertingProfile", "customMessage", "jobTemplateID", "jobTemplateURL", "name", "username" ],
        "type" : "object",
        "description" : "Configuration of the Ansible Tower notification.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "jobTemplateURL" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The URL of the target Ansible Tower job template."
            },
            "acceptAnyCertificate" : {
              "type" : "boolean",
              "description" : "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates."
            },
            "username" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The username of the Ansible Tower account."
            },
            "password" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The password for the Ansible Tower account."
            },
            "jobTemplateID" : {
              "type" : "integer",
              "description" : "The ID of the target Ansible Tower job template.",
              "format" : "int32"
            },
            "customMessage" : {
              "maxLength" : 1000,
              "minLength" : 0,
              "type" : "string",
              "description" : "The custom message of the notification. \n\n This message will be displayed in the extra variables **Message** field of your job template.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n"
            }
          }
        } ]
      },
      "EmailNotificationConfig" : {
        "required" : [ "active", "alertingProfile", "body", "name", "receivers", "subject" ],
        "type" : "object",
        "description" : "Configuration of the email notification.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "subject" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The subject of the email notifications."
            },
            "body" : {
              "minLength" : 1,
              "type" : "string",
              "description" : "The template of the email notification.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string. \n* `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://dt-url.net/1yk3kkq) string. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n"
            },
            "receivers" : {
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The list of the email recipients.",
              "items" : {
                "type" : "string"
              }
            },
            "ccReceivers" : {
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The list of the email CC-recipients.",
              "items" : {
                "type" : "string"
              }
            },
            "bccReceivers" : {
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The list of the email BCC-recipients.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "HttpHeader" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the HTTP header."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the HTTP header. May contain an empty value. \n\n Required when creating a new notification. \n\nFor the **Authorization** header, GET requests return the `null` value. \n\nIf you want update a notification configuration with an **Authorization** header which you want to remain intact, set the **Authorization** header with the `null` value."
          }
        },
        "description" : "The HTTP header."
      },
      "JiraNotificationConfig" : {
        "required" : [ "active", "alertingProfile", "description", "issueType", "name", "projectKey", "summary", "url", "username" ],
        "type" : "object",
        "description" : "Configuration of the Jira notification.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "username" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The username of the Jira profile."
            },
            "password" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The password for the Jira profile."
            },
            "url" : {
              "minLength" : 1,
              "type" : "string",
              "description" : "The URL of the Jira API endpoint."
            },
            "projectKey" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The project key of the Jira issue to be created by this notification."
            },
            "issueType" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The type of the Jira issue to be created by this notification."
            },
            "summary" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The summary of the Jira issue to be created by this notification.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n"
            },
            "description" : {
              "minLength" : 1,
              "type" : "string",
              "description" : "The description of the Jira issue to be created by this notification. \n\n You can use same placeholders as in issue summary."
            }
          }
        } ]
      },
      "NotificationConfig" : {
        "required" : [ "active", "alertingProfile", "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the notification configuration.",
            "format" : "uuid"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the notification configuration."
          },
          "alertingProfile" : {
            "type" : "string",
            "description" : "The ID of the associated alerting profile.",
            "format" : "uuid"
          },
          "active" : {
            "type" : "boolean",
            "description" : "The configuration is enabled (`true`) or disabled (`false`)."
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `EMAIL` -> EmailNotificationConfig \n* `PAGER_DUTY` -> PagerDutyNotificationConfig \n* `WEBHOOK` -> WebHookNotificationConfig \n* `SLACK` -> SlackNotificationConfig \n* `VICTOROPS` -> VictorOpsNotificationConfig \n* `SERVICE_NOW` -> ServiceNowNotificationConfig \n* `XMATTERS` -> XMattersNotificationConfig \n* `ANSIBLETOWER` -> AnsibleTowerNotificationConfig \n* `OPS_GENIE` -> OpsGenieNotificationConfig \n* `JIRA` -> JiraNotificationConfig \n* `TRELLO` -> TrelloNotificationConfig \n",
            "enum" : [ "ANSIBLETOWER", "EMAIL", "JIRA", "OPS_GENIE", "PAGER_DUTY", "SERVICE_NOW", "SLACK", "TRELLO", "VICTOROPS", "WEBHOOK", "XMATTERS" ]
          }
        },
        "description" : "Configuration of a notification. The actual set of fields depends on the `type` of the notification.\nSee [Notifications API - JSON models](https://dt-url.net/9qm3k5u) in Dynatrace Documentation for example models of every notification type.",
        "example" : {
          "type" : "JIRA",
          "id" : "acbed0c4-4ef1-4303-991f-102510a69322",
          "name" : "REST example",
          "alertingProfile" : "4f5e00f4-39b3-455a-820b-3514843615f3",
          "active" : true,
          "username" : "john.smith",
          "password" : "",
          "url" : "https://my-jira.atlassian.net/rest/api/2/",
          "projectKey" : "DEV",
          "issueType" : "Task",
          "summary" : "Problem {ProblemID}: {ProblemTitle}",
          "description" : "{ProblemDetailsText}"
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "OpsGenieNotificationConfig" : {
        "required" : [ "active", "alertingProfile", "domain", "message", "name" ],
        "type" : "object",
        "description" : "Configuration of the OpsGenie notification.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "apiKey" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The API key to access OpsGenie."
            },
            "domain" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The region domain of the OpsGenie."
            },
            "message" : {
              "maxLength" : 80,
              "minLength" : 1,
              "type" : "string",
              "description" : "The content of the message.\n\n You can use the following placeholders: \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n"
            }
          }
        } ]
      },
      "PagerDutyNotificationConfig" : {
        "required" : [ "account", "active", "alertingProfile", "name", "serviceName" ],
        "type" : "object",
        "description" : "Configuration of the PagerDuty notification.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "account" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The name of the PagerDuty account."
            },
            "serviceApiKey" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The API key to access PagerDuty."
            },
            "serviceName" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The name of the service."
            }
          }
        } ]
      },
      "ServiceNowNotificationConfig" : {
        "required" : [ "active", "alertingProfile", "message", "name", "sendEvents", "sendIncidents", "username" ],
        "type" : "object",
        "description" : "Configuration of the ServiceNow notification.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "instanceName" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL. \n\n This field is mutually exclusive with the **url** field. You can only use one of them."
            },
            "url" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The URL of the on-premise ServiceNow installation. \n\n This field is mutually exclusive with the **instanceName** field. You can only use one of them."
            },
            "username" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The username of the ServiceNow account. \n\n Make sure that your user account has the `rest_service`, `web_request_admin`, and `x_dynat_ruxit.Integration` roles."
            },
            "password" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The username to the ServiceNow account"
            },
            "message" : {
              "maxLength" : 160,
              "minLength" : 1,
              "type" : "string",
              "description" : "The content of the ServiceNow description.\n\n\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n"
            },
            "sendIncidents" : {
              "type" : "boolean",
              "description" : "Send incidents into ServiceNow ITSM (`true`)."
            },
            "sendEvents" : {
              "type" : "boolean",
              "description" : "Send events into ServiceNow ITOM (`true`)."
            }
          }
        } ]
      },
      "SlackNotificationConfig" : {
        "required" : [ "active", "alertingProfile", "channel", "name", "title" ],
        "type" : "object",
        "description" : "Configuration of the Slack notification.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "url" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The URL of the Slack WebHook.\n\n This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests."
            },
            "channel" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to."
            },
            "title" : {
              "minLength" : 1,
              "type" : "string",
              "description" : "The content of the message.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n"
            }
          }
        } ]
      },
      "TrelloNotificationConfig" : {
        "required" : [ "active", "alertingProfile", "applicationKey", "boardId", "description", "listId", "name", "resolvedListId", "text" ],
        "type" : "object",
        "description" : "Configuration of the Trello notification.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "applicationKey" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The application key for the Trello account."
            },
            "authorizationToken" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The application token for the Trello account."
            },
            "boardId" : {
              "minLength" : 1,
              "type" : "string",
              "description" : "The Trello board to which the card should be assigned."
            },
            "listId" : {
              "minLength" : 1,
              "type" : "string",
              "description" : "The Trello list to which the card should be assigned."
            },
            "resolvedListId" : {
              "minLength" : 1,
              "type" : "string",
              "description" : "The Trello list to which the card of the resolved problem should be assigned."
            },
            "text" : {
              "minLength" : 1,
              "type" : "string",
              "description" : "The text of the generated Trello card.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://dt-url.net/1yk3kkq) string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n"
            },
            "description" : {
              "minLength" : 1,
              "type" : "string",
              "description" : "The description of the Trello card. \n\n You can use same placeholders as in card text."
            }
          }
        } ]
      },
      "VictorOpsNotificationConfig" : {
        "required" : [ "active", "alertingProfile", "message", "name", "routingKey" ],
        "type" : "object",
        "description" : "Configuration of the VictorOps notification.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "apiKey" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The API key for the target VictorOps account."
            },
            "routingKey" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The routing key, defining the group to be notified."
            },
            "message" : {
              "minLength" : 1,
              "type" : "string",
              "description" : "The content of the message.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n"
            }
          }
        } ]
      },
      "WebHookNotificationConfig" : {
        "required" : [ "acceptAnyCertificate", "active", "alertingProfile", "name", "payload", "url" ],
        "type" : "object",
        "description" : "Configuration of the custom WebHook notification.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "url" : {
              "maxLength" : 1000,
              "minLength" : 0,
              "type" : "string",
              "description" : "The URL of the WebHook endpoint."
            },
            "acceptAnyCertificate" : {
              "type" : "boolean",
              "description" : "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates."
            },
            "payload" : {
              "minLength" : 1,
              "type" : "string",
              "description" : "The content of the notification message.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string. \n* `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://dt-url.net/1yk3kkq) string. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n"
            },
            "headers" : {
              "type" : "array",
              "description" : "A list of the additional HTTP headers.",
              "items" : {
                "$ref" : "#/components/schemas/HttpHeader"
              }
            },
            "notifyEventMergesEnabled" : {
              "type" : "boolean",
              "description" : "Call webhook if new events merge into existing problems."
            }
          }
        } ]
      },
      "XMattersNotificationConfig" : {
        "required" : [ "acceptAnyCertificate", "active", "alertingProfile", "name", "payload", "url" ],
        "type" : "object",
        "description" : "Configuration of the xMatters notification.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NotificationConfig"
        }, {
          "type" : "object",
          "properties" : {
            "url" : {
              "maxLength" : 1000,
              "minLength" : 1,
              "type" : "string",
              "description" : "The URL of the xMatters WebHook."
            },
            "acceptAnyCertificate" : {
              "type" : "boolean",
              "description" : "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates."
            },
            "headers" : {
              "type" : "array",
              "description" : "A list of the additional HTTP headers.",
              "items" : {
                "$ref" : "#/components/schemas/HttpHeader"
              }
            },
            "payload" : {
              "maxLength" : 600,
              "minLength" : 1,
              "type" : "string",
              "description" : "The content of the message.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string. \n* `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://dt-url.net/1yk3kkq) string. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://dt-url.net/klg3k4q) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://dt-url.net/f1i3k5b) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n"
            }
          }
        } ]
      },
      "NotificationConfigStub" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the Dynatrace entity."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity.",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the Dynatrace entity.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the notification.",
            "enum" : [ "ANSIBLETOWER", "EMAIL", "HIPCHAT", "JIRA", "OPS_GENIE", "PAGER_DUTY", "SERVICE_NOW", "SLACK", "TRELLO", "VICTOROPS", "WEBHOOK", "XMATTERS" ]
          }
        },
        "description" : "The short representation of a notification."
      },
      "NotificationConfigStubListDto" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationConfigStub"
            }
          }
        }
      },
      "RemotePluginEndpoint" : {
        "required" : [ "activeGatePluginModule" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the endpoint."
          },
          "pluginId" : {
            "type" : "string",
            "description" : "The ID of the plugin to which the endpoint belongs."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the endpoint, displayed in Dynatrace."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The endpoint is enabled (`true`) or disabled (`false`)."
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The list of endpoint parameters. \n\n Each parameter is a property-value pair."
            },
            "description" : "The list of endpoint parameters. \n\n Each parameter is a property-value pair."
          },
          "activeGatePluginModule" : {
            "$ref" : "#/components/schemas/EntityShortRepresentation"
          }
        },
        "description" : "Configuration of a plugin endpoint.",
        "example" : {
          "id" : "-2183662974968812535",
          "pluginId" : "custom.remote.python.demo",
          "name" : "Demo endpoint",
          "enabled" : true,
          "properties" : {
            "serverIp" : "127.0.0.1",
            "password" : "",
            "username" : "dynatrace",
            "dropdownProperty" : "two"
          },
          "activeGatePluginModule" : {
            "id" : "-8844900174269363000"
          }
        }
      },
      "Plugin" : {
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the plugin, for example `custom.remote.python.demo`."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the plugin, displayed in Dynatrace."
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the plugin, displayed in Dynatrace."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the plugin. It indicates the runtime environment of the plugin (for example, ActiveGate).",
            "enum" : [ "ActiveGate", "JMX", "OneAgent", "PMI" ]
          },
          "metricGroup" : {
            "type" : "string",
            "description" : "The metric group of the plugin. All the metrics, captured by the plugin are children of this group."
          },
          "properties" : {
            "type" : "array",
            "description" : "A list of plugin properties.",
            "items" : {
              "$ref" : "#/components/schemas/PluginProperty"
            }
          }
        },
        "description" : "General configuration of a plugin.",
        "example" : {
          "id" : "custom.remote.python.demo",
          "name" : "ActiveGate demo plugin",
          "version" : "1.01",
          "type" : "ActiveGate",
          "metricGroup" : "custom.demo_metrics",
          "properties" : [ {
            "key" : "serverIp",
            "type" : "STRING",
            "defaultValue" : "127.0.0.1"
          }, {
            "key" : "password",
            "type" : "PASSWORD",
            "defaultValue" : ""
          }, {
            "key" : "username",
            "type" : "STRING",
            "defaultValue" : "dynatrace"
          }, {
            "key" : "dropdownProperty",
            "type" : "DROPDOWN",
            "defaultValue" : "one",
            "dropdownValues" : [ "one", "two", "three" ]
          } ]
        }
      },
      "PluginProperty" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The key of the property."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the property."
          },
          "defaultValue" : {
            "type" : "string",
            "description" : "The default value of the property."
          },
          "dropdownValues" : {
            "type" : "array",
            "description" : "The list of possible values of the property. \n\n If such a list is defined, only values from this list can be assigned to the property.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A property of a plugin."
      },
      "PluginState" : {
        "type" : "object",
        "properties" : {
          "pluginId" : {
            "type" : "string",
            "description" : "The ID of the plugin."
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the plugin (for example `1.0.0`)."
          },
          "endpointId" : {
            "type" : "string",
            "description" : "The ID of the endpoint where the state is detected - Active Gate only."
          },
          "state" : {
            "type" : "string",
            "description" : "The state of the plugin.",
            "enum" : [ "DISABLED", "ERROR_AUTH", "ERROR_COMMUNICATION_FAILURE", "ERROR_CONFIG", "ERROR_TIMEOUT", "ERROR_UNKNOWN", "INCOMPATIBLE", "LIMIT_REACHED", "NOTHING_TO_REPORT", "OK", "STATE_TYPE_UNKNOWN", "UNINITIALIZED", "UNSUPPORTED", "WAITING_FOR_STATE" ]
          },
          "stateDescription" : {
            "type" : "string",
            "description" : "A short description of the state."
          },
          "timestamp" : {
            "type" : "integer",
            "description" : "The timestamp when the state was detected, in UTC milliseconds.",
            "format" : "int64"
          },
          "hostId" : {
            "type" : "string",
            "description" : "The ID of the host on which the plugin runs."
          },
          "processId" : {
            "type" : "string",
            "description" : "The ID of the entity on which the plugin is active."
          }
        },
        "description" : "The state of the plugin."
      },
      "PluginStateList" : {
        "type" : "object",
        "properties" : {
          "states" : {
            "type" : "array",
            "description" : "A list of plugin states.",
            "items" : {
              "$ref" : "#/components/schemas/PluginState"
            }
          }
        },
        "description" : "A list of plugin states.",
        "example" : {
          "pluginId" : "custom.remote.python.demo",
          "version" : "1.0.0",
          "endpointId" : "-8213819843595439277",
          "state" : "ERROR_AUTH",
          "stateDescription" : "Could not authorize",
          "timestamp" : 1556199097994
        }
      },
      "RemoteEnvironmentConfigStub" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "networkScope" : {
            "type" : "string",
            "description" : "The network scope of the remote environment:\n* `EXTERNAL`: The remote environment is located in an another network. \n* `INTERNAL`: The remote environment is located in the same network. \n* `CLUSTER`: The remote environment is located in the same cluster. \n\nDynatrace SaaS can only use `EXTERNAL`.\n\nIf not set, `EXTERNAL` is used.",
            "enum" : [ "CLUSTER", "EXTERNAL", "INTERNAL" ]
          },
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "uri" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "type" : "string",
            "description" : "The display name of the remote environment."
          }
        },
        "description" : "The short representation of a remote environment."
      },
      "RemoteEnvironmentConfigDto" : {
        "required" : [ "displayName", "uri" ],
        "type" : "object",
        "properties" : {
          "networkScope" : {
            "type" : "string",
            "description" : "The network scope of the remote environment:\n* `EXTERNAL`: The remote environment is located in an another network. \n* `INTERNAL`: The remote environment is located in the same network. \n* `CLUSTER`: The remote environment is located in the same cluster. \n\nDynatrace SaaS can only use `EXTERNAL`.\n\nIf not set, `EXTERNAL` is used.",
            "example" : "EXTERNAL",
            "enum" : [ "CLUSTER", "EXTERNAL", "INTERNAL" ]
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the remote environment."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the configuration."
          },
          "token" : {
            "type" : "string",
            "description" : "The API token granting access to the remote environment. \n\nThe token must have the **Fetch data from a remote environment** (`RestRequestForwarding`) scope. \n\nFor security reasons, GET requests return this field as `null`."
          },
          "uri" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "type" : "string",
            "description" : "The URI of the remote environment."
          }
        }
      },
      "RemoteEnvironmentConfigListDto" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RemoteEnvironmentConfigStub"
            }
          }
        }
      },
      "DashboardReport" : {
        "required" : [ "dashboardId", "subscriptions", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the report."
          },
          "type" : {
            "type" : "string",
            "enum" : [ "DASHBOARD" ]
          },
          "dashboardId" : {
            "type" : "string",
            "description" : "The ID of the associated dashboard."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The email notifications for the dashboard report are enabled (`true`) or disabled (`false`)."
          },
          "subscriptions" : {
            "$ref" : "#/components/schemas/DashboardReportSubscription"
          }
        },
        "description" : "Configuration of a dashboard report. \n\nThe dashboard report provides a public link to the associated dashboard with a custom reporting period: last week for weekly subscribers or last month for monthly subscribers.",
        "example" : {
          "id" : "337d883e-98c3-4dac-b8f2-1a9cdbd05969",
          "type" : "DASHBOARD",
          "dashboardId" : "8dd67562-8bf5-4a09-830d-4e0ca992abd6",
          "enabled" : "true",
          "subscriptions" : {
            "WEEK" : [ "demo@email.com" ],
            "MONTH" : [ "demo@email.com", "demo2@email.com" ]
          }
        }
      },
      "DashboardReportSubscription" : {
        "type" : "object",
        "properties" : {
          "WEEK" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of weekly subscribers. \n\nWeekly subscribers receive the report every Monday at midnight. \n\n You can specify email addresses or Dynatrace user IDs here.",
            "items" : {
              "type" : "string"
            }
          },
          "MONTH" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of monthly subscribers. \n\nMonthly subscribers receive the report on the first Monday of the month at midnight. \n\nYou can specify email addresses or Dynatrace user IDs here.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A list of the report subscribers."
      },
      "DashboardReportStub" : {
        "required" : [ "dashboardId", "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the report."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the report.",
            "enum" : [ "DASHBOARD" ]
          },
          "dashboardId" : {
            "type" : "string",
            "description" : "The ID of the associated dashboard."
          }
        },
        "description" : "A short representations of the report."
      },
      "ReportStubList" : {
        "required" : [ "values" ],
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "description" : "A list of reports.",
            "items" : {
              "$ref" : "#/components/schemas/DashboardReportStub"
            }
          }
        },
        "description" : "A list of short representations of reports.",
        "example" : {
          "values" : [ {
            "id" : "337d883e-98c3-4dac-b8f2-1a9cdbd05969",
            "type" : "DASHBOARD",
            "dashboardId" : "9eee7ed6-a125-4d9d-bfa7-afdb3404cb36"
          }, {
            "id" : "b059e372-0b35-4d44-869b-95c326748848",
            "type" : "DASHBOARD",
            "dashboardId" : "26ccd360-828c-4d83-a65e-040ddc31e8f6"
          } ]
        }
      },
      "ReportSubscriptions" : {
        "required" : [ "recipients", "schedule" ],
        "type" : "object",
        "properties" : {
          "schedule" : {
            "type" : "string",
            "description" : "The schedule of the subscription. \n\n * Weekly subscribers receive the report every Monday at midnight. \n * Monthly subscribers receive the report on the first Monday of the month at midnight.",
            "enum" : [ "MONTH", "WEEK" ]
          },
          "recipients" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of the recipients. \n\nYou can specify email addresses or Dynatrace user IDs here.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Configuration of a report subscription.",
        "example" : {
          "schedule" : "WEEK",
          "recipients" : [ "demo@email.com", "demo2@email.com" ]
        }
      },
      "CapturedMethod" : {
        "required" : [ "capture", "method" ],
        "type" : "object",
        "properties" : {
          "method" : {
            "$ref" : "#/components/schemas/MethodReference"
          },
          "capture" : {
            "type" : "string",
            "description" : "What to capture from the method.",
            "enum" : [ "ARGUMENT", "CLASS_NAME", "METHOD_NAME", "OCCURRENCES", "SIMPLE_CLASS_NAME", "THIS" ]
          },
          "argumentIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "The index of the argument to capture. Set `0` to capture the return value, `1` or higher to capture a mehtod argument. \n\n Required if the **capture** is set to `ARGUMENT`.\n\n Not applicable in other cases.",
            "format" : "int32"
          },
          "deepObjectAccess" : {
            "type" : "string",
            "description" : "The getter chain to apply to the captured object. It is required in one of the following cases:\n\n The **capture** is set to `THIS`. \n  The **capture** is set to `ARGUMENT`, and the argument is not a primitive, a primitive wrapper class, a string, or an array. \n\n Not applicable in other cases."
          }
        }
      },
      "DataSource" : {
        "required" : [ "enabled", "source" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The data source is enabled (`true`) or disabled (`false`)."
          },
          "source" : {
            "type" : "string",
            "description" : "The source of the attribute to capture. Works in conjunction with **parameterName** or **methods** and **technology**.",
            "enum" : [ "CICS_SDK", "CICS_SYSTEM_ID", "CICS_TASK_ID", "CICS_TRANSACTION_CALL_TYPE", "CLIENT_IP", "CUSTOM_ATTRIBUTE", "DLI_DB_OR_LTERM_NAME", "DLI_SEGMENT_NAME", "IIB_LABEL", "IIB_NODE", "IMS_TRANSACTION_CALL_TYPE", "METHOD_PARAM", "MQ_CORRELATION_ID", "MQ_MESSAGE_ID", "MQ_MESSAGE_SIZE", "POST_PARAMETER", "QUERY_PARAMETER", "REQUEST_HEADER", "RESPONSE_HEADER", "SERVER_VARIABLE", "SESSION_ATTRIBUTE", "SPAN_ATTRIBUTE", "URI", "URI_PATH", "WEBSERVICE_METHOD", "WEBSERVICE_NAME" ]
          },
          "valueProcessing" : {
            "$ref" : "#/components/schemas/ValueProcessing"
          },
          "technology" : {
            "type" : "string",
            "description" : "The technology of the method to capture if the **source** value is `METHOD_PARAM`. \\n\\n Not applicable in other cases.",
            "enum" : [ "DOTNET", "JAVA", "PHP" ]
          },
          "sessionAttributeTechnology" : {
            "type" : "string",
            "description" : "The technology of the session attribute to capture if the **source** value is `SESSION_ATTRIBUTE`. \\n\\n Not applicable in other cases.",
            "enum" : [ "ASP_NET", "ASP_NET_CORE", "JAVA", "PHP" ]
          },
          "serverVariableTechnology" : {
            "type" : "string",
            "description" : "The technology of the server variable to capture if the **source** value is `SERVER_VARIABLE`. \\n\\n Not applicable in other cases.",
            "enum" : [ "ASP_NET" ]
          },
          "methods" : {
            "type" : "array",
            "description" : "The method specification if the **source** value is `METHOD_PARAM`. \n\n Not applicable in other cases.",
            "items" : {
              "$ref" : "#/components/schemas/CapturedMethod"
            }
          },
          "parameterName" : {
            "type" : "string",
            "description" : "The name of the web request parameter to capture.\n\n Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.\n\n Not applicable in other cases."
          },
          "scope" : {
            "$ref" : "#/components/schemas/ScopeConditions"
          },
          "capturingAndStorageLocation" : {
            "type" : "string",
            "description" : "Specifies the location where the values are captured and stored.\n\n Required if the **source** is one of the following: `GET_PARAMETER`, `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`. \n\n Not applicable in other cases. \n\n If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`, the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed.",
            "enum" : [ "CAPTURE_AND_STORE_ON_BOTH", "CAPTURE_AND_STORE_ON_CLIENT", "CAPTURE_AND_STORE_ON_SERVER", "CAPTURE_ON_CLIENT_STORE_ON_SERVER" ]
          },
          "iibNodeType" : {
            "type" : "string",
            "description" : "The IBM integration bus node type for which the value is captured.\n\n This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.\n\n Not applicable in other cases.",
            "enum" : [ "AGGREGATE_CONTROL_NODE", "AGGREGATE_REPLY_NODE", "AGGREGATE_REQUEST_NODE", "CALLABLE_FLOW_REPLY_NODE", "COLLECTOR_NODE", "COMPUTE_NODE", "DATABASE_NODE", "DATABASE_RETRIEVE_NODE", "DATABASE_ROUTE_NODE", "DECISION_SERVICE_NODE", "DOT_NET_COMPUTE_NODE", "FILE_READ_NODE", "FILTER_NODE", "FLOW_ORDER_NODE", "GROUP_COMPLETE_NODE", "GROUP_GATHER_NODE", "GROUP_SCATTER_NODE", "HTTP_ASYNC_REQUEST", "HTTP_ASYNC_RESPONSE", "HTTP_HEADER", "HTTP_INPUT", "HTTP_REPLY", "HTTP_REQUEST", "JAVA_COMPUTE_NODE", "JMS_CLIENT_RECEIVE", "JMS_CLIENT_REPLY_NODE", "JMS_HEADER", "JMS_INPUT_NODE", "JMS_OUTPUT_NODE", "JMS_REPLY_NODE", "MQ_GET_NODE", "MQ_INPUT_NODE", "MQ_OUTPUT_NODE", "MQ_REPLY_NODE", "PASSTHRU_NODE", "PUBLICATION_NODE", "RESET_CONTENT_DESCRIPTOR_NODE", "REST_ASYNC_REQUEST_NODE", "REST_ASYNC_RESPONSE_NODE", "REST_REQUEST_NODE", "RE_SEQUENCE_NODE", "ROUTE_NODE", "SAP_REPLY_NODE", "SCA_REPLY_NODE", "SECURITY_PEP", "SEQUENCE_NODE", "SOAP_ASYNC_REQUEST_NODE", "SOAP_ASYNC_RESPONSE_NODE", "SOAP_EXTRACT_NODE", "SOAP_INPUT_NODE", "SOAP_REPLY_NODE", "SOAP_REQUEST_NODE", "SOAP_WRAPPER_NODE", "SR_RETRIEVE_ENTITY_NODE", "SR_RETRIEVE_IT_SERVICE_NODE", "THROW_NODE", "TRACE_NODE", "TRY_CATCH_NODE", "VALIDATE_NODE", "WS_REPLY_NODE", "XSL_MQSI_NODE" ]
          },
          "iibMethodNodeCondition" : {
            "$ref" : "#/components/schemas/ValueCondition"
          },
          "cicsSDKMethodNodeCondition" : {
            "$ref" : "#/components/schemas/ValueCondition"
          },
          "iibLabelMethodNodeCondition" : {
            "$ref" : "#/components/schemas/ValueCondition"
          },
          "spanAttributeKey" : {
            "type" : "string",
            "description" : "The key of the span attribute to capture.\n\n Required if the **source** is: `SPAN_ATTRIBUTE`.\n\n Not applicable in other cases."
          },
          "cicsTransactionCallType" : {
            "type" : "string",
            "description" : "CICS transaction call type condition for which the value is captured.\n\n Required if the **source** is: `CICS_TRANSACTION_CALL_TYPE`.\n\n Not applicable in other cases.",
            "enum" : [ "CTG", "DPL", "EXPLICIT_ADK", "HTTP", "IMS_CONNECT", "IMS_CONNECT_API", "IMS_ITRA", "IMS_MSC", "IMS_PGM_SWITCH", "IMS_SHARED_QUEUES", "IMS_TRANS_EXEC", "MQ", "SOAP", "START", "TTX", "TX", "UNKNOWN", "ZOS_CONNECT" ]
          },
          "imsTransactionCallType" : {
            "type" : "string",
            "description" : "IMS transaction call type condition for which the value is captured.\n\n Required if the **source** is: `IMS_TRANSACTION_CALL_TYPE`.\n\n Not applicable in other cases.",
            "enum" : [ "CTG", "DPL", "EXPLICIT_ADK", "HTTP", "IMS_CONNECT", "IMS_CONNECT_API", "IMS_ITRA", "IMS_MSC", "IMS_PGM_SWITCH", "IMS_SHARED_QUEUES", "IMS_TRANS_EXEC", "MQ", "SOAP", "START", "TTX", "TX", "UNKNOWN", "ZOS_CONNECT" ]
          }
        }
      },
      "ExtractSubstring" : {
        "required" : [ "delimiter", "position" ],
        "type" : "object",
        "properties" : {
          "position" : {
            "type" : "string",
            "description" : "The position of the extracted string relative to delimiters.",
            "enum" : [ "AFTER", "BEFORE", "BETWEEN" ]
          },
          "delimiter" : {
            "type" : "string",
            "description" : "The delimiter string."
          },
          "endDelimiter" : {
            "type" : "string",
            "description" : "The end-delimiter string. \n\n Required if the **position** value is `BETWEEN`. Otherwise not allowed."
          }
        },
        "description" : "Preprocess by extracting a substring from the original value."
      },
      "MethodReference" : {
        "required" : [ "argumentTypes", "methodName", "modifiers", "returnType", "visibility" ],
        "type" : "object",
        "properties" : {
          "visibility" : {
            "type" : "string",
            "description" : "The visibility of the method to capture.",
            "enum" : [ "INTERNAL", "PACKAGE_PROTECTED", "PRIVATE", "PROTECTED", "PUBLIC" ]
          },
          "modifiers" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The modifiers of the method to capture.",
            "items" : {
              "type" : "string",
              "enum" : [ "ABSTRACT", "EXTERN", "FINAL", "NATIVE", "STATIC" ]
            }
          },
          "className" : {
            "type" : "string",
            "description" : "The class name where the method to capture resides. \n\n Either this or the **fileName** must be set."
          },
          "fileName" : {
            "type" : "string",
            "description" : "The file name where the method to capture resides. \n\n Either this or **className** must be set."
          },
          "fileNameMatcher" : {
            "type" : "string",
            "description" : "The operator of the comparison. \n\n If not set, `EQUALS` is used.",
            "enum" : [ "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
          },
          "methodName" : {
            "type" : "string",
            "description" : "The name of the method to capture."
          },
          "argumentTypes" : {
            "type" : "array",
            "description" : "The list of argument types.",
            "items" : {
              "type" : "string"
            }
          },
          "returnType" : {
            "type" : "string",
            "description" : "The return type."
          }
        },
        "description" : "Configuration of a method to be captured."
      },
      "RequestAttribute" : {
        "required" : [ "aggregation", "confidential", "dataSources", "dataType", "enabled", "name", "normalization", "skipPersonalDataMasking" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the request attribute.",
            "format" : "uuid"
          },
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the request attribute."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The request attribute is enabled (`true`) or disabled (`false`)."
          },
          "dataType" : {
            "type" : "string",
            "description" : "The data type of the request attribute.",
            "enum" : [ "DOUBLE", "INTEGER", "STRING" ]
          },
          "dataSources" : {
            "maxItems" : 2000,
            "minItems" : 1,
            "type" : "array",
            "description" : "The list of data sources.",
            "items" : {
              "$ref" : "#/components/schemas/DataSource"
            }
          },
          "normalization" : {
            "type" : "string",
            "description" : "String values transformation. \n\n If the **dataType** is not `string`, set the `Original` here.",
            "enum" : [ "ORIGINAL", "TO_LOWER_CASE", "TO_UPPER_CASE" ]
          },
          "aggregation" : {
            "type" : "string",
            "description" : "Aggregation type for the request values.",
            "enum" : [ "ALL_DISTINCT_VALUES", "AVERAGE", "COUNT_DISTINCT_VALUES", "COUNT_VALUES", "FIRST", "LAST", "MAXIMUM", "MINIMUM", "SUM" ]
          },
          "confidential" : {
            "type" : "boolean",
            "description" : "Confidential data flag. Set `true` to treat the captured data as confidential."
          },
          "skipPersonalDataMasking" : {
            "type" : "boolean",
            "description" : "Personal data masking flag. Set `true` to skip masking. \n\n Warning: This will potentially access personalized data."
          }
        },
        "example" : {
          "name" : "Query Term",
          "enabled" : true,
          "dataType" : "STRING",
          "dataSources" : [ {
            "enabled" : true,
            "source" : "QUERY_PARAMETER",
            "parameterName" : "query",
            "scope" : {
              "tagOfProcessGroup" : "SearchFrontend"
            },
            "capturingAndStorageLocation" : "CAPTURE_AND_STORE_ON_SERVER"
          } ],
          "normalization" : "TO_LOWER_CASE",
          "aggregation" : "ALL_DISTINCT_VALUES",
          "confidential" : false,
          "skipPersonalDataMasking" : false
        }
      },
      "ScopeConditions" : {
        "type" : "object",
        "properties" : {
          "serviceTechnology" : {
            "type" : "string",
            "description" : "Only applies to this service technology.",
            "enum" : [ "ACTIVE_MQ", "ACTIVE_MQ_ARTEMIS", "ADO_NET", "AIX", "AKKA", "AMAZON_REDSHIFT", "AMQP", "APACHE_CAMEL", "APACHE_CASSANDRA", "APACHE_COUCH_DB", "APACHE_DERBY", "APACHE_HTTP_CLIENT_ASYNC", "APACHE_HTTP_CLIENT_SYNC", "APACHE_HTTP_SERVER", "APACHE_KAFKA", "APACHE_LOG4J", "APACHE_SOLR", "APACHE_STORM", "APACHE_SYNAPSE", "APACHE_TOMCAT", "APPARMOR", "APPLICATION_INSIGHTS_SDK", "ASP_DOTNET", "ASP_DOTNET_CORE", "ASP_DOTNET_CORE_SIGNALR", "ASP_DOTNET_SIGNALR", "ASYNC_HTTP_CLIENT", "AWS_DYNAMO_DB", "AWS_LAMBDA", "AWS_RDS", "AWS_SERVICE", "AXIS", "AZURE_FUNCTIONS", "AZURE_SERVICE_BUS", "AZURE_SERVICE_FABRIC", "AZURE_STORAGE", "BOSHBPM", "CITRIX", "CITRIX_COMMON", "CITRIX_DESKTOP_DELIVERY_CONTROLLERS", "CITRIX_DIRECTOR", "CITRIX_LICENSE_SERVER", "CITRIX_PROVISIONING_SERVICES", "CITRIX_STOREFRONT", "CITRIX_VIRTUAL_DELIVERY_AGENT", "CITRIX_WORKSPACE_ENVIRONMENT_MANAGEMENT", "CITRIX_XEN", "CLOUDFOUNDRY", "CLOUDFOUNDRY_AUCTIONEER", "CLOUDFOUNDRY_BOSH", "CLOUDFOUNDRY_GOROUTER", "COLDFUSION", "CONFLUENT_KAFKA_CLIENT", "CONTAINERD", "CORE_DNS", "COUCHBASE", "CRIO", "CXF", "DATASTAX", "DB2", "DIEGO_CELL", "DOCKER", "DOTNET", "DOTNET_REMOTING", "ELASTIC_SEARCH", "ENVOY", "ERLANG", "ETCD", "F5_LTM", "FSHARP", "GARDEN", "GLASSFISH", "GO", "GOOGLE_CLOUD_FUNCTIONS", "GRAAL_TRUFFLE", "GRPC", "GRSECURITY", "HADOOP", "HADOOP_HDFS", "HADOOP_YARN", "HAPROXY", "HEAT", "HESSIAN", "HORNET_Q", "IBM_CICS_REGION", "IBM_CICS_TRANSACTION_GATEWAY", "IBM_IMS_CONNECT_REGION", "IBM_IMS_CONTROL_REGION", "IBM_IMS_MESSAGE_PROCESSING_REGION", "IBM_IMS_SOAP_GATEWAY", "IBM_INTEGRATION_BUS", "IBM_MQ", "IBM_MQ_CLIENT", "IBM_WEBSHPRERE_APPLICATION_SERVER", "IBM_WEBSHPRERE_LIBERTY", "IBM_WEBSPHERE_APPLICATION_SERVER", "IBM_WEBSPHERE_LIBERTY", "IIS", "IIS_APP_POOL", "ISTIO", "JAVA", "JAX_WS", "JBOSS", "JBOSS_EAP", "JDK_HTTP_SERVER", "JERSEY", "JETTY", "JRUBY", "JYTHON", "KUBERNETES", "LIBC", "LIBVIRT", "LINKERD", "LINUX_SYSTEM", "MARIADB", "MEMCACHED", "MICROSOFT_SQL_SERVER", "MONGODB", "MSSQL_CLIENT", "MULE_ESB", "MYSQL", "MYSQL_CONNECTOR", "NETFLIX_SERVO", "NETTY", "NGINX", "NODE_JS", "OK_HTTP_CLIENT", "ONEAGENT_SDK", "OPENCENSUS", "OPENSHIFT", "OPENSTACK_COMPUTE", "OPENSTACK_CONTROLLER", "OPENTELEMETRY", "OPENTRACING", "OPEN_LIBERTY", "ORACLE_DATABASE", "ORACLE_WEBLOGIC", "OWIN", "PERL", "PHP", "PHP_FPM", "PLAY", "POSTGRE_SQL", "POSTGRE_SQL_DOTNET_DATA_PROVIDER", "POWER_DNS", "PROGRESS", "PYTHON", "QOS_LOGBACK", "RABBIT_MQ", "REACTOR_CORE", "REDIS", "RESTEASY", "RESTLET", "RIAK", "RSOCKET", "RUBY", "RUNC", "RXJAVA", "SAG_WEBMETHODS_IS", "SAP", "SAP_HANADB", "SAP_HYBRIS", "SAP_MAXDB", "SAP_SYBASE", "SCALA", "SELINUX", "SHAREPOINT", "SPARK", "SPRING", "SQLITE", "THRIFT", "TIBCO", "TIBCO_BUSINESS_WORKS", "TIBCO_EMS", "UNDERTOW_IO", "VARNISH_CACHE", "VERTX", "VIM2", "VIOS", "VIRTUAL_MACHINE_KVM", "VIRTUAL_MACHINE_QEMU", "WILDFLY", "WINDOWS_CONTAINERS", "WINDOWS_SYSTEM", "WINK", "ZERO_MQ", "ZOS_CONNECT" ]
          },
          "processGroup" : {
            "type" : "string",
            "description" : "Only applies to this process group. Note that this can't be transferred between different clusters or environments."
          },
          "hostGroup" : {
            "type" : "string",
            "description" : "Only applies to this host group."
          },
          "tagOfProcessGroup" : {
            "type" : "string",
            "description" : "Only apply to process groups matching this tag."
          }
        },
        "description" : "Conditions for data capturing."
      },
      "ValueCondition" : {
        "required" : [ "negate", "operator", "value" ],
        "type" : "object",
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator comparing the extracted value to the comparison value.",
            "enum" : [ "BEGINS_WITH", "BEGINS_WITH_ANY_OF", "CONTAINS", "ENDS_WITH", "ENDS_WITH_ANY_OF", "EQUALS", "EQUALS_ANY_OF" ]
          },
          "negate" : {
            "type" : "boolean",
            "description" : "Negate the comparison."
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to."
          }
        },
        "description" : "IBM integration bus label node name condition for which the value is captured."
      },
      "ValueProcessing" : {
        "required" : [ "trim" ],
        "type" : "object",
        "properties" : {
          "valueCondition" : {
            "$ref" : "#/components/schemas/ValueCondition"
          },
          "valueExtractorRegex" : {
            "type" : "string",
            "description" : "Extract value from captured data per regex."
          },
          "splitAt" : {
            "type" : "string",
            "description" : "Split (preprocessed) string values at this separator."
          },
          "trim" : {
            "type" : "boolean",
            "description" : "Prune Whitespaces. Defaults to false."
          },
          "extractSubstring" : {
            "$ref" : "#/components/schemas/ExtractSubstring"
          }
        },
        "description" : "Process values as specified."
      },
      "RequestNaming" : {
        "required" : [ "conditions", "enabled", "namingPattern" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the request naming rule.",
            "format" : "uuid"
          },
          "order" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string",
            "description" : "The order string. Sorting request namings alphabetically by their order string determines their relative ordering.\n\nTypically this is managed by Dynatrace internally and will not be present in GET responses nor used if present in PUT/POST requests, except where noted otherwise."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled (`true`) or disabled (`false`)."
          },
          "namingPattern" : {
            "maxLength" : 1000,
            "minLength" : 3,
            "type" : "string",
            "description" : "The name to be assigned to matching requests."
          },
          "managementZones" : {
            "maxItems" : 1,
            "minItems" : 0,
            "type" : "array",
            "description" : "Specifies the management zones for which this rule should be applied.",
            "items" : {
              "type" : "string"
            }
          },
          "conditions" : {
            "type" : "array",
            "description" : "The set of conditions for the request naming rule usage. \n\n You can specify several conditions. The request has to match **all** the specified conditions for the rule to trigger.",
            "items" : {
              "$ref" : "#/components/schemas/Condition"
            }
          },
          "placeholders" : {
            "type" : "array",
            "description" : "The list of custom placeholders to be used in the naming pattern. \n\n It enables you to extract a request attribute value or other request attribute and use it in the request naming pattern.",
            "items" : {
              "$ref" : "#/components/schemas/Placeholder"
            }
          }
        },
        "description" : "The request naming rule.",
        "example" : {
          "enabled" : true,
          "namingPattern" : "renamed request",
          "conditions" : [ {
            "attribute" : "WEBREQUEST_URL_PATH",
            "comparisonInfo" : {
              "type" : "STRING",
              "comparison" : "BEGINS_WITH",
              "value" : "/url",
              "negate" : false,
              "caseSensitive" : false
            }
          } ]
        }
      },
      "ResourceNaming" : {
        "required" : [ "binary", "image" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "image" : {
            "type" : "array",
            "description" : "The list of image extensions that will be renamed to `Image`.",
            "items" : {
              "type" : "string"
            }
          },
          "binary" : {
            "type" : "array",
            "description" : "The list of binary extensions that will be renamed to `Binary`.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The resource naming rule.",
        "example" : {
          "image" : [ ".jpg", ".png", ".gif", ".jpeg", ".bmp", ".svg", ".ico", ".woff", ".ttf", ".otf" ],
          "binary" : [ ".exe", ".zip" ]
        }
      },
      "AfterTransformation" : {
        "required" : [ "delimiter" ],
        "type" : "object",
        "description" : "The transformation of the `AFTER` type.The transformation removes everything before the specified delimiter and keeps the value after it.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "delimiter" : {
              "type" : "string",
              "description" : "The delimiter of the transformation. The transformation removes everything before this delimiter and keeps everything after it.  \n\n The delimiter itself is not kept. \n\n If several delimiters appear in the initial value, only the first one is used."
            }
          }
        } ]
      },
      "ApplicationId" : {
        "type" : "object",
        "properties" : {
          "transformations" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/TransformationBase"
            }
          },
          "valueOverride" : {
            "type" : "string",
            "description" : "The value to be used instead of the detected value."
          }
        },
        "description" : "The contribution to the service ID calculation from the detected application ID. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field."
      },
      "BeforeTransformation" : {
        "required" : [ "delimiter" ],
        "type" : "object",
        "description" : "The transformation of the `BEFORE` type. \n\nThe transformation keeps the value before the specified delimiter and removes everything after it.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "delimiter" : {
              "type" : "string",
              "description" : "The delimiter of the transformation. The transformation keeps everything before this delimiter and removes everything after it. \n\n The delimiter itself is not kept. \n\nIf several delimiters appear in the initial value, only the first one is used."
            }
          }
        } ]
      },
      "BetweenTransformation" : {
        "required" : [ "after", "before" ],
        "type" : "object",
        "description" : "The transformation of the `BETWEEN` type.The transformation keeps value between the specified delimiters and removes everything outside them.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "after" : {
              "type" : "string",
              "description" : "The starting delimiter. The transformation removes everything before it. The delimiter itself is not kept. "
            },
            "before" : {
              "type" : "string",
              "description" : "The ending delimiter. The transformation removes everything after it. The delimiter itself is not kept."
            }
          }
        } ]
      },
      "CompareOperation" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `EQUALS` -> EqualsCompareOperation \n* `STRING_CONTAINS` -> StringContainsCompareOperation \n* `STARTS_WITH` -> StartsWithCompareOperation \n* `ENDS_WITH` -> EndsWithCompareOperation \n* `EXISTS` -> ExistsCompareOperation \n* `IP_IN_RANGE` -> IpInRangeCompareOperation \n* `LESS_THAN` -> LessThanCompareOperation \n* `GREATER_THAN` -> GreaterThanCompareOperation \n* `INT_EQUALS` -> IntEqualsCompareOperation \n* `STRING_EQUALS` -> StringEqualsCompareOperation \n* `TAG` -> TagCompareOperation \n",
            "enum" : [ "ENDS_WITH", "EQUALS", "EXISTS", "GREATER_THAN", "INT_EQUALS", "IP_IN_RANGE", "LESS_THAN", "STARTS_WITH", "STRING_CONTAINS", "STRING_EQUALS", "TAG" ]
          }
        },
        "description" : "The condition of the rule. \n\nThe actual set of fields depends on the type of the condition. Find the list of actual objects in the description of the **type** field or see [Service detection API - JSON models](https://dt-url.net/2ie3slq).",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "ConditionsFullWebRequestAttributeTypeDto" : {
        "required" : [ "attributeType" ],
        "type" : "object",
        "properties" : {
          "attributeType" : {
            "type" : "string",
            "description" : "The type of the attribute to be checked.",
            "enum" : [ "APPLICATION_ID", "CONTEXT_ROOT", "PG_TAG", "SERVER_NAME", "URL_HOST_NAME", "URL_PATH" ]
          },
          "compareOperations" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of conditions for the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/CompareOperation"
            }
          }
        },
        "description" : "A condition of the service detection rule."
      },
      "ContextRoot" : {
        "type" : "object",
        "properties" : {
          "transformations" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/ContextRootTransformation"
            }
          },
          "segmentsToCopyFromUrlPath" : {
            "type" : "integer",
            "description" : "The number of segments of the URL to be kept. \n\nThe URL is divided by slashes (`/`), the indexing starts with 1 at context root. \n\nFor example, if you specify `2` for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.",
            "format" : "int32"
          }
        },
        "description" : "The contribution to the service ID calculation from the detected context root. \n\n The context root is the first segment of the request URL after server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `support`. \n\nYou have two options: \n* Keep a part of the detected URL. Specify the number of segments to be kept in the **segmentsToCopyFromUrlPath** field. \n* Dynamically transform the detected URL. Specify the transformation parameters in the **transformations** field. \n\nYou can use one or both options. If you use both, the transformation applies to the modified URL."
      },
      "ContextRootTransformation" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `BEFORE` -> BeforeTransformation \n* `REPLACE_BETWEEN` -> ReplaceBetweenTransformation \n* `REMOVE_NUMBERS` -> RemoveNumbersTransformation \n* `REMOVE_CREDIT_CARDS` -> RemoveCreditCardNumbersTransformation \n* `REMOVE_IBANS` -> RemoveIBANsTransformation \n* `REMOVE_IPS` -> RemoveIPsTransformation \n",
            "enum" : [ "BEFORE", "REMOVE_CREDIT_CARDS", "REMOVE_IBANS", "REMOVE_IPS", "REMOVE_NUMBERS", "REPLACE_BETWEEN" ]
          }
        },
        "description" : "Configuration of transformation of the detected value. \n\nIf several transformations are specified, they are handled sequentially from top to bottom. Each transformation is applied to the result of the preceding transformation. For example, the second transformation is applied to the result of the first transformation. \n\nThe actual set of fields depends on the `type` of the transformation.",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "EndsWithCompareOperation" : {
        "required" : [ "values" ],
        "type" : "object",
        "description" : "The condition of the `ENDS_WITH` type. \n\nThe condition checks whether the string value ends with the specified text.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **ends with** into **does not end with**. \n\n If not set, then `false` is used."
            },
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "EqualsCompareOperation" : {
        "required" : [ "values" ],
        "type" : "object",
        "description" : "The condition of the `EQUALS` type. \n\nThe condition checks whether the detected value equals the specified one.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **equals** into **does not equal**. \n\n If not set, then `false` is used."
            },
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "type" : "object"
              }
            }
          }
        } ]
      },
      "ExistsCompareOperation" : {
        "type" : "object",
        "description" : "The condition of the `EXISTS` type. \n\nThe condition checks whether the specified attribute exists.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **exists** into **does not exist**. \n\n If not set, then `false` is used."
            }
          }
        } ]
      },
      "FullWebRequestRule" : {
        "required" : [ "enabled", "name", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the service detection rule."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "managementZones" : {
            "maxItems" : 1,
            "minItems" : 0,
            "type" : "array",
            "description" : "The management zone (specified by the ID) of the process group for which this service detection rule should be created. \n\n You can specify only 1 management zone here.",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the service detection rule.",
            "format" : "uuid"
          },
          "order" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string",
            "description" : "The order of the rule in the rules list. \n\n The rules are evaluated from top to bottom. The first matching rule applies."
          },
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the rule."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the rule."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled(`true`) or disabled (`false`)."
          },
          "conditions" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of conditions of the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/ConditionsFullWebRequestAttributeTypeDto"
            }
          },
          "applicationId" : {
            "$ref" : "#/components/schemas/ApplicationId"
          },
          "contextRoot" : {
            "$ref" : "#/components/schemas/ContextRoot"
          },
          "serverName" : {
            "$ref" : "#/components/schemas/ServerName"
          }
        },
        "description" : "The service detection rule of the `FULL_WEB_REQUEST` type.",
        "example" : {
          "type" : "FULL_WEB_REQUEST",
          "name" : "My sample rule",
          "description" : "REST API example",
          "enabled" : true,
          "managementZones" : [ "zone 1" ],
          "conditions" : [ {
            "attributeType" : "APPLICATION_ID",
            "compareOperations" : [ {
              "type" : "STRING_CONTAINS",
              "invert" : "false",
              "ignoreCase" : "false",
              "values" : [ "value1", "value2" ]
            } ]
          } ],
          "applicationId" : {
            "valueOverride" : "abc"
          },
          "contextRoot" : {
            "segmentsToCopyFromUrlPath" : 2,
            "transformations" : [ {
              "type" : "BEFORE",
              "delimiter" : "/"
            } ]
          },
          "serverName" : {
            "transformations" : [ {
              "type" : "BEFORE",
              "delimiter" : "-"
            } ]
          }
        }
      },
      "GreaterThanCompareOperation" : {
        "required" : [ "value" ],
        "type" : "object",
        "description" : "The condition of the `GREATER_THAN` type. \n\nThe condition checks whether the integer value is greater than the specified value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "description" : "The value to compare to.",
              "format" : "int32"
            }
          }
        } ]
      },
      "IntEqualsCompareOperation" : {
        "required" : [ "values" ],
        "type" : "object",
        "description" : "The condition of the `INT_EQUALS` type. \n\nThe condition checks whether the integer value equals the specified value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **equals** into **does not equal**. \n\n If not set, then `false` is used."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        } ]
      },
      "IpInRangeCompareOperation" : {
        "required" : [ "lower", "upper" ],
        "type" : "object",
        "description" : "The condition of the `IP_IN_RANGE` type. \n\nThe condition checks whether the IP address belongs to a specified range.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **IP is in range** into **IP is not in range**. \n\n If not set, then `false` is used."
            },
            "lower" : {
              "type" : "string",
              "description" : "The lower boundary of the IP range."
            },
            "upper" : {
              "type" : "string",
              "description" : "The upper boundary of the IP range."
            }
          }
        } ]
      },
      "LessThanCompareOperation" : {
        "required" : [ "value" ],
        "type" : "object",
        "description" : "The condition of the `LESS_THAN` type. \n\nThe condition checks whether the integer value is less than the specified value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "description" : "The value to compare to.",
              "format" : "int32"
            }
          }
        } ]
      },
      "RemoveCreditCardNumbersTransformation" : {
        "type" : "object",
        "description" : "The transformation of the `REMOVE_CREDIT_CARDS` type. \n\nThe transformation automatically detects and removes credit card numbers. No additional parameters needed.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        } ]
      },
      "RemoveIBANsTransformation" : {
        "type" : "object",
        "description" : "The transformation of the `REMOVE_IBANS` type. \n\nThe transformation automatically detects and removes International Bank Account Numbers (IBAN). No additional parameters needed.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        } ]
      },
      "RemoveIPsTransformation" : {
        "type" : "object",
        "description" : "The transformation of the `REMOVE_IPS` type. \n\nThe transformation automatically detects and removes IP addresses. No additional parameters needed.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        } ]
      },
      "RemoveNumbersTransformation" : {
        "required" : [ "minDigitCount" ],
        "type" : "object",
        "description" : "The transformation of the `REMOVE_NUMBERS` type. \n\nThe transformation removes any numbers from the detected value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "minDigitCount" : {
              "minimum" : 1,
              "type" : "integer",
              "description" : "Remove numbers that contain at least *X* digits.",
              "format" : "int32"
            },
            "includeHexNumbers" : {
              "type" : "boolean",
              "description" : "Remove (`true`) or keep (`false`) hexadecimal numbers. \n\n If not set, then `false` is used, keeping hexadecimal numbers."
            }
          }
        } ]
      },
      "ReplaceBetweenTransformation" : {
        "required" : [ "after", "before", "replacement" ],
        "type" : "object",
        "description" : "The transformation of the `REPLACE_BETWEEN` type. \n\nThe transformation replaces the content in between specified delimiters with the specified value. The rest of the string remains intact.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "after" : {
              "type" : "string",
              "description" : "The starting delimiter. The transformation replaces everything from here until ending delimiter. The delimiter itself remain intact."
            },
            "before" : {
              "type" : "string",
              "description" : "The ending delimiter. The transformation replaces everything from starting delimiter until here. The delimiter itself remain intact."
            },
            "replacement" : {
              "type" : "string",
              "description" : "The value to be used instead of the content between delimiters."
            }
          }
        } ]
      },
      "ServerName" : {
        "type" : "object",
        "properties" : {
          "transformations" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/TransformationBase"
            }
          },
          "valueOverride" : {
            "type" : "string",
            "description" : "The value to be used instead of the detected value."
          }
        },
        "description" : "The contribution to the service ID calculation from the detected server name. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field."
      },
      "SplitSelectTransformation" : {
        "required" : [ "delimiter", "itemIndex" ],
        "type" : "object",
        "description" : "The transformation of the `SPLIT_SELECT` type. \n\nThe transformation splits the detected value into an array and keeps the specified element of the array.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "delimiter" : {
              "type" : "string",
              "description" : "The delimiter for splitting the detected value. The delimiter itself is not kept."
            },
            "itemIndex" : {
              "minimum" : 1,
              "type" : "integer",
              "description" : "The index of the element in the split array to be used. Indexing starts with `1`.",
              "format" : "int32"
            }
          }
        } ]
      },
      "StartsWithCompareOperation" : {
        "required" : [ "values" ],
        "type" : "object",
        "description" : "The condition of the `STARTS_WITH` type. \n\nThe condition checks whether the string value starts with the specified text.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **starts with** into **does not start with**. \n\n If not set, then `false` is used."
            },
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "StringContainsCompareOperation" : {
        "required" : [ "values" ],
        "type" : "object",
        "description" : "The condition of the `STRING_CONTAINS` type. \n\nThe condition checks whether the string value contains the specified text.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **contains** into **does not contain**. \n\n If not set, then `false` is used."
            },
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "StringEqualsCompareOperation" : {
        "required" : [ "values" ],
        "type" : "object",
        "description" : "The condition of the `STRING_EQUALS` type. \n\nThe condition checks whether the string value equals the specified text.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "negate" : {
              "type" : "boolean",
              "description" : "Inverts the operation of the condition. Set to `true` to turn **equals** into **does not equal**. \n\n If not set, then `false` is used."
            },
            "ignoreCase" : {
              "type" : "boolean",
              "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
            },
            "values" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "TagCompareOperation" : {
        "required" : [ "tags" ],
        "type" : "object",
        "description" : "The condition of the `TAG` type. \n\nThe condition checks if the process group of the potential service is tagged with a specific tag.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompareOperation"
        }, {
          "type" : "object",
          "properties" : {
            "compareKeyOnly" : {
              "type" : "boolean",
              "description" : "If `true` ignores the tag values and only validates that the tag key is matching.\nDefaults to `false`."
            },
            "tags" : {
              "maxItems" : 10,
              "minItems" : 1,
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
              "items" : {
                "$ref" : "#/components/schemas/TagInfo"
              }
            }
          }
        } ]
      },
      "TakeSegmentsTransformation" : {
        "required" : [ "delimiter", "segmentCount" ],
        "type" : "object",
        "description" : "The transformation of the `TAKE_SEGMENTS` type. \n\nThe transformation splits the detected value into an array and keeps the specified number of first or last elements.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TransformationBase"
        }, {
          "type" : "object",
          "properties" : {
            "segmentCount" : {
              "minimum" : 1,
              "type" : "integer",
              "description" : "The number of elements to be kept.",
              "format" : "int32"
            },
            "delimiter" : {
              "type" : "string",
              "description" : "The delimiter for splitting the detected value. The delimiter itself is not kept."
            },
            "takeFromEnd" : {
              "type" : "boolean",
              "description" : "Keeps the first (`false`) or last (`true`) elements. \n\n If not set, then `false` is used, keeping the first elements."
            }
          }
        } ]
      },
      "TransformationBase" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `BEFORE` -> BeforeTransformation \n* `AFTER` -> AfterTransformation \n* `BETWEEN` -> BetweenTransformation \n* `REPLACE_BETWEEN` -> ReplaceBetweenTransformation \n* `REMOVE_NUMBERS` -> RemoveNumbersTransformation \n* `REMOVE_CREDIT_CARDS` -> RemoveCreditCardNumbersTransformation \n* `REMOVE_IBANS` -> RemoveIBANsTransformation \n* `REMOVE_IPS` -> RemoveIPsTransformation \n* `SPLIT_SELECT` -> SplitSelectTransformation \n* `TAKE_SEGMENTS` -> TakeSegmentsTransformation \n",
            "enum" : [ "AFTER", "BEFORE", "BETWEEN", "REMOVE_CREDIT_CARDS", "REMOVE_IBANS", "REMOVE_IPS", "REMOVE_NUMBERS", "REPLACE_BETWEEN", "SPLIT_SELECT", "TAKE_SEGMENTS" ]
          }
        },
        "description" : "Configuration of transformation of the detected value. \n\nIf several transformations are specified, they are handled sequentially from top to bottom. Each transformation is applied to the result of the preceding transformation. For example, the second transformation is applied to the result of the first transformation. \n\nThe actual set of fields depends on the type of the transformation. Find the list of actual objects in the description of the **type** field or see [Service detection API - JSON models](https://dt-url.net/2ie3slq).",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "ConditionsFullWebServiceAttributeTypeDto" : {
        "required" : [ "attributeType" ],
        "type" : "object",
        "properties" : {
          "attributeType" : {
            "type" : "string",
            "description" : "The type of the attribute to be checked.",
            "enum" : [ "APPLICATION_ID", "CONTEXT_ROOT", "FRAMEWORK", "IS_SOAP_SERVICE", "PG_TAG", "SERVER_NAME", "URL_HOST_NAME", "URL_PATH", "WEBSERVICE_METHOD", "WEBSERVICE_NAME", "WEBSERVICE_NAMESPACE" ]
          },
          "compareOperations" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of conditions for the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/CompareOperation"
            }
          }
        },
        "description" : "A condition of the service detection rule."
      },
      "FullWebServiceRule" : {
        "required" : [ "enabled", "name", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the service detection rule."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "managementZones" : {
            "maxItems" : 1,
            "minItems" : 0,
            "type" : "array",
            "description" : "The management zone (specified by the ID) of the process group for which this service detection rule should be created. \n\n You can specify only 1 management zone here.",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the service detection rule.",
            "format" : "uuid"
          },
          "order" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string",
            "description" : "The order of the rule in the rules list. \n\n The rules are evaluated from top to bottom. The first matching rule applies."
          },
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the rule."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the rule."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled(`true`) or disabled (`false`)."
          },
          "conditions" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of conditions of the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/ConditionsFullWebServiceAttributeTypeDto"
            }
          },
          "detectAsWebRequestService" : {
            "type" : "boolean",
            "description" : "Detect the matching requests as full web services (`false`) or web request services (`true`). \n\nSetting this field to `true` prevents detecting of matching requests as full web services. A web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate rule of the `FULL_WEB_REQUEST` type. \n\nDefault is `false`, detecting matching requests as full web services."
          },
          "webServiceName" : {
            "$ref" : "#/components/schemas/WebServiceName"
          },
          "webServiceNameSpace" : {
            "$ref" : "#/components/schemas/WebServiceNameSpace"
          },
          "applicationId" : {
            "$ref" : "#/components/schemas/ApplicationId"
          },
          "contextRoot" : {
            "$ref" : "#/components/schemas/ContextRoot"
          },
          "serverName" : {
            "$ref" : "#/components/schemas/ServerName"
          }
        },
        "description" : "The service detection rule of the `FULL_WEB_SERVICE` type. \n\nIf you have a condition with the **attributeType** set to `FRAMEWORK`, the **values** field from **compareOperations** is limited to the following possible values: \n\n * `AXIS` \n * `CXF` \n * `HESSIAN` \n * `JAX_WS_RI` \n * `JBOSS` \n * `JERSEY` \n * `PROGRESS` \n * `RESTEASY` \n * `RESTLET` \n * `SPRING` \n * `TIBCO` \n * `WEBLOGIC` \n * `WEBMETHODS` \n * `WEBSPHERE` \n * `WINK`",
        "example" : {
          "type" : "FULL_WEB_SERVICE",
          "name" : "My sample rule",
          "description" : "REST API example",
          "enabled" : true,
          "detectAsWebRequestService" : false,
          "managementZones" : [ "zone 1" ],
          "conditions" : [ {
            "attributeType" : "APPLICATION_ID",
            "compareOperations" : [ {
              "type" : "STRING_CONTAINS",
              "invert" : "false",
              "ignoreCase" : "false",
              "values" : [ "value1", "value2" ]
            } ]
          } ],
          "webServiceName" : {
            "valueOverride" : "abc"
          },
          "webServiceNameSpace" : {
            "valueOverride" : "abc"
          },
          "applicationId" : {
            "valueOverride" : "abc"
          },
          "contextRoot" : {
            "segmentsToCopyFromUrlPath" : 2,
            "transformations" : [ {
              "type" : "BEFORE",
              "delimiter" : "/"
            } ]
          },
          "serverName" : {
            "transformations" : [ {
              "type" : "BEFORE",
              "delimiter" : "-"
            } ]
          }
        }
      },
      "WebServiceName" : {
        "type" : "object",
        "properties" : {
          "transformations" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/TransformationBase"
            }
          },
          "valueOverride" : {
            "type" : "string",
            "description" : "The value to be used instead of the detected value."
          }
        },
        "description" : "The contribution to the service ID calculation from the detected web service name. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field."
      },
      "WebServiceNameSpace" : {
        "type" : "object",
        "properties" : {
          "transformations" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/TransformationBase"
            }
          },
          "valueOverride" : {
            "type" : "string",
            "description" : "The value to be used instead of the detected value."
          }
        },
        "description" : "The contribution to the service ID calculation from the detected web service name space. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field."
      },
      "ConditionsOpaqueAndExternalWebRequestAttributeTypeDto" : {
        "required" : [ "attributeType" ],
        "type" : "object",
        "properties" : {
          "attributeType" : {
            "type" : "string",
            "description" : "The type of the attribute to be checked.",
            "enum" : [ "IP", "PG_TAG", "TOP_LEVEL_DOMAIN", "URL", "URL_HOST_NAME", "URL_PATH", "URL_PORT" ]
          },
          "compareOperations" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of conditions for the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/CompareOperation"
            }
          }
        },
        "description" : "A condition of the service detection rule."
      },
      "OpaqueAndExternalWebRequestRule" : {
        "required" : [ "enabled", "name", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the service detection rule."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "managementZones" : {
            "maxItems" : 1,
            "minItems" : 0,
            "type" : "array",
            "description" : "The management zone (specified by the ID) of the process group for which this service detection rule should be created. \n\n You can specify only 1 management zone here.",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the service detection rule.",
            "format" : "uuid"
          },
          "order" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string",
            "description" : "The order of the rule in the rules list. \n\n The rules are evaluated from top to bottom. The first matching rule applies."
          },
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the rule."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the rule."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled(`true`) or disabled (`false`)."
          },
          "conditions" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of conditions of the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/ConditionsOpaqueAndExternalWebRequestAttributeTypeDto"
            }
          },
          "applicationId" : {
            "$ref" : "#/components/schemas/ApplicationId"
          },
          "contextRoot" : {
            "$ref" : "#/components/schemas/ContextRoot"
          },
          "port" : {
            "$ref" : "#/components/schemas/Port"
          },
          "publicDomainName" : {
            "$ref" : "#/components/schemas/PublicDomainName"
          }
        },
        "description" : "The service detection rule of the `OPAQUE_AND_EXTERNAL_WEB_REQUEST` type.",
        "example" : {
          "type" : "OPAQUE_AND_EXTERNAL_WEB_REQUEST",
          "name" : "My sample rule",
          "description" : "REST API example",
          "enabled" : true,
          "managementZones" : [ "zone1" ],
          "conditions" : [ {
            "attributeType" : "URL_HOST_NAME",
            "compareOperations" : [ {
              "type" : "STRING_CONTAINS",
              "ignoreCase" : "false",
              "values" : [ "value1", "value2" ]
            } ]
          } ],
          "applicationId" : {
            "valueOverride" : "abc"
          },
          "contextRoot" : {
            "segmentsToCopyFromUrlPath" : 2,
            "transformations" : [ {
              "type" : "BEFORE",
              "delimiter" : "/"
            } ]
          },
          "port" : {
            "doNotUseForServiceId" : "true"
          },
          "publicDomainName" : {
            "copyFromHostName" : "true",
            "transformations" : [ {
              "type" : "BEFORE",
              "delimiter" : "/"
            } ]
          }
        }
      },
      "Port" : {
        "type" : "object",
        "properties" : {
          "doNotUseForServiceId" : {
            "type" : "boolean",
            "description" : "The port is used (`false`) or isn't used (`true`) in the service ID calculation."
          }
        },
        "description" : "The contribution to the service ID calculation from the port, where the web request has been detected."
      },
      "PublicDomainName" : {
        "type" : "object",
        "properties" : {
          "transformations" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/TransformationBase"
            }
          },
          "valueOverride" : {
            "type" : "string",
            "description" : "The value to be used instead of the detected value."
          },
          "copyFromHostName" : {
            "type" : "boolean",
            "description" : "Use (`true`) or don't use (`false`) the detected host name as base for transformation. \n\n Not applicable if the override is specified."
          }
        },
        "description" : "The contribution to the service ID calculation from the domain name where the web request has been detected. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field."
      },
      "ConditionsOpaqueAndExternalWebServiceAttributeTypeDto" : {
        "required" : [ "attributeType" ],
        "type" : "object",
        "properties" : {
          "attributeType" : {
            "type" : "string",
            "description" : "The type of the attribute to be checked.",
            "enum" : [ "ENDPOINT", "IP", "OPERATION_NAME", "PG_TAG", "URL_PATH", "URL_PORT" ]
          },
          "compareOperations" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of conditions for the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/CompareOperation"
            }
          }
        },
        "description" : "A condition of the service detection rule."
      },
      "OpaqueAndExternalWebServiceRule" : {
        "required" : [ "enabled", "name", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the service detection rule."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "managementZones" : {
            "maxItems" : 1,
            "minItems" : 0,
            "type" : "array",
            "description" : "The management zone (specified by the ID) of the process group for which this service detection rule should be created. \n\n You can specify only 1 management zone here.",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the service detection rule.",
            "format" : "uuid"
          },
          "order" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string",
            "description" : "The order of the rule in the rules list. \n\n The rules are evaluated from top to bottom. The first matching rule applies."
          },
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the rule."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the rule."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The rule is enabled(`true`) or disabled (`false`)."
          },
          "conditions" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of conditions of the rule. \n\nIf several conditions are specified, the AND logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/ConditionsOpaqueAndExternalWebServiceAttributeTypeDto"
            }
          },
          "detectAsWebRequestService" : {
            "type" : "boolean",
            "description" : "Detect the matching requests as web services (`false`) or web request services (`true`). \n\nSetting this field to `true` prevents detecting of matching requests as opaque web services. An opaque web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate rule of the `OPAQUE_AND_EXTERNAL_WEB_REQUEST` type. \n\nDefault is `false`, detecting matching requests as opaque web services."
          },
          "urlPath" : {
            "$ref" : "#/components/schemas/UrlPath"
          },
          "port" : {
            "$ref" : "#/components/schemas/Port"
          }
        },
        "description" : "The service detection rule of the `OPAQUE_AND_EXTERNAL_WEB_SERVICE` type",
        "example" : {
          "type" : "OPAQUE_AND_EXTERNAL_WEB_SERVICE",
          "name" : "My sample rule",
          "description" : "REST API example",
          "enabled" : true,
          "detectAsWebRequestService" : false,
          "managementZones" : [ "zone 1" ],
          "conditions" : [ {
            "attributeType" : "URL_PATH",
            "compareOperations" : [ {
              "type" : "STRING_CONTAINS",
              "invert" : "false",
              "ignoreCase" : "false",
              "values" : [ "value1", "value2" ]
            } ]
          } ],
          "urlPath" : {
            "valueOverride" : "abc"
          },
          "port" : {
            "doNotUseForServiceId" : "true"
          }
        }
      },
      "UrlPath" : {
        "type" : "object",
        "properties" : {
          "transformations" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "Transformations to be applied to the detected value.",
            "items" : {
              "$ref" : "#/components/schemas/TransformationBase"
            }
          },
          "valueOverride" : {
            "type" : "string",
            "description" : "The value to be used instead of the detected value."
          }
        },
        "description" : "The contribution from the URL, where the web request has been detected, into service ID calculation. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field."
      },
      "SymbolFilePinning" : {
        "required" : [ "pinned" ],
        "type" : "object",
        "properties" : {
          "pinned" : {
            "type" : "boolean",
            "description" : "New setting for file pinning. True to pin the file, false to unpin the file"
          }
        }
      },
      "AppIdentifier" : {
        "required" : [ "versionCode", "versionName" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id where the file belongs to"
          },
          "versionCode" : {
            "type" : "string",
            "description" : "The version code (Android) / bundle version (iOS) the file belongs to"
          },
          "versionName" : {
            "type" : "string",
            "description" : "The version name (Android) / bundle versions string (iOS) the file belongs to"
          },
          "packageName" : {
            "type" : "string",
            "description" : "The bundleId (iOS) or package name (Android) the file belongs to"
          },
          "os" : {
            "type" : "string",
            "description" : "The operating system where the file belongs to",
            "enum" : [ "ANDROID", "IOS", "TVOS" ]
          }
        },
        "description" : "The appId, the app version and the bundle id which uniquely identify the app"
      },
      "SymbolFile" : {
        "type" : "object",
        "properties" : {
          "applicationName" : {
            "type" : "string",
            "description" : "The name of the application this file belongs to"
          },
          "size" : {
            "type" : "integer",
            "description" : "The size of the file in KB",
            "format" : "int32"
          },
          "appId" : {
            "$ref" : "#/components/schemas/AppIdentifier"
          },
          "uploadTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the upload time of the file, in UTC milliseconds",
            "format" : "int64"
          },
          "pinned" : {
            "type" : "boolean",
            "description" : "Is the file pinned and therefore cannot be deleted."
          }
        }
      },
      "SymbolFileList" : {
        "type" : "object",
        "properties" : {
          "symbolFiles" : {
            "type" : "array",
            "description" : "A list of symbolication files.",
            "items" : {
              "$ref" : "#/components/schemas/SymbolFile"
            }
          }
        }
      },
      "SymbolFileClientLinkDto" : {
        "required" : [ "dssClientUrl" ],
        "type" : "object",
        "properties" : {
          "dssClientUrl" : {
            "type" : "string",
            "description" : "A download link for the latest compatible version of the DTXDssClient."
          }
        }
      },
      "SymbolFileStorageInfo" : {
        "type" : "object",
        "properties" : {
          "usedStorage" : {
            "type" : "integer",
            "description" : "The size of the used storage by symbolication files in KB",
            "format" : "int64"
          },
          "availableStorage" : {
            "type" : "integer",
            "description" : "The storage space still empty which can be used for symbolication files in KB, -1 if quota is set to 'unlimited'",
            "format" : "int64"
          },
          "storageQuota" : {
            "type" : "integer",
            "description" : "The total storage quota available on this tenant for symbolication files in KB, -1 if quota is set to 'unlimited'",
            "format" : "int64"
          },
          "fileCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "SupportedVersion" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "description" : "The supported iOS file format version."
          }
        }
      },
      "CloudSupportedService" : {
        "required" : [ "cloudProviderServiceType", "displayName", "entityType", "name" ],
        "type" : "object",
        "properties" : {
          "cloudProviderServiceType" : {
            "type" : "string",
            "description" : "Name of service used by cloud provider."
          },
          "name" : {
            "type" : "string",
            "description" : "Service unique name used by Dynatrace. "
          },
          "entityType" : {
            "type" : "string",
            "description" : "Entity type monitored by this service"
          },
          "displayName" : {
            "type" : "string",
            "description" : "Display name for service on Dynatrace UI"
          }
        },
        "description" : "A supported service metadata"
      },
      "CloudSupportedServicesList" : {
        "type" : "object",
        "properties" : {
          "services" : {
            "type" : "array",
            "description" : "List of supported services metadata",
            "items" : {
              "$ref" : "#/components/schemas/CloudSupportedService"
            }
          }
        },
        "description" : "A supported services metadata list"
      },
      "AwsIamToken" : {
        "required" : [ "token" ],
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "The external ID token for setting IAM Role in AWS."
          }
        },
        "description" : "The external ID token for setting IAM Role in AWS."
      },
      "AwsAuthenticationData" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the authentication: role-based or key-based.",
            "enum" : [ "KEYS", "ROLE" ]
          },
          "keyBasedAuthentication" : {
            "$ref" : "#/components/schemas/KeyBasedAuthentication"
          },
          "roleBasedAuthentication" : {
            "$ref" : "#/components/schemas/RoleBasedAuthentication"
          }
        },
        "description" : "A credentials for the AWS authentication."
      },
      "AwsConfigTag" : {
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The key of the AWS tag."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the AWS tag."
          }
        },
        "description" : "An AWS tag of the resource to be monitored."
      },
      "AwsCredentialsConfig" : {
        "required" : [ "authenticationData", "label", "partitionType", "taggedOnly", "tagsToMonitor" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the credentials.",
            "readOnly" : true
          },
          "connectionStatus" : {
            "type" : "string",
            "description" : "The status of the connection to the AWS environment. \n\n * `CONNECTED`: There was a connection within last 10 minutes. \n* `DISCONNECTED`: A problem occurred with establishing connection using these credentials. Check whether the data is correct. \n* `UNINITIALIZED`: The successful connection has never been established for these credentials.",
            "readOnly" : true,
            "enum" : [ "CONNECTED", "DISCONNECTED", "UNINITIALIZED" ]
          },
          "label" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the credentials."
          },
          "partitionType" : {
            "type" : "string",
            "description" : "The type of the AWS partition.",
            "enum" : [ "AWS_CN", "AWS_DEFAULT", "AWS_US_GOV" ]
          },
          "authenticationData" : {
            "$ref" : "#/components/schemas/AwsAuthenticationData"
          },
          "taggedOnly" : {
            "type" : "boolean",
            "description" : "Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)."
          },
          "tagsToMonitor" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of AWS tags to be monitored. \n\nYou can specify up to 10 tags. \n\nOnly applicable when the **taggedOnly** parameter is set to `true`.",
            "items" : {
              "$ref" : "#/components/schemas/AwsConfigTag"
            }
          },
          "supportingServicesToMonitor" : {
            "type" : "array",
            "description" : "**Deprecated**. To manage services use [/aws/credentials/{id}/services](https://dt-url.net/l022s6v) operation. Built-in services are not supported here.\n\nA list of AWS services to be monitored. Available services are listed by [/aws/supportedServices](https://dt-url.net/me02sh2) operation.\n\nFor each service, a list of metrics and dimensions can be specified. A list of supported metrics and dimensions for a given service can be checked in [documentation](https://dt-url.net/r12v0pkl).\n\nList of metrics can be skipped (set to null), resulting in recommended (default) set of metrics and dimensions being chosen for monitoring. ",
            "items" : {
              "$ref" : "#/components/schemas/AwsSupportingServiceConfig"
            }
          }
        },
        "description" : "Configuration of an AWS credentials."
      },
      "AwsSupportingServiceConfig" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the service. Valid supported service names can be discovered using /aws/supportedServices restAPI"
          },
          "monitoredMetrics" : {
            "type" : "array",
            "description" : "A list of metrics to be monitored for this service. If the list is null then recommended list of metrics for this service will be monitored.",
            "items" : {
              "$ref" : "#/components/schemas/AwsSupportingServiceMetric"
            }
          }
        },
        "description" : "A service to be monitored."
      },
      "AwsSupportingServiceMetric" : {
        "required" : [ "dimensions", "name", "statistic" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the metric of the service."
          },
          "statistic" : {
            "type" : "string",
            "description" : "The statistic (aggregation) to be used for the metric. AVG_MIN_MAX value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM",
            "enum" : [ "AVERAGE", "AVG_MIN_MAX", "MAXIMUM", "MINIMUM", "SAMPLE_COUNT", "SUM" ]
          },
          "dimensions" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of metric's dimensions names.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A metric of service to be monitored."
      },
      "KeyBasedAuthentication" : {
        "required" : [ "accessKey", "secretKey" ],
        "type" : "object",
        "properties" : {
          "accessKey" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The ID of the access key."
          },
          "secretKey" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The secret access key."
          }
        },
        "description" : "The credentials for the key-based authentication."
      },
      "RoleBasedAuthentication" : {
        "required" : [ "accountId", "iamRole" ],
        "type" : "object",
        "properties" : {
          "iamRole" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The IAM role to be used by Dynatrace to get monitoring data."
          },
          "accountId" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The ID of the Amazon account."
          },
          "externalId" : {
            "type" : "string",
            "description" : "The external ID token for setting an IAM role. \n\n You can obtain it with the `GET /aws/iamExternalId` request.",
            "readOnly" : true
          }
        },
        "description" : "The credentials for the role-based authentication."
      },
      "AwsMonitoredServicesDto" : {
        "required" : [ "services" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "services" : {
            "type" : "array",
            "description" : "A list of AWS services to be monitored. Available services are listed by [/aws/supportedServices](https://dt-url.net/me02sh2) operation.\n\nFor each service, a list of metrics and dimensions can be specified. A list of supported metrics and dimensions for a given service can be checked in [documentation](https://dt-url.net/r12v0pkl).\n\nList of metrics can be skipped (set to null), resulting in recommended (default) set of metrics and dimensions being chosen for monitoring. For built-in services, adjusting the list of metrics is not supported, therefore it needs to be null.",
            "items" : {
              "$ref" : "#/components/schemas/AwsSupportingServiceConfig"
            }
          }
        }
      },
      "AllowlistedAwsAccount" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "maxLength" : 12,
            "minLength" : 12,
            "pattern" : "[0-9]*",
            "type" : "string",
            "description" : "The AWS account id to allowlist"
          }
        }
      },
      "AllowlistedAwsAccountList" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AllowlistedAwsAccount"
            }
          }
        }
      },
      "AwsPrivateLinkConfig" : {
        "required" : [ "enabled" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "Is AWS PrivateLink enabled"
          },
          "vpcEndpointServiceName" : {
            "type" : "string",
            "description" : "The VirtualPrivateCluster-service name",
            "readOnly" : true
          }
        }
      },
      "AzureCredentialsCreation" : {
        "required" : [ "appId", "autoTagging", "directoryId", "key", "label", "monitorOnlyTaggedEntities" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the Azure credentials configuration.",
            "readOnly" : true
          },
          "label" : {
            "minLength" : 1,
            "pattern" : "^([a-zA-Z0-9_ +-.]*)$",
            "type" : "string",
            "description" : "The unique name of the Azure credentials configuration. \n\nAllowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed."
          },
          "appId" : {
            "type" : "string",
            "description" : "The application ID (also referred to as client ID).\n\n The field is **required** when creating a new credentials configuration. \n\n The field is ignored during an update, the old value remains unaffected."
          },
          "directoryId" : {
            "type" : "string",
            "description" : "The directory ID (also referred to as tenant ID).\n\n The field is **required** when creating a new credentials configuration. \n\n The field is ignored during an update, the old value remains unaffected."
          },
          "key" : {
            "type" : "string",
            "description" : "The secret key associated with the application ID. \n\nFor security reasons, GET requests return this field as `null`. \n\n Submit your key on creation or update of the configuration. \n\n The field is **required** when creating a new credentials configuration. If the field is omitted during an update, the old value remains unaffected."
          },
          "active" : {
            "type" : "boolean",
            "description" : "The monitoring is enabled (`true`) or disabled (`false`). \n\nIf not set on creation, the `true` value is used. \n\nIf the field is omitted during an update, the old value remains unaffected."
          },
          "autoTagging" : {
            "type" : "boolean",
            "description" : "The automatic capture of Azure tags is on (`true`) or off (`false`)."
          },
          "monitorOnlyTaggedEntities" : {
            "type" : "boolean",
            "description" : "Monitor only resources that have specified Azure tags (`true`) or all resources (`false`)."
          },
          "monitorOnlyTagPairs" : {
            "maxItems" : 20,
            "minItems" : 0,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of Azure tags to be monitored. \n\nYou can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored. \n\nOnly applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.",
            "items" : {
              "$ref" : "#/components/schemas/CloudTag"
            }
          },
          "monitorOnlyExcludingTagPairs" : {
            "maxItems" : 20,
            "minItems" : 0,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of Azure tags to be excluded from monitoring. \n\nYou can specify up to 20 tags. A resource tagged with *any* of the specified tags will not be monitored. \n\nOnly applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.",
            "items" : {
              "$ref" : "#/components/schemas/CloudTag"
            }
          },
          "supportingServices" : {
            "type" : "array",
            "description" : "**Deprecated**. To manage services use [/azure/credentials/{id}/services](https://dt-url.net/1w62s27) operation. Built-in services are not supported here.\n\nA list of Azure services to be monitored. Available services are listed by [/azure/supportedServices](https://dt-url.net/wt42sdq) operation.\n\nFor each service, a list of metrics and dimensions can be specified. A list of supported metrics and dimensions for a given service can be checked in [documentation](https://dt-url.net/kx2351b).\n\nList of metrics can be skipped (set to null), resulting in recommended (default) set of metrics and dimensions being chosen for monitoring. ",
            "items" : {
              "$ref" : "#/components/schemas/AzureSupportingService"
            }
          }
        },
        "description" : "Configuration of Azure app-level credentials."
      },
      "AzureMonitoredMetric" : {
        "required" : [ "dimensions", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the metric of the service."
          },
          "dimensions" : {
            "type" : "array",
            "description" : "A list of metric's dimensions names. It must include all the recommended dimensions.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A metric of service to be monitored."
      },
      "AzureSupportingService" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the service. Valid supported service names can be discovered using /azure/supportedServices restAPI"
          },
          "monitoredMetrics" : {
            "type" : "array",
            "description" : "A list of metrics to be monitored for this service. It must include all the recommended metrics. If the list is null then recommended list of metrics for this service will be monitored.",
            "items" : {
              "$ref" : "#/components/schemas/AzureMonitoredMetric"
            }
          }
        },
        "description" : "A service to be monitored."
      },
      "CloudTag" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the tag."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the tag. \n\n If set to `null`, then resources with any value of the tag are monitored."
          }
        },
        "description" : "A cloud tag."
      },
      "AzureCredentials" : {
        "required" : [ "autoTagging", "label", "monitorOnlyTaggedEntities" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the Azure credentials configuration.",
            "readOnly" : true
          },
          "label" : {
            "minLength" : 1,
            "pattern" : "^([a-zA-Z0-9_ +-.]*)$",
            "type" : "string",
            "description" : "The unique name of the Azure credentials configuration. \n\nAllowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed."
          },
          "appId" : {
            "type" : "string",
            "description" : "The application ID (also referred to as client ID).\n\n The field is **required** when creating a new credentials configuration. \n\n The field is ignored during an update, the old value remains unaffected."
          },
          "directoryId" : {
            "type" : "string",
            "description" : "The directory ID (also referred to as tenant ID).\n\n The field is **required** when creating a new credentials configuration. \n\n The field is ignored during an update, the old value remains unaffected."
          },
          "key" : {
            "type" : "string",
            "description" : "The secret key associated with the application ID. \n\nFor security reasons, GET requests return this field as `null`. \n\n Submit your key on creation or update of the configuration. \n\n The field is **required** when creating a new credentials configuration. If the field is omitted during an update, the old value remains unaffected."
          },
          "active" : {
            "type" : "boolean",
            "description" : "The monitoring is enabled (`true`) or disabled (`false`). \n\nIf not set on creation, the `true` value is used. \n\nIf the field is omitted during an update, the old value remains unaffected."
          },
          "autoTagging" : {
            "type" : "boolean",
            "description" : "The automatic capture of Azure tags is on (`true`) or off (`false`)."
          },
          "monitorOnlyTaggedEntities" : {
            "type" : "boolean",
            "description" : "Monitor only resources that have specified Azure tags (`true`) or all resources (`false`)."
          },
          "monitorOnlyTagPairs" : {
            "maxItems" : 20,
            "minItems" : 0,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of Azure tags to be monitored. \n\nYou can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored. \n\nOnly applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.",
            "items" : {
              "$ref" : "#/components/schemas/CloudTag"
            }
          },
          "monitorOnlyExcludingTagPairs" : {
            "maxItems" : 20,
            "minItems" : 0,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of Azure tags to be excluded from monitoring. \n\nYou can specify up to 20 tags. A resource tagged with *any* of the specified tags will not be monitored. \n\nOnly applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.",
            "items" : {
              "$ref" : "#/components/schemas/CloudTag"
            }
          },
          "supportingServices" : {
            "type" : "array",
            "description" : "**Deprecated**. To manage services use [/azure/credentials/{id}/services](https://dt-url.net/1w62s27) operation. Built-in services are not supported here.\n\nA list of Azure services to be monitored. Available services are listed by [/azure/supportedServices](https://dt-url.net/wt42sdq) operation.\n\nFor each service, a list of metrics and dimensions can be specified. A list of supported metrics and dimensions for a given service can be checked in [documentation](https://dt-url.net/kx2351b).\n\nList of metrics can be skipped (set to null), resulting in recommended (default) set of metrics and dimensions being chosen for monitoring. ",
            "items" : {
              "$ref" : "#/components/schemas/AzureSupportingService"
            }
          }
        },
        "description" : "Configuration of Azure app-level credentials."
      },
      "AzureMonitoredServicesDto" : {
        "required" : [ "services" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "services" : {
            "type" : "array",
            "description" : "A list of Azure services to be monitored. Available services are listed by [/azure/supportedServices](https://dt-url.net/wt42sdq) operation.\n\nFor each service, a list of metrics and dimensions can be specified. A list of supported metrics and dimensions for a given service can be checked in [documentation](https://dt-url.net/kx2351b).\n\nList of metrics can be skipped (set to null), resulting in recommended (default) set of metrics and dimensions being chosen for monitoring. For built-in services, adjusting the list of metrics is not supported, therefore it needs to be null.",
            "items" : {
              "$ref" : "#/components/schemas/AzureSupportingService"
            }
          }
        }
      },
      "CloudFoundryCredentials" : {
        "required" : [ "apiUrl", "loginUrl", "name", "username" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the given credentials configuration.",
            "readOnly" : true
          },
          "active" : {
            "type" : "boolean",
            "description" : "The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration. \n\nIf not set on creation, the `true` value is used. \n\nIf the field is omitted during an update, the old value remains unaffected."
          },
          "endpointStatus" : {
            "type" : "string",
            "description" : "The status of the configured endpoint.\n\nASSIGNED: The credentials are assigned to an ActiveGate which is responsible for processing.\nUNASSIGNED: The credentials are not yet assigned to an ActiveGate so there is currently no processing.\nDISABLED: The credentials have been disabled by the user.\nFASTCHECK_AUTH_ERROR: The credentials are invalid.\nFASTCHECK_TLS_ERROR: The endpoint TLS certificate is invalid.\nFASTCHECK_NO_RESPONSE: The endpoint did not return a result until the timeout was reached.\nFASTCHECK_INVALID_ENDPOINT: The endpoint URL was invalid.\nFASTCHECK_AUTH_LOCKED: The credentials seem to be locked.\nUNKNOWN: An unknown error occured.\n",
            "readOnly" : true,
            "enum" : [ "ASSIGNED", "DISABLED", "FASTCHECK_AUTH_ERROR", "FASTCHECK_AUTH_LOCKED", "FASTCHECK_INVALID_ENDPOINT", "FASTCHECK_LOW_MEMORY_ERROR", "FASTCHECK_NO_RESPONSE", "FASTCHECK_TLS_ERROR", "UNASSIGNED", "UNKNOWN" ]
          },
          "endpointStatusInfo" : {
            "type" : "string",
            "description" : "The detailed status info of the configured endpoint.",
            "readOnly" : true
          },
          "name" : {
            "minLength" : 1,
            "pattern" : "^([a-zA-Z0-9_ +-.]*)$",
            "type" : "string",
            "description" : "The name of the Cloud Foundry foundation credentials. \n\nAllowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed."
          },
          "apiUrl" : {
            "type" : "string",
            "description" : "The URL of the Cloud Foundry foundation credentials. \n\nThe URL must be valid according to RFC 2396. \n\nLeading or trailing whitespaces are not allowed."
          },
          "loginUrl" : {
            "type" : "string",
            "description" : "The login URL of the Cloud Foundry foundation credentials. \n\nThe URL must be valid according to RFC 2396. \n\nLeading or trailing whitespaces are not allowed."
          },
          "username" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The username of the Cloud Foundry foundation credentials. \n\nLeading and trailing whitespaces are not allowed."
          },
          "password" : {
            "type" : "string",
            "description" : "The password of the Cloud Foundry foundation credentials."
          }
        },
        "description" : "Configuration for specific Cloud Foundry credentials."
      },
      "KubernetesCredentials" : {
        "required" : [ "endpointUrl", "label" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the given credentials configuration.",
            "readOnly" : true
          },
          "active" : {
            "type" : "boolean",
            "description" : "The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration. \n\nIf not set on creation, the `true` value is used. \n\nIf the field is omitted during an update, the old value remains unaffected."
          },
          "endpointStatus" : {
            "type" : "string",
            "description" : "The status of the configured endpoint.\n\nASSIGNED: The credentials are assigned to an ActiveGate which is responsible for processing.\nUNASSIGNED: The credentials are not yet assigned to an ActiveGate so there is currently no processing.\nDISABLED: The credentials have been disabled by the user.\nFASTCHECK_AUTH_ERROR: The credentials are invalid.\nFASTCHECK_TLS_ERROR: The endpoint TLS certificate is invalid.\nFASTCHECK_NO_RESPONSE: The endpoint did not return a result until the timeout was reached.\nFASTCHECK_INVALID_ENDPOINT: The endpoint URL was invalid.\nFASTCHECK_AUTH_LOCKED: The credentials seem to be locked.\nUNKNOWN: An unknown error occured.\n",
            "readOnly" : true,
            "enum" : [ "ASSIGNED", "DISABLED", "FASTCHECK_AUTH_ERROR", "FASTCHECK_AUTH_LOCKED", "FASTCHECK_INVALID_ENDPOINT", "FASTCHECK_LOW_MEMORY_ERROR", "FASTCHECK_NO_RESPONSE", "FASTCHECK_TLS_ERROR", "UNASSIGNED", "UNKNOWN" ]
          },
          "endpointStatusInfo" : {
            "type" : "string",
            "description" : "The detailed status info of the configured endpoint.",
            "readOnly" : true
          },
          "label" : {
            "minLength" : 1,
            "pattern" : "^([a-zA-Z0-9_ +-.]*)$",
            "type" : "string",
            "description" : "The name of the Kubernetes credentials configuration. \n\nAllowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed."
          },
          "endpointUrl" : {
            "type" : "string",
            "description" : "The URL of the Kubernetes API server. \n\nIt must be unique within a Dynatrace environment. \n\nThe URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed."
          },
          "authToken" : {
            "type" : "string",
            "description" : "The service account bearer token for the Kubernetes API server. \n\nSubmit your token on creation or update of the configuration. For security reasons, GET requests return this field as `null`. \n\nIf the field is omitted during an update, the old value remains unaffected."
          },
          "activeGateGroup" : {
            "type" : "string",
            "description" : "Active Gate group to filter active gates for this credentials."
          },
          "eventsIntegrationEnabled" : {
            "type" : "boolean",
            "description" : "The monitoring of events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true. \n\nIf not set on creation, the `false` value is used. \n\nIf the field is omitted during an update, the old value remains unaffected."
          },
          "eventAnalysisAndAlertingEnabled" : {
            "type" : "boolean",
            "description" : "[Deprecated] With 1.240 the EA events monitoring has been deprecated and replaced by the events GA version which obsoletes this property.\n\nCorresponds to the value of `eventsIntegrationEnabled`.\n\n\n\n The field is ignored during an update, the old value remains unaffected."
          },
          "workloadIntegrationEnabled" : {
            "type" : "boolean",
            "description" : "Workload and cloud application processing is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected."
          },
          "prometheusExportersIntegrationEnabled" : {
            "type" : "boolean",
            "description" : "Prometheus exporters integration is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected."
          },
          "davisEventsIntegrationEnabled" : {
            "type" : "boolean",
            "description" : "Inclusion of all Davis relevant events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected."
          },
          "eventsFieldSelectors" : {
            "maxItems" : 20,
            "minItems" : 0,
            "type" : "array",
            "description" : "Kubernetes event filters based on field-selectors. If set to `null` on creation, no events field selectors are subscribed. If set to `null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.",
            "items" : {
              "$ref" : "#/components/schemas/KubernetesEventPattern"
            }
          },
          "certificateCheckEnabled" : {
            "type" : "boolean",
            "description" : "The check of SSL certificates is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. \n\nIf not set on creation, the `true` value is used. \n\nIf the field is omitted during an update, the old value remains unaffected."
          }
        },
        "description" : "Configuration for specific Kubernetes credentials.",
        "example" : {
          "id" : "KUBERNETES_CLUSTER-CC06304728FC9396",
          "label" : "K8s credentials - REST example",
          "endpointUrl" : "https://k8s-api.sample.org",
          "eventsFieldSelectors" : [ {
            "label" : "Node events",
            "fieldSelector" : "involvedObject.kind=Node",
            "active" : true
          } ],
          "workloadIntegrationEnabled" : true,
          "eventsIntegrationEnabled" : true,
          "eventAnalysisAndAlertingEnabled" : true,
          "authToken" : "abcd9876",
          "activeGateGroup" : "group-1",
          "active" : true,
          "certificateCheckEnabled" : true,
          "hostnameVerificationEnabled" : true,
          "prometheusExportersIntegrationEnabled" : true,
          "davisEventsIntegrationEnabled" : true
        }
      },
      "KubernetesEventPattern" : {
        "required" : [ "active", "fieldSelector", "label" ],
        "type" : "object",
        "properties" : {
          "label" : {
            "minLength" : 1,
            "pattern" : "^([a-zA-Z0-9_ +-.]*)$",
            "type" : "string",
            "description" : "A label of the events field selector."
          },
          "fieldSelector" : {
            "pattern" : "[\\w\\.]+((=){1,2}|(!=))[\\w]([\\.\\-\\w]*[\\w])?(,[\\w\\.]+((=){1,2}|(!=))[\\w]([\\.\\-\\w]*[\\w])?){0,9}",
            "type" : "string",
            "description" : "The field selector string (url decoding is applied) when storing it."
          },
          "active" : {
            "type" : "boolean",
            "description" : "Whether subscription to this events field selector is enabled (value set to `true`). If disabled (value set to `false`), Dynatrace will stop fetching events from the Kubernetes API for this events field selector"
          }
        },
        "description" : "Represents a single Kubernetes events field selector (=event filter based on the K8s field selector)."
      },
      "KubernetesConfigShortRepresentation" : {
        "required" : [ "endpointUrl", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the Dynatrace entity."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity.",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the Dynatrace entity.",
            "readOnly" : true
          },
          "endpointUrl" : {
            "type" : "string",
            "description" : "The URL of the Kubernetes API server. \n\nIt must be unique within a Dynatrace environment. \n\nThe URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed."
          }
        },
        "description" : "The short representation of a kubernetes configuration."
      },
      "KubernetesConfigStubListDto" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KubernetesConfigShortRepresentation"
            }
          }
        }
      },
      "MaintenanceWindow" : {
        "required" : [ "description", "name", "schedule", "suppression", "type" ],
        "type" : "object",
        "properties" : {
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the maintenance window.",
            "format" : "uuid"
          },
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of the maintenance window, displayed in the UI."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the maintenance purpose."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the maintenance: planned or unplanned.",
            "enum" : [ "PLANNED", "UNPLANNED" ]
          },
          "suppression" : {
            "type" : "string",
            "description" : "The type of suppression of alerting and problem detection during the maintenance.",
            "enum" : [ "DETECT_PROBLEMS_AND_ALERT", "DETECT_PROBLEMS_DONT_ALERT", "DONT_DETECT_PROBLEMS" ]
          },
          "suppressSyntheticMonitorsExecution" : {
            "type" : "boolean",
            "description" : "Suppress execution of synthetic monitors during the maintenance."
          },
          "scope" : {
            "$ref" : "#/components/schemas/Scope"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          }
        },
        "description" : "Configuration of a maintenance window.",
        "example" : {
          "metadata" : {
            "configurationVersions" : [ 4, 2 ],
            "clusterVersion" : "Mock version"
          },
          "name" : "Example Window",
          "description" : "An example Maintenance window",
          "type" : "UNPLANNED",
          "suppression" : "DETECT_PROBLEMS_AND_ALERT",
          "suppressSyntheticMonitorsExecution" : "true",
          "scope" : {
            "entities" : [ "HOST-0000000000123456" ],
            "matches" : [ {
              "type" : "HOST",
              "mzId" : "123456789",
              "tags" : [ {
                "key" : "testkey",
                "value" : "testvalue",
                "context" : "AWS"
              } ],
              "tagCombination" : "AND"
            } ]
          },
          "schedule" : {
            "recurrenceType" : "MONTHLY",
            "recurrence" : {
              "dayOfMonth" : "23",
              "startTime" : "16:28",
              "durationMinutes" : "60"
            },
            "start" : "2018-08-02 00:00",
            "end" : "2019-02-27 00:00",
            "zoneId" : "Europe/Vienna"
          }
        }
      },
      "MonitoredEntityFilter" : {
        "required" : [ "tags" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the Dynatrace entities (for example, hosts or services) you want to pick up by matching.",
            "enum" : [ "APM_SECURITY_GATEWAY", "APPLICATION", "APPLICATION_METHOD", "APPLICATION_METHOD_GROUP", "APPMON_SERVER", "APPMON_SYSTEM_PROFILE", "AUTO_SCALING_GROUP", "AUXILIARY_SYNTHETIC_TEST", "AWS_APPLICATION_LOAD_BALANCER", "AWS_AVAILABILITY_ZONE", "AWS_CREDENTIALS", "AWS_LAMBDA_FUNCTION", "AWS_NETWORK_LOAD_BALANCER", "AZURE_API_MANAGEMENT_SERVICE", "AZURE_APPLICATION_GATEWAY", "AZURE_COSMOS_DB", "AZURE_CREDENTIALS", "AZURE_EVENT_HUB", "AZURE_EVENT_HUB_NAMESPACE", "AZURE_FUNCTION_APP", "AZURE_IOT_HUB", "AZURE_LOAD_BALANCER", "AZURE_MGMT_GROUP", "AZURE_REDIS_CACHE", "AZURE_REGION", "AZURE_SERVICE_BUS_NAMESPACE", "AZURE_SERVICE_BUS_QUEUE", "AZURE_SERVICE_BUS_TOPIC", "AZURE_SQL_DATABASE", "AZURE_SQL_ELASTIC_POOL", "AZURE_SQL_SERVER", "AZURE_STORAGE_ACCOUNT", "AZURE_SUBSCRIPTION", "AZURE_TENANT", "AZURE_VM", "AZURE_VM_SCALE_SET", "AZURE_WEB_APP", "CF_APPLICATION", "CF_FOUNDATION", "CINDER_VOLUME", "CLOUD_APPLICATION", "CLOUD_APPLICATION_INSTANCE", "CLOUD_APPLICATION_NAMESPACE", "CLOUD_NETWORK_INGRESS", "CLOUD_NETWORK_POLICY", "CONTAINER_GROUP", "CONTAINER_GROUP_INSTANCE", "CUSTOM_APPLICATION", "CUSTOM_DEVICE", "CUSTOM_DEVICE_GROUP", "DCRUM_APPLICATION", "DCRUM_SERVICE", "DCRUM_SERVICE_INSTANCE", "DEVICE_APPLICATION_METHOD", "DISK", "DOCKER_CONTAINER_GROUP", "DOCKER_CONTAINER_GROUP_INSTANCE", "DYNAMO_DB_TABLE", "EBS_VOLUME", "EC2_INSTANCE", "ELASTIC_LOAD_BALANCER", "ENVIRONMENT", "EXTERNAL_SYNTHETIC_TEST_STEP", "GCP_ZONE", "GEOLOCATION", "GEOLOC_SITE", "GOOGLE_COMPUTE_ENGINE", "HOST", "HOST_GROUP", "HTTP_CHECK", "HTTP_CHECK_STEP", "HYPERVISOR", "KUBERNETES_CLUSTER", "KUBERNETES_NODE", "KUBERNETES_SERVICE", "MOBILE_APPLICATION", "NETWORK_INTERFACE", "NEUTRON_SUBNET", "OPENSTACK_PROJECT", "OPENSTACK_REGION", "OPENSTACK_VM", "OS", "PROCESS_GROUP", "PROCESS_GROUP_INSTANCE", "QUEUE", "RELATIONAL_DATABASE_SERVICE", "SERVICE", "SERVICE_INSTANCE", "SERVICE_METHOD", "SERVICE_METHOD_GROUP", "SWIFT_CONTAINER", "SYNTHETIC_LOCATION", "SYNTHETIC_TEST", "SYNTHETIC_TEST_STEP", "VIRTUALMACHINE", "VMWARE_DATACENTER" ]
          },
          "mzId" : {
            "type" : "string",
            "description" : "The ID of a management zone to which the matched entities must belong."
          },
          "tags" : {
            "type" : "array",
            "description" : "The tag you want to use for matching. \n\nYou can use custom tags from the UI, AWS tags, Cloud Foundry tags, OpenShift/Kubernetes, and tags based on environment variables.",
            "items" : {
              "$ref" : "#/components/schemas/TagInfo"
            }
          },
          "tagCombination" : {
            "type" : "string",
            "description" : "The logic that applies when several tags are specified: AND/OR. \n\nIf not set, the OR logic is used.",
            "enum" : [ "AND", "OR" ]
          }
        },
        "description" : "A matching rule for Dynatrace entities."
      },
      "Recurrence" : {
        "required" : [ "durationMinutes", "startTime" ],
        "type" : "object",
        "properties" : {
          "dayOfWeek" : {
            "type" : "string",
            "description" : "The day of the week for weekly maintenance. \n\nThe format is the full name of the day in upper case, for example `THURSDAY`.",
            "enum" : [ "FRIDAY", "MONDAY", "SATURDAY", "SUNDAY", "THURSDAY", "TUESDAY", "WEDNESDAY" ]
          },
          "dayOfMonth" : {
            "maximum" : 31,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The day of the month for monthly maintenance. \n\nThe value of `31` is treated as the last day of the month for months that don't have a 31st day.\nThe value of `30` is also treated as the last day of the month for February.",
            "format" : "int32"
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time of the maintenance window in HH:mm format."
          },
          "durationMinutes" : {
            "maximum" : 1440,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The duration of the maintenance window in minutes.",
            "format" : "int32"
          }
        },
        "description" : "The recurrence of the maintenance window."
      },
      "Schedule" : {
        "required" : [ "end", "recurrenceType", "start", "zoneId" ],
        "type" : "object",
        "properties" : {
          "recurrenceType" : {
            "type" : "string",
            "description" : "The type of the schedule recurrence.",
            "enum" : [ "DAILY", "MONTHLY", "ONCE", "WEEKLY" ]
          },
          "recurrence" : {
            "$ref" : "#/components/schemas/Recurrence"
          },
          "start" : {
            "type" : "string",
            "description" : "The start date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format."
          },
          "end" : {
            "type" : "string",
            "description" : "The end date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format."
          },
          "zoneId" : {
            "type" : "string",
            "description" : "The time zone of the start and end time. Default time zone is UTC. \n\nYou can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)."
          }
        },
        "description" : "The schedule of the maintenance window."
      },
      "Scope" : {
        "required" : [ "entities", "matches" ],
        "type" : "object",
        "properties" : {
          "entities" : {
            "type" : "array",
            "description" : "A list of Dynatrace entities (for example, hosts or services) to be included in the scope. \n\nAllowed values are Dynatrace entity IDs.",
            "items" : {
              "type" : "string"
            }
          },
          "matches" : {
            "type" : "array",
            "description" : "A list of matching rules for dynamic scope formation. \n\nIf several rules are set, the OR logic applies.",
            "items" : {
              "$ref" : "#/components/schemas/MonitoredEntityFilter"
            }
          }
        },
        "description" : "The scope of the maintenance window. \n\n The scope restricts the alert/problem detection suppression to certain Dynatrace entities. It can contain a list of entities and/or matching rules for dynamic formation of the scope. \n\n If no scope is specified, the alert/problem detection suppression applies to the entire environment."
      }
    },
    "securitySchemes" : {
      "Api-Token" : {
        "type" : "apiKey",
        "description" : "Dynatrace API Token\n\n The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.",
        "name" : "Authorization",
        "in" : "header"
      }
    }
  }
}