{
    "version": "5",
    "defaultTimeframe": {
        "from": "now-2h",
        "to": "now"
    },
    "sections": [
        {
            "id": "784892ad-00d8-42e9-9387-7c376bc7092e",
            "type": "markdown",
            "markdown": "# How to Analyze Synthetic Tests with Dynatrace\nThis notebook provides links and explanation for a handful or use cases when setting up and analyzing Synthetic Tests\n\n**Target Audience**: SREs, App Owners, Developers\n\n**Got questions or feedback?**: [devrel@dynatrace.com](mailto:devrel@dynatrace.com?subject=Feedback%20on%20Synthetics)\n\nTo learn more about Synthetic Monitoring with Dynatrace also see:\n* [(Website) Synthetic monitoring](https://www.dynatrace.com/platform/synthetic-monitoring/)\n* [(Doc) Synthetic Monitoring](https://www.dynatrace.com/support/help/platform-modules/digital-experience/synthetic-monitoring)"
        },
        {
            "id": "ad73283c-0018-4329-94cb-45fdd375933f",
            "type": "markdown",
            "markdown": "--- \n "
        },
        {
            "id": "b7bedd0a-2e92-414b-b3dc-b7cd87ea78e5",
            "type": "markdown",
            "markdown": "## 1. Analyze Synthetic Monitor Executions and Identify Root Causes of Failures\n**Problem Statement:** As a Kubernetes Admin I need to quickly know whether my clusters and workloads are running as expected and whether there are no vulnerabilities!\n\n**How Dynatrace helps:** Dynatrace provides some out-of-the-box dashboards and views to get a quick overview of K8s Cluster and Workload Health as well as highlights any known vulnerabilities.\n\n**Steps**:\n1. Open the [Synthetic App](https://wkf10640.apps.dynatrace.com/ui/apps/dynatrace.classic.kubernetes/ui/kubernetes)\n2. Select a test of interesting (expand timeframe, locate tests that have issues, then click) ![](https://raw.githubusercontent.com/dynatrace-perfclinics/dynatrace-getting-started/main/images/howto_synthetic_monitoroverview.png)\n3. Pick an Availability Issue timeframe to analyze ![](https://raw.githubusercontent.com/dynatrace-perfclinics/dynatrace-getting-started/main/images/howto_synthetic_availabilityoverview.png)\n4. Focus on a specific synthetic check error ![](https://raw.githubusercontent.com/dynatrace-perfclinics/dynatrace-getting-started/main/images/howto_synthetic_executionoverview.png)\n5. Analyze a failed execution and see which step failed ![](https://raw.githubusercontent.com/dynatrace-perfclinics/dynatrace-getting-started/main/images/howto_synthetic_executiondetails.png)\n6. Understand the full waterfall of requests and see which one failed ![](https://raw.githubusercontent.com/dynatrace-perfclinics/dynatrace-getting-started/main/images/howto_synthetic_analyzewaterfall.png)\n7. Get the full Distributed Trace of the failed request ![](https://raw.githubusercontent.com/dynatrace-perfclinics/dynatrace-getting-started/main/images/howto_synthetic_drilltotrace.png)"
        },
        {
            "id": "b9f8b7ed-a544-47f0-aaf6-28f1bc81dce9",
            "type": "markdown",
            "markdown": "--- \n "
        }
    ]
}