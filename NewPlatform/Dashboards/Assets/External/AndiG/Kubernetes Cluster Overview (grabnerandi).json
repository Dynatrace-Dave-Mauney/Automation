{
    "version": 11,
    "variables": [
        {
            "key": "cluster_name",
            "type": "query",
            "input": "fetch dt.entity.kubernetes_cluster\n| sort lower(entity.name) asc\n| fields entity.name",
            "multiple": false
        }
    ],
    "tiles": {
        "0": {
            "type": "data",
            "title": "Cluster Nodes",
            "query": "timeseries avg(dt.kubernetes.nodes), alias: nodes, filter: in(k8s.cluster.name,array($cluster_name))\n",
            "visualization": "barChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "legend": {
                        "hidden": true
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "recordField": "nodes",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": []
                },
                "unitsOverrides": [
                    {
                        "identifier": "dt.kubernetes.nodes",
                        "base": "unspecified",
                        "unit": "count",
                        "display": null
                    }
                ]
            }
        },
        "1": {
            "type": "data",
            "title": "Node Health (Condition Ready)",
            "query": "timeseries avg(dt.kubernetes.nodes), alias: nodes, by: {node_condition_ready}, filter: in(k8s.cluster.name,array($cluster_name))",
            "visualization": "barChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "valueRepresentation": "absolute",
                    "leftYAxisSettings": {
                        "scale": "linear"
                    },
                    "legend": {
                        "hidden": true
                    },
                    "seriesOverrides": [
                        {
                            "seriesId": "True_nodes",
                            "override": {
                                "color": {
                                    "Default": "var(--dt-colors-charts-categorical-color-09-default, #0d9c29)",
                                    "Hover": "var(--dt-colors-charts-categorical-color-09-hover, #0a7b20)",
                                    "Active": "var(--dt-colors-charts-categorical-color-09-active, #075f19)",
                                    "DefaultTransparent": "var(--dt-colors-charts-categorical-color-09-default-transparent, #008500cc)",
                                    "HoverTransparent": "var(--dt-colors-charts-categorical-color-09-hover-transparent, #005905cc)",
                                    "ActiveTransparent": "var(--dt-colors-charts-categorical-color-09-active-transparent, #003112cc)"
                                }
                            }
                        }
                    ]
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "avg(dt.kubernetes.node.conditions)"
                        ]
                    ]
                },
                "unitsOverrides": [
                    {
                        "identifier": "dt.kubernetes.nodes",
                        "base": "unspecified",
                        "unit": "count",
                        "display": null
                    }
                ]
            }
        },
        "3": {
            "type": "data",
            "title": "Pods by Node",
            "query": "timeseries max(dt.kubernetes.node.pods), alias: pods, by: {k8s.node.name}, filter: in(k8s.cluster.name,array($cluster_name))\n",
            "visualization": "barChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "blue-steel",
                    "legend": {
                        "hidden": true
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "recordField": "pods",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "pods"
                        ]
                    ]
                },
                "unitsOverrides": [
                    {
                        "identifier": "dt.kubernetes.node.pods",
                        "base": "unspecified",
                        "unit": "count",
                        "display": null
                    }
                ]
            }
        },
        "4": {
            "type": "data",
            "title": "Running Pods",
            "query": "timeseries max(dt.kubernetes.node.pods), alias: pods, by: {k8s.node.name}, filter: in(k8s.cluster.name,array($cluster_name)) AND pod_phase == \"Running\"\n| summarize pods = sum(arrayLast(pods))\n\n",
            "visualization": "singleValue",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "swamps"
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "recordField": "pods",
                    "autoscale": false
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "pods"
                        ]
                    ]
                },
                "unitsOverrides": [
                    {
                        "identifier": "dt.kubernetes.node.pods",
                        "base": "unspecified",
                        "unit": "count",
                        "display": null
                    }
                ]
            }
        },
        "5": {
            "type": "data",
            "title": "Succeeded Pods",
            "query": "timeseries max(dt.kubernetes.node.pods), alias: pods, by: {k8s.node.name}, filter: in(k8s.cluster.name,array($cluster_name)) AND pod_phase == \"Succeeded\"\n| summarize pods = sum(arrayLast(pods))\n\n",
            "visualization": "singleValue",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "swamps"
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "recordField": "pods",
                    "autoscale": false
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "pods"
                        ]
                    ]
                },
                "unitsOverrides": [
                    {
                        "identifier": "dt.kubernetes.node.pods",
                        "base": "unspecified",
                        "unit": "count",
                        "display": null
                    }
                ]
            }
        },
        "6": {
            "type": "data",
            "title": "Pending Pods",
            "query": "timeseries max(dt.kubernetes.node.pods), alias: pods, by: {k8s.node.name}, filter: in(k8s.cluster.name,array($cluster_name)) AND pod_phase == \"Pending\"\n| summarize pods = sum(arrayLast(pods))",
            "visualization": "singleValue",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "swamps"
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "recordField": "pods",
                    "autoscale": false
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "pods"
                        ]
                    ]
                },
                "unitsOverrides": [
                    {
                        "identifier": "dt.kubernetes.node.pods",
                        "base": "unspecified",
                        "unit": "count",
                        "display": null
                    }
                ]
            }
        },
        "7": {
            "type": "data",
            "title": "Failed Pods",
            "query": "timeseries max(dt.kubernetes.node.pods), alias: pods, by: {k8s.node.name}, filter: in(k8s.cluster.name,array($cluster_name)) AND pod_phase == \"Failed\"\n| summarize pods = sum(arrayLast(pods))\n\n\n",
            "visualization": "singleValue",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "swamps"
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "recordField": "pods",
                    "autoscale": false
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "pods"
                        ]
                    ]
                },
                "unitsOverrides": [
                    {
                        "identifier": "dt.kubernetes.node.pods",
                        "base": "unspecified",
                        "unit": "count",
                        "display": null
                    }
                ]
            }
        },
        "8": {
            "type": "data",
            "title": "Cluster Allocatable CPU",
            "query": "timeseries sum(dt.kubernetes.node.cpu_allocatable), alias: cpu, filter: in(k8s.cluster.name,array($cluster_name))\n| fields cpu = arrayLast(cpu) / 1000\n\n\n",
            "visualization": "singleValue",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "swamps"
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "Cores",
                    "recordField": "cpu",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "pods"
                        ]
                    ]
                }
            }
        },
        "9": {
            "type": "data",
            "title": "Cluster Requested CPU",
            "query": "timeseries sum(dt.kubernetes.node.requests_cpu), alias: cpu, filter: in(k8s.cluster.name,array($cluster_name))\n| fields cpu = arrayLast(cpu) / 1000\n\n\n",
            "visualization": "singleValue",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "swamps"
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "Cores",
                    "recordField": "cpu",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "pods"
                        ]
                    ]
                }
            }
        },
        "10": {
            "type": "data",
            "title": "Cluster Allocatable Memory",
            "query": "timeseries sum(dt.kubernetes.node.memory_allocatable), alias: memory, filter: in(k8s.cluster.name,array($cluster_name))\n| fields memory = arrayLast(memory) * power(10,-9)\n\n\n",
            "visualization": "singleValue",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "swamps"
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "GiB",
                    "recordField": "memory",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "pods"
                        ]
                    ]
                }
            }
        },
        "11": {
            "type": "data",
            "title": "Cluster Requested Memory",
            "query": "timeseries sum(dt.kubernetes.node.requests_memory), alias: memory, filter: in(k8s.cluster.name,array($cluster_name))\n| fields memory = arrayLast(memory) * power(10,-9)\n\n\n",
            "visualization": "singleValue",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "swamps"
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "GiB",
                    "recordField": "memory",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "pods"
                        ]
                    ]
                }
            }
        },
        "12": {
            "type": "markdown",
            "title": "",
            "content": "# Cluster Status"
        },
        "13": {
            "type": "data",
            "title": "Node Allocatable CPU",
            "query": "timeseries sum(dt.kubernetes.node.cpu_allocatable), alias: cpu, by: {k8s.node.name}, filter: in(k8s.cluster.name,array($cluster_name))\n| fields cpu = arrayLast(cpu) / 1000, k8s.node.name\n\n\n",
            "visualization": "pieChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "blue-steel"
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "Cores",
                    "recordField": "cpu",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "pods"
                        ]
                    ]
                }
            }
        },
        "14": {
            "type": "data",
            "title": "Node Requested CPU",
            "query": "timeseries sum(dt.kubernetes.node.requests_cpu), alias: cpu, by: {k8s.node.name}, filter: in(k8s.cluster.name,array($cluster_name))\n| fields cpu = arrayLast(cpu) / 1000, k8s.node.name\n\n\n",
            "visualization": "pieChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "blue-steel"
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "Cores",
                    "recordField": "cpu",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "pods"
                        ]
                    ]
                }
            }
        },
        "15": {
            "type": "data",
            "title": "Node Allocatable Memory",
            "query": "timeseries sum(dt.kubernetes.node.memory_allocatable), alias: memory, by: {k8s.node.name}, filter: in(k8s.cluster.name,array($cluster_name))\n| fields memory = arrayLast(memory) * power(10,-9), k8s.node.name\n\n\n",
            "visualization": "pieChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "blue-steel"
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "GiB",
                    "recordField": "memory",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "pods"
                        ]
                    ]
                }
            }
        },
        "16": {
            "type": "data",
            "title": "Node Requested Memory",
            "query": "timeseries sum(dt.kubernetes.node.requests_memory), alias: memory, by: {k8s.node.name}, filter: in(k8s.cluster.name,array($cluster_name))\n| fields memory = arrayLast(memory) * power(10,-9), k8s.node.name\n\n\n",
            "visualization": "pieChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "blue-steel",
                    "legend": {
                        "hidden": true
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "GiB",
                    "recordField": "memory",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "pods"
                        ]
                    ]
                }
            }
        },
        "17": {
            "type": "data",
            "title": "Node CPU Usage",
            "query": "timeseries avg(dt.host.cpu.usage), alias: cpu, by: {dt.entity.host}\n| lookup [fetch dt.entity.host \n  | filterOut isNull(clustered_by[dt.entity.kubernetes_cluster])\n  | fieldsAdd k8s_cluster = clustered_by[dt.entity.kubernetes_cluster]\n  | fields k8s_cluster, id, entity.name\n  | lookup [fetch dt.entity.kubernetes_cluster \n    | filter entity.name == $cluster_name | fields id, entity.name]\n    , sourceField: k8s_cluster, lookupField: id, prefix: \"lookup_cluster.\"]\n  , sourceField: dt.entity.host, lookupField: id, prefix: \"lookup_host.\"\n| filterOut isNull(lookup_host.lookup_cluster.entity.name)\n| fieldsAdd node = lookup_host.entity.name\n| fieldsRemove lookup_host.id, lookup_host.k8s_cluster, lookup_host.lookup_cluster.entity.name, lookup_host.lookup_cluster.id, dt.entity.host, lookup_host.entity.name",
            "visualization": "lineChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "legend": {
                        "hidden": true
                    },
                    "leftYAxisSettings": {
                        "min": 0,
                        "max": 100,
                        "label": ""
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "recordField": "nodes",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "cpu"
                        ]
                    ]
                },
                "unitsOverrides": [
                    {
                        "identifier": "dt.host.cpu.usage",
                        "unitCategory": "percentage",
                        "baseUnit": "percent",
                        "displayUnit": null,
                        "decimals": 2,
                        "suffix": "",
                        "delimiter": true
                    }
                ]
            }
        },
        "18": {
            "type": "markdown",
            "title": "",
            "content": "# Cluster Utilization"
        },
        "19": {
            "type": "data",
            "title": "Node Memory Usage",
            "query": "timeseries avg(dt.host.memory.usage), alias: mem, by: {dt.entity.host}\n| lookup [fetch dt.entity.host \n  | filterOut isNull(clustered_by[dt.entity.kubernetes_cluster])\n  | fieldsAdd k8s_cluster = clustered_by[dt.entity.kubernetes_cluster]\n  | fields k8s_cluster, id, entity.name\n  | lookup [fetch dt.entity.kubernetes_cluster \n    | filter entity.name == $cluster_name | fields id, entity.name]\n    , sourceField: k8s_cluster, lookupField: id, prefix: \"lookup_cluster.\"]\n  , sourceField: dt.entity.host, lookupField: id, prefix: \"lookup_host.\"\n| filterOut isNull(lookup_host.lookup_cluster.entity.name)\n| fieldsAdd node = lookup_host.entity.name\n| fieldsRemove lookup_host.id, lookup_host.k8s_cluster, lookup_host.lookup_cluster.entity.name, lookup_host.lookup_cluster.id, dt.entity.host, lookup_host.entity.name",
            "visualization": "lineChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "legend": {
                        "hidden": true
                    },
                    "leftYAxisSettings": {
                        "min": 0,
                        "max": 100
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "recordField": "nodes",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "cpu"
                        ]
                    ]
                },
                "unitsOverrides": [
                    {
                        "identifier": "dt.host.memory.usage",
                        "unitCategory": "percentage",
                        "baseUnit": "percent",
                        "displayUnit": null,
                        "decimals": 2,
                        "suffix": "",
                        "delimiter": true
                    }
                ]
            }
        },
        "20": {
            "type": "data",
            "title": "Node Disk Space Usage",
            "query": "timeseries max(dt.host.disk.used.percent), alias: disk, by: {dt.entity.host}\n| lookup [fetch dt.entity.host \n  | filterOut isNull(clustered_by[dt.entity.kubernetes_cluster])\n  | fieldsAdd k8s_cluster = clustered_by[dt.entity.kubernetes_cluster]\n  | fields k8s_cluster, id, entity.name\n  | lookup [fetch dt.entity.kubernetes_cluster \n    | filter entity.name == $cluster_name | fields id, entity.name]\n    , sourceField: k8s_cluster, lookupField: id, prefix: \"lookup_cluster.\"]\n  , sourceField: dt.entity.host, lookupField: id, prefix: \"lookup_host.\"\n| filterOut isNull(lookup_host.lookup_cluster.entity.name)\n| fieldsAdd node = lookup_host.entity.name\n| fieldsRemove lookup_host.id, lookup_host.k8s_cluster, lookup_host.lookup_cluster.entity.name, lookup_host.lookup_cluster.id, dt.entity.host, lookup_host.entity.name",
            "visualization": "lineChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "legend": {
                        "hidden": true
                    },
                    "leftYAxisSettings": {
                        "min": 0,
                        "max": 100
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "recordField": "nodes",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "cpu"
                        ]
                    ]
                },
                "unitsOverrides": [
                    {
                        "identifier": "dt.host.disk.used.percent",
                        "unitCategory": "percentage",
                        "baseUnit": "percent",
                        "displayUnit": null,
                        "decimals": 2,
                        "suffix": "",
                        "delimiter": true
                    }
                ]
            }
        },
        "21": {
            "type": "data",
            "title": "Node Disk Utilization Time",
            "query": "timeseries avg(dt.host.disk.util_time), alias: disk, by: {dt.entity.host}\n| lookup [fetch dt.entity.host \n  | filterOut isNull(clustered_by[dt.entity.kubernetes_cluster])\n  | fieldsAdd k8s_cluster = clustered_by[dt.entity.kubernetes_cluster]\n  | fields k8s_cluster, id, entity.name\n  | lookup [fetch dt.entity.kubernetes_cluster \n    | filter entity.name == $cluster_name | fields id, entity.name]\n    , sourceField: k8s_cluster, lookupField: id, prefix: \"lookup_cluster.\"]\n  , sourceField: dt.entity.host, lookupField: id, prefix: \"lookup_host.\"\n| filterOut isNull(lookup_host.lookup_cluster.entity.name)\n| fieldsAdd node = lookup_host.entity.name\n| fieldsRemove lookup_host.id, lookup_host.k8s_cluster, lookup_host.lookup_cluster.entity.name, lookup_host.lookup_cluster.id, dt.entity.host, lookup_host.entity.name",
            "visualization": "lineChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "legend": {
                        "hidden": true
                    },
                    "leftYAxisSettings": {
                        "min": 0,
                        "max": 100
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "recordField": "nodes",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": [
                        [
                            "cpu"
                        ]
                    ]
                },
                "unitsOverrides": [
                    {
                        "identifier": "dt.host.disk.util_time",
                        "unitCategory": "percentage",
                        "baseUnit": "percent",
                        "displayUnit": null,
                        "decimals": 2,
                        "suffix": "",
                        "delimiter": true
                    }
                ]
            }
        },
        "23": {
            "type": "data",
            "title": "Node Net Traffic In",
            "query": "timeseries avg(dt.host.net.nic.traffic_in), alias: net, by: {dt.entity.host}\n| lookup [fetch dt.entity.host \n  | filterOut isNull(clustered_by[dt.entity.kubernetes_cluster])\n  | fieldsAdd k8s_cluster = clustered_by[dt.entity.kubernetes_cluster]\n  | fields k8s_cluster, id, entity.name\n  | lookup [fetch dt.entity.kubernetes_cluster \n    | filter entity.name == $cluster_name | fields id, entity.name]\n    , sourceField: k8s_cluster, lookupField: id, prefix: \"lookup_cluster.\"]\n  , sourceField: dt.entity.host, lookupField: id, prefix: \"lookup_host.\"\n| filterOut isNull(lookup_host.lookup_cluster.entity.name)\n| fieldsAdd node = lookup_host.entity.name\n| fieldsRemove lookup_host.id, lookup_host.k8s_cluster, lookup_host.lookup_cluster.entity.name, lookup_host.lookup_cluster.id, dt.entity.host, lookup_host.entity.name",
            "visualization": "lineChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "legend": {
                        "hidden": true
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": []
                },
                "unitsOverrides": [
                    {
                        "identifier": "dt.host.net.nic.traffic_in",
                        "unitCategory": "datarate",
                        "baseUnit": "bitps",
                        "displayUnit": null,
                        "decimals": 2,
                        "suffix": "",
                        "delimiter": true
                    }
                ]
            }
        },
        "24": {
            "type": "data",
            "title": "Node Net Traffic Out",
            "query": "timeseries avg(dt.host.net.nic.traffic_out), alias: net, by: {dt.entity.host}\n| lookup [fetch dt.entity.host \n  | filterOut isNull(clustered_by[dt.entity.kubernetes_cluster])\n  | fieldsAdd k8s_cluster = clustered_by[dt.entity.kubernetes_cluster]\n  | fields k8s_cluster, id, entity.name\n  | lookup [fetch dt.entity.kubernetes_cluster \n    | filter entity.name == $cluster_name | fields id, entity.name]\n    , sourceField: k8s_cluster, lookupField: id, prefix: \"lookup_cluster.\"]\n  , sourceField: dt.entity.host, lookupField: id, prefix: \"lookup_host.\"\n| filterOut isNull(lookup_host.lookup_cluster.entity.name)\n| fieldsAdd node = lookup_host.entity.name\n| fieldsRemove lookup_host.id, lookup_host.k8s_cluster, lookup_host.lookup_cluster.entity.name, lookup_host.lookup_cluster.id, dt.entity.host, lookup_host.entity.name",
            "visualization": "lineChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "legend": {
                        "hidden": true
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": []
                },
                "unitsOverrides": [
                    {
                        "identifier": "dt.host.net.nic.traffic_out",
                        "unitCategory": "datarate",
                        "baseUnit": "bitps",
                        "displayUnit": null,
                        "decimals": 2,
                        "suffix": "",
                        "delimiter": true
                    }
                ]
            }
        },
        "25": {
            "type": "markdown",
            "title": "",
            "content": "# Node Utilization"
        },
        "26": {
            "type": "markdown",
            "title": "",
            "content": "# K8S Events"
        },
        "27": {
            "type": "data",
            "title": "WARN and INFO Events",
            "query": "fetch logs\n| filter event.type == \"K8S\" AND matchesValue(dt.kubernetes.cluster.name,$cluster_name)\n| summarize events = count(), by: {bin(timestamp,5m), alias: timestamp, loglevel}",
            "visualization": "barChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "log-level",
                    "seriesOverrides": [
                        {
                            "seriesId": "WARN_events",
                            "override": {
                                "color": {
                                    "Default": "var(--dt-colors-charts-categorical-color-14-default, #ec5413)",
                                    "Hover": "var(--dt-colors-charts-categorical-color-14-hover, #bd430f)",
                                    "Active": "var(--dt-colors-charts-categorical-color-14-active, #8e320b)",
                                    "DefaultTransparent": "var(--dt-colors-charts-categorical-color-14-default-transparent, #d54c00cc)",
                                    "HoverTransparent": "var(--dt-colors-charts-categorical-color-14-hover-transparent, #963c00cc)",
                                    "ActiveTransparent": "var(--dt-colors-charts-categorical-color-14-active-transparent, #5a2800cc)"
                                }
                            }
                        },
                        {
                            "seriesId": "INFO_events",
                            "override": {
                                "color": {
                                    "Default": "var(--dt-colors-charts-categorical-color-11-default, #008fdb)",
                                    "Hover": "var(--dt-colors-charts-categorical-color-11-hover, #0071ad)",
                                    "Active": "var(--dt-colors-charts-categorical-color-11-active, #005685)",
                                    "DefaultTransparent": "var(--dt-colors-charts-categorical-color-11-default-transparent, #0074cbcc)",
                                    "HoverTransparent": "var(--dt-colors-charts-categorical-color-11-hover-transparent, #004e86cc)",
                                    "ActiveTransparent": "var(--dt-colors-charts-categorical-color-11-active-transparent, #002940cc)"
                                }
                            }
                        }
                    ],
                    "legend": {
                        "hidden": true
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": []
                }
            }
        },
        "28": {
            "type": "data",
            "title": "WARN Events by Object Kind",
            "query": "fetch logs\n| filter event.type == \"K8S\" AND matchesValue(dt.kubernetes.cluster.name,$cluster_name)\n| filter status == \"WARN\"\n| summarize events = count(), by: {dt.kubernetes.event.involved_object.kind, alias: object}",
            "visualization": "donutChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "categorical",
                    "seriesOverrides": [
                        {
                            "seriesId": "WARN_events",
                            "override": {
                                "color": {
                                    "Default": "var(--dt-colors-charts-categorical-color-14-default, #ec5413)",
                                    "Hover": "var(--dt-colors-charts-categorical-color-14-hover, #bd430f)",
                                    "Active": "var(--dt-colors-charts-categorical-color-14-active, #8e320b)",
                                    "DefaultTransparent": "var(--dt-colors-charts-categorical-color-14-default-transparent, #d54c00cc)",
                                    "HoverTransparent": "var(--dt-colors-charts-categorical-color-14-hover-transparent, #963c00cc)",
                                    "ActiveTransparent": "var(--dt-colors-charts-categorical-color-14-active-transparent, #5a2800cc)"
                                }
                            }
                        },
                        {
                            "seriesId": "INFO_events",
                            "override": {
                                "color": {
                                    "Default": "var(--dt-colors-charts-categorical-color-11-default, #008fdb)",
                                    "Hover": "var(--dt-colors-charts-categorical-color-11-hover, #0071ad)",
                                    "Active": "var(--dt-colors-charts-categorical-color-11-active, #005685)",
                                    "DefaultTransparent": "var(--dt-colors-charts-categorical-color-11-default-transparent, #0074cbcc)",
                                    "HoverTransparent": "var(--dt-colors-charts-categorical-color-11-hover-transparent, #004e86cc)",
                                    "ActiveTransparent": "var(--dt-colors-charts-categorical-color-11-active-transparent, #002940cc)"
                                }
                            }
                        }
                    ],
                    "legend": {
                        "hidden": true
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": []
                }
            }
        },
        "29": {
            "type": "data",
            "title": "WARN Events by Node",
            "query": "fetch logs\n| filter event.type == \"K8S\" AND matchesValue(dt.kubernetes.cluster.name,$cluster_name)\n| filter status == \"WARN\"\n| summarize events = count(), by: {dt.kubernetes.node.name, alias: node}\n| fields events = events + 0, node",
            "visualization": "donutChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "categorical",
                    "seriesOverrides": [
                        {
                            "seriesId": "WARN_events",
                            "override": {
                                "color": {
                                    "Default": "var(--dt-colors-charts-categorical-color-14-default, #ec5413)",
                                    "Hover": "var(--dt-colors-charts-categorical-color-14-hover, #bd430f)",
                                    "Active": "var(--dt-colors-charts-categorical-color-14-active, #8e320b)",
                                    "DefaultTransparent": "var(--dt-colors-charts-categorical-color-14-default-transparent, #d54c00cc)",
                                    "HoverTransparent": "var(--dt-colors-charts-categorical-color-14-hover-transparent, #963c00cc)",
                                    "ActiveTransparent": "var(--dt-colors-charts-categorical-color-14-active-transparent, #5a2800cc)"
                                }
                            }
                        },
                        {
                            "seriesId": "INFO_events",
                            "override": {
                                "color": {
                                    "Default": "var(--dt-colors-charts-categorical-color-11-default, #008fdb)",
                                    "Hover": "var(--dt-colors-charts-categorical-color-11-hover, #0071ad)",
                                    "Active": "var(--dt-colors-charts-categorical-color-11-active, #005685)",
                                    "DefaultTransparent": "var(--dt-colors-charts-categorical-color-11-default-transparent, #0074cbcc)",
                                    "HoverTransparent": "var(--dt-colors-charts-categorical-color-11-hover-transparent, #004e86cc)",
                                    "ActiveTransparent": "var(--dt-colors-charts-categorical-color-11-active-transparent, #002940cc)"
                                }
                            }
                        }
                    ],
                    "legend": {
                        "hidden": true
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": []
                }
            }
        },
        "30": {
            "type": "data",
            "title": "WARN Events by Namespace",
            "query": "fetch logs\n| filter event.type == \"K8S\" AND matchesValue(dt.kubernetes.cluster.name,$cluster_name)\n| filter status == \"WARN\"\n| summarize events = count(), by: {k8s.namespace.name, alias: namespace}",
            "visualization": "donutChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "categorical",
                    "seriesOverrides": [
                        {
                            "seriesId": "WARN_events",
                            "override": {
                                "color": {
                                    "Default": "var(--dt-colors-charts-categorical-color-14-default, #ec5413)",
                                    "Hover": "var(--dt-colors-charts-categorical-color-14-hover, #bd430f)",
                                    "Active": "var(--dt-colors-charts-categorical-color-14-active, #8e320b)",
                                    "DefaultTransparent": "var(--dt-colors-charts-categorical-color-14-default-transparent, #d54c00cc)",
                                    "HoverTransparent": "var(--dt-colors-charts-categorical-color-14-hover-transparent, #963c00cc)",
                                    "ActiveTransparent": "var(--dt-colors-charts-categorical-color-14-active-transparent, #5a2800cc)"
                                }
                            }
                        },
                        {
                            "seriesId": "INFO_events",
                            "override": {
                                "color": {
                                    "Default": "var(--dt-colors-charts-categorical-color-11-default, #008fdb)",
                                    "Hover": "var(--dt-colors-charts-categorical-color-11-hover, #0071ad)",
                                    "Active": "var(--dt-colors-charts-categorical-color-11-active, #005685)",
                                    "DefaultTransparent": "var(--dt-colors-charts-categorical-color-11-default-transparent, #0074cbcc)",
                                    "HoverTransparent": "var(--dt-colors-charts-categorical-color-11-hover-transparent, #004e86cc)",
                                    "ActiveTransparent": "var(--dt-colors-charts-categorical-color-11-active-transparent, #002940cc)"
                                }
                            }
                        }
                    ],
                    "legend": {
                        "hidden": true
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": []
                }
            }
        },
        "31": {
            "type": "data",
            "title": "Events by Category",
            "query": "fetch logs\n| filter event.type == \"K8S\" AND matchesValue(dt.kubernetes.cluster.name,$cluster_name)\n| summarize events = count(), by: {dt.event.group_label, alias: category}",
            "visualization": "donutChart",
            "visualizationSettings": {
                "thresholds": [],
                "chartSettings": {
                    "gapPolicy": "connect",
                    "colorPalette": "categorical",
                    "seriesOverrides": [
                        {
                            "seriesId": "WARN_events",
                            "override": {
                                "color": {
                                    "Default": "var(--dt-colors-charts-categorical-color-14-default, #ec5413)",
                                    "Hover": "var(--dt-colors-charts-categorical-color-14-hover, #bd430f)",
                                    "Active": "var(--dt-colors-charts-categorical-color-14-active, #8e320b)",
                                    "DefaultTransparent": "var(--dt-colors-charts-categorical-color-14-default-transparent, #d54c00cc)",
                                    "HoverTransparent": "var(--dt-colors-charts-categorical-color-14-hover-transparent, #963c00cc)",
                                    "ActiveTransparent": "var(--dt-colors-charts-categorical-color-14-active-transparent, #5a2800cc)"
                                }
                            }
                        },
                        {
                            "seriesId": "INFO_events",
                            "override": {
                                "color": {
                                    "Default": "var(--dt-colors-charts-categorical-color-11-default, #008fdb)",
                                    "Hover": "var(--dt-colors-charts-categorical-color-11-hover, #0071ad)",
                                    "Active": "var(--dt-colors-charts-categorical-color-11-active, #005685)",
                                    "DefaultTransparent": "var(--dt-colors-charts-categorical-color-11-default-transparent, #0074cbcc)",
                                    "HoverTransparent": "var(--dt-colors-charts-categorical-color-11-hover-transparent, #004e86cc)",
                                    "ActiveTransparent": "var(--dt-colors-charts-categorical-color-11-active-transparent, #002940cc)"
                                }
                            }
                        }
                    ],
                    "legend": {
                        "hidden": true
                    }
                },
                "singleValue": {
                    "showLabel": true,
                    "label": "",
                    "autoscale": true
                },
                "table": {
                    "enableLineWrap": true,
                    "hiddenColumns": [],
                    "lineWrapIds": []
                }
            }
        }
    },
    "layouts": {
        "0": {
            "x": 0,
            "y": 1,
            "w": 7,
            "h": 6
        },
        "1": {
            "x": 7,
            "y": 1,
            "w": 7,
            "h": 6
        },
        "3": {
            "x": 14,
            "y": 1,
            "w": 7,
            "h": 6
        },
        "4": {
            "x": 0,
            "y": 7,
            "w": 5,
            "h": 4
        },
        "5": {
            "x": 5,
            "y": 7,
            "w": 5,
            "h": 4
        },
        "6": {
            "x": 10,
            "y": 7,
            "w": 5,
            "h": 4
        },
        "7": {
            "x": 15,
            "y": 7,
            "w": 6,
            "h": 4
        },
        "8": {
            "x": 0,
            "y": 12,
            "w": 5,
            "h": 5
        },
        "9": {
            "x": 5,
            "y": 12,
            "w": 5,
            "h": 5
        },
        "10": {
            "x": 10,
            "y": 12,
            "w": 5,
            "h": 5
        },
        "11": {
            "x": 15,
            "y": 12,
            "w": 6,
            "h": 5
        },
        "12": {
            "x": 0,
            "y": 0,
            "w": 21,
            "h": 1
        },
        "13": {
            "x": 0,
            "y": 17,
            "w": 5,
            "h": 5
        },
        "14": {
            "x": 5,
            "y": 17,
            "w": 5,
            "h": 5
        },
        "15": {
            "x": 10,
            "y": 17,
            "w": 5,
            "h": 5
        },
        "16": {
            "x": 15,
            "y": 17,
            "w": 6,
            "h": 5
        },
        "17": {
            "x": 0,
            "y": 23,
            "w": 10,
            "h": 6
        },
        "18": {
            "x": 0,
            "y": 11,
            "w": 21,
            "h": 1
        },
        "19": {
            "x": 10,
            "y": 23,
            "w": 11,
            "h": 6
        },
        "20": {
            "x": 0,
            "y": 29,
            "w": 10,
            "h": 6
        },
        "21": {
            "x": 10,
            "y": 29,
            "w": 11,
            "h": 6
        },
        "23": {
            "x": 0,
            "y": 35,
            "w": 10,
            "h": 6
        },
        "24": {
            "x": 10,
            "y": 35,
            "w": 11,
            "h": 6
        },
        "25": {
            "x": 0,
            "y": 22,
            "w": 21,
            "h": 1
        },
        "26": {
            "x": 0,
            "y": 41,
            "w": 21,
            "h": 1
        },
        "27": {
            "x": 0,
            "y": 42,
            "w": 5,
            "h": 6
        },
        "28": {
            "x": 9,
            "y": 42,
            "w": 4,
            "h": 6
        },
        "29": {
            "x": 13,
            "y": 42,
            "w": 4,
            "h": 6
        },
        "30": {
            "x": 17,
            "y": 42,
            "w": 4,
            "h": 6
        },
        "31": {
            "x": 5,
            "y": 42,
            "w": 4,
            "h": 6
        }
    }
}